ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"string.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN6stmlib11InterpolateEPKfff,"axG",%progbits,_ZN6stmlib11InterpolateEPKfff,comdat
  17              		.align	1
  18              		.weak	_ZN6stmlib11InterpolateEPKfff
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZN6stmlib11InterpolateEPKfff:
  26              	.LVL0:
  27              	.LFB1384:
  28              		.file 1 "../../stmlib/dsp/dsp.h"
   1:../../stmlib/dsp/dsp.h **** // Copyright 2012 Emilie Gillet.
   2:../../stmlib/dsp/dsp.h **** //
   3:../../stmlib/dsp/dsp.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/dsp.h **** //
   5:../../stmlib/dsp/dsp.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/dsp.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/dsp.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/dsp.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/dsp.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/dsp.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/dsp.h **** // 
  12:../../stmlib/dsp/dsp.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/dsp.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/dsp.h **** // 
  15:../../stmlib/dsp/dsp.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/dsp.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/dsp.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/dsp.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/dsp.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/dsp.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/dsp.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/dsp.h **** // 
  23:../../stmlib/dsp/dsp.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/dsp.h **** //
  25:../../stmlib/dsp/dsp.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/dsp.h **** //
  27:../../stmlib/dsp/dsp.h **** // DSP utility routines.
  28:../../stmlib/dsp/dsp.h **** 
  29:../../stmlib/dsp/dsp.h **** #ifndef STMLIB_UTILS_DSP_DSP_H_
  30:../../stmlib/dsp/dsp.h **** #define STMLIB_UTILS_DSP_DSP_H_
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 2


  31:../../stmlib/dsp/dsp.h **** 
  32:../../stmlib/dsp/dsp.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/dsp.h **** 
  34:../../stmlib/dsp/dsp.h **** #include <cmath>
  35:../../stmlib/dsp/dsp.h **** #include <math.h>
  36:../../stmlib/dsp/dsp.h **** 
  37:../../stmlib/dsp/dsp.h **** namespace stmlib {
  38:../../stmlib/dsp/dsp.h **** 
  39:../../stmlib/dsp/dsp.h **** #define MAKE_INTEGRAL_FRACTIONAL(x) \
  40:../../stmlib/dsp/dsp.h ****   int32_t x ## _integral = static_cast<int32_t>(x); \
  41:../../stmlib/dsp/dsp.h ****   float x ## _fractional = x - static_cast<float>(x ## _integral);
  42:../../stmlib/dsp/dsp.h **** 
  43:../../stmlib/dsp/dsp.h **** inline float Interpolate(const float* table, float index, float size) {
  29              		.loc 1 43 71 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  44:../../stmlib/dsp/dsp.h ****   index *= size;
  34              		.loc 1 44 3 view .LVU1
  35              		.loc 1 44 9 is_stmt 0 view .LVU2
  36 0000 60EE200A 		vmul.f32	s1, s0, s1
  37              	.LVL1:
  45:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  38              		.loc 1 45 3 is_stmt 1 view .LVU3
  39 0004 FDEEE07A 		vcvt.s32.f32	s15, s1
  40              	.LVL2:
  41              		.loc 1 45 3 view .LVU4
  46:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
  42              		.loc 1 46 3 view .LVU5
  43              		.loc 1 46 9 is_stmt 0 view .LVU6
  44 0008 17EE903A 		vmov	r3, s15	@ int
  45:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  45              		.loc 1 45 3 view .LVU7
  46 000c F8EEE77A 		vcvt.f32.s32	s15, s15
  47              	.LVL3:
  48              		.loc 1 46 9 view .LVU8
  49 0010 00EB8300 		add	r0, r0, r3, lsl #2
  50              	.LVL4:
  45:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  51              		.loc 1 45 3 view .LVU9
  52 0014 70EEE70A 		vsub.f32	s1, s1, s15
  53              	.LVL5:
  54              		.loc 1 46 9 view .LVU10
  55 0018 90ED000A 		vldr.32	s0, [r0]
  56              	.LVL6:
  47:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
  57              		.loc 1 47 3 is_stmt 1 view .LVU11
  48:../../stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  58              		.loc 1 48 3 view .LVU12
  59              		.loc 1 48 17 is_stmt 0 view .LVU13
  60 001c 90ED017A 		vldr.32	s14, [r0, #4]
  61 0020 37EE407A 		vsub.f32	s14, s14, s0
  49:../../stmlib/dsp/dsp.h **** }
  62              		.loc 1 49 1 view .LVU14
  63 0024 A7EE200A 		vfma.f32	s0, s14, s1
  64              	.LVL7:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 3


  65              		.loc 1 49 1 view .LVU15
  66 0028 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1384:
  70              		.section	.text._ZN5torus13DampingFilter7ProcessEf,"axG",%progbits,_ZN5torus13DampingFilter7Process
  71              		.align	1
  72              		.weak	_ZN5torus13DampingFilter7ProcessEf
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv5-d16
  78              	_ZN5torus13DampingFilter7ProcessEf:
  79              	.LVL8:
  80              	.LFB1496:
  81              		.file 2 "./dsp/string.h"
   1:./dsp/string.h **** // Copyright 2015 Emilie Gillet.
   2:./dsp/string.h **** //
   3:./dsp/string.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./dsp/string.h **** //
   5:./dsp/string.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./dsp/string.h **** // of this software and associated documentation files (the "Software"), to deal
   7:./dsp/string.h **** // in the Software without restriction, including without limitation the rights
   8:./dsp/string.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./dsp/string.h **** // copies of the Software, and to permit persons to whom the Software is
  10:./dsp/string.h **** // furnished to do so, subject to the following conditions:
  11:./dsp/string.h **** //
  12:./dsp/string.h **** // The above copyright notice and this permission notice shall be included in
  13:./dsp/string.h **** // all copies or substantial portions of the Software.
  14:./dsp/string.h **** //
  15:./dsp/string.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./dsp/string.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./dsp/string.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./dsp/string.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./dsp/string.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./dsp/string.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./dsp/string.h **** // THE SOFTWARE.
  22:./dsp/string.h **** //
  23:./dsp/string.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./dsp/string.h **** //
  25:./dsp/string.h **** // -----------------------------------------------------------------------------
  26:./dsp/string.h **** //
  27:./dsp/string.h **** // Comb filter / KS string.
  28:./dsp/string.h **** 
  29:./dsp/string.h **** #ifndef TORUS_DSP_STRING_H_
  30:./dsp/string.h **** #define TORUS_DSP_STRING_H_
  31:./dsp/string.h **** 
  32:./dsp/string.h **** #include "stmlib/stmlib.h"
  33:./dsp/string.h **** 
  34:./dsp/string.h **** #include <algorithm>
  35:./dsp/string.h **** 
  36:./dsp/string.h **** #include "stmlib/dsp/delay_line.h"
  37:./dsp/string.h **** #include "stmlib/dsp/filter.h"
  38:./dsp/string.h **** 
  39:./dsp/string.h **** #include "dsp/dsp.h"
  40:./dsp/string.h **** 
  41:./dsp/string.h **** namespace torus
  42:./dsp/string.h **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 4


  43:./dsp/string.h **** const size_t kDelayLineSize = 2048;
  44:./dsp/string.h **** 
  45:./dsp/string.h **** class DampingFilter
  46:./dsp/string.h **** {
  47:./dsp/string.h ****   public:
  48:./dsp/string.h ****     DampingFilter() {}
  49:./dsp/string.h ****     ~DampingFilter() {}
  50:./dsp/string.h **** 
  51:./dsp/string.h ****     void Init()
  52:./dsp/string.h ****     {
  53:./dsp/string.h ****         x_                    = 0.0f;
  54:./dsp/string.h ****         x__                   = 0.0f;
  55:./dsp/string.h ****         brightness_           = 0.0f;
  56:./dsp/string.h ****         brightness_increment_ = 0.0f;
  57:./dsp/string.h ****         damping_              = 0.0f;
  58:./dsp/string.h ****         damping_increment_    = 0.0f;
  59:./dsp/string.h ****     }
  60:./dsp/string.h **** 
  61:./dsp/string.h ****     inline void Configure(float damping, float brightness, size_t size)
  62:./dsp/string.h ****     {
  63:./dsp/string.h ****         if(!size)
  64:./dsp/string.h ****         {
  65:./dsp/string.h ****             damping_              = damping;
  66:./dsp/string.h ****             brightness_           = brightness;
  67:./dsp/string.h ****             damping_increment_    = 0.0f;
  68:./dsp/string.h ****             brightness_increment_ = 0.0f;
  69:./dsp/string.h ****         }
  70:./dsp/string.h ****         else
  71:./dsp/string.h ****         {
  72:./dsp/string.h ****             float step            = 1.0f / static_cast<float>(size);
  73:./dsp/string.h ****             damping_increment_    = (damping - damping_) * step;
  74:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
  75:./dsp/string.h ****         }
  76:./dsp/string.h ****     }
  77:./dsp/string.h **** 
  78:./dsp/string.h ****     inline float Process(float x)
  82              		.loc 2 78 18 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  79:./dsp/string.h ****     {
  80:./dsp/string.h ****         float h0 = (1.0f + brightness_) * 0.5f;
  87              		.loc 2 80 9 view .LVU17
  88              		.loc 2 80 26 is_stmt 0 view .LVU18
  89 0000 B7EE007A 		vmov.f32	s14, #1.0e+0
  90              		.loc 2 80 28 view .LVU19
  91 0004 D0ED026A 		vldr.32	s13, [r0, #8]
  92              	.LVL9:
  81:./dsp/string.h ****         float h1 = (1.0f - brightness_) * 0.25f;
  93              		.loc 2 81 9 is_stmt 1 view .LVU20
  82:./dsp/string.h ****         float y  = damping_ * (h0 * x_ + h1 * (x + x__));
  94              		.loc 2 82 9 view .LVU21
  80:./dsp/string.h ****         float h1 = (1.0f - brightness_) * 0.25f;
  95              		.loc 2 80 15 is_stmt 0 view .LVU22
  96 0008 F6EE007A 		vmov.f32	s15, #5.0e-1
  97              		.loc 2 82 37 view .LVU23
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 5


  98 000c 90ED005A 		vldr.32	s10, [r0]
  81:./dsp/string.h ****         float h1 = (1.0f - brightness_) * 0.25f;
  99              		.loc 2 81 15 view .LVU24
 100 0010 F5EE004A 		vmov.f32	s9, #2.5e-1
 101              		.loc 2 82 20 view .LVU25
 102 0014 D0ED045A 		vldr.32	s11, [r0, #16]
  80:./dsp/string.h ****         float h1 = (1.0f - brightness_) * 0.25f;
 103              		.loc 2 80 26 view .LVU26
 104 0018 36EE876A 		vadd.f32	s12, s13, s14
  83:./dsp/string.h ****         x__      = x_;
  84:./dsp/string.h ****         x_       = x;
 105              		.loc 2 84 18 view .LVU27
 106 001c 80ED000A 		vstr.32	s0, [r0]
  81:./dsp/string.h ****         float y  = damping_ * (h0 * x_ + h1 * (x + x__));
 107              		.loc 2 81 26 view .LVU28
 108 0020 37EE667A 		vsub.f32	s14, s14, s13
  80:./dsp/string.h ****         float h1 = (1.0f - brightness_) * 0.25f;
 109              		.loc 2 80 15 view .LVU29
 110 0024 26EE276A 		vmul.f32	s12, s12, s15
 111              	.LVL10:
  82:./dsp/string.h ****         x__      = x_;
 112              		.loc 2 82 50 view .LVU30
 113 0028 D0ED017A 		vldr.32	s15, [r0, #4]
  81:./dsp/string.h ****         float y  = damping_ * (h0 * x_ + h1 * (x + x__));
 114              		.loc 2 81 15 view .LVU31
 115 002c 27EE247A 		vmul.f32	s14, s14, s9
 116              	.LVL11:
  83:./dsp/string.h ****         x__      = x_;
 117              		.loc 2 83 18 view .LVU32
 118 0030 80ED015A 		vstr.32	s10, [r0, #4]
  82:./dsp/string.h ****         x__      = x_;
 119              		.loc 2 82 50 view .LVU33
 120 0034 70EE277A 		vadd.f32	s15, s0, s15
  82:./dsp/string.h ****         x__      = x_;
 121              		.loc 2 82 45 view .LVU34
 122 0038 67EE877A 		vmul.f32	s15, s15, s14
  85:./dsp/string.h ****         brightness_ += brightness_increment_;
 123              		.loc 2 85 21 view .LVU35
 124 003c 90ED037A 		vldr.32	s14, [r0, #12]
 125              	.LVL12:
 126              		.loc 2 85 21 view .LVU36
 127 0040 37EE267A 		vadd.f32	s14, s14, s13
  82:./dsp/string.h ****         x__      = x_;
 128              		.loc 2 82 40 view .LVU37
 129 0044 E5EE067A 		vfma.f32	s15, s10, s12
 130              	.LVL13:
  83:./dsp/string.h ****         x_       = x;
 131              		.loc 2 83 9 is_stmt 1 view .LVU38
  84:./dsp/string.h ****         brightness_ += brightness_increment_;
 132              		.loc 2 84 9 view .LVU39
 133              		.loc 2 85 9 view .LVU40
 134              		.loc 2 85 21 is_stmt 0 view .LVU41
 135 0048 80ED027A 		vstr.32	s14, [r0, #8]
  86:./dsp/string.h ****         damping_ += damping_increment_;
 136              		.loc 2 86 9 is_stmt 1 view .LVU42
 137              		.loc 2 86 18 is_stmt 0 view .LVU43
 138 004c 90ED057A 		vldr.32	s14, [r0, #20]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 6


 139 0050 37EE257A 		vadd.f32	s14, s14, s11
  87:./dsp/string.h ****         return y;
  88:./dsp/string.h ****     }
 140              		.loc 2 88 5 view .LVU44
 141 0054 25EEA70A 		vmul.f32	s0, s11, s15
 142              	.LVL14:
  86:./dsp/string.h ****         damping_ += damping_increment_;
 143              		.loc 2 86 18 view .LVU45
 144 0058 80ED047A 		vstr.32	s14, [r0, #16]
  87:./dsp/string.h ****         return y;
 145              		.loc 2 87 9 is_stmt 1 view .LVU46
 146              		.loc 2 88 5 is_stmt 0 view .LVU47
 147 005c 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE1496:
 151              		.section	.text._ZN6stmlib16SemitonesToRatioEf,"axG",%progbits,_ZN6stmlib16SemitonesToRatioEf,comda
 152              		.align	1
 153              		.weak	_ZN6stmlib16SemitonesToRatioEf
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv5-d16
 159              	_ZN6stmlib16SemitonesToRatioEf:
 160              	.LVL15:
 161              	.LFB1525:
 162              		.file 3 "../../stmlib/dsp/units.h"
   1:../../stmlib/dsp/units.h **** // Copyright 2014 Emilie Gillet.
   2:../../stmlib/dsp/units.h **** //
   3:../../stmlib/dsp/units.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/units.h **** //
   5:../../stmlib/dsp/units.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/units.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/units.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/units.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/units.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/units.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/units.h **** // 
  12:../../stmlib/dsp/units.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/units.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/units.h **** // 
  15:../../stmlib/dsp/units.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/units.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/units.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/units.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/units.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/units.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/units.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/units.h **** // 
  23:../../stmlib/dsp/units.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/units.h **** //
  25:../../stmlib/dsp/units.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/units.h **** //
  27:../../stmlib/dsp/units.h **** // Conversion from semitones to frequency ratio.
  28:../../stmlib/dsp/units.h **** 
  29:../../stmlib/dsp/units.h **** #ifndef STMLIB_DSP_UNITS_H_
  30:../../stmlib/dsp/units.h **** #define STMLIB_DSP_UNITS_H_
  31:../../stmlib/dsp/units.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 7


  32:../../stmlib/dsp/units.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/units.h **** #include "stmlib/dsp/dsp.h"
  34:../../stmlib/dsp/units.h **** 
  35:../../stmlib/dsp/units.h **** namespace stmlib {
  36:../../stmlib/dsp/units.h **** 
  37:../../stmlib/dsp/units.h **** extern const float lut_pitch_ratio_high[257];
  38:../../stmlib/dsp/units.h **** extern const float lut_pitch_ratio_low[257];
  39:../../stmlib/dsp/units.h **** 
  40:../../stmlib/dsp/units.h **** inline float SemitonesToRatio(float semitones) {
 163              		.loc 3 40 48 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
  41:../../stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 168              		.loc 3 41 3 view .LVU49
 169              		.loc 3 41 9 is_stmt 0 view .LVU50
 170 0000 DFED0E7A 		vldr.32	s15, .L4
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
  43:../../stmlib/dsp/units.h **** 
  44:../../stmlib/dsp/units.h ****   return lut_pitch_ratio_high[pitch_integral] * \
  45:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 171              		.loc 3 45 74 view .LVU51
 172 0004 0E4A     		ldr	r2, .L4+4
  41:../../stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 173              		.loc 3 41 9 view .LVU52
 174 0006 30EE270A 		vadd.f32	s0, s0, s15
 175              	.LVL16:
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 176              		.loc 3 42 3 is_stmt 1 view .LVU53
 177 000a FDEEC07A 		vcvt.s32.f32	s15, s0
 178              	.LVL17:
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 179              		.loc 3 42 3 view .LVU54
  44:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 180              		.loc 3 44 3 view .LVU55
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 181              		.loc 3 42 3 is_stmt 0 view .LVU56
 182 000e B8EEE77A 		vcvt.f32.s32	s14, s15
  44:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 183              		.loc 3 44 45 view .LVU57
 184 0012 17EE901A 		vmov	r1, s15	@ int
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 185              		.loc 3 42 3 view .LVU58
 186 0016 30EE470A 		vsub.f32	s0, s0, s14
 187              	.LVL18:
 188              		.loc 3 45 27 view .LVU59
 189 001a BEEECC0A 		vcvt.s32.f32	s0, s0, #8
 190              	.LVL19:
 191              		.loc 3 45 74 view .LVU60
 192 001e 10EE103A 		vmov	r3, s0	@ int
 193 0022 02EB8302 		add	r2, r2, r3, lsl #2
  44:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 194              		.loc 3 44 45 view .LVU61
 195 0026 074B     		ldr	r3, .L4+8
 196 0028 03EB8103 		add	r3, r3, r1, lsl #2
 197              		.loc 3 45 74 view .LVU62
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 8


 198 002c 92ED000A 		vldr.32	s0, [r2]
 199 0030 D3ED007A 		vldr.32	s15, [r3]
 200              	.LVL20:
  46:../../stmlib/dsp/units.h **** }
 201              		.loc 3 46 1 view .LVU63
 202 0034 20EE270A 		vmul.f32	s0, s0, s15
 203 0038 7047     		bx	lr
 204              	.L5:
 205 003a 00BF     		.align	2
 206              	.L4:
 207 003c 00000043 		.word	1124073472
 208 0040 00000000 		.word	_ZN6stmlib19lut_pitch_ratio_lowE
 209 0044 00000000 		.word	_ZN6stmlib20lut_pitch_ratio_highE
 210              		.cfi_endproc
 211              	.LFE1525:
 213              		.section	.text._ZN5torus6String4InitEb,"ax",%progbits
 214              		.align	1
 215              		.global	_ZN5torus6String4InitEb
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu fpv5-d16
 221              	_ZN5torus6String4InitEb:
 222              	.LVL21:
 223              	.LFB1531:
 224              		.file 4 "dsp/string.cpp"
   1:dsp/string.cpp **** // Copyright 2015 Emilie Gillet.
   2:dsp/string.cpp **** //
   3:dsp/string.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/string.cpp **** //
   5:dsp/string.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/string.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/string.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/string.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/string.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/string.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/string.cpp **** //
  12:dsp/string.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/string.cpp **** // all copies or substantial portions of the Software.
  14:dsp/string.cpp **** //
  15:dsp/string.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/string.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/string.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/string.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/string.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/string.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/string.cpp **** // THE SOFTWARE.
  22:dsp/string.cpp **** //
  23:dsp/string.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/string.cpp **** //
  25:dsp/string.cpp **** // -----------------------------------------------------------------------------
  26:dsp/string.cpp **** //
  27:dsp/string.cpp **** // Comb filter / KS string.
  28:dsp/string.cpp **** 
  29:dsp/string.cpp **** #include "dsp/string.h"
  30:dsp/string.cpp **** 
  31:dsp/string.cpp **** #include <cmath>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 9


  32:dsp/string.cpp **** 
  33:dsp/string.cpp **** #include "stmlib/dsp/dsp.h"
  34:dsp/string.cpp **** #include "stmlib/dsp/parameter_interpolator.h"
  35:dsp/string.cpp **** #include "stmlib/dsp/units.h"
  36:dsp/string.cpp **** #include "stmlib/utils/random.h"
  37:dsp/string.cpp **** 
  38:dsp/string.cpp **** #include "resources.h"
  39:dsp/string.cpp **** 
  40:dsp/string.cpp **** namespace torus
  41:dsp/string.cpp **** {
  42:dsp/string.cpp **** using namespace std;
  43:dsp/string.cpp **** using namespace stmlib;
  44:dsp/string.cpp **** 
  45:dsp/string.cpp **** void String::Init(bool enable_dispersion)
  46:dsp/string.cpp **** {
 225              		.loc 4 46 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
  47:dsp/string.cpp ****     enable_dispersion_ = enable_dispersion;
 229              		.loc 4 47 5 view .LVU65
  46:dsp/string.cpp ****     enable_dispersion_ = enable_dispersion;
 230              		.loc 4 46 1 is_stmt 0 view .LVU66
 231 0000 70B5     		push	{r4, r5, r6, lr}
 232              		.cfi_def_cfa_offset 16
 233              		.cfi_offset 4, -16
 234              		.cfi_offset 5, -12
 235              		.cfi_offset 6, -8
 236              		.cfi_offset 14, -4
  46:dsp/string.cpp ****     enable_dispersion_ = enable_dispersion;
 237              		.loc 4 46 1 view .LVU67
 238 0002 0446     		mov	r4, r0
 239              		.loc 4 47 24 view .LVU68
 240 0004 80F82410 		strb	r1, [r0, #36]
  48:dsp/string.cpp **** 
  49:dsp/string.cpp ****     string_.Init();
 241              		.loc 4 49 5 is_stmt 1 view .LVU69
 242              	.LVL22:
 243              	.LBB179:
 244              	.LBI179:
 245              		.file 5 "../../stmlib/dsp/delay_line.h"
   1:../../stmlib/dsp/delay_line.h **** // Copyright 2014 Emilie Gillet.
   2:../../stmlib/dsp/delay_line.h **** //
   3:../../stmlib/dsp/delay_line.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/delay_line.h **** //
   5:../../stmlib/dsp/delay_line.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/delay_line.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/delay_line.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/delay_line.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/delay_line.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/delay_line.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/delay_line.h **** // 
  12:../../stmlib/dsp/delay_line.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/delay_line.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/delay_line.h **** // 
  15:../../stmlib/dsp/delay_line.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/delay_line.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 10


  17:../../stmlib/dsp/delay_line.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/delay_line.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/delay_line.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/delay_line.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/delay_line.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/delay_line.h **** // 
  23:../../stmlib/dsp/delay_line.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/delay_line.h **** //
  25:../../stmlib/dsp/delay_line.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/delay_line.h **** //
  27:../../stmlib/dsp/delay_line.h **** // Delay line.
  28:../../stmlib/dsp/delay_line.h **** 
  29:../../stmlib/dsp/delay_line.h **** #ifndef STMLIB_DSP_DELAY_LINE_H_
  30:../../stmlib/dsp/delay_line.h **** #define STMLIB_DSP_DELAY_LINE_H_
  31:../../stmlib/dsp/delay_line.h **** 
  32:../../stmlib/dsp/delay_line.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/delay_line.h **** #include "stmlib/dsp/dsp.h"
  34:../../stmlib/dsp/delay_line.h **** 
  35:../../stmlib/dsp/delay_line.h **** #include <algorithm>
  36:../../stmlib/dsp/delay_line.h **** 
  37:../../stmlib/dsp/delay_line.h **** namespace stmlib {
  38:../../stmlib/dsp/delay_line.h **** 
  39:../../stmlib/dsp/delay_line.h **** template<typename T, size_t max_delay>
  40:../../stmlib/dsp/delay_line.h **** class DelayLine {
  41:../../stmlib/dsp/delay_line.h ****  public:
  42:../../stmlib/dsp/delay_line.h ****   DelayLine() { }
  43:../../stmlib/dsp/delay_line.h ****   ~DelayLine() { }
  44:../../stmlib/dsp/delay_line.h ****   
  45:../../stmlib/dsp/delay_line.h ****   void Init() {
 246              		.loc 5 45 8 view .LVU70
 247              	.LBB180:
 248              	.LBI180:
  46:../../stmlib/dsp/delay_line.h ****     Reset();
  47:../../stmlib/dsp/delay_line.h ****   }
  48:../../stmlib/dsp/delay_line.h **** 
  49:../../stmlib/dsp/delay_line.h ****   void Reset() {
 249              		.loc 5 49 8 view .LVU71
 250              	.LBB181:
 251              	.LBB182:
 252              	.LBI182:
 253              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 11


  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 12


  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 13


 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 14


 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 15


 245:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 260:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 261:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 262:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 263:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 264:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 265:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 272:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 275:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 278:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 280:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 283:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 284:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 285:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 286:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 287:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 294:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 297:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 300:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 16


 302:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 306:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 307:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 308:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 311:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 313:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __it; }
 316:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 317:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 321:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _From
 323:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 326:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 328:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 330:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __res; }
 332:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 333:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 338:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 339:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move
 341:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 342:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 343:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 345:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 347:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 349:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 350:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 351:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 352:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 353:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 354:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 355:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 357:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 358:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 17


 359:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 360:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 362:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 364:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 365:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 366:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 367:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 368:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 369:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 370:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 372:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 373:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 375:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 377:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 380:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 381:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 382:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 383:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 384:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 385:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 386:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 387:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 388:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 389:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 390:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 392:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 393:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 395:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 397:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 400:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 401:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 402:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 403:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 404:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 405:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 406:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 407:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 408:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 409:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 410:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 412:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 413:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 18


 416:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 417:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 418:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 424:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 428:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 429:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 430:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 431:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 434:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct char_traits;
 435:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 436:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 438:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 439:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 441:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 442:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 448:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 454:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 457:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 460:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 465:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 468:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 471:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 19


 473:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 474:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 475:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 477:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct _Deque_iterator;
 479:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 480:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 482:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 483:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 485:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _OI);
 488:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 489:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 490:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 496:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 502:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 508:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 513:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 514:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 516:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 517:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 518:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 519:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 520:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 522:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  _OI);
 525:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 526:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 527:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 20


 530:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 532:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 533:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 540:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 541:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 544:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 545:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 546:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 547:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 548:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 554:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 556:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 557:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 558:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 562:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 563:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 568:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 571:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 572:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 573:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 574:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 577:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 578:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 579:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 580:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 581:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 21


 587:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 589:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 590:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 591:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 593:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 595:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 596:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 601:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 604:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 605:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 607:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 609:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 610:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 612:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 613:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 616:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 618:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 619:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 620:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 621:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 622:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 623:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 624:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 625:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 626:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 628:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 631:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 633:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 634:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 636:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 637:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 638:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 639:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 640:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 641:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 643:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 22


 644:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 646:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 648:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 650:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 652:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 653:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 654:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 655:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 656:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 657:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 658:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 660:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 663:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 665:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 667:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 670:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 671:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 672:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 673:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 674:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 675:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 677:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 678:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 680:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 682:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 683:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 689:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 691:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 693:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 694:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 695:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 696:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 699:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 23


 701:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 704:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 707:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __last,
 711:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __result);
 712:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 713:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 714:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 717:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 720:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 721:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 723:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _OI);
 726:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 727:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 728:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(
 731:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 735:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 742:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 745:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 747:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 748:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 751:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 752:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 753:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 754:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 756:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 757:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 24


 758:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_OI);
 760:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 761:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 762:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 767:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 768:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 772:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 776:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 777:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 783:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 784:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 790:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 791:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 794:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 797:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 799:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 800:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 807:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 810:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 811:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 812:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 813:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 25


 815:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 819:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 820:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 826:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 827:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 830:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 833:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 835:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 836:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 843:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 845:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       __result);
 846:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 847:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 848:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 850:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 852:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 853:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 856:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 859:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 860:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 861:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __value;
 862:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 863:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 864:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 867:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 870:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 871:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 26


 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 874:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 875:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 876:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 878:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 880:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 883:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 884:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 886:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 887:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__first = __tmp;
 889:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return;
 890:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 891:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 892:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 895:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 896:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 899:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 902:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 904:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 906:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _VTp&);
 909:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 910:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 916:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 918:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const _Tp&);
 921:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 922:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 923:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 27


 929:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 930:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 934:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 937:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 254              		.loc 6 937 5 view .LVU72
 255              	.LBB183:
 256              	.LBI183:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 257              		.loc 6 913 5 view .LVU73
 258              	.LBB184:
 259              	.LBI184:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 260              		.loc 6 868 5 view .LVU74
 261              	.LBB185:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 262              		.loc 6 873 11 is_stmt 0 view .LVU75
 263 0008 4FF40052 		mov	r2, #8192
 264 000c 0021     		movs	r1, #0
 265              	.LVL23:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 266              		.loc 6 873 11 view .LVU76
 267 000e 4C30     		adds	r0, r0, #76
 268              	.LVL24:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 269              		.loc 6 873 11 view .LVU77
 270              	.LBE185:
 271              	.LBE184:
 272              	.LBE183:
 273              	.LBE182:
  50:../../stmlib/dsp/delay_line.h ****     std::fill(&line_[0], &line_[max_delay], T(0));
  51:../../stmlib/dsp/delay_line.h ****     delay_ = 1;
  52:../../stmlib/dsp/delay_line.h ****     write_ptr_ = 0;
 274              		.loc 5 52 16 view .LVU78
 275 0010 0025     		movs	r5, #0
 276              	.LBB189:
 277              	.LBB188:
 278              	.LBB187:
 279              	.LBB186:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 280              		.loc 6 873 11 view .LVU79
 281 0012 FFF7FEFF 		bl	memset
 282              	.LVL25:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 283              		.loc 6 873 11 view .LVU80
 284              	.LBE186:
 285              	.LBE187:
 286              	.LBE188:
 287              	.LBE189:
 288              		.loc 5 52 16 view .LVU81
 289 0016 0126     		movs	r6, #1
 290              	.LBE181:
 291              	.LBE180:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 28


 292              	.LBE179:
 293              	.LBB192:
 294              	.LBB193:
 295              	.LBB194:
 296              	.LBB195:
 297              	.LBB196:
 298              	.LBB197:
 299              	.LBB198:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 300              		.loc 6 873 11 view .LVU82
 301 0018 04F50150 		add	r0, r4, #8256
 302 001c 4FF48052 		mov	r2, #4096
 303 0020 2946     		mov	r1, r5
 304 0022 1430     		adds	r0, r0, #20
 305              	.LBE198:
 306              	.LBE197:
 307              	.LBE196:
 308              	.LBE195:
 309              	.LBE194:
 310              	.LBE193:
 311              	.LBE192:
 312              	.LBB209:
 313              	.LBB191:
 314              	.LBB190:
 315              		.loc 5 52 16 view .LVU83
 316 0024 C4E91156 		strd	r5, r6, [r4, #68]
 317              	.LVL26:
 318              		.loc 5 52 16 view .LVU84
 319              	.LBE190:
 320              	.LBE191:
 321              	.LBE209:
  50:dsp/string.cpp ****     stretch_.Init();
 322              		.loc 4 50 5 is_stmt 1 view .LVU85
 323              	.LBB210:
 324              	.LBI192:
  45:../../stmlib/dsp/delay_line.h ****     Reset();
 325              		.loc 5 45 8 view .LVU86
 326              	.LBB206:
 327              	.LBI193:
  49:../../stmlib/dsp/delay_line.h ****     std::fill(&line_[0], &line_[max_delay], T(0));
 328              		.loc 5 49 8 view .LVU87
 329              	.LBB203:
 330              	.LBB202:
 331              	.LBI195:
 332              		.loc 6 937 5 view .LVU88
 333              	.LBB201:
 334              	.LBI196:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 335              		.loc 6 913 5 view .LVU89
 336              	.LBB200:
 337              	.LBI197:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 338              		.loc 6 868 5 view .LVU90
 339              	.LBB199:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 340              		.loc 6 873 11 is_stmt 0 view .LVU91
 341 0028 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 29


 342              	.LVL27:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 343              		.loc 6 873 11 view .LVU92
 344              	.LBE199:
 345              	.LBE200:
 346              	.LBE201:
 347              	.LBE202:
 348              	.LBE203:
 349              	.LBE206:
 350              	.LBE210:
 351              	.LBB211:
 352              	.LBB212:
  53:./dsp/string.h ****         x__                   = 0.0f;
 353              		.loc 2 53 31 view .LVU93
 354 002c 04F54052 		add	r2, r4, #12288
 355              	.LBE212:
 356              	.LBE211:
 357              	.LBB218:
 358              	.LBB207:
 359              	.LBB204:
  51:../../stmlib/dsp/delay_line.h ****     write_ptr_ = 0;
 360              		.loc 5 51 12 view .LVU94
 361 0030 04F50053 		add	r3, r4, #8192
 362              	.LBE204:
 363              	.LBE207:
 364              	.LBE218:
 365              	.LBB219:
 366              	.LBB220:
 367              	.LBB221:
 368              		.file 7 "../../stmlib/dsp/filter.h"
   1:../../stmlib/dsp/filter.h **** // Copyright 2014 Emilie Gillet.
   2:../../stmlib/dsp/filter.h **** //
   3:../../stmlib/dsp/filter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/filter.h **** //
   5:../../stmlib/dsp/filter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/filter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/filter.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/filter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/filter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/filter.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/filter.h **** // 
  12:../../stmlib/dsp/filter.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/filter.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/filter.h **** // 
  15:../../stmlib/dsp/filter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/filter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/filter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/filter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/filter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/filter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/filter.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/filter.h **** // 
  23:../../stmlib/dsp/filter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/filter.h **** //
  25:../../stmlib/dsp/filter.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/filter.h **** //
  27:../../stmlib/dsp/filter.h **** // Zero-delay-feedback filters (one pole and SVF).
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 30


  28:../../stmlib/dsp/filter.h **** // Naive SVF.
  29:../../stmlib/dsp/filter.h **** 
  30:../../stmlib/dsp/filter.h **** #ifndef STMLIB_DSP_FILTER_H_
  31:../../stmlib/dsp/filter.h **** #define STMLIB_DSP_FILTER_H_
  32:../../stmlib/dsp/filter.h **** 
  33:../../stmlib/dsp/filter.h **** #include "stmlib/stmlib.h"
  34:../../stmlib/dsp/filter.h **** 
  35:../../stmlib/dsp/filter.h **** #include <cmath>
  36:../../stmlib/dsp/filter.h **** #include <algorithm>
  37:../../stmlib/dsp/filter.h **** 
  38:../../stmlib/dsp/filter.h **** namespace stmlib {
  39:../../stmlib/dsp/filter.h **** 
  40:../../stmlib/dsp/filter.h **** enum FilterMode {
  41:../../stmlib/dsp/filter.h ****   FILTER_MODE_LOW_PASS,
  42:../../stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS,
  43:../../stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS_NORMALIZED,
  44:../../stmlib/dsp/filter.h ****   FILTER_MODE_HIGH_PASS
  45:../../stmlib/dsp/filter.h **** };
  46:../../stmlib/dsp/filter.h **** 
  47:../../stmlib/dsp/filter.h **** enum FrequencyApproximation {
  48:../../stmlib/dsp/filter.h ****   FREQUENCY_EXACT,
  49:../../stmlib/dsp/filter.h ****   FREQUENCY_ACCURATE,
  50:../../stmlib/dsp/filter.h ****   FREQUENCY_FAST,
  51:../../stmlib/dsp/filter.h ****   FREQUENCY_DIRTY
  52:../../stmlib/dsp/filter.h **** };
  53:../../stmlib/dsp/filter.h **** 
  54:../../stmlib/dsp/filter.h **** #define M_PI_F float(M_PI)
  55:../../stmlib/dsp/filter.h **** #define M_PI_POW_2 M_PI * M_PI
  56:../../stmlib/dsp/filter.h **** #define M_PI_POW_3 M_PI_POW_2 * M_PI
  57:../../stmlib/dsp/filter.h **** #define M_PI_POW_5 M_PI_POW_3 * M_PI_POW_2
  58:../../stmlib/dsp/filter.h **** #define M_PI_POW_7 M_PI_POW_5 * M_PI_POW_2
  59:../../stmlib/dsp/filter.h **** #define M_PI_POW_9 M_PI_POW_7 * M_PI_POW_2
  60:../../stmlib/dsp/filter.h **** #define M_PI_POW_11 M_PI_POW_9 * M_PI_POW_2
  61:../../stmlib/dsp/filter.h **** 
  62:../../stmlib/dsp/filter.h **** class DCBlocker {
  63:../../stmlib/dsp/filter.h ****  public:
  64:../../stmlib/dsp/filter.h ****   DCBlocker() { }
  65:../../stmlib/dsp/filter.h ****   ~DCBlocker() { }
  66:../../stmlib/dsp/filter.h ****   
  67:../../stmlib/dsp/filter.h ****   void Init(float pole) {
  68:../../stmlib/dsp/filter.h ****     x_ = 0.0f;
  69:../../stmlib/dsp/filter.h ****     y_ = 0.0f;
  70:../../stmlib/dsp/filter.h ****     pole_ = pole;
  71:../../stmlib/dsp/filter.h ****   }
  72:../../stmlib/dsp/filter.h ****   
  73:../../stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
  74:../../stmlib/dsp/filter.h ****     float x = x_;
  75:../../stmlib/dsp/filter.h ****     float y = y_;
  76:../../stmlib/dsp/filter.h ****     const float pole = pole_;
  77:../../stmlib/dsp/filter.h ****     while (size--) {
  78:../../stmlib/dsp/filter.h ****       float old_x = x;
  79:../../stmlib/dsp/filter.h ****       x = *in_out;
  80:../../stmlib/dsp/filter.h ****       *in_out++ = y = y * pole + x - old_x;
  81:../../stmlib/dsp/filter.h ****     }
  82:../../stmlib/dsp/filter.h ****     x_ = x;
  83:../../stmlib/dsp/filter.h ****     y_ = y;
  84:../../stmlib/dsp/filter.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 31


  85:../../stmlib/dsp/filter.h ****   
  86:../../stmlib/dsp/filter.h ****  private:
  87:../../stmlib/dsp/filter.h ****   float pole_;
  88:../../stmlib/dsp/filter.h ****   float x_;
  89:../../stmlib/dsp/filter.h ****   float y_;
  90:../../stmlib/dsp/filter.h **** };
  91:../../stmlib/dsp/filter.h **** 
  92:../../stmlib/dsp/filter.h **** class OnePole {
  93:../../stmlib/dsp/filter.h ****  public:
  94:../../stmlib/dsp/filter.h ****   OnePole() { }
  95:../../stmlib/dsp/filter.h ****   ~OnePole() { }
  96:../../stmlib/dsp/filter.h ****   
  97:../../stmlib/dsp/filter.h ****   void Init() {
  98:../../stmlib/dsp/filter.h ****     set_f<FREQUENCY_DIRTY>(0.01f);
  99:../../stmlib/dsp/filter.h ****     Reset();
 100:../../stmlib/dsp/filter.h ****   }
 101:../../stmlib/dsp/filter.h ****   
 102:../../stmlib/dsp/filter.h ****   void Reset() {
 103:../../stmlib/dsp/filter.h ****     state_ = 0.0f;
 104:../../stmlib/dsp/filter.h ****   }
 105:../../stmlib/dsp/filter.h ****   
 106:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 107:../../stmlib/dsp/filter.h ****   static inline float tan(float f) {
 108:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 109:../../stmlib/dsp/filter.h ****       // Clip coefficient to about 100.
 110:../../stmlib/dsp/filter.h ****       f = f < 0.497f ? f : 0.497f;
 111:../../stmlib/dsp/filter.h ****       return tanf(M_PI * f);
 112:../../stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_DIRTY) {
 113:../../stmlib/dsp/filter.h ****       // Optimized for frequencies below 8kHz.
 114:../../stmlib/dsp/filter.h ****       const float a = 3.736e-01 * M_PI_POW_3;
 115:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + a * f * f);
 116:../../stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_FAST) {
 117:../../stmlib/dsp/filter.h ****       // The usual tangent approximation uses 3.1755e-01 and 2.033e-01, but
 118:../../stmlib/dsp/filter.h ****       // the coefficients used here are optimized to minimize error for the
 119:../../stmlib/dsp/filter.h ****       // 16Hz to 16kHz range, with a sample rate of 48kHz.
 120:../../stmlib/dsp/filter.h ****       const float a = 3.260e-01 * M_PI_POW_3;
 121:../../stmlib/dsp/filter.h ****       const float b = 1.823e-01 * M_PI_POW_5;
 122:../../stmlib/dsp/filter.h ****       float f2 = f * f;
 123:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + b * f2));
 124:../../stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 125:../../stmlib/dsp/filter.h ****       // These coefficients don't need to be tweaked for the audio range.
 126:../../stmlib/dsp/filter.h ****       const float a = 3.333314036e-01 * M_PI_POW_3;
 127:../../stmlib/dsp/filter.h ****       const float b = 1.333923995e-01 * M_PI_POW_5;
 128:../../stmlib/dsp/filter.h ****       const float c = 5.33740603e-02 * M_PI_POW_7;
 129:../../stmlib/dsp/filter.h ****       const float d = 2.900525e-03 * M_PI_POW_9;
 130:../../stmlib/dsp/filter.h ****       const float e = 9.5168091e-03 * M_PI_POW_11;
 131:../../stmlib/dsp/filter.h ****       float f2 = f * f;
 132:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 133:../../stmlib/dsp/filter.h ****     }
 134:../../stmlib/dsp/filter.h ****   }
 135:../../stmlib/dsp/filter.h ****   
 136:../../stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 137:../../stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 138:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 139:../../stmlib/dsp/filter.h ****   inline void set_f(float f) {
 140:../../stmlib/dsp/filter.h ****     g_ = tan<approximation>(f);
 141:../../stmlib/dsp/filter.h ****     gi_ = 1.0f / (1.0f + g_);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 32


 142:../../stmlib/dsp/filter.h ****   }
 143:../../stmlib/dsp/filter.h ****   
 144:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 145:../../stmlib/dsp/filter.h ****   inline float Process(float in) {
 146:../../stmlib/dsp/filter.h ****     float lp;
 147:../../stmlib/dsp/filter.h ****     lp = (g_ * in + state_) * gi_;
 148:../../stmlib/dsp/filter.h ****     state_ = g_ * (in - lp) + lp;
 149:../../stmlib/dsp/filter.h **** 
 150:../../stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 151:../../stmlib/dsp/filter.h ****       return lp;
 152:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 153:../../stmlib/dsp/filter.h ****       return in - lp;
 154:../../stmlib/dsp/filter.h ****     } else {
 155:../../stmlib/dsp/filter.h ****       return 0.0f;
 156:../../stmlib/dsp/filter.h ****     }
 157:../../stmlib/dsp/filter.h ****   }
 158:../../stmlib/dsp/filter.h ****   
 159:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 160:../../stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
 161:../../stmlib/dsp/filter.h ****     while (size--) {
 162:../../stmlib/dsp/filter.h ****       *in_out = Process<mode>(*in_out);
 163:../../stmlib/dsp/filter.h ****       ++in_out;
 164:../../stmlib/dsp/filter.h ****     }
 165:../../stmlib/dsp/filter.h ****   }
 166:../../stmlib/dsp/filter.h ****   
 167:../../stmlib/dsp/filter.h ****  private:
 168:../../stmlib/dsp/filter.h ****   float g_;
 169:../../stmlib/dsp/filter.h ****   float gi_;
 170:../../stmlib/dsp/filter.h ****   float state_;
 171:../../stmlib/dsp/filter.h ****   
 172:../../stmlib/dsp/filter.h ****   DISALLOW_COPY_AND_ASSIGN(OnePole);
 173:../../stmlib/dsp/filter.h **** };
 174:../../stmlib/dsp/filter.h **** 
 175:../../stmlib/dsp/filter.h **** 
 176:../../stmlib/dsp/filter.h **** 
 177:../../stmlib/dsp/filter.h **** class Svf {
 178:../../stmlib/dsp/filter.h ****  public:
 179:../../stmlib/dsp/filter.h ****   Svf() { }
 180:../../stmlib/dsp/filter.h ****   ~Svf() { }
 181:../../stmlib/dsp/filter.h ****   
 182:../../stmlib/dsp/filter.h ****   void Init() {
 183:../../stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 184:../../stmlib/dsp/filter.h ****     Reset();
 185:../../stmlib/dsp/filter.h ****   }
 186:../../stmlib/dsp/filter.h ****   
 187:../../stmlib/dsp/filter.h ****   void Reset() {
 188:../../stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
 189:../../stmlib/dsp/filter.h ****   }
 190:../../stmlib/dsp/filter.h ****   
 191:../../stmlib/dsp/filter.h ****   // Copy settings from another filter.
 192:../../stmlib/dsp/filter.h ****   inline void set(const Svf& f) {
 193:../../stmlib/dsp/filter.h ****     g_ = f.g();
 194:../../stmlib/dsp/filter.h ****     r_ = f.r();
 195:../../stmlib/dsp/filter.h ****     h_ = f.h();
 196:../../stmlib/dsp/filter.h ****   }
 197:../../stmlib/dsp/filter.h **** 
 198:../../stmlib/dsp/filter.h ****   // Set all parameters from LUT.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 33


 199:../../stmlib/dsp/filter.h ****   inline void set_g_r_h(float g, float r, float h) {
 200:../../stmlib/dsp/filter.h ****     g_ = g;
 201:../../stmlib/dsp/filter.h ****     r_ = r;
 202:../../stmlib/dsp/filter.h ****     h_ = h;
 203:../../stmlib/dsp/filter.h ****   }
 204:../../stmlib/dsp/filter.h ****   
 205:../../stmlib/dsp/filter.h ****   // Set frequency and resonance coefficients from LUT, adjust remaining
 206:../../stmlib/dsp/filter.h ****   // parameter.
 207:../../stmlib/dsp/filter.h ****   inline void set_g_r(float g, float r) {
 208:../../stmlib/dsp/filter.h ****     g_ = g;
 209:../../stmlib/dsp/filter.h ****     r_ = r;
 210:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 211:../../stmlib/dsp/filter.h ****   }
 212:../../stmlib/dsp/filter.h **** 
 213:../../stmlib/dsp/filter.h ****   // Set frequency from LUT, resonance in true units, adjust the rest.
 214:../../stmlib/dsp/filter.h ****   inline void set_g_q(float g, float resonance) {
 215:../../stmlib/dsp/filter.h ****     g_ = g;
 216:../../stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 217:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 218:../../stmlib/dsp/filter.h ****   }
 219:../../stmlib/dsp/filter.h **** 
 220:../../stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 221:../../stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 222:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 223:../../stmlib/dsp/filter.h ****   inline void set_f_q(float f, float resonance) {
 224:../../stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 369              		.loc 7 224 8 view .LVU95
 370 0034 1749     		ldr	r1, .L7
 371              	.LBE221:
 372              	.LBE220:
 373              	.LBE219:
 374              	.LBB233:
 375              	.LBB208:
 376              	.LBB205:
 377              		.loc 5 52 16 view .LVU96
 378 0036 C3E91356 		strd	r5, r6, [r3, #76]
 379              	.LVL28:
 380              		.loc 5 52 16 view .LVU97
 381              	.LBE205:
 382              	.LBE208:
 383              	.LBE233:
  51:dsp/string.cpp ****     fir_damping_filter_.Init();
 384              		.loc 4 51 5 is_stmt 1 view .LVU98
 385              	.LBB234:
 386              	.LBI211:
  51:./dsp/string.h ****     {
 387              		.loc 2 51 10 view .LVU99
 388              	.LBB213:
  53:./dsp/string.h ****         x__                   = 0.0f;
 389              		.loc 2 53 9 view .LVU100
 390              	.LBE213:
 391              	.LBE234:
 392              	.LBB235:
 393              	.LBB226:
 394              	.LBB222:
 395              		.loc 7 224 8 is_stmt 0 view .LVU101
 396 003a D166     		str	r1, [r2, #108]	@ float
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 34


 397              	.LBE222:
 398              	.LBE226:
 399              	.LBE235:
 400              	.LBB236:
 401              	.LBB214:
  53:./dsp/string.h ****         x__                   = 0.0f;
 402              		.loc 2 53 31 view .LVU102
 403 003c 0023     		movs	r3, #0
 404              	.LBE214:
 405              	.LBE236:
 406              	.LBB237:
 407              	.LBB227:
 408              	.LBB223:
 225:../../stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 409              		.loc 7 225 8 view .LVU103
 410 003e 1649     		ldr	r1, .L7+4
 411              	.LBE223:
 412              	.LBE227:
 413              	.LBE237:
 414              	.LBB238:
 415              	.LBB215:
  53:./dsp/string.h ****         x__                   = 0.0f;
 416              		.loc 2 53 31 view .LVU104
 417 0040 5365     		str	r3, [r2, #84]	@ float
  54:./dsp/string.h ****         brightness_           = 0.0f;
 418              		.loc 2 54 9 is_stmt 1 view .LVU105
 419              	.LBE215:
 420              	.LBE238:
 421              	.LBB239:
 422              	.LBB228:
 423              	.LBB224:
 424              		.loc 7 225 8 is_stmt 0 view .LVU106
 425 0042 1167     		str	r1, [r2, #112]	@ float
 226:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 426              		.loc 7 226 8 view .LVU107
 427 0044 1549     		ldr	r1, .L7+8
 428              	.LBE224:
 429              	.LBE228:
 430              	.LBE239:
 431              	.LBB240:
 432              	.LBB216:
  54:./dsp/string.h ****         brightness_           = 0.0f;
 433              		.loc 2 54 31 view .LVU108
 434 0046 9365     		str	r3, [r2, #88]	@ float
  55:./dsp/string.h ****         brightness_increment_ = 0.0f;
 435              		.loc 2 55 9 is_stmt 1 view .LVU109
 436              	.LBE216:
 437              	.LBE240:
 438              	.LBB241:
 439              	.LBB229:
 440              	.LBB225:
 441              		.loc 7 226 8 is_stmt 0 view .LVU110
 442 0048 5167     		str	r1, [r2, #116]	@ float
 443              	.LBE225:
 444              	.LBE229:
 445              	.LBE241:
 446              	.LBB242:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 35


 447              	.LBB243:
  89:./dsp/string.h **** 
  90:./dsp/string.h ****   private:
  91:./dsp/string.h ****     float x_;
  92:./dsp/string.h ****     float x__;
  93:./dsp/string.h ****     float brightness_;
  94:./dsp/string.h ****     float brightness_increment_;
  95:./dsp/string.h ****     float damping_;
  96:./dsp/string.h ****     float damping_increment_;
  97:./dsp/string.h **** 
  98:./dsp/string.h ****     DISALLOW_COPY_AND_ASSIGN(DampingFilter);
  99:./dsp/string.h **** };
 100:./dsp/string.h **** 
 101:./dsp/string.h **** typedef stmlib::DelayLine<float, kDelayLineSize>     StringDelayLine;
 102:./dsp/string.h **** typedef stmlib::DelayLine<float, kDelayLineSize / 2> StiffnessDelayLine;
 103:./dsp/string.h **** 
 104:./dsp/string.h **** class String
 105:./dsp/string.h **** {
 106:./dsp/string.h ****   public:
 107:./dsp/string.h ****     String() {}
 108:./dsp/string.h ****     ~String() {}
 109:./dsp/string.h **** 
 110:./dsp/string.h ****     void Init(bool enable_dispersion);
 111:./dsp/string.h ****     void Process(const float* in, float* out, float* aux, size_t size);
 112:./dsp/string.h **** 
 113:./dsp/string.h ****     inline void set_frequency(float frequency) { frequency_ = frequency; }
 448              		.loc 2 113 61 view .LVU111
 449 004a 1549     		ldr	r1, .L7+12
 450              	.LBE243:
 451              	.LBE242:
 452              	.LBB245:
 453              	.LBB217:
  55:./dsp/string.h ****         brightness_increment_ = 0.0f;
 454              		.loc 2 55 31 view .LVU112
 455 004c D365     		str	r3, [r2, #92]	@ float
  56:./dsp/string.h ****         damping_              = 0.0f;
 456              		.loc 2 56 9 is_stmt 1 view .LVU113
  56:./dsp/string.h ****         damping_              = 0.0f;
 457              		.loc 2 56 31 is_stmt 0 view .LVU114
 458 004e 1366     		str	r3, [r2, #96]	@ float
  57:./dsp/string.h ****         damping_increment_    = 0.0f;
 459              		.loc 2 57 9 is_stmt 1 view .LVU115
  57:./dsp/string.h ****         damping_increment_    = 0.0f;
 460              		.loc 2 57 31 is_stmt 0 view .LVU116
 461 0050 5366     		str	r3, [r2, #100]	@ float
  58:./dsp/string.h ****     }
 462              		.loc 2 58 9 is_stmt 1 view .LVU117
  58:./dsp/string.h ****     }
 463              		.loc 2 58 31 is_stmt 0 view .LVU118
 464 0052 9366     		str	r3, [r2, #104]	@ float
 465              	.LVL29:
  58:./dsp/string.h ****     }
 466              		.loc 2 58 31 view .LVU119
 467              	.LBE217:
 468              	.LBE245:
  52:dsp/string.cpp ****     iir_damping_filter_.Init();
 469              		.loc 4 52 5 is_stmt 1 view .LVU120
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 36


 470              	.LBB246:
 471              	.LBI219:
 182:../../stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 472              		.loc 7 182 8 view .LVU121
 473              	.LBE246:
 183:../../stmlib/dsp/filter.h ****     Reset();
 474              		.loc 7 183 5 view .LVU122
 475              	.LBB247:
 476              	.LBB230:
 477              	.LBI220:
 223:../../stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 478              		.loc 7 223 15 view .LVU123
 223:../../stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 479              		.loc 7 223 15 is_stmt 0 view .LVU124
 480              	.LBE230:
 481              	.LBE247:
 184:../../stmlib/dsp/filter.h ****   }
 482              		.loc 7 184 5 is_stmt 1 view .LVU125
 483              	.LBB248:
 484              	.LBB231:
 485              	.LBI231:
 187:../../stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
 486              		.loc 7 187 8 view .LVU126
 487              	.LBB232:
 188:../../stmlib/dsp/filter.h ****   }
 488              		.loc 7 188 5 view .LVU127
 188:../../stmlib/dsp/filter.h ****   }
 489              		.loc 7 188 25 is_stmt 0 view .LVU128
 490 0054 D367     		str	r3, [r2, #124]	@ float
 188:../../stmlib/dsp/filter.h ****   }
 491              		.loc 7 188 14 view .LVU129
 492 0056 9367     		str	r3, [r2, #120]	@ float
 493              	.LVL30:
 188:../../stmlib/dsp/filter.h ****   }
 494              		.loc 7 188 14 view .LVU130
 495              	.LBE232:
 496              	.LBE231:
 497              	.LBE248:
  53:dsp/string.cpp **** 
  54:dsp/string.cpp ****     set_frequency(220.0f / kSampleRate);
 498              		.loc 4 54 5 is_stmt 1 view .LVU131
 499              	.LBB249:
 500              	.LBI242:
 501              		.loc 2 113 17 view .LVU132
 502              	.LBB244:
 503              		.loc 2 113 50 view .LVU133
 504              		.loc 2 113 61 is_stmt 0 view .LVU134
 505 0058 2160     		str	r1, [r4]	@ float
 506              	.LVL31:
 507              		.loc 2 113 61 view .LVU135
 508              	.LBE244:
 509              	.LBE249:
  55:dsp/string.cpp ****     set_dispersion(0.25f);
 510              		.loc 4 55 5 is_stmt 1 view .LVU136
 511              	.LBB250:
 512              	.LBI250:
 114:./dsp/string.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 37


 115:./dsp/string.h ****     inline void set_frequency(float frequency, float coefficient)
 116:./dsp/string.h ****     {
 117:./dsp/string.h ****         frequency_ += coefficient * (frequency - frequency_);
 118:./dsp/string.h ****     }
 119:./dsp/string.h **** 
 120:./dsp/string.h ****     inline void set_dispersion(float dispersion) { dispersion_ = dispersion; }
 513              		.loc 2 120 17 view .LVU137
 514              	.LBB251:
 515              		.loc 2 120 52 view .LVU138
 516              		.loc 2 120 64 is_stmt 0 view .LVU139
 517 005a 4FF07A51 		mov	r1, #1048576000
 518              	.LBE251:
 519              	.LBE250:
  56:dsp/string.cpp ****     set_brightness(0.5f);
  57:dsp/string.cpp ****     set_damping(0.3f);
  58:dsp/string.cpp ****     set_position(0.8f);
  59:dsp/string.cpp **** 
  60:dsp/string.cpp ****     delay_                         = 1.0f / frequency_;
  61:dsp/string.cpp ****     clamped_position_              = 0.0f;
 520              		.loc 4 61 36 view .LVU140
 521 005e A361     		str	r3, [r4, #24]	@ float
 522              	.LBB253:
 523              	.LBB252:
 524              		.loc 2 120 64 view .LVU141
 525 0060 6160     		str	r1, [r4, #4]	@ float
 526              	.LVL32:
 527              		.loc 2 120 64 view .LVU142
 528              	.LBE252:
 529              	.LBE253:
  56:dsp/string.cpp ****     set_brightness(0.5f);
 530              		.loc 4 56 5 is_stmt 1 view .LVU143
 531              	.LBB254:
 532              	.LBI254:
 121:./dsp/string.h **** 
 122:./dsp/string.h ****     inline void set_brightness(float brightness) { brightness_ = brightness; }
 533              		.loc 2 122 17 view .LVU144
 534              	.LBB255:
 535              		.loc 2 122 52 view .LVU145
 536              		.loc 2 122 64 is_stmt 0 view .LVU146
 537 0062 4FF07C51 		mov	r1, #1056964608
 538              	.LBE255:
 539              	.LBE254:
  62:dsp/string.cpp ****     previous_dispersion_           = 0.0f;
 540              		.loc 4 62 36 view .LVU147
 541 0066 E361     		str	r3, [r4, #28]	@ float
 542              	.LBB257:
 543              	.LBB256:
 544              		.loc 2 122 64 view .LVU148
 545 0068 A160     		str	r1, [r4, #8]	@ float
 546              	.LVL33:
 547              		.loc 2 122 64 view .LVU149
 548              	.LBE256:
 549              	.LBE257:
  57:dsp/string.cpp ****     set_position(0.8f);
 550              		.loc 4 57 5 is_stmt 1 view .LVU150
 551              	.LBB258:
 552              	.LBI258:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 38


 123:./dsp/string.h **** 
 124:./dsp/string.h ****     inline void set_damping(float damping) { damping_ = damping; }
 553              		.loc 2 124 17 view .LVU151
 554              	.LBB259:
 555              		.loc 2 124 46 view .LVU152
 556              		.loc 2 124 55 is_stmt 0 view .LVU153
 557 006a 0E49     		ldr	r1, .L7+16
 558              	.LBE259:
 559              	.LBE258:
  63:dsp/string.cpp ****     dispersion_noise_              = 0.0f;
 560              		.loc 4 63 36 view .LVU154
 561 006c A362     		str	r3, [r4, #40]	@ float
 562              	.LBB261:
 563              	.LBB260:
 564              		.loc 2 124 55 view .LVU155
 565 006e E160     		str	r1, [r4, #12]	@ float
 566              	.LVL34:
 567              		.loc 2 124 55 view .LVU156
 568              	.LBE260:
 569              	.LBE261:
  58:dsp/string.cpp **** 
 570              		.loc 4 58 5 is_stmt 1 view .LVU157
 571              	.LBB262:
 572              	.LBI262:
 125:./dsp/string.h **** 
 126:./dsp/string.h ****     inline void set_position(float position) { position_ = position; }
 573              		.loc 2 126 17 view .LVU158
 574              	.LBB263:
 575              		.loc 2 126 48 view .LVU159
 576              		.loc 2 126 58 is_stmt 0 view .LVU160
 577 0070 0D49     		ldr	r1, .L7+20
 578              	.LBE263:
 579              	.LBE262:
  64:dsp/string.cpp ****     curved_bridge_                 = 0.0f;
 580              		.loc 4 64 36 view .LVU161
 581 0072 2364     		str	r3, [r4, #64]	@ float
 582              	.LBB265:
 583              	.LBB264:
 584              		.loc 2 126 58 view .LVU162
 585 0074 2161     		str	r1, [r4, #16]	@ float
 586              	.LVL35:
 587              		.loc 2 126 58 view .LVU163
 588              	.LBE264:
 589              	.LBE265:
  60:dsp/string.cpp ****     clamped_position_              = 0.0f;
 590              		.loc 4 60 5 is_stmt 1 view .LVU164
  60:dsp/string.cpp ****     clamped_position_              = 0.0f;
 591              		.loc 4 60 36 is_stmt 0 view .LVU165
 592 0076 0D49     		ldr	r1, .L7+24
  65:dsp/string.cpp ****     previous_damping_compensation_ = 0.0f;
 593              		.loc 4 65 36 view .LVU166
 594 0078 2362     		str	r3, [r4, #32]	@ float
  66:dsp/string.cpp **** 
  67:dsp/string.cpp ****     out_sample_[0] = out_sample_[1] = 0.0f;
 595              		.loc 4 67 37 view .LVU167
 596 007a 6363     		str	r3, [r4, #52]	@ float
 597              		.loc 4 67 20 view .LVU168
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 39


 598 007c 2363     		str	r3, [r4, #48]	@ float
  68:dsp/string.cpp ****     aux_sample_[0] = aux_sample_[1] = 0.0f;
 599              		.loc 4 68 37 view .LVU169
 600 007e E363     		str	r3, [r4, #60]	@ float
 601              		.loc 4 68 20 view .LVU170
 602 0080 A363     		str	r3, [r4, #56]	@ float
  60:dsp/string.cpp ****     clamped_position_              = 0.0f;
 603              		.loc 4 60 36 view .LVU171
 604 0082 6161     		str	r1, [r4, #20]	@ float
  61:dsp/string.cpp ****     previous_dispersion_           = 0.0f;
 605              		.loc 4 61 5 is_stmt 1 view .LVU172
  62:dsp/string.cpp ****     dispersion_noise_              = 0.0f;
 606              		.loc 4 62 5 view .LVU173
  63:dsp/string.cpp ****     curved_bridge_                 = 0.0f;
 607              		.loc 4 63 5 view .LVU174
  64:dsp/string.cpp ****     previous_damping_compensation_ = 0.0f;
 608              		.loc 4 64 5 view .LVU175
  65:dsp/string.cpp **** 
 609              		.loc 4 65 5 view .LVU176
  67:dsp/string.cpp ****     aux_sample_[0] = aux_sample_[1] = 0.0f;
 610              		.loc 4 67 5 view .LVU177
 611              		.loc 4 68 5 view .LVU178
  69:dsp/string.cpp **** 
  70:dsp/string.cpp ****     dc_blocker_.Init(1.0f - 20.0f / kSampleRate);
 612              		.loc 4 70 5 view .LVU179
 613              	.LVL36:
 614              	.LBB266:
 615              	.LBI266:
  67:../../stmlib/dsp/filter.h ****     x_ = 0.0f;
 616              		.loc 7 67 8 view .LVU180
 617              	.LBB267:
  68:../../stmlib/dsp/filter.h ****     y_ = 0.0f;
 618              		.loc 7 68 5 view .LVU181
  68:../../stmlib/dsp/filter.h ****     y_ = 0.0f;
 619              		.loc 7 68 8 is_stmt 0 view .LVU182
 620 0084 C2F88430 		str	r3, [r2, #132]	@ float
  69:../../stmlib/dsp/filter.h ****     pole_ = pole;
 621              		.loc 7 69 5 is_stmt 1 view .LVU183
  69:../../stmlib/dsp/filter.h ****     pole_ = pole;
 622              		.loc 7 69 8 is_stmt 0 view .LVU184
 623 0088 C2F88830 		str	r3, [r2, #136]	@ float
  70:../../stmlib/dsp/filter.h ****   }
 624              		.loc 7 70 5 is_stmt 1 view .LVU185
  70:../../stmlib/dsp/filter.h ****   }
 625              		.loc 7 70 11 is_stmt 0 view .LVU186
 626 008c 084B     		ldr	r3, .L7+28
 627 008e C2F88030 		str	r3, [r2, #128]	@ float
 628              	.LVL37:
  70:../../stmlib/dsp/filter.h ****   }
 629              		.loc 7 70 11 view .LVU187
 630              	.LBE267:
 631              	.LBE266:
  71:dsp/string.cpp **** }
 632              		.loc 4 71 1 view .LVU188
 633 0092 70BD     		pop	{r4, r5, r6, pc}
 634              	.LVL38:
 635              	.L8:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 40


 636              		.loc 4 71 1 view .LVU189
 637              		.align	2
 638              	.L7:
 639 0094 22BA003D 		.word	1023457826
 640 0098 0AD7233C 		.word	1008981770
 641 009c CAAA7F3F 		.word	1065331402
 642 00a0 C92F963B 		.word	999698377
 643 00a4 9A99993E 		.word	1050253722
 644 00a8 CDCC4C3F 		.word	1061997773
 645 00ac 8C2E5A43 		.word	1129983628
 646 00b0 B1E47F3F 		.word	1065346225
 647              		.cfi_endproc
 648              	.LFE1531:
 650              		.section	.text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff,"axG",%progbits,_ZN6stm
 651              		.align	1
 652              		.weak	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-d16
 658              	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:
 659              	.LVL39:
 660              	.LFB1556:
 223:../../stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 661              		.loc 7 223 15 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666              	.LBB271:
 667              	.LBI271:
 107:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 668              		.loc 7 107 23 view .LVU191
 669              	.LBB272:
 131:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 670              		.loc 7 131 13 is_stmt 0 view .LVU192
 671 0000 60EE007A 		vmul.f32	s15, s0, s0
 672              	.LVL40:
 132:../../stmlib/dsp/filter.h ****     }
 673              		.loc 7 132 66 view .LVU193
 674 0004 DFED156A 		vldr.32	s13, .L10
 675 0008 9FED157A 		vldr.32	s14, .L10+4
 676 000c A7EEA67A 		vfma.f32	s14, s15, s13
 132:../../stmlib/dsp/filter.h ****     }
 677              		.loc 7 132 56 view .LVU194
 678 0010 DFED146A 		vldr.32	s13, .L10+8
 679 0014 E7EE876A 		vfma.f32	s13, s15, s14
 132:../../stmlib/dsp/filter.h ****     }
 680              		.loc 7 132 46 view .LVU195
 681 0018 9FED137A 		vldr.32	s14, .L10+12
 682 001c A7EEA67A 		vfma.f32	s14, s15, s13
 132:../../stmlib/dsp/filter.h ****     }
 683              		.loc 7 132 36 view .LVU196
 684 0020 DFED126A 		vldr.32	s13, .L10+16
 685 0024 E7EE876A 		vfma.f32	s13, s15, s14
 132:../../stmlib/dsp/filter.h ****     }
 686              		.loc 7 132 26 view .LVU197
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 41


 687 0028 9FED117A 		vldr.32	s14, .L10+20
 688 002c A7EEA67A 		vfma.f32	s14, s15, s13
 132:../../stmlib/dsp/filter.h ****     }
 689              		.loc 7 132 78 view .LVU198
 690 0030 20EE070A 		vmul.f32	s0, s0, s14
 691              	.LVL41:
 132:../../stmlib/dsp/filter.h ****     }
 692              		.loc 7 132 78 view .LVU199
 693              	.LBE272:
 694              	.LBE271:
 225:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 695              		.loc 7 225 15 view .LVU200
 696 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
 224:../../stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 697              		.loc 7 224 8 view .LVU201
 698 0038 80ED000A 		vstr.32	s0, [r0]
 225:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 699              		.loc 7 225 15 view .LVU202
 700 003c C7EE206A 		vdiv.f32	s13, s14, s1
 701              		.loc 7 226 23 view .LVU203
 702 0040 F0EE477A 		vmov.f32	s15, s14
 703 0044 E6EE807A 		vfma.f32	s15, s13, s0
 225:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 704              		.loc 7 225 8 view .LVU204
 705 0048 C0ED016A 		vstr.32	s13, [r0, #4]
 706              		.loc 7 226 33 view .LVU205
 707 004c E0EE007A 		vfma.f32	s15, s0, s0
 708              		.loc 7 226 15 view .LVU206
 709 0050 C7EE276A 		vdiv.f32	s13, s14, s15
 710              		.loc 7 226 8 view .LVU207
 711 0054 C0ED026A 		vstr.32	s13, [r0, #8]
 227:../../stmlib/dsp/filter.h ****   }
 712              		.loc 7 227 3 view .LVU208
 713 0058 7047     		bx	lr
 714              	.L11:
 715 005a 00BF     		.align	2
 716              	.L10:
 717 005c 23FE2E45 		.word	1160707619
 718 0060 90ECAC42 		.word	1118629008
 719 0064 8F342143 		.word	1126249615
 720 0068 66482342 		.word	1109608550
 721 006c A85D2541 		.word	1092967848
 722 0070 DB0F4940 		.word	1078530011
 723              		.cfi_endproc
 724              	.LFE1556:
 726              		.section	.text._ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf,"axG",%progbits,_ZNK6stmlib9DelayLin
 727              		.align	1
 728              		.weak	_ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 732              		.fpu fpv5-d16
 734              	_ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf:
 735              	.LVL42:
 736              	.LFB1557:
  53:../../stmlib/dsp/delay_line.h ****   }
  54:../../stmlib/dsp/delay_line.h ****   
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 42


  55:../../stmlib/dsp/delay_line.h ****   inline void set_delay(size_t delay) {
  56:../../stmlib/dsp/delay_line.h ****     delay_ = delay;
  57:../../stmlib/dsp/delay_line.h ****   }
  58:../../stmlib/dsp/delay_line.h **** 
  59:../../stmlib/dsp/delay_line.h ****   inline void Write(const T sample) {
  60:../../stmlib/dsp/delay_line.h ****     line_[write_ptr_] = sample;
  61:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
  62:../../stmlib/dsp/delay_line.h ****   }
  63:../../stmlib/dsp/delay_line.h ****   
  64:../../stmlib/dsp/delay_line.h ****   inline const T Allpass(const T sample, size_t delay, const T coefficient) {
  65:../../stmlib/dsp/delay_line.h ****     T read = line_[(write_ptr_ + delay) % max_delay];
  66:../../stmlib/dsp/delay_line.h ****     T write = sample + coefficient * read;
  67:../../stmlib/dsp/delay_line.h ****     Write(write);
  68:../../stmlib/dsp/delay_line.h ****     return -write * coefficient + read;
  69:../../stmlib/dsp/delay_line.h ****   }
  70:../../stmlib/dsp/delay_line.h **** 
  71:../../stmlib/dsp/delay_line.h ****   inline const T WriteRead(const T sample, float delay) {
  72:../../stmlib/dsp/delay_line.h ****     Write(sample);
  73:../../stmlib/dsp/delay_line.h ****     return Read(delay);
  74:../../stmlib/dsp/delay_line.h ****   }
  75:../../stmlib/dsp/delay_line.h ****   
  76:../../stmlib/dsp/delay_line.h ****   inline const T Read() const {
  77:../../stmlib/dsp/delay_line.h ****     return line_[(write_ptr_ + delay_) % max_delay];
  78:../../stmlib/dsp/delay_line.h ****   }
  79:../../stmlib/dsp/delay_line.h ****   
  80:../../stmlib/dsp/delay_line.h ****   inline const T Read(size_t delay) const {
  81:../../stmlib/dsp/delay_line.h ****     return line_[(write_ptr_ + delay) % max_delay];
  82:../../stmlib/dsp/delay_line.h ****   }
  83:../../stmlib/dsp/delay_line.h **** 
  84:../../stmlib/dsp/delay_line.h ****   inline const T Read(float delay) const {
  85:../../stmlib/dsp/delay_line.h ****     MAKE_INTEGRAL_FRACTIONAL(delay)
  86:../../stmlib/dsp/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
  87:../../stmlib/dsp/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
  88:../../stmlib/dsp/delay_line.h ****     return a + (b - a) * delay_fractional;
  89:../../stmlib/dsp/delay_line.h ****   }
  90:../../stmlib/dsp/delay_line.h ****   
  91:../../stmlib/dsp/delay_line.h ****   inline const T ReadHermite(float delay) const {
 737              		.loc 5 91 18 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              		@ link register save eliminated.
  92:../../stmlib/dsp/delay_line.h ****     MAKE_INTEGRAL_FRACTIONAL(delay)
 742              		.loc 5 92 5 is_stmt 0 view .LVU210
 743 0000 FDEEC07A 		vcvt.s32.f32	s15, s0
 744              	.LVL43:
  93:../../stmlib/dsp/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 745              		.loc 5 93 29 view .LVU211
 746 0004 0368     		ldr	r3, [r0]
  94:../../stmlib/dsp/delay_line.h ****     const T xm1 = line_[(t - 1) % max_delay];
  95:../../stmlib/dsp/delay_line.h ****     const T x0 = line_[(t) % max_delay];
  96:../../stmlib/dsp/delay_line.h ****     const T x1 = line_[(t + 1) % max_delay];
  97:../../stmlib/dsp/delay_line.h ****     const T x2 = line_[(t + 2) % max_delay];
  98:../../stmlib/dsp/delay_line.h ****     const float c = (x1 - xm1) * 0.5f;
  99:../../stmlib/dsp/delay_line.h ****     const float v = x0 - x1;
 100:../../stmlib/dsp/delay_line.h ****     const float w = c + v;
 747              		.loc 5 100 17 view .LVU212
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 43


 748 0006 F6EE005A 		vmov.f32	s11, #5.0e-1
  93:../../stmlib/dsp/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 749              		.loc 5 93 29 view .LVU213
 750 000a 17EE902A 		vmov	r2, s15	@ int
  92:../../stmlib/dsp/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 751              		.loc 5 92 5 view .LVU214
 752 000e F8EEE76A 		vcvt.f32.s32	s13, s15
  93:../../stmlib/dsp/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 753              		.loc 5 93 29 view .LVU215
 754 0012 1A44     		add	r2, r2, r3
  92:../../stmlib/dsp/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 755              		.loc 5 92 5 view .LVU216
 756 0014 70EE666A 		vsub.f32	s13, s0, s13
 757              	.LVL44:
  93:../../stmlib/dsp/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 758              		.loc 5 93 29 view .LVU217
 759 0018 1346     		mov	r3, r2
 760              	.LVL45:
  95:../../stmlib/dsp/delay_line.h ****     const T x1 = line_[(t + 1) % max_delay];
 761              		.loc 5 95 13 view .LVU218
 762 001a C2F30A02 		ubfx	r2, r2, #0, #11
 763              	.LVL46:
  95:../../stmlib/dsp/delay_line.h ****     const T x1 = line_[(t + 1) % max_delay];
 764              		.loc 5 95 13 view .LVU219
 765 001e 00EB8202 		add	r2, r0, r2, lsl #2
 766 0022 92ED020A 		vldr.32	s0, [r2, #8]
 767              	.LVL47:
  96:../../stmlib/dsp/delay_line.h ****     const T x2 = line_[(t + 2) % max_delay];
 768              		.loc 5 96 32 view .LVU220
 769 0026 03F60102 		addw	r2, r3, #2049
 770 002a C2F30A02 		ubfx	r2, r2, #0, #11
  96:../../stmlib/dsp/delay_line.h ****     const T x2 = line_[(t + 2) % max_delay];
 771              		.loc 5 96 13 view .LVU221
 772 002e 00EB8202 		add	r2, r0, r2, lsl #2
 773 0032 92ED027A 		vldr.32	s14, [r2, #8]
 774              	.LVL48:
  97:../../stmlib/dsp/delay_line.h ****     const float c = (x1 - xm1) * 0.5f;
 775              		.loc 5 97 32 view .LVU222
 776 0036 03F60202 		addw	r2, r3, #2050
  94:../../stmlib/dsp/delay_line.h ****     const T x0 = line_[(t) % max_delay];
 777              		.loc 5 94 33 view .LVU223
 778 003a 03F2FF73 		addw	r3, r3, #2047
 779              	.LVL49:
  97:../../stmlib/dsp/delay_line.h ****     const float c = (x1 - xm1) * 0.5f;
 780              		.loc 5 97 32 view .LVU224
 781 003e C2F30A02 		ubfx	r2, r2, #0, #11
  94:../../stmlib/dsp/delay_line.h ****     const T x0 = line_[(t) % max_delay];
 782              		.loc 5 94 33 view .LVU225
 783 0042 C3F30A03 		ubfx	r3, r3, #0, #11
 784              	.LVL50:
  97:../../stmlib/dsp/delay_line.h ****     const float c = (x1 - xm1) * 0.5f;
 785              		.loc 5 97 13 view .LVU226
 786 0046 00EB8202 		add	r2, r0, r2, lsl #2
  94:../../stmlib/dsp/delay_line.h ****     const T x0 = line_[(t) % max_delay];
 787              		.loc 5 94 13 view .LVU227
 788 004a 00EB8300 		add	r0, r0, r3, lsl #2
 789              	.LVL51:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 44


  97:../../stmlib/dsp/delay_line.h ****     const float c = (x1 - xm1) * 0.5f;
 790              		.loc 5 97 13 view .LVU228
 791 004e 92ED025A 		vldr.32	s10, [r2, #8]
 792              	.LVL52:
  98:../../stmlib/dsp/delay_line.h ****     const float v = x0 - x1;
 793              		.loc 5 98 25 view .LVU229
 794 0052 90ED026A 		vldr.32	s12, [r0, #8]
 101:../../stmlib/dsp/delay_line.h ****     const float a = w + v + (x2 - x0) * 0.5f;
 795              		.loc 5 101 33 view .LVU230
 796 0056 35EE405A 		vsub.f32	s10, s10, s0
 797              	.LVL53:
  98:../../stmlib/dsp/delay_line.h ****     const float v = x0 - x1;
 798              		.loc 5 98 25 view .LVU231
 799 005a 37EE466A 		vsub.f32	s12, s14, s12
 800              	.LVL54:
  99:../../stmlib/dsp/delay_line.h ****     const float w = c + v;
 801              		.loc 5 99 17 view .LVU232
 802 005e 30EE477A 		vsub.f32	s14, s0, s14
 803              	.LVL55:
 100:../../stmlib/dsp/delay_line.h ****     const float a = w + v + (x2 - x0) * 0.5f;
 804              		.loc 5 100 17 view .LVU233
 805 0062 F0EE477A 		vmov.f32	s15, s14
 806              	.LVL56:
 100:../../stmlib/dsp/delay_line.h ****     const float a = w + v + (x2 - x0) * 0.5f;
 807              		.loc 5 100 17 view .LVU234
 808 0066 E6EE257A 		vfma.f32	s15, s12, s11
 809              	.LVL57:
 810              		.loc 5 101 23 view .LVU235
 811 006a 37EE277A 		vadd.f32	s14, s14, s15
 812              	.LVL58:
 813              		.loc 5 101 17 view .LVU236
 814 006e A5EE257A 		vfma.f32	s14, s10, s11
 815              	.LVL59:
 102:../../stmlib/dsp/delay_line.h ****     const float b_neg = w + a;
 816              		.loc 5 102 17 view .LVU237
 817 0072 77EE877A 		vadd.f32	s15, s15, s14
 818              	.LVL60:
 103:../../stmlib/dsp/delay_line.h ****     const float f = delay_fractional;
 104:../../stmlib/dsp/delay_line.h ****     return (((a * f) - b_neg) * f + c) * f + x0;
 819              		.loc 5 104 22 view .LVU238
 820 0076 D6EE877A 		vfnms.f32	s15, s13, s14
 821              	.LVL61:
 822              		.loc 5 104 31 view .LVU239
 823 007a 67EEA67A 		vmul.f32	s15, s15, s13
 824              		.loc 5 104 35 view .LVU240
 825 007e E6EE257A 		vfma.f32	s15, s12, s11
 105:../../stmlib/dsp/delay_line.h ****   }
 826              		.loc 5 105 3 view .LVU241
 827 0082 A7EEA60A 		vfma.f32	s0, s15, s13
 828              	.LVL62:
 829              		.loc 5 105 3 view .LVU242
 830 0086 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE1557:
 834              		.section	.text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff,"axG",%progbits,_ZN6stmlib3Svf7Proce
 835              		.align	1
 836              		.weak	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 45


 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 840              		.fpu fpv5-d16
 842              	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff:
 843              	.LVL63:
 844              	.LFB1559:
 228:../../stmlib/dsp/filter.h ****   
 229:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 230:../../stmlib/dsp/filter.h ****   inline float Process(float in) {
 845              		.loc 7 230 16 is_stmt 1 view -0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 231:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 232:../../stmlib/dsp/filter.h ****     hp = (in - r_ * state_1_ - g_ * state_1_ - state_2_) * h_;
 850              		.loc 7 232 14 is_stmt 0 view .LVU244
 851 0000 F0EE407A 		vmov.f32	s15, s0
 852              		.loc 7 232 21 view .LVU245
 853 0004 90ED037A 		vldr.32	s14, [r0, #12]
 854              		.loc 7 232 14 view .LVU246
 855 0008 D0ED016A 		vldr.32	s13, [r0, #4]
 856              		.loc 7 232 48 view .LVU247
 857 000c 90ED040A 		vldr.32	s0, [r0, #16]
 858              	.LVL64:
 859              		.loc 7 232 14 view .LVU248
 860 0010 E6EEC77A 		vfms.f32	s15, s13, s14
 861              	.LVL65:
 862              		.loc 7 232 32 view .LVU249
 863 0014 D0ED006A 		vldr.32	s13, [r0]
 864              		.loc 7 232 8 view .LVU250
 865 0018 90ED026A 		vldr.32	s12, [r0, #8]
 866              		.loc 7 232 30 view .LVU251
 867 001c E7EE667A 		vfms.f32	s15, s14, s13
 868              		.loc 7 232 46 view .LVU252
 869 0020 77EEC07A 		vsub.f32	s15, s15, s0
 870              		.loc 7 232 8 view .LVU253
 871 0024 67EE867A 		vmul.f32	s15, s15, s12
 872              	.LVL66:
 233:../../stmlib/dsp/filter.h ****     bp = g_ * hp + state_1_;
 873              		.loc 7 233 8 view .LVU254
 874 0028 A6EEA77A 		vfma.f32	s14, s13, s15
 875              	.LVL67:
 234:../../stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 235:../../stmlib/dsp/filter.h ****     lp = g_ * bp + state_2_;
 876              		.loc 7 235 8 view .LVU255
 877 002c A6EE870A 		vfma.f32	s0, s13, s14
 878              	.LVL68:
 234:../../stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 879              		.loc 7 234 24 view .LVU256
 880 0030 B0EE476A 		vmov.f32	s12, s14
 881 0034 A6EEA76A 		vfma.f32	s12, s13, s15
 236:../../stmlib/dsp/filter.h ****     state_2_ = g_ * bp + lp;
 882              		.loc 7 236 24 view .LVU257
 883 0038 F0EE407A 		vmov.f32	s15, s0
 884              	.LVL69:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 46


 885              		.loc 7 236 24 view .LVU258
 886 003c E6EE877A 		vfma.f32	s15, s13, s14
 234:../../stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 887              		.loc 7 234 14 view .LVU259
 888 0040 80ED036A 		vstr.32	s12, [r0, #12]
 889              	.LVL70:
 890              		.loc 7 236 14 view .LVU260
 891 0044 C0ED047A 		vstr.32	s15, [r0, #16]
 237:../../stmlib/dsp/filter.h ****     
 238:../../stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 239:../../stmlib/dsp/filter.h ****       return lp;
 240:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS) {
 241:../../stmlib/dsp/filter.h ****       return bp;
 242:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 243:../../stmlib/dsp/filter.h ****       return bp * r_;
 244:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 245:../../stmlib/dsp/filter.h ****       return hp;
 246:../../stmlib/dsp/filter.h ****     }
 247:../../stmlib/dsp/filter.h ****   }
 892              		.loc 7 247 3 view .LVU261
 893 0048 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE1559:
 897              		.section	.text._ZNK6stmlib9DelayLineIfLj2048EE4ReadEf,"axG",%progbits,_ZNK6stmlib9DelayLineIfLj204
 898              		.align	1
 899              		.weak	_ZNK6stmlib9DelayLineIfLj2048EE4ReadEf
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv5-d16
 905              	_ZNK6stmlib9DelayLineIfLj2048EE4ReadEf:
 906              	.LVL71:
 907              	.LFB1561:
  84:../../stmlib/dsp/delay_line.h ****     MAKE_INTEGRAL_FRACTIONAL(delay)
 908              		.loc 5 84 18 is_stmt 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
  85:../../stmlib/dsp/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 913              		.loc 5 85 5 is_stmt 0 view .LVU263
 914 0000 FDEEC07A 		vcvt.s32.f32	s15, s0
 915              	.LVL72:
  86:../../stmlib/dsp/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 916              		.loc 5 86 35 view .LVU264
 917 0004 0368     		ldr	r3, [r0]
 918 0006 17EE902A 		vmov	r2, s15	@ int
  85:../../stmlib/dsp/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 919              		.loc 5 85 5 view .LVU265
 920 000a F8EEE77A 		vcvt.f32.s32	s15, s15
 921              	.LVL73:
  86:../../stmlib/dsp/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 922              		.loc 5 86 35 view .LVU266
 923 000e 1344     		add	r3, r3, r2
  85:../../stmlib/dsp/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 924              		.loc 5 85 5 view .LVU267
 925 0010 70EE677A 		vsub.f32	s15, s0, s15
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 47


 926              	.LVL74:
  86:../../stmlib/dsp/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 927              		.loc 5 86 53 view .LVU268
 928 0014 C3F30A02 		ubfx	r2, r3, #0, #11
 929              	.LVL75:
  87:../../stmlib/dsp/delay_line.h ****     return a + (b - a) * delay_fractional;
 930              		.loc 5 87 52 view .LVU269
 931 0018 0133     		adds	r3, r3, #1
  87:../../stmlib/dsp/delay_line.h ****     return a + (b - a) * delay_fractional;
 932              		.loc 5 87 57 view .LVU270
 933 001a C3F30A03 		ubfx	r3, r3, #0, #11
  86:../../stmlib/dsp/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 934              		.loc 5 86 13 view .LVU271
 935 001e 00EB8202 		add	r2, r0, r2, lsl #2
  87:../../stmlib/dsp/delay_line.h ****     return a + (b - a) * delay_fractional;
 936              		.loc 5 87 13 view .LVU272
 937 0022 00EB8300 		add	r0, r0, r3, lsl #2
 938              	.LVL76:
  86:../../stmlib/dsp/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 939              		.loc 5 86 13 view .LVU273
 940 0026 D2ED026A 		vldr.32	s13, [r2, #8]
 941              	.LVL77:
  88:../../stmlib/dsp/delay_line.h ****   }
 942              		.loc 5 88 19 view .LVU274
 943 002a 90ED027A 		vldr.32	s14, [r0, #8]
 944 002e 37EE667A 		vsub.f32	s14, s14, s13
  89:../../stmlib/dsp/delay_line.h ****   
 945              		.loc 5 89 3 view .LVU275
 946 0032 E7EE276A 		vfma.f32	s13, s14, s15
 947              	.LVL78:
  89:../../stmlib/dsp/delay_line.h ****   
 948              		.loc 5 89 3 view .LVU276
 949 0036 B0EE660A 		vmov.f32	s0, s13
 950              	.LVL79:
  89:../../stmlib/dsp/delay_line.h ****   
 951              		.loc 5 89 3 view .LVU277
 952 003a 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE1561:
 956              		.section	.text._ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j,"axG",%progbits,_ZN5torus6String
 957              		.align	1
 958              		.weak	_ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 962              		.fpu fpv5-d16
 964              	_ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j:
 965              	.LVL80:
 966              	.LFB1552:
  72:dsp/string.cpp **** 
  73:dsp/string.cpp **** template <bool enable_dispersion>
  74:dsp/string.cpp **** void String::ProcessInternal(const float* in,
 967              		.loc 4 74 6 is_stmt 1 view -0
 968              		.cfi_startproc
 969              		@ args = 4, pretend = 0, frame = 8
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		.loc 4 74 6 is_stmt 0 view .LVU279
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 48


 972 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 973              		.cfi_def_cfa_offset 36
 974              		.cfi_offset 4, -36
 975              		.cfi_offset 5, -32
 976              		.cfi_offset 6, -28
 977              		.cfi_offset 7, -24
 978              		.cfi_offset 8, -20
 979              		.cfi_offset 9, -16
 980              		.cfi_offset 10, -12
 981              		.cfi_offset 11, -8
 982              		.cfi_offset 14, -4
 983 0004 2DED0C8B 		vpush.64	{d8, d9, d10, d11, d12, d13}
 984              		.cfi_def_cfa_offset 84
 985              		.cfi_offset 80, -84
 986              		.cfi_offset 81, -80
 987              		.cfi_offset 82, -76
 988              		.cfi_offset 83, -72
 989              		.cfi_offset 84, -68
 990              		.cfi_offset 85, -64
 991              		.cfi_offset 86, -60
 992              		.cfi_offset 87, -56
 993              		.cfi_offset 88, -52
 994              		.cfi_offset 89, -48
 995              		.cfi_offset 90, -44
 996              		.cfi_offset 91, -40
  75:dsp/string.cpp ****                              float*       out,
  76:dsp/string.cpp ****                              float*       aux,
  77:dsp/string.cpp ****                              size_t       size)
  78:dsp/string.cpp **** {
  79:dsp/string.cpp ****     float delay = 1.0f / frequency_;
 997              		.loc 4 79 11 view .LVU280
 998 0008 F7EE009A 		vmov.f32	s19, #1.0e+0
 999              		.loc 4 79 26 view .LVU281
 1000 000c D0ED00DA 		vldr.32	s27, [r0]
  80:dsp/string.cpp ****     CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1001              		.loc 4 80 5 view .LVU282
 1002 0010 F1EE007A 		vmov.f32	s15, #4.0e+0
  74:dsp/string.cpp ****                              float*       out,
 1003              		.loc 4 74 6 view .LVU283
 1004 0014 83B0     		sub	sp, sp, #12
 1005              		.cfi_def_cfa_offset 96
  74:dsp/string.cpp ****                              float*       out,
 1006              		.loc 4 74 6 view .LVU284
 1007 0016 0446     		mov	r4, r0
 1008 0018 0E46     		mov	r6, r1
  79:dsp/string.cpp ****     CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1009              		.loc 4 79 11 view .LVU285
 1010 001a 89EEAD8A 		vdiv.f32	s16, s19, s27
 1011              	.LVL81:
  74:dsp/string.cpp ****                              float*       out,
 1012              		.loc 4 74 6 view .LVU286
 1013 001e 9046     		mov	r8, r2
 1014 0020 1F46     		mov	r7, r3
 1015 0022 189D     		ldr	r5, [sp, #96]
 1016              		.loc 4 80 5 view .LVU287
 1017 0024 B4EEE78A 		vcmpe.f32	s16, s15
 1018 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 49


 1019 002c 00F1FC80 		bmi	.L31
 1020              		.loc 4 80 5 discriminator 2 view .LVU288
 1021 0030 DFEDAB7A 		vldr.32	s15, .L38
 1022 0034 B4EE678A 		vcmp.f32	s16, s15
 1023 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1024 003c 37FE888A 		vselgt.f32	s16, s15, s16
 1025              	.LVL82:
 1026              	.L16:
  81:dsp/string.cpp **** 
  82:dsp/string.cpp ****     // If there is not enough delay time in the delay line, we play at the
  83:dsp/string.cpp ****     // lowest possible note and we upsample on the fly with a shitty linear
  84:dsp/string.cpp ****     // interpolator. We don't care because it's a corner case (f0 < 11.7Hz)
  85:dsp/string.cpp ****     float src_ratio = delay * frequency_;
 1027              		.loc 4 85 11 view .LVU289
 1028 0040 2DEE88AA 		vmul.f32	s20, s27, s16
 1029              	.LVL83:
  86:dsp/string.cpp ****     if(src_ratio >= 0.9999f)
 1030              		.loc 4 86 5 view .LVU290
 1031 0044 DFEDA77A 		vldr.32	s15, .L38+4
  87:dsp/string.cpp ****     {
  88:dsp/string.cpp ****         // When we are above 11.7 Hz, we make sure that the linear interpolator
  89:dsp/string.cpp ****         // does not get in the way.
  90:dsp/string.cpp ****         src_phase_ = 1.0f;
  91:dsp/string.cpp ****         src_ratio  = 1.0f;
  92:dsp/string.cpp ****     }
  93:dsp/string.cpp **** 
  94:dsp/string.cpp ****     float clamped_position = 0.5f - 0.98f * fabs(position_ - 0.5f);
 1032              		.loc 4 94 49 view .LVU291
 1033 0048 94ED047A 		vldr.32	s14, [r4, #16]
 1034              		.loc 4 94 11 view .LVU292
 1035 004c DFEDA66A 		vldr.32	s13, .L38+8
  86:dsp/string.cpp ****     if(src_ratio >= 0.9999f)
 1036              		.loc 4 86 5 view .LVU293
 1037 0050 B4EEE7AA 		vcmpe.f32	s20, s15
 1038              	.LBB334:
 1039              	.LBB335:
 1040              	.LBB336:
 1041              		.file 8 "../../stmlib/dsp/parameter_interpolator.h"
   1:../../stmlib/dsp/parameter_interpolator.h **** // Copyright 2015 Emilie Gillet.
   2:../../stmlib/dsp/parameter_interpolator.h **** //
   3:../../stmlib/dsp/parameter_interpolator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/parameter_interpolator.h **** //
   5:../../stmlib/dsp/parameter_interpolator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/parameter_interpolator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/parameter_interpolator.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/parameter_interpolator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/parameter_interpolator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/parameter_interpolator.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/parameter_interpolator.h **** // 
  12:../../stmlib/dsp/parameter_interpolator.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/parameter_interpolator.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/parameter_interpolator.h **** // 
  15:../../stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/parameter_interpolator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/parameter_interpolator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/parameter_interpolator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/parameter_interpolator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 50


  20:../../stmlib/dsp/parameter_interpolator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/parameter_interpolator.h **** // 
  23:../../stmlib/dsp/parameter_interpolator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/parameter_interpolator.h **** //
  25:../../stmlib/dsp/parameter_interpolator.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/parameter_interpolator.h **** //
  27:../../stmlib/dsp/parameter_interpolator.h **** // Linear interpolation of parameters in rendering loops.
  28:../../stmlib/dsp/parameter_interpolator.h **** 
  29:../../stmlib/dsp/parameter_interpolator.h **** #ifndef STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  30:../../stmlib/dsp/parameter_interpolator.h **** #define STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  31:../../stmlib/dsp/parameter_interpolator.h **** 
  32:../../stmlib/dsp/parameter_interpolator.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/parameter_interpolator.h **** 
  34:../../stmlib/dsp/parameter_interpolator.h **** namespace stmlib {
  35:../../stmlib/dsp/parameter_interpolator.h **** 
  36:../../stmlib/dsp/parameter_interpolator.h **** class ParameterInterpolator {
  37:../../stmlib/dsp/parameter_interpolator.h ****  public:
  38:../../stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator() { }
  39:../../stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, size_t size) {
  40:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
  41:../../stmlib/dsp/parameter_interpolator.h ****   }
  42:../../stmlib/dsp/parameter_interpolator.h **** 
  43:../../stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, float step) {
  44:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
  45:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
  46:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) * step;
  47:../../stmlib/dsp/parameter_interpolator.h ****   }
  48:../../stmlib/dsp/parameter_interpolator.h **** 
  49:../../stmlib/dsp/parameter_interpolator.h ****   ~ParameterInterpolator() {
  50:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
  51:../../stmlib/dsp/parameter_interpolator.h ****   }
  52:../../stmlib/dsp/parameter_interpolator.h ****   
  53:../../stmlib/dsp/parameter_interpolator.h ****   inline void Init(float* state, float new_value, size_t size) {
  54:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
  55:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1042              		.loc 8 55 14 view .LVU294
 1043 0054 94ED06CA 		vldr.32	s24, [r4, #24]
 1044              	.LBE336:
 1045              	.LBE335:
 1046              	.LBE334:
 1047              		.loc 4 94 49 view .LVU295
 1048 0058 F6EE007A 		vmov.f32	s15, #5.0e-1
  95:dsp/string.cpp **** 
  96:dsp/string.cpp ****     // Linearly interpolate all comb-related CV parameters for each sample.
  97:dsp/string.cpp ****     ParameterInterpolator delay_modulation(&delay_, delay, size);
  98:dsp/string.cpp ****     ParameterInterpolator position_modulation(
  99:dsp/string.cpp ****         &clamped_position_, clamped_position, size);
 100:dsp/string.cpp ****     ParameterInterpolator dispersion_modulation(
 101:dsp/string.cpp ****         &previous_dispersion_, dispersion_, size);
 102:dsp/string.cpp **** 
 103:dsp/string.cpp ****     // For damping/absorption, the interpolation is done in the filter code.
 104:dsp/string.cpp ****     float lf_damping = damping_ * (2.0f - damping_);
 1049              		.loc 4 104 24 view .LVU296
 1050 005c D4ED038A 		vldr.32	s17, [r4, #12]
 1051              	.LBB341:
 1052              	.LBB342:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 51


 1053              	.LBB343:
 1054              		.loc 8 55 14 view .LVU297
 1055 0060 D4ED05BA 		vldr.32	s23, [r4, #20]
 1056              	.LBE343:
 1057              	.LBE342:
 1058              	.LBE341:
  86:dsp/string.cpp ****     {
 1059              		.loc 4 86 5 view .LVU298
 1060 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 105:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1061              		.loc 4 105 42 view .LVU299
 1062 0068 9FEDA00A 		vldr.32	s0, .L38+12
  94:dsp/string.cpp **** 
 1063              		.loc 4 94 49 view .LVU300
 1064 006c 37EE677A 		vsub.f32	s14, s14, s15
 1065              	.LBB348:
 1066              	.LBB349:
 1067              	.LBB350:
 1068              		.loc 8 55 14 view .LVU301
 1069 0070 D4F81CA0 		ldr	r10, [r4, #28]	@ float
 1070              	.LBE350:
 1071              	.LBE349:
 1072              	.LBE348:
  90:dsp/string.cpp ****         src_ratio  = 1.0f;
 1073              		.loc 4 90 20 view .LVU302
 1074 0074 A4BF     		itt	ge
 1075 0076 C4ED0B9A 		vstrge.32	s19, [r4, #44]
 1076              	.LVL84:
  91:dsp/string.cpp ****     }
 1077              		.loc 4 91 20 view .LVU303
 1078 007a B7EE00AA 		vmovge.f32	s20, #1.0e+0
 1079              	.LVL85:
 1080              	.LBB353:
 1081              	.LBI353:
 1082              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 52


  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 53


  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 54


 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 55


 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 1083              		.loc 9 241 3 is_stmt 1 view .LVU304
 1084              	.LBB354:
 242:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 1085              		.loc 9 242 5 view .LVU305
 1086              		.loc 9 242 31 is_stmt 0 view .LVU306
 1087 007e B0EEC77A 		vabs.f32	s14, s14
 1088              	.LBE354:
 1089              	.LBE353:
  94:dsp/string.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 56


 1090              		.loc 4 94 11 view .LVU307
 1091 0082 E7EE667A 		vfms.f32	s15, s14, s13
 1092              	.LVL86:
 1093              	.LBB355:
 1094              	.LBI341:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1095              		.loc 8 39 3 is_stmt 1 view .LVU308
 1096              	.LBE355:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1097              		.loc 8 40 5 view .LVU309
 1098              	.LBB356:
 1099              	.LBB346:
 1100              	.LBI342:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1101              		.loc 8 53 15 view .LVU310
 1102              	.LBB344:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1103              		.loc 8 54 5 view .LVU311
 1104              		.loc 8 55 5 view .LVU312
  56:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1105              		.loc 8 56 5 view .LVU313
 1106              		.loc 8 56 41 is_stmt 0 view .LVU314
 1107 0086 07EE105A 		vmov	s14, r5	@ int
 1108 008a F8EE47CA 		vcvt.f32.u32	s25, s14
 1109              		.loc 8 56 29 view .LVU315
 1110 008e 38EE6B7A 		vsub.f32	s14, s16, s23
 1111              	.LBE344:
 1112              	.LBE346:
 1113              	.LBE356:
 1114              	.LBB357:
 1115              	.LBB339:
 1116              	.LBB337:
 1117 0092 77EECC7A 		vsub.f32	s15, s15, s24
 1118              	.LVL87:
 1119              		.loc 8 56 29 view .LVU316
 1120              	.LBE337:
 1121              	.LBE339:
 1122              	.LBE357:
 1123              	.LBB358:
 1124              	.LBB347:
 1125              	.LBB345:
 1126              		.loc 8 56 39 view .LVU317
 1127 0096 87EE2CBA 		vdiv.f32	s22, s14, s25
 1128              	.LVL88:
 1129              		.loc 8 56 39 view .LVU318
 1130              	.LBE345:
 1131              	.LBE347:
 1132              	.LBE358:
 1133              	.LBB359:
 1134              	.LBI334:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1135              		.loc 8 39 3 is_stmt 1 view .LVU319
 1136              	.LBE359:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1137              		.loc 8 40 5 view .LVU320
 1138              	.LBB360:
 1139              	.LBB340:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 57


 1140              	.LBI335:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1141              		.loc 8 53 15 view .LVU321
 1142              	.LBB338:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1143              		.loc 8 54 5 view .LVU322
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1144              		.loc 8 55 5 view .LVU323
 1145              		.loc 8 56 5 view .LVU324
 1146              		.loc 8 56 39 is_stmt 0 view .LVU325
 1147 009a C7EEACAA 		vdiv.f32	s21, s15, s25
 1148              	.LVL89:
 1149              		.loc 8 56 39 view .LVU326
 1150              	.LBE338:
 1151              	.LBE340:
 1152              	.LBE360:
 1153              	.LBB361:
 1154              	.LBI348:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1155              		.loc 8 39 3 is_stmt 1 view .LVU327
 1156              	.LBE361:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1157              		.loc 8 40 5 view .LVU328
 1158              	.LBB362:
 1159              	.LBB352:
 1160              	.LBI349:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1161              		.loc 8 53 15 view .LVU329
 1162              	.LBB351:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1163              		.loc 8 54 5 view .LVU330
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1164              		.loc 8 55 5 view .LVU331
 1165              		.loc 8 56 5 view .LVU332
 1166              		.loc 8 56 5 is_stmt 0 view .LVU333
 1167              	.LBE351:
 1168              	.LBE352:
 1169              	.LBE362:
 104:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1170              		.loc 4 104 41 view .LVU334
 1171 009e F0EE007A 		vmov.f32	s15, #2.0e+0
 1172 00a2 77EEE87A 		vsub.f32	s15, s15, s17
 104:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1173              		.loc 4 104 11 view .LVU335
 1174 00a6 67EEA87A 		vmul.f32	s15, s15, s17
 1175              	.LVL90:
 1176              		.loc 4 105 42 view .LVU336
 1177 00aa 27EE800A 		vmul.f32	s0, s15, s0
 1178 00ae FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1179              	.LVL91:
 106:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1180              		.loc 4 106 40 view .LVU337
 1181 00b2 DFED8F7A 		vldr.32	s15, .L38+16
 1182 00b6 28EE278A 		vmul.f32	s16, s16, s15
 1183              	.LVL92:
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1184              		.loc 4 105 24 view .LVU338
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 58


 1185 00ba DFED8E7A 		vldr.32	s15, .L38+20
 1186 00be 20EE270A 		vmul.f32	s0, s0, s15
 1187              	.LVL93:
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1188              		.loc 4 105 11 view .LVU339
 1189 00c2 DFED8D7A 		vldr.32	s15, .L38+24
 1190              		.loc 4 106 48 view .LVU340
 1191 00c6 88EE0A7A 		vdiv.f32	s14, s16, s20
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1192              		.loc 4 105 11 view .LVU341
 1193 00ca 60EE277A 		vmul.f32	s15, s0, s15
 1194              	.LVL94:
 1195              		.loc 4 106 60 view .LVU342
 1196 00ce 87EE270A 		vdiv.f32	s0, s14, s15
 1197              	.LVL95:
 1198              	.LBB363:
 1199              	.LBI363:
 254:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1200              		.loc 6 254 5 is_stmt 1 view .LVU343
 1201              	.LBB364:
 259:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1202              		.loc 6 259 7 is_stmt 0 view .LVU344
 1203 00d2 DFED8A7A 		vldr.32	s15, .L38+28
 1204              	.LVL96:
 260:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1205              		.loc 6 260 9 view .LVU345
 1206 00d6 B4EE670A 		vcmp.f32	s0, s15
 1207 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1208              	.LBE364:
 1209              	.LBE363:
 107:dsp/string.cpp ****     float damping_coefficient = SemitonesToRatio(rt60_base_2_12);
 1210              		.loc 4 107 49 view .LVU346
 1211 00de 48BF     		it	mi
 1212 00e0 B0EE670A 		vmovmi.f32	s0, s15
 1213 00e4 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1214              	.LVL97:
 108:dsp/string.cpp ****     float brightness          = brightness_ * brightness_;
 109:dsp/string.cpp ****     float noise_filter        = SemitonesToRatio((brightness_ - 1.0f) * 48.0f);
 110:dsp/string.cpp ****     float damping_cutoff      = min(24.0f + damping_ * damping_ * 48.0f
 1215              		.loc 4 110 43 view .LVU347
 1216 00e8 F3EE087A 		vmov.f32	s15, #2.4e+1
 1217              		.loc 4 110 54 view .LVU348
 1218 00ec 68EEA86A 		vmul.f32	s13, s17, s17
 1219              		.loc 4 110 43 view .LVU349
 1220 00f0 9FED837A 		vldr.32	s14, .L38+32
 108:dsp/string.cpp ****     float brightness          = brightness_ * brightness_;
 1221              		.loc 4 108 33 view .LVU350
 1222 00f4 94ED028A 		vldr.32	s16, [r4, #8]
 107:dsp/string.cpp ****     float damping_coefficient = SemitonesToRatio(rt60_base_2_12);
 1223              		.loc 4 107 49 view .LVU351
 1224 00f8 B0EE409A 		vmov.f32	s18, s0
 1225              	.LVL98:
 1226              		.loc 4 110 43 view .LVU352
 1227 00fc B0EE67DA 		vmov.f32	s26, s15
 108:dsp/string.cpp ****     float brightness          = brightness_ * brightness_;
 1228              		.loc 4 108 11 view .LVU353
 1229 0100 28EE088A 		vmul.f32	s16, s16, s16
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 59


 1230              	.LVL99:
 1231              		.loc 4 110 43 view .LVU354
 1232 0104 A6EE87DA 		vfma.f32	s26, s13, s14
 111:dsp/string.cpp ****                                    + brightness_ * brightness_ * 24.0f,
 1233              		.loc 4 111 36 view .LVU355
 1234 0108 A8EE27DA 		vfma.f32	s26, s16, s15
 1235              	.LVL100:
 1236              	.LBB365:
 1237              	.LBI365:
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1238              		.loc 6 230 5 is_stmt 1 view .LVU356
 1239              	.LBB366:
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1240              		.loc 6 235 7 is_stmt 0 view .LVU357
 1241 010c DFED7D7A 		vldr.32	s15, .L38+36
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1242              		.loc 6 236 9 view .LVU358
 1243 0110 B4EE67DA 		vcmp.f32	s26, s15
 1244 0114 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1245 0118 37FE8DDA 		vselgt.f32	s26, s15, s26
 1246              	.LVL101:
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1247              		.loc 6 236 9 view .LVU359
 1248              	.LBE366:
 1249              	.LBE365:
 112:dsp/string.cpp ****                                84.0f);
 113:dsp/string.cpp ****     float damping_f
 114:dsp/string.cpp ****         = min(frequency_ * SemitonesToRatio(damping_cutoff), 0.499f);
 1250              		.loc 4 114 44 view .LVU360
 1251 011c B0EE4D0A 		vmov.f32	s0, s26
 1252              	.LVL102:
 1253              		.loc 4 114 44 view .LVU361
 1254 0120 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1255              	.LVL103:
 1256              		.loc 4 114 26 view .LVU362
 1257 0124 2DEE800A 		vmul.f32	s0, s27, s0
 1258              	.LVL104:
 1259              	.LBB367:
 1260              	.LBI367:
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1261              		.loc 6 230 5 is_stmt 1 view .LVU363
 1262              	.LBB368:
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1263              		.loc 6 235 7 is_stmt 0 view .LVU364
 1264 0128 DFED777A 		vldr.32	s15, .L38+40
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1265              		.loc 6 236 9 view .LVU365
 1266 012c B4EE670A 		vcmp.f32	s0, s15
 1267 0130 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1268 0134 37FE800A 		vselgt.f32	s0, s15, s0
 1269              	.LVL105:
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1270              		.loc 6 236 9 view .LVU366
 1271              	.LBE368:
 1272              	.LBE367:
 1273              	.LBB369:
 115:dsp/string.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 60


 116:dsp/string.cpp ****     // Crossfade to infinite decay.
 117:dsp/string.cpp ****     if(damping_ >= 0.95f)
 1274              		.loc 4 117 5 view .LVU367
 1275 0138 DFED747A 		vldr.32	s15, .L38+44
 1276 013c F4EEE78A 		vcmpe.f32	s17, s15
 1277 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 0144 19DB     		blt	.L23
 1279              	.LBB370:
 118:dsp/string.cpp ****     {
 119:dsp/string.cpp ****         float to_infinite = 20.0f * (damping_ - 0.95f);
 1280              		.loc 4 119 47 view .LVU368
 1281 0146 78EEE78A 		vsub.f32	s17, s17, s15
 1282              	.LVL106:
 1283              		.loc 4 119 15 view .LVU369
 1284 014a F3EE047A 		vmov.f32	s15, #2.0e+1
 1285 014e 68EEA78A 		vmul.f32	s17, s17, s15
 1286              	.LVL107:
 120:dsp/string.cpp ****         damping_coefficient += to_infinite * (1.0f - damping_coefficient);
 1287              		.loc 4 120 52 view .LVU370
 1288 0152 79EEC97A 		vsub.f32	s15, s19, s18
 1289              		.loc 4 120 29 view .LVU371
 1290 0156 A7EEA89A 		vfma.f32	s18, s15, s17
 1291              	.LVL108:
 121:dsp/string.cpp ****         brightness += to_infinite * (1.0f - brightness);
 1292              		.loc 4 121 43 view .LVU372
 1293 015a 79EEC87A 		vsub.f32	s15, s19, s16
 1294              		.loc 4 121 20 view .LVU373
 1295 015e A7EEA88A 		vfma.f32	s16, s15, s17
 1296              	.LVL109:
 122:dsp/string.cpp ****         damping_f += to_infinite * (0.4999f - damping_f);
 1297              		.loc 4 122 45 view .LVU374
 1298 0162 DFED6B7A 		vldr.32	s15, .L38+48
 1299 0166 77EEC07A 		vsub.f32	s15, s15, s0
 1300              		.loc 4 122 19 view .LVU375
 1301 016a A7EEA80A 		vfma.f32	s0, s15, s17
 1302              	.LVL110:
 123:dsp/string.cpp ****         damping_cutoff += to_infinite * (128.0f - damping_cutoff);
 1303              		.loc 4 123 49 view .LVU376
 1304 016e DFED697A 		vldr.32	s15, .L38+52
 1305 0172 77EECD7A 		vsub.f32	s15, s15, s26
 1306              		.loc 4 123 24 view .LVU377
 1307 0176 A7EEA8DA 		vfma.f32	s26, s15, s17
 1308              	.LVL111:
 1309              	.L23:
 1310              		.loc 4 123 24 view .LVU378
 1311              	.LBE370:
 1312              	.LBE369:
 124:dsp/string.cpp ****     }
 125:dsp/string.cpp **** 
 126:dsp/string.cpp ****     fir_damping_filter_.Configure(damping_coefficient, brightness, size);
 1313              		.loc 4 126 34 view .LVU379
 1314 017a 04F54159 		add	r9, r4, #12352
 1315 017e 04F54050 		add	r0, r4, #12288
 1316 0182 09F11409 		add	r9, r9, #20
 1317              	.LVL112:
 1318              	.LBB371:
 1319              	.LBI371:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 61


  61:./dsp/string.h ****     {
 1320              		.loc 2 61 17 is_stmt 1 view .LVU380
 1321              	.LBE371:
  63:./dsp/string.h ****         {
 1322              		.loc 2 63 9 view .LVU381
 1323              	.LBB376:
 1324              	.LBB372:
 1325 0186 002D     		cmp	r5, #0
 1326 0188 51D1     		bne	.L25
  65:./dsp/string.h ****             brightness_           = brightness;
 1327              		.loc 2 65 13 view .LVU382
  67:./dsp/string.h ****             brightness_increment_ = 0.0f;
 1328              		.loc 2 67 35 is_stmt 0 view .LVU383
 1329 018a 0023     		movs	r3, #0
  65:./dsp/string.h ****             brightness_           = brightness;
 1330              		.loc 2 65 35 view .LVU384
 1331 018c 80ED199A 		vstr.32	s18, [r0, #100]
  66:./dsp/string.h ****             damping_increment_    = 0.0f;
 1332              		.loc 2 66 13 is_stmt 1 view .LVU385
  66:./dsp/string.h ****             damping_increment_    = 0.0f;
 1333              		.loc 2 66 35 is_stmt 0 view .LVU386
 1334 0190 80ED178A 		vstr.32	s16, [r0, #92]
  67:./dsp/string.h ****             brightness_increment_ = 0.0f;
 1335              		.loc 2 67 13 is_stmt 1 view .LVU387
  67:./dsp/string.h ****             brightness_increment_ = 0.0f;
 1336              		.loc 2 67 35 is_stmt 0 view .LVU388
 1337 0194 8366     		str	r3, [r0, #104]	@ float
  68:./dsp/string.h ****         }
 1338              		.loc 2 68 13 is_stmt 1 view .LVU389
  68:./dsp/string.h ****         }
 1339              		.loc 2 68 35 is_stmt 0 view .LVU390
 1340 0196 0366     		str	r3, [r0, #96]	@ float
 1341              	.LVL113:
 1342              	.L26:
  68:./dsp/string.h ****         }
 1343              		.loc 2 68 35 view .LVU391
 1344              	.LBE372:
 1345              	.LBE376:
 127:dsp/string.cpp ****     iir_damping_filter_.set_f_q<FREQUENCY_ACCURATE>(damping_f, 0.5f);
 1346              		.loc 4 127 52 view .LVU392
 1347 0198 04F5415B 		add	fp, r4, #12352
 1348 019c F6EE000A 		vmov.f32	s1, #5.0e-1
 1349 01a0 0BF12C0B 		add	fp, fp, #44
 1350 01a4 5846     		mov	r0, fp
 1351 01a6 FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 1352              	.LVL114:
 128:dsp/string.cpp ****     ParameterInterpolator damping_compensation_modulation(
 129:dsp/string.cpp ****         &previous_damping_compensation_,
 130:dsp/string.cpp ****         1.0f - Interpolate(lut_svf_shift, damping_cutoff, 1.0f),
 1353              		.loc 4 130 27 view .LVU393
 1354 01aa F7EE000A 		vmov.f32	s1, #1.0e+0
 1355 01ae B0EE4D0A 		vmov.f32	s0, s26
 1356 01b2 5948     		ldr	r0, .L38+56
 1357 01b4 FFF7FEFF 		bl	_ZN6stmlib11InterpolateEPKfff
 1358              	.LVL115:
 1359              	.LBB377:
 1360              	.LBI377:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 62


  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1361              		.loc 8 39 3 is_stmt 1 view .LVU394
 1362              	.LBE377:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1363              		.loc 8 40 5 view .LVU395
 1364              	.LBB382:
 1365              	.LBB378:
 1366              	.LBI378:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1367              		.loc 8 53 15 view .LVU396
 1368              	.LBB379:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1369              		.loc 8 54 5 view .LVU397
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1370              		.loc 8 55 5 view .LVU398
 1371              	.LBE379:
 1372              	.LBE378:
 1373              	.LBE382:
 128:dsp/string.cpp ****         &previous_damping_compensation_,
 1374              		.loc 4 128 27 is_stmt 0 view .LVU399
 1375 01b8 39EEC00A 		vsub.f32	s0, s19, s0
 1376              	.LVL116:
 1377              	.LBB383:
 1378              	.LBB381:
 1379              	.LBB380:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1380              		.loc 8 55 14 view .LVU400
 1381 01bc 94ED088A 		vldr.32	s16, [r4, #32]
 1382              	.LVL117:
 1383              		.loc 8 56 5 is_stmt 1 view .LVU401
 1384              		.loc 8 56 29 is_stmt 0 view .LVU402
 1385 01c0 30EE480A 		vsub.f32	s0, s0, s16
 1386              		.loc 8 56 39 view .LVU403
 1387 01c4 C0EE2C8A 		vdiv.f32	s17, s0, s25
 1388              	.LVL118:
 1389              	.L30:
 1390              		.loc 8 56 39 view .LVU404
 1391              	.LBE380:
 1392              	.LBE381:
 1393              	.LBE383:
 131:dsp/string.cpp ****         size);
 132:dsp/string.cpp **** 
 133:dsp/string.cpp ****     while(size--)
 1394              		.loc 4 133 5 is_stmt 1 view .LVU405
 1395              		.loc 4 133 5 is_stmt 0 view .LVU406
 1396 01c8 002D     		cmp	r5, #0
 1397 01ca 7CD0     		beq	.L27
 1398              	.LBB384:
 134:dsp/string.cpp ****     {
 135:dsp/string.cpp ****         src_phase_ += src_ratio;
 1399              		.loc 4 135 20 view .LVU407
 1400 01cc D4ED0B7A 		vldr.32	s15, [r4, #44]
 1401 01d0 7AEE277A 		vadd.f32	s15, s20, s15
 1402              	.LBB385:
 136:dsp/string.cpp ****         if(src_phase_ > 1.0f)
 1403              		.loc 4 136 9 view .LVU408
 1404 01d4 F4EEE97A 		vcmpe.f32	s15, s19
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 63


 1405 01d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1406 01dc 3ADC     		bgt	.L28
 1407              	.LBE385:
 135:dsp/string.cpp ****         if(src_phase_ > 1.0f)
 1408              		.loc 4 135 20 view .LVU409
 1409 01de C4ED0B7A 		vstr.32	s15, [r4, #44]
 1410              	.L29:
 137:dsp/string.cpp ****         {
 138:dsp/string.cpp ****             src_phase_ -= 1.0f;
 139:dsp/string.cpp **** 
 140:dsp/string.cpp ****             float delay      = delay_modulation.Next();
 141:dsp/string.cpp ****             float comb_delay = delay * position_modulation.Next();
 142:dsp/string.cpp **** 
 143:dsp/string.cpp **** #ifndef MIC_W
 144:dsp/string.cpp ****             delay *= damping_compensation_modulation.Next(); // IIR delay.
 145:dsp/string.cpp **** #endif                                                       // MIC_W
 146:dsp/string.cpp ****             delay -= 1.0f;                                   // FIR delay.
 147:dsp/string.cpp **** 
 148:dsp/string.cpp ****             float s = 0.0f;
 149:dsp/string.cpp **** 
 150:dsp/string.cpp ****             if(enable_dispersion)
 151:dsp/string.cpp ****             {
 152:dsp/string.cpp ****                 float noise = 2.0f * Random::GetFloat() - 1.0f;
 153:dsp/string.cpp ****                 noise *= 1.0f / (0.2f + noise_filter);
 154:dsp/string.cpp ****                 dispersion_noise_ += noise_filter * (noise - dispersion_noise_);
 155:dsp/string.cpp **** 
 156:dsp/string.cpp ****                 float dispersion = dispersion_modulation.Next();
 157:dsp/string.cpp ****                 float stretch_point
 158:dsp/string.cpp ****                     = dispersion <= 0.0f
 159:dsp/string.cpp ****                           ? 0.0f
 160:dsp/string.cpp ****                           : dispersion * (2.0f - dispersion) * 0.475f;
 161:dsp/string.cpp ****                 float noise_amount
 162:dsp/string.cpp ****                     = dispersion > 0.75f ? 4.0f * (dispersion - 0.75f) : 0.0f;
 163:dsp/string.cpp ****                 float bridge_curving = dispersion < 0.0f ? -dispersion : 0.0f;
 164:dsp/string.cpp **** 
 165:dsp/string.cpp ****                 noise_amount             = noise_amount * noise_amount * 0.025f;
 166:dsp/string.cpp ****                 float ac_blocking_amount = bridge_curving;
 167:dsp/string.cpp **** 
 168:dsp/string.cpp ****                 bridge_curving = bridge_curving * bridge_curving * 0.01f;
 169:dsp/string.cpp ****                 float ap_gain
 170:dsp/string.cpp ****                     = -0.618f * dispersion / (0.15f + fabs(dispersion));
 171:dsp/string.cpp **** 
 172:dsp/string.cpp ****                 float delay_fm = 1.0f;
 173:dsp/string.cpp ****                 delay_fm += dispersion_noise_ * noise_amount;
 174:dsp/string.cpp ****                 delay_fm -= curved_bridge_ * bridge_curving;
 175:dsp/string.cpp ****                 delay *= delay_fm;
 176:dsp/string.cpp **** 
 177:dsp/string.cpp ****                 float ap_delay   = delay * stretch_point;
 178:dsp/string.cpp ****                 float main_delay = delay - ap_delay;
 179:dsp/string.cpp ****                 if(ap_delay >= 4.0f && main_delay >= 4.0f)
 180:dsp/string.cpp ****                 {
 181:dsp/string.cpp ****                     s = string_.ReadHermite(main_delay);
 182:dsp/string.cpp ****                     s = stretch_.Allpass(s, ap_delay, ap_gain);
 183:dsp/string.cpp ****                 }
 184:dsp/string.cpp ****                 else
 185:dsp/string.cpp ****                 {
 186:dsp/string.cpp ****                     s = string_.ReadHermite(delay);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 64


 187:dsp/string.cpp ****                 }
 188:dsp/string.cpp ****                 float s_ac = s;
 189:dsp/string.cpp ****                 dc_blocker_.Process(&s_ac, 1);
 190:dsp/string.cpp ****                 s += ac_blocking_amount * (s_ac - s);
 191:dsp/string.cpp **** 
 192:dsp/string.cpp ****                 float value    = fabs(s) - 0.025f;
 193:dsp/string.cpp ****                 float sign     = s > 0.0f ? 1.0f : -1.5f;
 194:dsp/string.cpp ****                 curved_bridge_ = (fabs(value) + value) * sign;
 195:dsp/string.cpp ****             }
 196:dsp/string.cpp ****             else
 197:dsp/string.cpp ****             {
 198:dsp/string.cpp ****                 s = string_.ReadHermite(delay);
 199:dsp/string.cpp ****             }
 200:dsp/string.cpp **** 
 201:dsp/string.cpp ****             s += *in; // When f0 < 11.7 Hz, causes ugly bitcrushing on the input!
 202:dsp/string.cpp ****             s = fir_damping_filter_.Process(s);
 203:dsp/string.cpp **** #ifndef MIC_W
 204:dsp/string.cpp ****             s = iir_damping_filter_.Process<FILTER_MODE_LOW_PASS>(s);
 205:dsp/string.cpp **** #endif // MIC_W
 206:dsp/string.cpp ****             string_.Write(s);
 207:dsp/string.cpp **** 
 208:dsp/string.cpp ****             out_sample_[1] = out_sample_[0];
 209:dsp/string.cpp ****             aux_sample_[1] = aux_sample_[0];
 210:dsp/string.cpp **** 
 211:dsp/string.cpp ****             out_sample_[0] = s;
 212:dsp/string.cpp ****             aux_sample_[0] = string_.Read(comb_delay);
 213:dsp/string.cpp ****         }
 214:dsp/string.cpp ****         *out++ += Crossfade(out_sample_[1], out_sample_[0], src_phase_);
 1411              		.loc 4 214 28 view .LVU410
 1412 01e2 D4ED0D7A 		vldr.32	s15, [r4, #52]
 1413              	.LVL119:
 1414              	.LBB409:
 1415              	.LBI409:
  50:../../stmlib/dsp/dsp.h **** 
  51:../../stmlib/dsp/dsp.h **** 
  52:../../stmlib/dsp/dsp.h **** inline float InterpolateHermite(const float* table, float index, float size) {
  53:../../stmlib/dsp/dsp.h ****   index *= size;
  54:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  55:../../stmlib/dsp/dsp.h ****   const float xm1 = table[index_integral - 1];
  56:../../stmlib/dsp/dsp.h ****   const float x0 = table[index_integral + 0];
  57:../../stmlib/dsp/dsp.h ****   const float x1 = table[index_integral + 1];
  58:../../stmlib/dsp/dsp.h ****   const float x2 = table[index_integral + 2];
  59:../../stmlib/dsp/dsp.h ****   const float c = (x1 - xm1) * 0.5f;
  60:../../stmlib/dsp/dsp.h ****   const float v = x0 - x1;
  61:../../stmlib/dsp/dsp.h ****   const float w = c + v;
  62:../../stmlib/dsp/dsp.h ****   const float a = w + v + (x2 - x0) * 0.5f;
  63:../../stmlib/dsp/dsp.h ****   const float b_neg = w + a;
  64:../../stmlib/dsp/dsp.h ****   const float f = index_fractional;
  65:../../stmlib/dsp/dsp.h ****   return (((a * f) - b_neg) * f + c) * f + x0;
  66:../../stmlib/dsp/dsp.h **** }
  67:../../stmlib/dsp/dsp.h **** 
  68:../../stmlib/dsp/dsp.h **** inline float InterpolateWrap(const float* table, float index, float size) {
  69:../../stmlib/dsp/dsp.h ****   index -= static_cast<float>(static_cast<int32_t>(index));
  70:../../stmlib/dsp/dsp.h ****   index *= size;
  71:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  72:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
  73:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 65


  74:../../stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  75:../../stmlib/dsp/dsp.h **** }
  76:../../stmlib/dsp/dsp.h **** 
  77:../../stmlib/dsp/dsp.h **** inline float SmoothStep(float value) {
  78:../../stmlib/dsp/dsp.h ****   return value * value * (3.0f - 2.0f * value);
  79:../../stmlib/dsp/dsp.h **** }
  80:../../stmlib/dsp/dsp.h **** 
  81:../../stmlib/dsp/dsp.h **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in) - out);
  82:../../stmlib/dsp/dsp.h **** #define SLOPE(out, in, positive, negative) { \
  83:../../stmlib/dsp/dsp.h ****   float error = (in) - out; \
  84:../../stmlib/dsp/dsp.h ****   out += (error > 0 ? positive : negative) * error; \
  85:../../stmlib/dsp/dsp.h **** }
  86:../../stmlib/dsp/dsp.h **** #define SLEW(out, in, delta) { \
  87:../../stmlib/dsp/dsp.h ****   float error = (in) - out; \
  88:../../stmlib/dsp/dsp.h ****   float d = (delta); \
  89:../../stmlib/dsp/dsp.h ****   if (error > d) { \
  90:../../stmlib/dsp/dsp.h ****     error = d; \
  91:../../stmlib/dsp/dsp.h ****   } else if (error < -d) { \
  92:../../stmlib/dsp/dsp.h ****     error = -d; \
  93:../../stmlib/dsp/dsp.h ****   } \
  94:../../stmlib/dsp/dsp.h ****   out += error; \
  95:../../stmlib/dsp/dsp.h **** }
  96:../../stmlib/dsp/dsp.h **** 
  97:../../stmlib/dsp/dsp.h **** inline float Crossfade(float a, float b, float fade) {
 1416              		.loc 1 97 14 is_stmt 1 view .LVU411
 1417              	.LBB410:
  98:../../stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
 1418              		.loc 1 98 3 view .LVU412
 1419              	.LBE410:
 1420              	.LBE409:
 215:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 216:dsp/string.cpp ****         in++;
 1421              		.loc 4 216 9 is_stmt 0 view .LVU413
 1422 01e6 0436     		adds	r6, r6, #4
 1423              	.LVL120:
 1424              	.LBB412:
 1425              	.LBB411:
 1426              		.loc 1 98 17 view .LVU414
 1427 01e8 94ED0C7A 		vldr.32	s14, [r4, #48]
 1428 01ec 013D     		subs	r5, r5, #1
 1429              	.LVL121:
 1430              		.loc 1 98 24 view .LVU415
 1431 01ee D4ED0B6A 		vldr.32	s13, [r4, #44]
 1432              		.loc 1 98 17 view .LVU416
 1433 01f2 37EE677A 		vsub.f32	s14, s14, s15
 1434              		.loc 1 98 24 view .LVU417
 1435 01f6 E6EE877A 		vfma.f32	s15, s13, s14
 1436              	.LVL122:
 1437              		.loc 1 98 24 view .LVU418
 1438              	.LBE411:
 1439              	.LBE412:
 214:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 1440              		.loc 4 214 16 view .LVU419
 1441 01fa B8EC017A 		vldmia.32	r8!, {s14}
 1442              	.LVL123:
 214:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 1443              		.loc 4 214 16 view .LVU420
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 66


 1444 01fe 77EE277A 		vadd.f32	s15, s14, s15
 1445 0202 48ED017A 		vstr.32	s15, [r8, #-4]
 215:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 1446              		.loc 4 215 28 view .LVU421
 1447 0206 D4ED0F7A 		vldr.32	s15, [r4, #60]
 1448              	.LVL124:
 1449              	.LBB413:
 1450              	.LBI413:
  97:../../stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
 1451              		.loc 1 97 14 is_stmt 1 view .LVU422
 1452              	.LBB414:
 1453              		.loc 1 98 3 view .LVU423
 1454              		.loc 1 98 17 is_stmt 0 view .LVU424
 1455 020a 94ED0E7A 		vldr.32	s14, [r4, #56]
 1456              		.loc 1 98 24 view .LVU425
 1457 020e D4ED0B6A 		vldr.32	s13, [r4, #44]
 1458              		.loc 1 98 17 view .LVU426
 1459 0212 37EE677A 		vsub.f32	s14, s14, s15
 1460              		.loc 1 98 24 view .LVU427
 1461 0216 E6EE877A 		vfma.f32	s15, s13, s14
 1462              	.LVL125:
 1463              		.loc 1 98 24 view .LVU428
 1464              	.LBE414:
 1465              	.LBE413:
 215:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 1466              		.loc 4 215 16 view .LVU429
 1467 021a B7EC017A 		vldmia.32	r7!, {s14}
 1468              	.LVL126:
 215:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 1469              		.loc 4 215 16 view .LVU430
 1470 021e 77EE277A 		vadd.f32	s15, s14, s15
 1471 0222 47ED017A 		vstr.32	s15, [r7, #-4]
 1472              	.LBE384:
 133:dsp/string.cpp ****     {
 1473              		.loc 4 133 5 view .LVU431
 1474 0226 CFE7     		b	.L30
 1475              	.LVL127:
 1476              	.L31:
  80:dsp/string.cpp **** 
 1477              		.loc 4 80 5 view .LVU432
 1478 0228 B0EE678A 		vmov.f32	s16, s15
 1479              	.LVL128:
  80:dsp/string.cpp **** 
 1480              		.loc 4 80 5 view .LVU433
 1481 022c 08E7     		b	.L16
 1482              	.LVL129:
 1483              	.L25:
 1484              	.LBB416:
 1485              	.LBB373:
 1486              	.LBI373:
  61:./dsp/string.h ****     {
 1487              		.loc 2 61 17 is_stmt 1 view .LVU434
 1488              	.LBB374:
 1489              	.LBB375:
  72:./dsp/string.h ****             damping_increment_    = (damping - damping_) * step;
 1490              		.loc 2 72 13 view .LVU435
  72:./dsp/string.h ****             damping_increment_    = (damping - damping_) * step;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 67


 1491              		.loc 2 72 19 is_stmt 0 view .LVU436
 1492 022e C9EEAC7A 		vdiv.f32	s15, s19, s25
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 1493              		.loc 2 73 13 is_stmt 1 view .LVU437
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 1494              		.loc 2 73 46 is_stmt 0 view .LVU438
 1495 0232 90ED197A 		vldr.32	s14, [r0, #100]
 1496 0236 39EE479A 		vsub.f32	s18, s18, s14
 1497              	.LVL130:
  74:./dsp/string.h ****         }
 1498              		.loc 2 74 49 view .LVU439
 1499 023a 90ED177A 		vldr.32	s14, [r0, #92]
 1500 023e 38EE478A 		vsub.f32	s16, s16, s14
 1501              	.LVL131:
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 1502              		.loc 2 73 58 view .LVU440
 1503 0242 29EE279A 		vmul.f32	s18, s18, s15
  74:./dsp/string.h ****         }
 1504              		.loc 2 74 64 view .LVU441
 1505 0246 28EE278A 		vmul.f32	s16, s16, s15
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 1506              		.loc 2 73 35 view .LVU442
 1507 024a 80ED1A9A 		vstr.32	s18, [r0, #104]
  74:./dsp/string.h ****         }
 1508              		.loc 2 74 13 is_stmt 1 view .LVU443
  74:./dsp/string.h ****         }
 1509              		.loc 2 74 35 is_stmt 0 view .LVU444
 1510 024e 80ED188A 		vstr.32	s16, [r0, #96]
 1511              	.LBE375:
  76:./dsp/string.h **** 
 1512              		.loc 2 76 5 view .LVU445
 1513 0252 A1E7     		b	.L26
 1514              	.LVL132:
 1515              	.L28:
  76:./dsp/string.h **** 
 1516              		.loc 2 76 5 view .LVU446
 1517              	.LBE374:
 1518              	.LBE373:
 1519              	.LBE416:
 1520              	.LBB417:
 1521              	.LBB415:
 1522              	.LBB386:
 138:dsp/string.cpp **** 
 1523              		.loc 4 138 24 view .LVU447
 1524 0254 77EEE97A 		vsub.f32	s15, s15, s19
 1525              	.LBB387:
 198:dsp/string.cpp ****             }
 1526              		.loc 4 198 40 view .LVU448
 1527 0258 04F14402 		add	r2, r4, #68
 1528              	.LBE387:
 1529              	.LBB388:
 1530              	.LBB389:
  57:../../stmlib/dsp/parameter_interpolator.h ****   }
  58:../../stmlib/dsp/parameter_interpolator.h **** 
  59:../../stmlib/dsp/parameter_interpolator.h ****   inline float Next() {
  60:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1531              		.loc 8 60 12 view .LVU449
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 68


 1532 025c 7BEE8BBA 		vadd.f32	s23, s23, s22
 1533              	.LVL133:
 1534              		.loc 8 60 12 view .LVU450
 1535              	.LBE389:
 1536              	.LBE388:
 1537              	.LBB391:
 1538              	.LBB392:
 1539 0260 38EE288A 		vadd.f32	s16, s16, s17
 1540              	.LVL134:
 1541              		.loc 8 60 12 view .LVU451
 1542              	.LBE392:
 1543              	.LBE391:
 1544              	.LBB394:
 198:dsp/string.cpp ****             }
 1545              		.loc 4 198 40 view .LVU452
 1546 0264 1046     		mov	r0, r2
 1547 0266 BFEE000A 		vmov.f32	s0, #-1.0e+0
 1548              	.LBE394:
 138:dsp/string.cpp **** 
 1549              		.loc 4 138 24 view .LVU453
 1550 026a C4ED0B7A 		vstr.32	s15, [r4, #44]
 1551              	.LVL135:
 1552              	.LBB395:
 1553              	.LBI388:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1554              		.loc 8 59 16 is_stmt 1 view .LVU454
 1555              	.LBB390:
 1556              		.loc 8 60 5 view .LVU455
  61:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1557              		.loc 8 61 5 view .LVU456
 1558              		.loc 8 61 5 is_stmt 0 view .LVU457
 1559              	.LBE390:
 1560              	.LBE395:
 1561              	.LBB396:
 1562              	.LBI396:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1563              		.loc 8 59 16 is_stmt 1 view .LVU458
 1564              	.LBB397:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1565              		.loc 8 60 5 view .LVU459
 1566              	.LBE397:
 1567              	.LBE396:
 1568              	.LBB399:
 198:dsp/string.cpp ****             }
 1569              		.loc 4 198 40 is_stmt 0 view .LVU460
 1570 026e 0192     		str	r2, [sp, #4]
 1571              	.LBE399:
 1572              	.LBB400:
 1573              	.LBB398:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1574              		.loc 8 60 12 view .LVU461
 1575 0270 3CEE2ACA 		vadd.f32	s24, s24, s21
 1576              	.LVL136:
 1577              		.loc 8 61 5 is_stmt 1 view .LVU462
 1578              		.loc 8 61 5 is_stmt 0 view .LVU463
 1579              	.LBE398:
 1580              	.LBE400:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 69


 1581              	.LBB401:
 198:dsp/string.cpp ****             }
 1582              		.loc 4 198 40 view .LVU464
 1583 0274 A8EE2B0A 		vfma.f32	s0, s16, s23
 1584 0278 FFF7FEFF 		bl	_ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf
 1585              	.LVL137:
 1586              	.LBE401:
 201:dsp/string.cpp ****             s = fir_damping_filter_.Process(s);
 1587              		.loc 4 201 15 view .LVU465
 1588 027c D6ED007A 		vldr.32	s15, [r6]
 202:dsp/string.cpp **** #ifndef MIC_W
 1589              		.loc 4 202 44 view .LVU466
 1590 0280 4846     		mov	r0, r9
 141:dsp/string.cpp **** 
 1591              		.loc 4 141 19 view .LVU467
 1592 0282 2CEE2B9A 		vmul.f32	s18, s24, s23
 1593              	.LVL138:
 1594              	.LBB402:
 1595              	.LBI391:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1596              		.loc 8 59 16 is_stmt 1 view .LVU468
 1597              	.LBB393:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1598              		.loc 8 60 5 view .LVU469
 1599              		.loc 8 61 5 view .LVU470
 1600              		.loc 8 61 5 is_stmt 0 view .LVU471
 1601              	.LBE393:
 1602              	.LBE402:
 202:dsp/string.cpp **** #ifndef MIC_W
 1603              		.loc 4 202 44 view .LVU472
 1604 0286 30EE270A 		vadd.f32	s0, s0, s15
 1605              	.LVL139:
 202:dsp/string.cpp **** #ifndef MIC_W
 1606              		.loc 4 202 44 view .LVU473
 1607 028a FFF7FEFF 		bl	_ZN5torus13DampingFilter7ProcessEf
 1608              	.LVL140:
 204:dsp/string.cpp **** #endif // MIC_W
 1609              		.loc 4 204 66 view .LVU474
 1610 028e 5846     		mov	r0, fp
 1611 0290 FFF7FEFF 		bl	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
 1612              	.LVL141:
 1613              	.LBB403:
 1614              	.LBI403:
  59:../../stmlib/dsp/delay_line.h ****     line_[write_ptr_] = sample;
 1615              		.loc 5 59 15 is_stmt 1 view .LVU475
 1616              	.LBB404:
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 1617              		.loc 5 60 11 is_stmt 0 view .LVU476
 1618 0294 636C     		ldr	r3, [r4, #68]
 1619              	.LBE404:
 1620              	.LBE403:
 212:dsp/string.cpp ****         }
 1621              		.loc 4 212 42 view .LVU477
 1622 0296 019A     		ldr	r2, [sp, #4]
 1623              	.LBB407:
 1624              	.LBB405:
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 70


 1625              		.loc 5 60 23 view .LVU478
 1626 0298 04EB8301 		add	r1, r4, r3, lsl #2
  61:../../stmlib/dsp/delay_line.h ****   }
 1627              		.loc 5 61 34 view .LVU479
 1628 029c 03F2FF73 		addw	r3, r3, #2047
 1629              	.LBE405:
 1630              	.LBE407:
 212:dsp/string.cpp ****         }
 1631              		.loc 4 212 42 view .LVU480
 1632 02a0 1046     		mov	r0, r2
 1633              	.LBB408:
 1634              	.LBB406:
  61:../../stmlib/dsp/delay_line.h ****   }
 1635              		.loc 5 61 47 view .LVU481
 1636 02a2 C3F30A03 		ubfx	r3, r3, #0, #11
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 1637              		.loc 5 60 23 view .LVU482
 1638 02a6 81ED130A 		vstr.32	s0, [r1, #76]
  61:../../stmlib/dsp/delay_line.h ****   }
 1639              		.loc 5 61 16 view .LVU483
 1640 02aa 6364     		str	r3, [r4, #68]
 1641              	.LVL142:
  61:../../stmlib/dsp/delay_line.h ****   }
 1642              		.loc 5 61 16 view .LVU484
 1643              	.LBE406:
 1644              	.LBE408:
 208:dsp/string.cpp ****             aux_sample_[1] = aux_sample_[0];
 1645              		.loc 4 208 28 view .LVU485
 1646 02ac 236B     		ldr	r3, [r4, #48]	@ float
 211:dsp/string.cpp ****             aux_sample_[0] = string_.Read(comb_delay);
 1647              		.loc 4 211 28 view .LVU486
 1648 02ae 84ED0C0A 		vstr.32	s0, [r4, #48]
 212:dsp/string.cpp ****         }
 1649              		.loc 4 212 42 view .LVU487
 1650 02b2 B0EE490A 		vmov.f32	s0, s18
 1651              	.LVL143:
 208:dsp/string.cpp ****             aux_sample_[1] = aux_sample_[0];
 1652              		.loc 4 208 28 view .LVU488
 1653 02b6 6363     		str	r3, [r4, #52]	@ float
 209:dsp/string.cpp **** 
 1654              		.loc 4 209 28 view .LVU489
 1655 02b8 A36B     		ldr	r3, [r4, #56]	@ float
 1656 02ba E363     		str	r3, [r4, #60]	@ float
 212:dsp/string.cpp ****         }
 1657              		.loc 4 212 42 view .LVU490
 1658 02bc FFF7FEFF 		bl	_ZNK6stmlib9DelayLineIfLj2048EE4ReadEf
 1659              	.LVL144:
 212:dsp/string.cpp ****         }
 1660              		.loc 4 212 28 view .LVU491
 1661 02c0 84ED0E0A 		vstr.32	s0, [r4, #56]
 1662              	.LBE386:
 1663 02c4 8DE7     		b	.L29
 1664              	.LVL145:
 1665              	.L27:
 212:dsp/string.cpp ****         }
 1666              		.loc 4 212 28 view .LVU492
 1667              	.LBE415:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 71


 1668              	.LBE417:
 1669              	.LBB418:
 1670              	.LBI418:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1671              		.loc 8 49 3 is_stmt 1 view .LVU493
 1672              	.LBB419:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1673              		.loc 8 50 5 view .LVU494
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1674              		.loc 8 50 13 is_stmt 0 view .LVU495
 1675 02c6 84ED088A 		vstr.32	s16, [r4, #32]
 1676              	.LVL146:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1677              		.loc 8 50 13 view .LVU496
 1678              	.LBE419:
 1679              	.LBE418:
 1680              	.LBB420:
 1681              	.LBI420:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1682              		.loc 8 49 3 is_stmt 1 view .LVU497
 1683              	.LBB421:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1684              		.loc 8 50 5 view .LVU498
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1685              		.loc 8 50 13 is_stmt 0 view .LVU499
 1686 02ca C4F81CA0 		str	r10, [r4, #28]	@ float
 1687              	.LVL147:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1688              		.loc 8 50 13 view .LVU500
 1689              	.LBE421:
 1690              	.LBE420:
 1691              	.LBB422:
 1692              	.LBI422:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1693              		.loc 8 49 3 is_stmt 1 view .LVU501
 1694              	.LBB423:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1695              		.loc 8 50 5 view .LVU502
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1696              		.loc 8 50 13 is_stmt 0 view .LVU503
 1697 02ce 84ED06CA 		vstr.32	s24, [r4, #24]
 1698              	.LVL148:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1699              		.loc 8 50 13 view .LVU504
 1700              	.LBE423:
 1701              	.LBE422:
 1702              	.LBB424:
 1703              	.LBI424:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1704              		.loc 8 49 3 is_stmt 1 view .LVU505
 1705              	.LBB425:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1706              		.loc 8 50 5 view .LVU506
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1707              		.loc 8 50 13 is_stmt 0 view .LVU507
 1708 02d2 C4ED05BA 		vstr.32	s23, [r4, #20]
 1709              	.LVL149:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 72


  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1710              		.loc 8 50 13 view .LVU508
 1711              	.LBE425:
 1712              	.LBE424:
 217:dsp/string.cpp ****     }
 218:dsp/string.cpp **** }
 1713              		.loc 4 218 1 view .LVU509
 1714 02d6 03B0     		add	sp, sp, #12
 1715              		.cfi_def_cfa_offset 84
 1716              		@ sp needed
 1717 02d8 BDEC0C8B 		vldm	sp!, {d8-d13}
 1718              		.cfi_restore 90
 1719              		.cfi_restore 91
 1720              		.cfi_restore 88
 1721              		.cfi_restore 89
 1722              		.cfi_restore 86
 1723              		.cfi_restore 87
 1724              		.cfi_restore 84
 1725              		.cfi_restore 85
 1726              		.cfi_restore 82
 1727              		.cfi_restore 83
 1728              		.cfi_restore 80
 1729              		.cfi_restore 81
 1730              		.cfi_def_cfa_offset 36
 1731              	.LVL150:
 1732              		.loc 4 218 1 view .LVU510
 1733 02dc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1734              	.LVL151:
 1735              	.L39:
 1736              		.loc 4 218 1 view .LVU511
 1737              		.align	2
 1738              	.L38:
 1739 02e0 0080FF44 		.word	1157595136
 1740 02e4 72F97F3F 		.word	1065351538
 1741 02e8 48E17A3F 		.word	1065017672
 1742 02ec 0000C042 		.word	1119879168
 1743 02f0 0000F0C2 		.word	-1024458752
 1744 02f4 295C8F3D 		.word	1032805417
 1745 02f8 00803B47 		.word	1195081728
 1746 02fc 0000FEC2 		.word	-1023541248
 1747 0300 00004042 		.word	1111490560
 1748 0304 0000A842 		.word	1118306304
 1749 0308 EE7CFF3E 		.word	1056931054
 1750 030c 3333733F 		.word	1064514355
 1751 0310 E5F2FF3E 		.word	1056961253
 1752 0314 00000043 		.word	1124073472
 1753 0318 00000000 		.word	_ZN5torus13lut_svf_shiftE
 1754              		.cfi_endproc
 1755              	.LFE1552:
 1757              		.section	.text._ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j,"axG",%progbits,_ZN5torus6String
 1758              		.align	1
 1759              		.weak	_ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j
 1760              		.syntax unified
 1761              		.thumb
 1762              		.thumb_func
 1763              		.fpu fpv5-d16
 1765              	_ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 73


 1766              	.LVL152:
 1767              	.LFB1551:
  74:dsp/string.cpp ****                              float*       out,
 1768              		.loc 4 74 6 is_stmt 1 view -0
 1769              		.cfi_startproc
 1770              		@ args = 4, pretend = 0, frame = 8
 1771              		@ frame_needed = 0, uses_anonymous_args = 0
  74:dsp/string.cpp ****                              float*       out,
 1772              		.loc 4 74 6 is_stmt 0 view .LVU513
 1773 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1774              		.cfi_def_cfa_offset 36
 1775              		.cfi_offset 4, -36
 1776              		.cfi_offset 5, -32
 1777              		.cfi_offset 6, -28
 1778              		.cfi_offset 7, -24
 1779              		.cfi_offset 8, -20
 1780              		.cfi_offset 9, -16
 1781              		.cfi_offset 10, -12
 1782              		.cfi_offset 11, -8
 1783              		.cfi_offset 14, -4
 1784 0004 2DED108B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14, d15}
 1785              		.cfi_def_cfa_offset 100
 1786              		.cfi_offset 80, -100
 1787              		.cfi_offset 81, -96
 1788              		.cfi_offset 82, -92
 1789              		.cfi_offset 83, -88
 1790              		.cfi_offset 84, -84
 1791              		.cfi_offset 85, -80
 1792              		.cfi_offset 86, -76
 1793              		.cfi_offset 87, -72
 1794              		.cfi_offset 88, -68
 1795              		.cfi_offset 89, -64
 1796              		.cfi_offset 90, -60
 1797              		.cfi_offset 91, -56
 1798              		.cfi_offset 92, -52
 1799              		.cfi_offset 93, -48
 1800              		.cfi_offset 94, -44
 1801              		.cfi_offset 95, -40
  79:dsp/string.cpp ****     CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1802              		.loc 4 79 11 view .LVU514
 1803 0008 B7EE00FA 		vmov.f32	s30, #1.0e+0
  79:dsp/string.cpp ****     CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1804              		.loc 4 79 26 view .LVU515
 1805 000c D0ED00FA 		vldr.32	s31, [r0]
  80:dsp/string.cpp **** 
 1806              		.loc 4 80 5 view .LVU516
 1807 0010 F1EE009A 		vmov.f32	s19, #4.0e+0
  74:dsp/string.cpp ****                              float*       out,
 1808              		.loc 4 74 6 view .LVU517
 1809 0014 83B0     		sub	sp, sp, #12
 1810              		.cfi_def_cfa_offset 112
  74:dsp/string.cpp ****                              float*       out,
 1811              		.loc 4 74 6 view .LVU518
 1812 0016 0446     		mov	r4, r0
 1813 0018 0E46     		mov	r6, r1
  79:dsp/string.cpp ****     CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1814              		.loc 4 79 11 view .LVU519
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 74


 1815 001a CFEE2FAA 		vdiv.f32	s21, s30, s31
 1816              	.LVL153:
  74:dsp/string.cpp ****                              float*       out,
 1817              		.loc 4 74 6 view .LVU520
 1818 001e 9046     		mov	r8, r2
 1819 0020 1F46     		mov	r7, r3
  80:dsp/string.cpp **** 
 1820              		.loc 4 80 5 view .LVU521
 1821 0022 F4EEE9AA 		vcmpe.f32	s21, s19
 1822 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1823 002a 00F11381 		bmi	.L66
  80:dsp/string.cpp **** 
 1824              		.loc 4 80 5 discriminator 2 view .LVU522
 1825 002e DFED957A 		vldr.32	s15, .L83
 1826 0032 F4EE67AA 		vcmp.f32	s21, s15
 1827 0036 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1828 003a 77FEAAAA 		vselgt.f32	s21, s15, s21
 1829              	.LVL154:
 1830              	.L41:
  85:dsp/string.cpp ****     if(src_ratio >= 0.9999f)
 1831              		.loc 4 85 11 view .LVU523
 1832 003e 2FEEAAAA 		vmul.f32	s20, s31, s21
 1833              	.LVL155:
  86:dsp/string.cpp ****     {
 1834              		.loc 4 86 5 view .LVU524
 1835 0042 DFED917A 		vldr.32	s15, .L83+4
  94:dsp/string.cpp **** 
 1836              		.loc 4 94 49 view .LVU525
 1837 0046 94ED047A 		vldr.32	s14, [r4, #16]
 104:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1838              		.loc 4 104 41 view .LVU526
 1839 004a B0EE00BA 		vmov.f32	s22, #2.0e+0
  94:dsp/string.cpp **** 
 1840              		.loc 4 94 11 view .LVU527
 1841 004e DFED8F6A 		vldr.32	s13, .L83+8
  86:dsp/string.cpp ****     {
 1842              		.loc 4 86 5 view .LVU528
 1843 0052 B4EEE7AA 		vcmpe.f32	s20, s15
 1844              	.LBB506:
 1845              	.LBB507:
 1846              	.LBB508:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1847              		.loc 8 55 14 view .LVU529
 1848 0056 94ED069A 		vldr.32	s18, [r4, #24]
 1849              	.LBE508:
 1850              	.LBE507:
 1851              	.LBE506:
  94:dsp/string.cpp **** 
 1852              		.loc 4 94 49 view .LVU530
 1853 005a F6EE007A 		vmov.f32	s15, #5.0e-1
 1854              	.LBB511:
 1855              	.LBB512:
 1856              	.LBB513:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1857              		.loc 8 55 14 view .LVU531
 1858 005e D4ED07EA 		vldr.32	s29, [r4, #28]
 1859              	.LBE513:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 75


 1860              	.LBE512:
 1861              	.LBE511:
 104:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1862              		.loc 4 104 24 view .LVU532
 1863 0062 94ED038A 		vldr.32	s16, [r4, #12]
 1864              	.LBB516:
 1865              	.LBB517:
 1866              	.LBB518:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1867              		.loc 8 55 14 view .LVU533
 1868 0066 D4ED058A 		vldr.32	s17, [r4, #20]
 1869              	.LBE518:
 1870              	.LBE517:
 1871              	.LBE516:
  86:dsp/string.cpp ****     {
 1872              		.loc 4 86 5 view .LVU534
 1873 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  94:dsp/string.cpp **** 
 1874              		.loc 4 94 49 view .LVU535
 1875 006e 37EE677A 		vsub.f32	s14, s14, s15
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1876              		.loc 4 105 42 view .LVU536
 1877 0072 9FED870A 		vldr.32	s0, .L83+12
 109:dsp/string.cpp ****     float damping_cutoff      = min(24.0f + damping_ * damping_ * 48.0f
 1878              		.loc 4 109 49 view .LVU537
 1879 0076 DFED87DA 		vldr.32	s27, .L83+16
  90:dsp/string.cpp ****         src_ratio  = 1.0f;
 1880              		.loc 4 90 20 view .LVU538
 1881 007a A4BF     		itt	ge
 1882 007c 84ED0BFA 		vstrge.32	s30, [r4, #44]
 1883              	.LVL156:
  91:dsp/string.cpp ****     }
 1884              		.loc 4 91 20 view .LVU539
 1885 0080 B7EE00AA 		vmovge.f32	s20, #1.0e+0
 1886              	.LVL157:
 1887              	.LBB521:
 1888              	.LBI521:
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 1889              		.loc 9 241 3 is_stmt 1 view .LVU540
 1890              	.LBB522:
 1891              		.loc 9 242 5 view .LVU541
 1892              		.loc 9 242 31 is_stmt 0 view .LVU542
 1893 0084 B0EEC77A 		vabs.f32	s14, s14
 1894              	.LBE522:
 1895              	.LBE521:
  94:dsp/string.cpp **** 
 1896              		.loc 4 94 11 view .LVU543
 1897 0088 E7EE667A 		vfms.f32	s15, s14, s13
 1898              	.LVL158:
 1899              	.LBB523:
 1900              	.LBI516:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1901              		.loc 8 39 3 is_stmt 1 view .LVU544
 1902              	.LBE523:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1903              		.loc 8 40 5 view .LVU545
 1904              	.LBB524:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 76


 1905              	.LBB520:
 1906              	.LBI517:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1907              		.loc 8 53 15 view .LVU546
 1908              	.LBB519:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1909              		.loc 8 54 5 view .LVU547
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1910              		.loc 8 55 5 view .LVU548
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1911              		.loc 8 56 5 view .LVU549
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1912              		.loc 8 56 41 is_stmt 0 view .LVU550
 1913 008c 9DED1C7A 		vldr.32	s14, [sp, #112]	@ int
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1914              		.loc 8 56 29 view .LVU551
 1915 0090 7AEEE86A 		vsub.f32	s13, s21, s17
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1916              		.loc 8 56 41 view .LVU552
 1917 0094 F8EE47BA 		vcvt.f32.u32	s23, s14
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1918              		.loc 8 56 39 view .LVU553
 1919 0098 C6EEABCA 		vdiv.f32	s25, s13, s23
 1920              	.LVL159:
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1921              		.loc 8 56 39 view .LVU554
 1922              	.LBE519:
 1923              	.LBE520:
 1924              	.LBE524:
 1925              	.LBB525:
 1926              	.LBI506:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1927              		.loc 8 39 3 is_stmt 1 view .LVU555
 1928              	.LBE525:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1929              		.loc 8 40 5 view .LVU556
 1930              	.LBB526:
 1931              	.LBB510:
 1932              	.LBI507:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1933              		.loc 8 53 15 view .LVU557
 1934              	.LBB509:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1935              		.loc 8 54 5 view .LVU558
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1936              		.loc 8 55 5 view .LVU559
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1937              		.loc 8 56 5 view .LVU560
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1938              		.loc 8 56 29 is_stmt 0 view .LVU561
 1939 009c 77EEC97A 		vsub.f32	s15, s15, s18
 1940              	.LVL160:
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1941              		.loc 8 56 39 view .LVU562
 1942 00a0 87EEABCA 		vdiv.f32	s24, s15, s23
 1943              	.LVL161:
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 77


 1944              		.loc 8 56 39 view .LVU563
 1945              	.LBE509:
 1946              	.LBE510:
 1947              	.LBE526:
 1948              	.LBB527:
 1949              	.LBI511:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1950              		.loc 8 39 3 is_stmt 1 view .LVU564
 1951              	.LBE527:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 1952              		.loc 8 40 5 view .LVU565
 1953              	.LBB528:
 1954              	.LBB515:
 1955              	.LBI512:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1956              		.loc 8 53 15 view .LVU566
 1957              	.LBB514:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1958              		.loc 8 54 5 view .LVU567
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1959              		.loc 8 55 5 view .LVU568
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1960              		.loc 8 56 5 view .LVU569
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1961              		.loc 8 56 29 is_stmt 0 view .LVU570
 1962 00a4 D4ED017A 		vldr.32	s15, [r4, #4]
 1963 00a8 77EEEE7A 		vsub.f32	s15, s15, s29
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1964              		.loc 8 56 39 view .LVU571
 1965 00ac C7EEAB7A 		vdiv.f32	s15, s15, s23
 1966 00b0 CDED007A 		vstr.32	s15, [sp]
 1967              	.LVL162:
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 1968              		.loc 8 56 39 view .LVU572
 1969              	.LBE514:
 1970              	.LBE515:
 1971              	.LBE528:
 104:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1972              		.loc 4 104 41 view .LVU573
 1973 00b4 7BEE487A 		vsub.f32	s15, s22, s16
 104:dsp/string.cpp ****     float rt60 = 0.07f * SemitonesToRatio(lf_damping * 96.0f) * kSampleRate;
 1974              		.loc 4 104 11 view .LVU574
 1975 00b8 67EE887A 		vmul.f32	s15, s15, s16
 1976              	.LVL163:
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1977              		.loc 4 105 42 view .LVU575
 1978 00bc 27EE800A 		vmul.f32	s0, s15, s0
 1979 00c0 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1980              	.LVL164:
 106:dsp/string.cpp ****     float damping_coefficient = SemitonesToRatio(rt60_base_2_12);
 1981              		.loc 4 106 40 view .LVU576
 1982 00c4 DFED747A 		vldr.32	s15, .L83+20
 1983 00c8 6AEEA7AA 		vmul.f32	s21, s21, s15
 1984              	.LVL165:
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1985              		.loc 4 105 24 view .LVU577
 1986 00cc DFED737A 		vldr.32	s15, .L83+24
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 78


 1987 00d0 20EE270A 		vmul.f32	s0, s0, s15
 1988              	.LVL166:
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1989              		.loc 4 105 11 view .LVU578
 1990 00d4 DFED727A 		vldr.32	s15, .L83+28
 106:dsp/string.cpp ****     float damping_coefficient = SemitonesToRatio(rt60_base_2_12);
 1991              		.loc 4 106 48 view .LVU579
 1992 00d8 CAEE8A6A 		vdiv.f32	s13, s21, s20
 105:dsp/string.cpp ****     float rt60_base_2_12 = max(-120.0f * delay / src_ratio / rt60, -127.0f);
 1993              		.loc 4 105 11 view .LVU580
 1994 00dc 60EE277A 		vmul.f32	s15, s0, s15
 1995              	.LVL167:
 106:dsp/string.cpp ****     float damping_coefficient = SemitonesToRatio(rt60_base_2_12);
 1996              		.loc 4 106 60 view .LVU581
 1997 00e0 86EEA70A 		vdiv.f32	s0, s13, s15
 1998              	.LVL168:
 1999              	.LBB529:
 2000              	.LBI529:
 254:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 2001              		.loc 6 254 5 is_stmt 1 view .LVU582
 2002              	.LBB530:
 259:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 2003              		.loc 6 259 7 is_stmt 0 view .LVU583
 2004 00e4 DFED6F7A 		vldr.32	s15, .L83+32
 2005              	.LVL169:
 260:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 2006              		.loc 6 260 9 view .LVU584
 2007 00e8 B4EE670A 		vcmp.f32	s0, s15
 2008 00ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2009              	.LBE530:
 2010              	.LBE529:
 107:dsp/string.cpp ****     float brightness          = brightness_ * brightness_;
 2011              		.loc 4 107 49 view .LVU585
 2012 00f0 48BF     		it	mi
 2013 00f2 B0EE670A 		vmovmi.f32	s0, s15
 2014 00f6 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 2015              	.LVL170:
 2016 00fa B0EE40DA 		vmov.f32	s26, s0
 2017              	.LVL171:
 108:dsp/string.cpp ****     float noise_filter        = SemitonesToRatio((brightness_ - 1.0f) * 48.0f);
 2018              		.loc 4 108 33 view .LVU586
 2019 00fe 94ED020A 		vldr.32	s0, [r4, #8]
 2020              	.LVL172:
 108:dsp/string.cpp ****     float noise_filter        = SemitonesToRatio((brightness_ - 1.0f) * 48.0f);
 2021              		.loc 4 108 11 view .LVU587
 2022 0102 20EE00EA 		vmul.f32	s28, s0, s0
 2023              	.LVL173:
 109:dsp/string.cpp ****     float damping_cutoff      = min(24.0f + damping_ * damping_ * 48.0f
 2024              		.loc 4 109 63 view .LVU588
 2025 0106 30EE4F0A 		vsub.f32	s0, s0, s30
 109:dsp/string.cpp ****     float damping_cutoff      = min(24.0f + damping_ * damping_ * 48.0f
 2026              		.loc 4 109 49 view .LVU589
 2027 010a 20EE2D0A 		vmul.f32	s0, s0, s27
 2028 010e FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 2029              	.LVL174:
 110:dsp/string.cpp ****                                    + brightness_ * brightness_ * 24.0f,
 2030              		.loc 4 110 43 view .LVU590
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 79


 2031 0112 F3EE087A 		vmov.f32	s15, #2.4e+1
 110:dsp/string.cpp ****                                    + brightness_ * brightness_ * 24.0f,
 2032              		.loc 4 110 54 view .LVU591
 2033 0116 28EE086A 		vmul.f32	s12, s16, s16
 109:dsp/string.cpp ****     float damping_cutoff      = min(24.0f + damping_ * damping_ * 48.0f
 2034              		.loc 4 109 49 view .LVU592
 2035 011a F0EE40AA 		vmov.f32	s21, s0
 2036              	.LVL175:
 110:dsp/string.cpp ****                                    + brightness_ * brightness_ * 24.0f,
 2037              		.loc 4 110 43 view .LVU593
 2038 011e F0EE676A 		vmov.f32	s13, s15
 2039 0122 E6EE2D6A 		vfma.f32	s13, s12, s27
 111:dsp/string.cpp ****                                84.0f);
 2040              		.loc 4 111 36 view .LVU594
 2041 0126 EEEE276A 		vfma.f32	s13, s28, s15
 2042              	.LVL176:
 2043              	.LBB531:
 2044              	.LBI531:
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 2045              		.loc 6 230 5 is_stmt 1 view .LVU595
 2046              	.LBB532:
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 2047              		.loc 6 235 7 is_stmt 0 view .LVU596
 2048 012a DFED5F7A 		vldr.32	s15, .L83+36
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 2049              		.loc 6 236 9 view .LVU597
 2050 012e F4EE676A 		vcmp.f32	s13, s15
 2051 0132 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2052 0136 77FEA6DA 		vselgt.f32	s27, s15, s13
 2053              	.LVL177:
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 2054              		.loc 6 236 9 view .LVU598
 2055              	.LBE532:
 2056              	.LBE531:
 114:dsp/string.cpp **** 
 2057              		.loc 4 114 44 view .LVU599
 2058 013a B0EE6D0A 		vmov.f32	s0, s27
 2059              	.LVL178:
 114:dsp/string.cpp **** 
 2060              		.loc 4 114 44 view .LVU600
 2061 013e FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 2062              	.LVL179:
 114:dsp/string.cpp **** 
 2063              		.loc 4 114 26 view .LVU601
 2064 0142 2FEE800A 		vmul.f32	s0, s31, s0
 2065              	.LVL180:
 2066              	.LBB533:
 2067              	.LBI533:
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 2068              		.loc 6 230 5 is_stmt 1 view .LVU602
 2069              	.LBB534:
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 2070              		.loc 6 235 7 is_stmt 0 view .LVU603
 2071 0146 DFED597A 		vldr.32	s15, .L83+40
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 2072              		.loc 6 236 9 view .LVU604
 2073 014a B4EE670A 		vcmp.f32	s0, s15
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 80


 2074 014e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2075 0152 37FE800A 		vselgt.f32	s0, s15, s0
 2076              	.LVL181:
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 2077              		.loc 6 236 9 view .LVU605
 2078              	.LBE534:
 2079              	.LBE533:
 2080              	.LBB535:
 117:dsp/string.cpp ****     {
 2081              		.loc 4 117 5 view .LVU606
 2082 0156 DFED567A 		vldr.32	s15, .L83+44
 2083 015a B4EEE78A 		vcmpe.f32	s16, s15
 2084 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2085 0162 19DB     		blt	.L48
 2086              	.LBB536:
 119:dsp/string.cpp ****         damping_coefficient += to_infinite * (1.0f - damping_coefficient);
 2087              		.loc 4 119 47 view .LVU607
 2088 0164 38EE678A 		vsub.f32	s16, s16, s15
 2089              	.LVL182:
 119:dsp/string.cpp ****         damping_coefficient += to_infinite * (1.0f - damping_coefficient);
 2090              		.loc 4 119 15 view .LVU608
 2091 0168 F3EE047A 		vmov.f32	s15, #2.0e+1
 2092 016c 28EE278A 		vmul.f32	s16, s16, s15
 2093              	.LVL183:
 120:dsp/string.cpp ****         brightness += to_infinite * (1.0f - brightness);
 2094              		.loc 4 120 52 view .LVU609
 2095 0170 7FEE4D7A 		vsub.f32	s15, s30, s26
 120:dsp/string.cpp ****         brightness += to_infinite * (1.0f - brightness);
 2096              		.loc 4 120 29 view .LVU610
 2097 0174 A7EE88DA 		vfma.f32	s26, s15, s16
 2098              	.LVL184:
 121:dsp/string.cpp ****         damping_f += to_infinite * (0.4999f - damping_f);
 2099              		.loc 4 121 43 view .LVU611
 2100 0178 7FEE4E7A 		vsub.f32	s15, s30, s28
 121:dsp/string.cpp ****         damping_f += to_infinite * (0.4999f - damping_f);
 2101              		.loc 4 121 20 view .LVU612
 2102 017c A7EE88EA 		vfma.f32	s28, s15, s16
 2103              	.LVL185:
 122:dsp/string.cpp ****         damping_cutoff += to_infinite * (128.0f - damping_cutoff);
 2104              		.loc 4 122 45 view .LVU613
 2105 0180 DFED4C7A 		vldr.32	s15, .L83+48
 2106 0184 77EEC07A 		vsub.f32	s15, s15, s0
 122:dsp/string.cpp ****         damping_cutoff += to_infinite * (128.0f - damping_cutoff);
 2107              		.loc 4 122 19 view .LVU614
 2108 0188 A7EE880A 		vfma.f32	s0, s15, s16
 2109              	.LVL186:
 123:dsp/string.cpp ****     }
 2110              		.loc 4 123 49 view .LVU615
 2111 018c DFED4A7A 		vldr.32	s15, .L83+52
 2112 0190 77EEED7A 		vsub.f32	s15, s15, s27
 123:dsp/string.cpp ****     }
 2113              		.loc 4 123 24 view .LVU616
 2114 0194 E7EE88DA 		vfma.f32	s27, s15, s16
 2115              	.LVL187:
 2116              	.L48:
 123:dsp/string.cpp ****     }
 2117              		.loc 4 123 24 view .LVU617
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 81


 2118              	.LBE536:
 2119              	.LBE535:
 126:dsp/string.cpp ****     iir_damping_filter_.set_f_q<FREQUENCY_ACCURATE>(damping_f, 0.5f);
 2120              		.loc 4 126 34 view .LVU618
 2121 0198 04F5415A 		add	r10, r4, #12352
 2122              	.LBB537:
 2123              	.LBB538:
  63:./dsp/string.h ****         {
 2124              		.loc 2 63 9 view .LVU619
 2125 019c 1C9B     		ldr	r3, [sp, #112]
 2126 019e 04F5405B 		add	fp, r4, #12288
 2127              	.LBE538:
 2128              	.LBE537:
 126:dsp/string.cpp ****     iir_damping_filter_.set_f_q<FREQUENCY_ACCURATE>(damping_f, 0.5f);
 2129              		.loc 4 126 34 view .LVU620
 2130 01a2 0AF1140A 		add	r10, r10, #20
 2131              	.LVL188:
 2132              	.LBB543:
 2133              	.LBI537:
  61:./dsp/string.h ****     {
 2134              		.loc 2 61 17 is_stmt 1 view .LVU621
 2135              	.LBE543:
  63:./dsp/string.h ****         {
 2136              		.loc 2 63 9 view .LVU622
 2137              	.LBB544:
 2138              	.LBB539:
 2139 01a6 002B     		cmp	r3, #0
 2140 01a8 57D1     		bne	.L50
  65:./dsp/string.h ****             brightness_           = brightness;
 2141              		.loc 2 65 13 view .LVU623
  67:./dsp/string.h ****             brightness_increment_ = 0.0f;
 2142              		.loc 2 67 35 is_stmt 0 view .LVU624
 2143 01aa 0023     		movs	r3, #0
 2144              	.LVL189:
  65:./dsp/string.h ****             brightness_           = brightness;
 2145              		.loc 2 65 35 view .LVU625
 2146 01ac 8BED19DA 		vstr.32	s26, [fp, #100]
  66:./dsp/string.h ****             damping_increment_    = 0.0f;
 2147              		.loc 2 66 13 is_stmt 1 view .LVU626
  66:./dsp/string.h ****             damping_increment_    = 0.0f;
 2148              		.loc 2 66 35 is_stmt 0 view .LVU627
 2149 01b0 8BED17EA 		vstr.32	s28, [fp, #92]
  67:./dsp/string.h ****             brightness_increment_ = 0.0f;
 2150              		.loc 2 67 13 is_stmt 1 view .LVU628
  67:./dsp/string.h ****             brightness_increment_ = 0.0f;
 2151              		.loc 2 67 35 is_stmt 0 view .LVU629
 2152 01b4 CBF86830 		str	r3, [fp, #104]	@ float
  68:./dsp/string.h ****         }
 2153              		.loc 2 68 13 is_stmt 1 view .LVU630
  68:./dsp/string.h ****         }
 2154              		.loc 2 68 35 is_stmt 0 view .LVU631
 2155 01b8 CBF86030 		str	r3, [fp, #96]	@ float
 2156              	.LVL190:
 2157              	.L51:
  68:./dsp/string.h ****         }
 2158              		.loc 2 68 35 view .LVU632
 2159              	.LBE539:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 82


 2160              	.LBE544:
 127:dsp/string.cpp ****     ParameterInterpolator damping_compensation_modulation(
 2161              		.loc 4 127 52 view .LVU633
 2162 01bc 04F54159 		add	r9, r4, #12352
 2163 01c0 F6EE000A 		vmov.f32	s1, #5.0e-1
 2164 01c4 09F12C09 		add	r9, r9, #44
 2165 01c8 4846     		mov	r0, r9
 2166 01ca FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 2167              	.LVL191:
 130:dsp/string.cpp ****         size);
 2168              		.loc 4 130 27 view .LVU634
 2169 01ce F7EE000A 		vmov.f32	s1, #1.0e+0
 2170 01d2 B0EE6D0A 		vmov.f32	s0, s27
 2171 01d6 3948     		ldr	r0, .L83+56
 2172 01d8 FFF7FEFF 		bl	_ZN6stmlib11InterpolateEPKfff
 2173              	.LVL192:
 2174              	.LBB545:
 2175              	.LBI545:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 2176              		.loc 8 39 3 is_stmt 1 view .LVU635
 2177              	.LBE545:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 2178              		.loc 8 40 5 view .LVU636
 2179              	.LBB550:
 2180              	.LBB546:
 2181              	.LBI546:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 2182              		.loc 8 53 15 view .LVU637
 2183              	.LBB547:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 2184              		.loc 8 54 5 view .LVU638
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 2185              		.loc 8 55 5 view .LVU639
 2186              	.LBE547:
 2187              	.LBE546:
 2188              	.LBE550:
 128:dsp/string.cpp ****         &previous_damping_compensation_,
 2189              		.loc 4 128 27 is_stmt 0 view .LVU640
 2190 01dc 3FEE400A 		vsub.f32	s0, s30, s0
 2191              	.LVL193:
 2192              	.LBB551:
 2193              	.LBB549:
 2194              	.LBB548:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 2195              		.loc 8 55 14 view .LVU641
 2196 01e0 D4ED08FA 		vldr.32	s31, [r4, #32]
 2197              	.LVL194:
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 2198              		.loc 8 56 5 is_stmt 1 view .LVU642
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 2199              		.loc 8 56 29 is_stmt 0 view .LVU643
 2200 01e4 30EE6F0A 		vsub.f32	s0, s0, s31
  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 2201              		.loc 8 56 39 view .LVU644
 2202 01e8 80EE2BDA 		vdiv.f32	s26, s0, s23
 2203              	.LVL195:
 2204              	.L65:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 83


  56:../../stmlib/dsp/parameter_interpolator.h ****   }
 2205              		.loc 8 56 39 view .LVU645
 2206              	.LBE548:
 2207              	.LBE549:
 2208              	.LBE551:
 133:dsp/string.cpp ****     {
 2209              		.loc 4 133 5 is_stmt 1 view .LVU646
 133:dsp/string.cpp ****     {
 2210              		.loc 4 133 5 is_stmt 0 view .LVU647
 2211 01ec 1C9B     		ldr	r3, [sp, #112]
 2212 01ee 002B     		cmp	r3, #0
 2213 01f0 00F07081 		beq	.L52
 2214              	.LBB552:
 135:dsp/string.cpp ****         if(src_phase_ > 1.0f)
 2215              		.loc 4 135 20 view .LVU648
 2216 01f4 D4ED0B7A 		vldr.32	s15, [r4, #44]
 2217 01f8 7AEE277A 		vadd.f32	s15, s20, s15
 2218              	.LBB553:
 136:dsp/string.cpp ****         {
 2219              		.loc 4 136 9 view .LVU649
 2220 01fc F4EECF7A 		vcmpe.f32	s15, s30
 2221 0200 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2222 0204 5CDC     		bgt	.L53
 2223              	.LBE553:
 135:dsp/string.cpp ****         if(src_phase_ > 1.0f)
 2224              		.loc 4 135 20 view .LVU650
 2225 0206 C4ED0B7A 		vstr.32	s15, [r4, #44]
 2226              	.L54:
 214:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 2227              		.loc 4 214 28 view .LVU651
 2228 020a D4ED0D7A 		vldr.32	s15, [r4, #52]
 2229              	.LVL196:
 2230              	.LBB648:
 2231              	.LBI648:
  97:../../stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
 2232              		.loc 1 97 14 is_stmt 1 view .LVU652
 2233              	.LBB649:
 2234              		.loc 1 98 3 view .LVU653
 2235              	.LBE649:
 2236              	.LBE648:
 216:dsp/string.cpp ****     }
 2237              		.loc 4 216 9 is_stmt 0 view .LVU654
 2238 020e 0436     		adds	r6, r6, #4
 2239              	.LVL197:
 2240              	.LBB651:
 2241              	.LBB650:
 2242              		.loc 1 98 17 view .LVU655
 2243 0210 94ED0C7A 		vldr.32	s14, [r4, #48]
 2244              		.loc 1 98 24 view .LVU656
 2245 0214 D4ED0B6A 		vldr.32	s13, [r4, #44]
 2246              		.loc 1 98 17 view .LVU657
 2247 0218 37EE677A 		vsub.f32	s14, s14, s15
 2248 021c 1C9B     		ldr	r3, [sp, #112]
 2249 021e 013B     		subs	r3, r3, #1
 2250              		.loc 1 98 24 view .LVU658
 2251 0220 E6EE877A 		vfma.f32	s15, s13, s14
 2252              	.LVL198:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 84


 2253              		.loc 1 98 24 view .LVU659
 2254              	.LBE650:
 2255              	.LBE651:
 214:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 2256              		.loc 4 214 16 view .LVU660
 2257 0224 B8EC017A 		vldmia.32	r8!, {s14}
 2258              	.LVL199:
 214:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 2259              		.loc 4 214 16 view .LVU661
 2260 0228 1C93     		str	r3, [sp, #112]
 2261              	.LVL200:
 214:dsp/string.cpp ****         *aux++ += Crossfade(aux_sample_[1], aux_sample_[0], src_phase_);
 2262              		.loc 4 214 16 view .LVU662
 2263 022a 77EE277A 		vadd.f32	s15, s14, s15
 2264 022e 48ED017A 		vstr.32	s15, [r8, #-4]
 215:dsp/string.cpp ****         in++;
 2265              		.loc 4 215 28 view .LVU663
 2266 0232 D4ED0F7A 		vldr.32	s15, [r4, #60]
 2267              	.LVL201:
 2268              	.LBB652:
 2269              	.LBI652:
  97:../../stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
 2270              		.loc 1 97 14 is_stmt 1 view .LVU664
 2271              	.LBB653:
 2272              		.loc 1 98 3 view .LVU665
 2273              		.loc 1 98 17 is_stmt 0 view .LVU666
 2274 0236 94ED0E7A 		vldr.32	s14, [r4, #56]
 2275              		.loc 1 98 24 view .LVU667
 2276 023a D4ED0B6A 		vldr.32	s13, [r4, #44]
 2277              		.loc 1 98 17 view .LVU668
 2278 023e 37EE677A 		vsub.f32	s14, s14, s15
 2279              		.loc 1 98 24 view .LVU669
 2280 0242 E6EE877A 		vfma.f32	s15, s13, s14
 2281              	.LVL202:
 2282              		.loc 1 98 24 view .LVU670
 2283              	.LBE653:
 2284              	.LBE652:
 215:dsp/string.cpp ****         in++;
 2285              		.loc 4 215 16 view .LVU671
 2286 0246 B7EC017A 		vldmia.32	r7!, {s14}
 2287              	.LVL203:
 215:dsp/string.cpp ****         in++;
 2288              		.loc 4 215 16 view .LVU672
 2289 024a 77EE277A 		vadd.f32	s15, s14, s15
 2290 024e 47ED017A 		vstr.32	s15, [r7, #-4]
 2291              	.LBE552:
 133:dsp/string.cpp ****     {
 2292              		.loc 4 133 5 view .LVU673
 2293 0252 CBE7     		b	.L65
 2294              	.LVL204:
 2295              	.L66:
  80:dsp/string.cpp **** 
 2296              		.loc 4 80 5 view .LVU674
 2297 0254 F0EE69AA 		vmov.f32	s21, s19
 2298              	.LVL205:
  80:dsp/string.cpp **** 
 2299              		.loc 4 80 5 view .LVU675
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 85


 2300 0258 F1E6     		b	.L41
 2301              	.LVL206:
 2302              	.L50:
 2303              	.LBB656:
 2304              	.LBB540:
 2305              	.LBI540:
  61:./dsp/string.h ****     {
 2306              		.loc 2 61 17 is_stmt 1 view .LVU676
 2307              	.LBB541:
 2308              	.LBB542:
  72:./dsp/string.h ****             damping_increment_    = (damping - damping_) * step;
 2309              		.loc 2 72 13 view .LVU677
  72:./dsp/string.h ****             damping_increment_    = (damping - damping_) * step;
 2310              		.loc 2 72 19 is_stmt 0 view .LVU678
 2311 025a CFEE2B7A 		vdiv.f32	s15, s30, s23
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 2312              		.loc 2 73 13 is_stmt 1 view .LVU679
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 2313              		.loc 2 73 46 is_stmt 0 view .LVU680
 2314 025e DBED196A 		vldr.32	s13, [fp, #100]
 2315 0262 3DEE66DA 		vsub.f32	s26, s26, s13
 2316              	.LVL207:
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 2317              		.loc 2 73 58 view .LVU681
 2318 0266 F0EE676A 		vmov.f32	s13, s15
 2319 026a 2DEE27DA 		vmul.f32	s26, s26, s15
  74:./dsp/string.h ****         }
 2320              		.loc 2 74 49 view .LVU682
 2321 026e DBED177A 		vldr.32	s15, [fp, #92]
 2322 0272 7EEE677A 		vsub.f32	s15, s28, s15
  73:./dsp/string.h ****             brightness_increment_ = (brightness - brightness_) * step;
 2323              		.loc 2 73 35 view .LVU683
 2324 0276 8BED1ADA 		vstr.32	s26, [fp, #104]
  74:./dsp/string.h ****         }
 2325              		.loc 2 74 13 is_stmt 1 view .LVU684
  74:./dsp/string.h ****         }
 2326              		.loc 2 74 64 is_stmt 0 view .LVU685
 2327 027a 67EEA67A 		vmul.f32	s15, s15, s13
  74:./dsp/string.h ****         }
 2328              		.loc 2 74 35 view .LVU686
 2329 027e CBED187A 		vstr.32	s15, [fp, #96]
 2330              	.LBE542:
  76:./dsp/string.h **** 
 2331              		.loc 2 76 5 view .LVU687
 2332 0282 9BE7     		b	.L51
 2333              	.L84:
 2334              		.align	2
 2335              	.L83:
 2336 0284 0080FF44 		.word	1157595136
 2337 0288 72F97F3F 		.word	1065351538
 2338 028c 48E17A3F 		.word	1065017672
 2339 0290 0000C042 		.word	1119879168
 2340 0294 00004042 		.word	1111490560
 2341 0298 0000F0C2 		.word	-1024458752
 2342 029c 295C8F3D 		.word	1032805417
 2343 02a0 00803B47 		.word	1195081728
 2344 02a4 0000FEC2 		.word	-1023541248
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 86


 2345 02a8 0000A842 		.word	1118306304
 2346 02ac EE7CFF3E 		.word	1056931054
 2347 02b0 3333733F 		.word	1064514355
 2348 02b4 E5F2FF3E 		.word	1056961253
 2349 02b8 00000043 		.word	1124073472
 2350 02bc 00000000 		.word	_ZN5torus13lut_svf_shiftE
 2351              	.LVL208:
 2352              	.L53:
  76:./dsp/string.h **** 
 2353              		.loc 2 76 5 view .LVU688
 2354              	.LBE541:
 2355              	.LBE540:
 2356              	.LBE656:
 2357              	.LBB657:
 2358              	.LBB654:
 2359              	.LBB554:
 2360              	.LBB555:
 2361              	.LBB556:
 2362              	.LBB557:
 2363              	.LBB558:
 2364              	.LBB559:
 2365              		.file 10 "../../stmlib/utils/random.h"
   1:../../stmlib/utils/random.h **** // Copyright 2012 Emilie Gillet.
   2:../../stmlib/utils/random.h **** //
   3:../../stmlib/utils/random.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/utils/random.h **** //
   5:../../stmlib/utils/random.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/utils/random.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/utils/random.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/utils/random.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/utils/random.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/utils/random.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/utils/random.h **** // 
  12:../../stmlib/utils/random.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/utils/random.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/utils/random.h **** // 
  15:../../stmlib/utils/random.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/utils/random.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/utils/random.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/utils/random.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/utils/random.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/utils/random.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/utils/random.h **** // THE SOFTWARE.
  22:../../stmlib/utils/random.h **** // 
  23:../../stmlib/utils/random.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/utils/random.h **** //
  25:../../stmlib/utils/random.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/utils/random.h **** //
  27:../../stmlib/utils/random.h **** // Fast 16-bit pseudo random number generator.
  28:../../stmlib/utils/random.h **** 
  29:../../stmlib/utils/random.h **** #ifndef STMLIB_UTILS_RANDOM_H_
  30:../../stmlib/utils/random.h **** #define STMLIB_UTILS_RANDOM_H_
  31:../../stmlib/utils/random.h **** 
  32:../../stmlib/utils/random.h **** #include "../../../stmlib/stmlib.h"
  33:../../stmlib/utils/random.h **** 
  34:../../stmlib/utils/random.h **** namespace stmlib {
  35:../../stmlib/utils/random.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 87


  36:../../stmlib/utils/random.h **** class Random {
  37:../../stmlib/utils/random.h ****  public:
  38:../../stmlib/utils/random.h ****   static inline uint32_t state() { return rng_state_; }
  39:../../stmlib/utils/random.h **** 
  40:../../stmlib/utils/random.h ****   static inline void Seed(uint32_t seed) {
  41:../../stmlib/utils/random.h ****     rng_state_ = seed;
  42:../../stmlib/utils/random.h ****   }
  43:../../stmlib/utils/random.h **** 
  44:../../stmlib/utils/random.h ****   static inline uint32_t GetWord() {
  45:../../stmlib/utils/random.h ****     rng_state_ = rng_state_ * 1664525L + 1013904223L;
 2366              		.loc 10 45 29 view .LVU689
 2367 02c0 8B4A     		ldr	r2, .L85
 2368              	.LBE559:
 2369              	.LBE558:
 2370              	.LBE557:
 2371              	.LBE556:
 2372              	.LBE555:
 138:dsp/string.cpp **** 
 2373              		.loc 4 138 24 view .LVU690
 2374 02c2 77EECF7A 		vsub.f32	s15, s15, s30
 2375              	.LBB620:
 2376              	.LBB580:
 2377              	.LBB572:
 2378              	.LBB566:
 2379              	.LBB560:
 2380              		.loc 10 45 40 view .LVU691
 2381 02c6 8B48     		ldr	r0, .L85+4
 2382              	.LBE560:
 2383              	.LBE566:
 2384              	.LBE572:
 2385              	.LBE580:
 2386              	.LBE620:
 146:dsp/string.cpp **** 
 2387              		.loc 4 146 19 view .LVU692
 2388 02c8 BFEE007A 		vmov.f32	s14, #-1.0e+0
 2389              	.LBB621:
 2390              	.LBB581:
 2391              	.LBB573:
 2392              	.LBB567:
 2393              	.LBB561:
 2394              		.loc 10 45 29 view .LVU693
 2395 02cc 1168     		ldr	r1, [r2]
 2396              	.LBE561:
 2397              	.LBE567:
 2398              	.LBE573:
 2399              	.LBE581:
 2400              	.LBE621:
 2401              	.LBB622:
 2402              	.LBB623:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2403              		.loc 8 60 12 view .LVU694
 2404 02ce 78EEAC8A 		vadd.f32	s17, s17, s25
 2405              	.LVL209:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2406              		.loc 8 60 12 view .LVU695
 2407              	.LBE623:
 2408              	.LBE622:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 88


 2409              	.LBB625:
 2410              	.LBB582:
 2411              	.LBB574:
 2412              	.LBB568:
 2413              	.LBB562:
 2414              		.loc 10 45 40 view .LVU696
 2415 02d2 894B     		ldr	r3, .L85+8
 2416              	.LVL210:
 2417              		.loc 10 45 40 view .LVU697
 2418              	.LBE562:
 2419              	.LBE568:
 2420              	.LBE574:
 2421              	.LBE582:
 2422              	.LBE625:
 2423              	.LBB626:
 2424              	.LBB627:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2425              		.loc 8 60 12 view .LVU698
 2426 02d4 7FEE8DFA 		vadd.f32	s31, s31, s26
 2427              	.LVL211:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2428              		.loc 8 60 12 view .LVU699
 2429              	.LBE627:
 2430              	.LBE626:
 138:dsp/string.cpp **** 
 2431              		.loc 4 138 24 view .LVU700
 2432 02d8 C4ED0B7A 		vstr.32	s15, [r4, #44]
 2433              	.LVL212:
 2434              	.LBB629:
 2435              	.LBI622:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 2436              		.loc 8 59 16 is_stmt 1 view .LVU701
 2437              	.LBB624:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2438              		.loc 8 60 5 view .LVU702
 2439              		.loc 8 61 5 view .LVU703
 2440              		.loc 8 61 5 is_stmt 0 view .LVU704
 2441              	.LBE624:
 2442              	.LBE629:
 2443              	.LBB630:
 2444              	.LBI630:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 2445              		.loc 8 59 16 is_stmt 1 view .LVU705
 2446              	.LBB631:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2447              		.loc 8 60 5 view .LVU706
 2448              	.LBE631:
 2449              	.LBE630:
 146:dsp/string.cpp **** 
 2450              		.loc 4 146 19 is_stmt 0 view .LVU707
 2451 02dc B0EE470A 		vmov.f32	s0, s14
 2452              	.LBB633:
 2453              	.LBB583:
 2454              	.LBB575:
 2455              	.LBB569:
 2456              	.LBB563:
 2457              		.loc 10 45 40 view .LVU708
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 89


 2458 02e0 00FB0133 		mla	r3, r0, r1, r3
 2459              	.LBE563:
 2460              	.LBE569:
  46:../../stmlib/utils/random.h ****     return state();
  47:../../stmlib/utils/random.h ****   }
  48:../../stmlib/utils/random.h ****   
  49:../../stmlib/utils/random.h ****   static inline int16_t GetSample() {
  50:../../stmlib/utils/random.h ****     return static_cast<int16_t>(GetWord() >> 16);
  51:../../stmlib/utils/random.h ****   }
  52:../../stmlib/utils/random.h **** 
  53:../../stmlib/utils/random.h ****   static inline float GetFloat() {
  54:../../stmlib/utils/random.h ****     return static_cast<float>(GetWord()) / 4294967296.0f;
 2461              		.loc 10 54 44 view .LVU709
 2462 02e4 DFED856A 		vldr.32	s13, .L85+12
 2463              	.LBE575:
 2464              	.LBE583:
 165:dsp/string.cpp ****                 float ac_blocking_amount = bridge_curving;
 2465              		.loc 4 165 42 view .LVU710
 2466 02e8 9FED85EA 		vldr.32	s28, .L85+16
 2467              	.LBE633:
 2468              	.LBB634:
 2469              	.LBB632:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2470              		.loc 8 60 12 view .LVU711
 2471 02ec 39EE0C9A 		vadd.f32	s18, s18, s24
 2472              	.LVL213:
 2473              		.loc 8 61 5 is_stmt 1 view .LVU712
 2474              		.loc 8 61 5 is_stmt 0 view .LVU713
 2475              	.LBE632:
 2476              	.LBE634:
 2477              	.LBB635:
 2478              	.LBB584:
 2479              	.LBB576:
 2480              		.loc 10 54 12 view .LVU714
 2481 02f0 07EE903A 		vmov	s15, r3	@ int
 2482              	.LBE576:
 2483              	.LBE584:
 174:dsp/string.cpp ****                 delay *= delay_fm;
 2484              		.loc 4 174 26 view .LVU715
 2485 02f4 D4ED105A 		vldr.32	s11, [r4, #64]
 2486              	.LBE635:
 146:dsp/string.cpp **** 
 2487              		.loc 4 146 19 view .LVU716
 2488 02f8 AFEEA80A 		vfma.f32	s0, s31, s17
 2489              	.LBB636:
 181:dsp/string.cpp ****                     s = stretch_.Allpass(s, ap_delay, ap_gain);
 2490              		.loc 4 181 44 view .LVU717
 2491 02fc 04F14405 		add	r5, r4, #68
 2492              	.LBB585:
 2493              	.LBB577:
 2494              		.loc 10 54 12 view .LVU718
 2495 0300 F8EE677A 		vcvt.f32.u32	s15, s15
 2496              	.LBB570:
 2497              	.LBB564:
  45:../../stmlib/utils/random.h ****     return state();
 2498              		.loc 10 45 16 view .LVU719
 2499 0304 1360     		str	r3, [r2]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 90


 2500              	.LBE564:
 2501              	.LBE570:
 2502              	.LBE577:
 2503              	.LBE585:
 2504              	.LBE636:
 141:dsp/string.cpp **** 
 2505              		.loc 4 141 19 view .LVU720
 2506 0306 69EE28DA 		vmul.f32	s27, s18, s17
 2507              	.LVL214:
 2508              	.LBB637:
 2509              	.LBI626:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 2510              		.loc 8 59 16 is_stmt 1 view .LVU721
 2511              	.LBB628:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2512              		.loc 8 60 5 view .LVU722
 2513              		.loc 8 61 5 view .LVU723
 2514              		.loc 8 61 5 is_stmt 0 view .LVU724
 2515              	.LBE628:
 2516              	.LBE637:
 2517              	.LBB638:
 2518              	.LBB586:
 2519              	.LBI556:
  53:../../stmlib/utils/random.h ****     return static_cast<float>(GetWord()) / 4294967296.0f;
 2520              		.loc 10 53 23 is_stmt 1 view .LVU725
 2521              	.LBB578:
 2522              		.loc 10 54 5 view .LVU726
 2523              	.LBB571:
 2524              	.LBI558:
  44:../../stmlib/utils/random.h ****     rng_state_ = rng_state_ * 1664525L + 1013904223L;
 2525              		.loc 10 44 26 view .LVU727
 2526              	.LBB565:
  45:../../stmlib/utils/random.h ****     return state();
 2527              		.loc 10 45 5 view .LVU728
  46:../../stmlib/utils/random.h ****   }
 2528              		.loc 10 46 5 view .LVU729
 2529              	.LBE565:
 2530              	.LBE571:
 2531              	.LBE578:
 2532              	.LBE586:
 2533              	.LBE638:
 2534              	.LBE554:
 2535              	.LBE654:
 2536              	.LBE657:
  38:../../stmlib/utils/random.h **** 
 2537              		.loc 10 38 36 view .LVU730
 2538              	.LBB658:
 2539              	.LBB655:
 2540              	.LBB646:
 2541              	.LBB639:
 2542              	.LBB587:
 2543              	.LBB579:
 2544              		.loc 10 54 44 is_stmt 0 view .LVU731
 2545 030a 67EEA67A 		vmul.f32	s15, s15, s13
 2546              	.LBE579:
 2547              	.LBE587:
 154:dsp/string.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 91


 2548              		.loc 4 154 35 view .LVU732
 2549 030e D4ED0A6A 		vldr.32	s13, [r4, #40]
 152:dsp/string.cpp ****                 noise *= 1.0f / (0.2f + noise_filter);
 2550              		.loc 4 152 23 view .LVU733
 2551 0312 A7EE8B7A 		vfma.f32	s14, s15, s22
 2552              	.LVL215:
 153:dsp/string.cpp ****                 dispersion_noise_ += noise_filter * (noise - dispersion_noise_);
 2553              		.loc 4 153 39 view .LVU734
 2554 0316 DFED7B7A 		vldr.32	s15, .L85+20
 2555 031a 7AEEA77A 		vadd.f32	s15, s21, s15
 153:dsp/string.cpp ****                 dispersion_noise_ += noise_filter * (noise - dispersion_noise_);
 2556              		.loc 4 153 31 view .LVU735
 2557 031e 8FEE276A 		vdiv.f32	s12, s30, s15
 154:dsp/string.cpp **** 
 2558              		.loc 4 154 60 view .LVU736
 2559 0322 F0EE667A 		vmov.f32	s15, s13
 2560 0326 D6EE077A 		vfnms.f32	s15, s12, s14
 173:dsp/string.cpp ****                 delay_fm -= curved_bridge_ * bridge_curving;
 2561              		.loc 4 173 26 view .LVU737
 2562 032a B0EE4F6A 		vmov.f32	s12, s30
 154:dsp/string.cpp **** 
 2563              		.loc 4 154 35 view .LVU738
 2564 032e E7EEAA6A 		vfma.f32	s13, s15, s21
 2565              	.LBB588:
 2566              	.LBB589:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2567              		.loc 8 60 12 view .LVU739
 2568 0332 DDED007A 		vldr.32	s15, [sp]
 2569 0336 7EEEA7EA 		vadd.f32	s29, s29, s15
 2570              	.LVL216:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2571              		.loc 8 60 12 view .LVU740
 2572              	.LBE589:
 2573              	.LBE588:
 159:dsp/string.cpp ****                           : dispersion * (2.0f - dispersion) * 0.475f;
 2574              		.loc 4 159 27 view .LVU741
 2575 033a F5EEC0EA 		vcmpe.f32	s29, #0
 154:dsp/string.cpp **** 
 2576              		.loc 4 154 35 view .LVU742
 2577 033e C4ED0A6A 		vstr.32	s13, [r4, #40]
 2578              	.LVL217:
 2579              	.LBB591:
 2580              	.LBI588:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 2581              		.loc 8 59 16 is_stmt 1 view .LVU743
 2582              	.LBB590:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 2583              		.loc 8 60 5 view .LVU744
 2584              		.loc 8 61 5 view .LVU745
 2585              		.loc 8 61 5 is_stmt 0 view .LVU746
 2586              	.LBE590:
 2587              	.LBE591:
 159:dsp/string.cpp ****                           : dispersion * (2.0f - dispersion) * 0.475f;
 2588              		.loc 4 159 27 view .LVU747
 2589 0342 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 160:dsp/string.cpp ****                 float noise_amount
 2590              		.loc 4 160 48 view .LVU748
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 92


 2591 0346 85BF     		ittet	hi
 2592 0348 3BEE6E8A 		vsubhi.f32	s16, s22, s29
 159:dsp/string.cpp ****                           : dispersion * (2.0f - dispersion) * 0.475f;
 2593              		.loc 4 159 27 view .LVU749
 2594 034c DFED6E7A 		vldrhi.32	s15, .L85+24
 2595 0350 9FED6E8A 		vldrls.32	s16, .L85+28
 160:dsp/string.cpp ****                 float noise_amount
 2596              		.loc 4 160 40 view .LVU750
 2597 0354 28EE2E8A 		vmulhi.f32	s16, s16, s29
 159:dsp/string.cpp ****                           : dispersion * (2.0f - dispersion) * 0.475f;
 2598              		.loc 4 159 27 view .LVU751
 2599 0358 88BF     		it	hi
 2600 035a 28EE278A 		vmulhi.f32	s16, s16, s15
 2601              	.LVL218:
 162:dsp/string.cpp ****                 float bridge_curving = dispersion < 0.0f ? -dispersion : 0.0f;
 2602              		.loc 4 162 42 view .LVU752
 2603 035e F6EE087A 		vmov.f32	s15, #7.5e-1
 2604 0362 F4EEE7EA 		vcmpe.f32	s29, s15
 2605 0366 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 163:dsp/string.cpp **** 
 2606              		.loc 4 163 58 view .LVU753
 2607 036a F5EEC0EA 		vcmpe.f32	s29, #0
 162:dsp/string.cpp ****                 float bridge_curving = dispersion < 0.0f ? -dispersion : 0.0f;
 2608              		.loc 4 162 63 view .LVU754
 2609 036e CABF     		itet	gt
 2610 0370 7EEEE77A 		vsubgt.f32	s15, s29, s15
 162:dsp/string.cpp ****                 float bridge_curving = dispersion < 0.0f ? -dispersion : 0.0f;
 2611              		.loc 4 162 42 view .LVU755
 2612 0374 DFED657A 		vldrle.32	s15, .L85+28
 2613 0378 67EEA97A 		vmulgt.f32	s15, s15, s19
 2614              	.LVL219:
 163:dsp/string.cpp **** 
 2615              		.loc 4 163 58 view .LVU756
 2616 037c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 165:dsp/string.cpp ****                 float ac_blocking_amount = bridge_curving;
 2617              		.loc 4 165 57 view .LVU757
 2618 0380 67EEA77A 		vmul.f32	s15, s15, s15
 2619              	.LVL220:
 163:dsp/string.cpp **** 
 2620              		.loc 4 163 58 view .LVU758
 2621 0384 4CBF     		ite	mi
 2622 0386 F1EE6EBA 		vnegmi.f32	s23, s29
 2623 038a DFED60BA 		vldrpl.32	s23, .L85+28
 2624              	.LVL221:
 2625              	.LBB592:
 2626              	.LBI592:
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 2627              		.loc 9 241 3 is_stmt 1 view .LVU759
 2628              	.LBB593:
 2629              		.loc 9 242 5 view .LVU760
 2630              		.loc 9 242 5 is_stmt 0 view .LVU761
 2631              	.LBE593:
 2632              	.LBE592:
 165:dsp/string.cpp ****                 float ac_blocking_amount = bridge_curving;
 2633              		.loc 4 165 42 view .LVU762
 2634 038e 67EE8E7A 		vmul.f32	s15, s15, s28
 173:dsp/string.cpp ****                 delay_fm -= curved_bridge_ * bridge_curving;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 93


 2635              		.loc 4 173 26 view .LVU763
 2636 0392 A6EEA76A 		vfma.f32	s12, s13, s15
 2637              	.LVL222:
 168:dsp/string.cpp ****                 float ap_gain
 2638              		.loc 4 168 32 view .LVU764
 2639 0396 DFED5E7A 		vldr.32	s15, .L85+32
 168:dsp/string.cpp ****                 float ap_gain
 2640              		.loc 4 168 49 view .LVU765
 2641 039a 6BEEAB6A 		vmul.f32	s13, s23, s23
 168:dsp/string.cpp ****                 float ap_gain
 2642              		.loc 4 168 32 view .LVU766
 2643 039e 66EEA76A 		vmul.f32	s13, s13, s15
 2644              	.LVL223:
 174:dsp/string.cpp ****                 delay *= delay_fm;
 2645              		.loc 4 174 26 view .LVU767
 2646 03a2 F0EE467A 		vmov.f32	s15, s12
 2647 03a6 E5EEE67A 		vfms.f32	s15, s11, s13
 2648              	.LVL224:
 175:dsp/string.cpp **** 
 2649              		.loc 4 175 23 view .LVU768
 2650 03aa 60EE277A 		vmul.f32	s15, s0, s15
 2651              	.LVL225:
 177:dsp/string.cpp ****                 float main_delay = delay - ap_delay;
 2652              		.loc 4 177 23 view .LVU769
 2653 03ae 28EE278A 		vmul.f32	s16, s16, s15
 2654              	.LVL226:
 179:dsp/string.cpp ****                 {
 2655              		.loc 4 179 17 view .LVU770
 2656 03b2 B4EEE98A 		vcmpe.f32	s16, s19
 2657 03b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 179:dsp/string.cpp ****                 {
 2658              		.loc 4 179 17 view .LVU771
 2659 03ba C0F28580 		blt	.L60
 178:dsp/string.cpp ****                 if(ap_delay >= 4.0f && main_delay >= 4.0f)
 2660              		.loc 4 178 23 discriminator 1 view .LVU772
 2661 03be 37EEC80A 		vsub.f32	s0, s15, s16
 2662              	.LVL227:
 179:dsp/string.cpp ****                 {
 2663              		.loc 4 179 37 discriminator 1 view .LVU773
 2664 03c2 B4EEE90A 		vcmpe.f32	s0, s19
 2665 03c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2666 03ca 7DDB     		blt	.L60
 2667              	.LBB595:
 2668              	.LBB594:
 2669              		.loc 9 242 31 view .LVU774
 2670 03cc F0EEEE7A 		vabs.f32	s15, s29
 2671              	.LVL228:
 2672              		.loc 9 242 31 view .LVU775
 2673              	.LBE594:
 2674              	.LBE595:
 170:dsp/string.cpp **** 
 2675              		.loc 4 170 53 view .LVU776
 2676 03d0 9FED506A 		vldr.32	s12, .L85+36
 2677              	.LVL229:
 170:dsp/string.cpp **** 
 2678              		.loc 4 170 31 view .LVU777
 2679 03d4 DFED506A 		vldr.32	s13, .L85+40
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 94


 2680              	.LVL230:
 181:dsp/string.cpp ****                     s = stretch_.Allpass(s, ap_delay, ap_gain);
 2681              		.loc 4 181 44 view .LVU778
 2682 03d8 2846     		mov	r0, r5
 170:dsp/string.cpp **** 
 2683              		.loc 4 170 31 view .LVU779
 2684 03da 6EEEA66A 		vmul.f32	s13, s29, s13
 2685              	.LVL231:
 170:dsp/string.cpp **** 
 2686              		.loc 4 170 53 view .LVU780
 2687 03de 77EE867A 		vadd.f32	s15, s15, s12
 2688              	.LVL232:
 169:dsp/string.cpp ****                     = -0.618f * dispersion / (0.15f + fabs(dispersion));
 2689              		.loc 4 169 23 view .LVU781
 2690 03e2 86EEA76A 		vdiv.f32	s12, s13, s15
 2691 03e6 8DED016A 		vstr.32	s12, [sp, #4]	@ int
 181:dsp/string.cpp ****                     s = stretch_.Allpass(s, ap_delay, ap_gain);
 2692              		.loc 4 181 44 view .LVU782
 2693 03ea FFF7FEFF 		bl	_ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf
 2694              	.LVL233:
 2695              	.LBB596:
 2696              	.LBI596:
  64:../../stmlib/dsp/delay_line.h ****     T read = line_[(write_ptr_ + delay) % max_delay];
 2697              		.loc 5 64 18 is_stmt 1 view .LVU783
 2698              	.LBE596:
 182:dsp/string.cpp ****                 }
 2699              		.loc 4 182 41 is_stmt 0 view .LVU784
 2700 03ee FCEEC87A 		vcvt.u32.f32	s15, s16
 2701              	.LBB605:
 2702              	.LBB597:
  65:../../stmlib/dsp/delay_line.h ****     T write = sample + coefficient * read;
 2703              		.loc 5 65 21 view .LVU785
 2704 03f2 04F50051 		add	r1, r4, #8192
  66:../../stmlib/dsp/delay_line.h ****     Write(write);
 2705              		.loc 5 66 7 view .LVU786
 2706 03f6 F0EE406A 		vmov.f32	s13, s0
 2707 03fa 9DED016A 		vldr.32	s12, [sp, #4]	@ int
  65:../../stmlib/dsp/delay_line.h ****     T write = sample + coefficient * read;
 2708              		.loc 5 65 21 view .LVU787
 2709 03fe CA6C     		ldr	r2, [r1, #76]
 2710              	.LBE597:
 2711              	.LBE605:
 182:dsp/string.cpp ****                 }
 2712              		.loc 4 182 41 view .LVU788
 2713 0400 17EE900A 		vmov	r0, s15	@ int
 2714              	.LBB606:
 2715              	.LBB604:
  65:../../stmlib/dsp/delay_line.h ****     T write = sample + coefficient * read;
 2716              		.loc 5 65 32 view .LVU789
 2717 0404 1044     		add	r0, r0, r2
  65:../../stmlib/dsp/delay_line.h ****     T write = sample + coefficient * read;
 2718              		.loc 5 65 41 view .LVU790
 2719 0406 C0F30900 		ubfx	r0, r0, #0, #10
  65:../../stmlib/dsp/delay_line.h ****     T write = sample + coefficient * read;
 2720              		.loc 5 65 7 view .LVU791
 2721 040a 01EB8000 		add	r0, r1, r0, lsl #2
 2722 040e D0ED157A 		vldr.32	s15, [r0, #84]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 95


 2723              	.LVL234:
 2724              	.LBB598:
 2725              	.LBB599:
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2726              		.loc 5 60 23 view .LVU792
 2727 0412 01EB8200 		add	r0, r1, r2, lsl #2
  61:../../stmlib/dsp/delay_line.h ****   }
 2728              		.loc 5 61 34 view .LVU793
 2729 0416 02F2FF32 		addw	r2, r2, #1023
 2730              	.LBE599:
 2731              	.LBE598:
  66:../../stmlib/dsp/delay_line.h ****     Write(write);
 2732              		.loc 5 66 7 view .LVU794
 2733 041a E6EE276A 		vfma.f32	s13, s12, s15
 2734              	.LVL235:
 2735              	.LBB602:
 2736              	.LBI598:
  59:../../stmlib/dsp/delay_line.h ****     line_[write_ptr_] = sample;
 2737              		.loc 5 59 15 is_stmt 1 view .LVU795
 2738              	.LBB600:
  61:../../stmlib/dsp/delay_line.h ****   }
 2739              		.loc 5 61 47 is_stmt 0 view .LVU796
 2740 041e C2F30902 		ubfx	r2, r2, #0, #10
 2741              	.LBE600:
 2742              	.LBE602:
  68:../../stmlib/dsp/delay_line.h ****   }
 2743              		.loc 5 68 35 view .LVU797
 2744 0422 E6EEC67A 		vfms.f32	s15, s13, s12
 2745              	.LVL236:
 2746              	.LBB603:
 2747              	.LBB601:
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2748              		.loc 5 60 23 view .LVU798
 2749 0426 C0ED156A 		vstr.32	s13, [r0, #84]
 2750              	.LVL237:
  61:../../stmlib/dsp/delay_line.h ****   }
 2751              		.loc 5 61 16 view .LVU799
 2752 042a CA64     		str	r2, [r1, #76]
 2753              	.LVL238:
  61:../../stmlib/dsp/delay_line.h ****   }
 2754              		.loc 5 61 16 view .LVU800
 2755              	.LBE601:
 2756              	.LBE603:
  68:../../stmlib/dsp/delay_line.h ****   }
 2757              		.loc 5 68 35 view .LVU801
 2758 042c B0EE670A 		vmov.f32	s0, s15
 2759              	.LVL239:
 2760              	.L63:
  68:../../stmlib/dsp/delay_line.h ****   }
 2761              		.loc 5 68 35 view .LVU802
 2762              	.LBE604:
 2763              	.LBE606:
 2764              	.LBB607:
 2765              	.LBI607:
  73:../../stmlib/dsp/filter.h ****     float x = x_;
 2766              		.loc 7 73 15 is_stmt 1 view .LVU803
 2767              	.LBB608:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 96


  74:../../stmlib/dsp/filter.h ****     float y = y_;
 2768              		.loc 7 74 5 view .LVU804
  75:../../stmlib/dsp/filter.h ****     const float pole = pole_;
 2769              		.loc 7 75 5 view .LVU805
  76:../../stmlib/dsp/filter.h ****     while (size--) {
 2770              		.loc 7 76 5 view .LVU806
  77:../../stmlib/dsp/filter.h ****       float old_x = x;
 2771              		.loc 7 77 5 view .LVU807
  77:../../stmlib/dsp/filter.h ****       float old_x = x;
 2772              		.loc 7 77 16 view .LVU808
 2773              	.LBB609:
  78:../../stmlib/dsp/filter.h ****       x = *in_out;
 2774              		.loc 7 78 7 view .LVU809
  79:../../stmlib/dsp/filter.h ****       *in_out++ = y = y * pole + x - old_x;
 2775              		.loc 7 79 7 view .LVU810
  80:../../stmlib/dsp/filter.h ****     }
 2776              		.loc 7 80 7 view .LVU811
  80:../../stmlib/dsp/filter.h ****     }
 2777              		.loc 7 80 32 is_stmt 0 view .LVU812
 2778 0430 F0EE407A 		vmov.f32	s15, s0
 2779 0434 9BED226A 		vldr.32	s12, [fp, #136]
 2780 0438 DBED206A 		vldr.32	s13, [fp, #128]
 2781              	.LBE609:
 2782              	.LBE608:
 2783              	.LBE607:
 193:dsp/string.cpp ****                 curved_bridge_ = (fabs(value) + value) * sign;
 2784              		.loc 4 193 43 view .LVU813
 2785 043c BFEE087A 		vmov.f32	s14, #-1.5e+0
 2786              	.LBE639:
 202:dsp/string.cpp **** #ifndef MIC_W
 2787              		.loc 4 202 44 view .LVU814
 2788 0440 5046     		mov	r0, r10
 2789              	.LBB640:
 2790              	.LBB613:
 2791              	.LBB612:
 2792              	.LBB610:
  80:../../stmlib/dsp/filter.h ****     }
 2793              		.loc 7 80 32 view .LVU815
 2794 0442 E6EE267A 		vfma.f32	s15, s12, s13
  80:../../stmlib/dsp/filter.h ****     }
 2795              		.loc 7 80 21 view .LVU816
 2796 0446 DBED216A 		vldr.32	s13, [fp, #132]
 2797              	.LBE610:
  82:../../stmlib/dsp/filter.h ****     y_ = y;
 2798              		.loc 7 82 8 view .LVU817
 2799 044a 8BED210A 		vstr.32	s0, [fp, #132]
 2800              	.LVL240:
 2801              	.LBB611:
  80:../../stmlib/dsp/filter.h ****     }
 2802              		.loc 7 80 21 view .LVU818
 2803 044e 77EEE67A 		vsub.f32	s15, s15, s13
 2804              	.LVL241:
  80:../../stmlib/dsp/filter.h ****     }
 2805              		.loc 7 80 21 view .LVU819
 2806              	.LBE611:
  77:../../stmlib/dsp/filter.h ****       float old_x = x;
 2807              		.loc 7 77 5 is_stmt 1 view .LVU820
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 97


  77:../../stmlib/dsp/filter.h ****       float old_x = x;
 2808              		.loc 7 77 16 view .LVU821
  82:../../stmlib/dsp/filter.h ****     y_ = y;
 2809              		.loc 7 82 5 view .LVU822
  83:../../stmlib/dsp/filter.h ****   }
 2810              		.loc 7 83 5 view .LVU823
  83:../../stmlib/dsp/filter.h ****   }
 2811              		.loc 7 83 8 is_stmt 0 view .LVU824
 2812 0452 CBED227A 		vstr.32	s15, [fp, #136]
 2813              	.LVL242:
  83:../../stmlib/dsp/filter.h ****   }
 2814              		.loc 7 83 8 view .LVU825
 2815              	.LBE612:
 2816              	.LBE613:
 190:dsp/string.cpp **** 
 2817              		.loc 4 190 49 view .LVU826
 2818 0456 77EEC07A 		vsub.f32	s15, s15, s0
 2819              	.LVL243:
 190:dsp/string.cpp **** 
 2820              		.loc 4 190 19 view .LVU827
 2821 045a A7EEAB0A 		vfma.f32	s0, s15, s23
 2822              	.LVL244:
 2823              	.LBB614:
 2824              	.LBI614:
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 2825              		.loc 9 241 3 is_stmt 1 view .LVU828
 2826              	.LBB615:
 2827              		.loc 9 242 5 view .LVU829
 2828              		.loc 9 242 5 is_stmt 0 view .LVU830
 2829              	.LBE615:
 2830              	.LBE614:
 193:dsp/string.cpp ****                 curved_bridge_ = (fabs(value) + value) * sign;
 2831              		.loc 4 193 43 view .LVU831
 2832 045e B5EEC00A 		vcmpe.f32	s0, #0
 2833              	.LBB617:
 2834              	.LBB616:
 2835              		.loc 9 242 31 view .LVU832
 2836 0462 F0EEC07A 		vabs.f32	s15, s0
 2837              	.LBE616:
 2838              	.LBE617:
 193:dsp/string.cpp ****                 curved_bridge_ = (fabs(value) + value) * sign;
 2839              		.loc 4 193 43 view .LVU833
 2840 0466 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 192:dsp/string.cpp ****                 float sign     = s > 0.0f ? 1.0f : -1.5f;
 2841              		.loc 4 192 23 view .LVU834
 2842 046a 77EECE7A 		vsub.f32	s15, s15, s28
 2843              	.LVL245:
 193:dsp/string.cpp ****                 curved_bridge_ = (fabs(value) + value) * sign;
 2844              		.loc 4 193 43 view .LVU835
 2845 046e B7EE00EA 		vmov.f32	s28, #1.0e+0
 2846 0472 3EFE077A 		vselgt.f32	s14, s28, s14
 2847              	.LVL246:
 2848              	.LBB618:
 2849              	.LBI618:
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 2850              		.loc 9 241 3 is_stmt 1 view .LVU836
 2851              	.LBB619:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 98


 2852              		.loc 9 242 5 view .LVU837
 2853              		.loc 9 242 31 is_stmt 0 view .LVU838
 2854 0476 B0EEE7EA 		vabs.f32	s28, s15
 2855              	.LBE619:
 2856              	.LBE618:
 194:dsp/string.cpp ****             }
 2857              		.loc 4 194 47 view .LVU839
 2858 047a 3EEE27EA 		vadd.f32	s28, s28, s15
 194:dsp/string.cpp ****             }
 2859              		.loc 4 194 56 view .LVU840
 2860 047e 2EEE07EA 		vmul.f32	s28, s28, s14
 194:dsp/string.cpp ****             }
 2861              		.loc 4 194 32 view .LVU841
 2862 0482 84ED10EA 		vstr.32	s28, [r4, #64]
 2863              	.LVL247:
 194:dsp/string.cpp ****             }
 2864              		.loc 4 194 32 view .LVU842
 2865              	.LBE640:
 201:dsp/string.cpp ****             s = fir_damping_filter_.Process(s);
 2866              		.loc 4 201 15 view .LVU843
 2867 0486 D6ED007A 		vldr.32	s15, [r6]
 2868              	.LVL248:
 202:dsp/string.cpp **** #ifndef MIC_W
 2869              		.loc 4 202 44 view .LVU844
 2870 048a 30EE270A 		vadd.f32	s0, s0, s15
 2871              	.LVL249:
 202:dsp/string.cpp **** #ifndef MIC_W
 2872              		.loc 4 202 44 view .LVU845
 2873 048e FFF7FEFF 		bl	_ZN5torus13DampingFilter7ProcessEf
 2874              	.LVL250:
 204:dsp/string.cpp **** #endif // MIC_W
 2875              		.loc 4 204 66 view .LVU846
 2876 0492 4846     		mov	r0, r9
 2877 0494 FFF7FEFF 		bl	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
 2878              	.LVL251:
 2879              	.LBB641:
 2880              	.LBI641:
  59:../../stmlib/dsp/delay_line.h ****     line_[write_ptr_] = sample;
 2881              		.loc 5 59 15 is_stmt 1 view .LVU847
 2882              	.LBB642:
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2883              		.loc 5 60 11 is_stmt 0 view .LVU848
 2884 0498 626C     		ldr	r2, [r4, #68]
 2885              	.LBE642:
 2886              	.LBE641:
 212:dsp/string.cpp ****         }
 2887              		.loc 4 212 42 view .LVU849
 2888 049a 2846     		mov	r0, r5
 2889              	.LBB644:
 2890              	.LBB643:
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2891              		.loc 5 60 23 view .LVU850
 2892 049c 04EB8201 		add	r1, r4, r2, lsl #2
  61:../../stmlib/dsp/delay_line.h ****   }
 2893              		.loc 5 61 34 view .LVU851
 2894 04a0 02F2FF72 		addw	r2, r2, #2047
  61:../../stmlib/dsp/delay_line.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 99


 2895              		.loc 5 61 47 view .LVU852
 2896 04a4 C2F30A02 		ubfx	r2, r2, #0, #11
  60:../../stmlib/dsp/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2897              		.loc 5 60 23 view .LVU853
 2898 04a8 81ED130A 		vstr.32	s0, [r1, #76]
  61:../../stmlib/dsp/delay_line.h ****   }
 2899              		.loc 5 61 16 view .LVU854
 2900 04ac 6264     		str	r2, [r4, #68]
 2901              	.LVL252:
  61:../../stmlib/dsp/delay_line.h ****   }
 2902              		.loc 5 61 16 view .LVU855
 2903              	.LBE643:
 2904              	.LBE644:
 208:dsp/string.cpp ****             aux_sample_[1] = aux_sample_[0];
 2905              		.loc 4 208 28 view .LVU856
 2906 04ae 226B     		ldr	r2, [r4, #48]	@ float
 211:dsp/string.cpp ****             aux_sample_[0] = string_.Read(comb_delay);
 2907              		.loc 4 211 28 view .LVU857
 2908 04b0 84ED0C0A 		vstr.32	s0, [r4, #48]
 212:dsp/string.cpp ****         }
 2909              		.loc 4 212 42 view .LVU858
 2910 04b4 B0EE6D0A 		vmov.f32	s0, s27
 2911              	.LVL253:
 208:dsp/string.cpp ****             aux_sample_[1] = aux_sample_[0];
 2912              		.loc 4 208 28 view .LVU859
 2913 04b8 6263     		str	r2, [r4, #52]	@ float
 209:dsp/string.cpp **** 
 2914              		.loc 4 209 28 view .LVU860
 2915 04ba A26B     		ldr	r2, [r4, #56]	@ float
 2916 04bc E263     		str	r2, [r4, #60]	@ float
 212:dsp/string.cpp ****         }
 2917              		.loc 4 212 42 view .LVU861
 2918 04be FFF7FEFF 		bl	_ZNK6stmlib9DelayLineIfLj2048EE4ReadEf
 2919              	.LVL254:
 212:dsp/string.cpp ****         }
 2920              		.loc 4 212 28 view .LVU862
 2921 04c2 84ED0E0A 		vstr.32	s0, [r4, #56]
 2922              	.LBE646:
 2923 04c6 A0E6     		b	.L54
 2924              	.LVL255:
 2925              	.L60:
 2926              	.LBB647:
 2927              	.LBB645:
 186:dsp/string.cpp ****                 }
 2928              		.loc 4 186 44 view .LVU863
 2929 04c8 B0EE670A 		vmov.f32	s0, s15
 2930 04cc 2846     		mov	r0, r5
 2931 04ce FFF7FEFF 		bl	_ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf
 2932              	.LVL256:
 186:dsp/string.cpp ****                 }
 2933              		.loc 4 186 44 view .LVU864
 2934 04d2 ADE7     		b	.L63
 2935              	.LVL257:
 2936              	.L52:
 186:dsp/string.cpp ****                 }
 2937              		.loc 4 186 44 view .LVU865
 2938              	.LBE645:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 100


 2939              	.LBE647:
 2940              	.LBE655:
 2941              	.LBE658:
 2942              	.LBB659:
 2943              	.LBI659:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 2944              		.loc 8 49 3 is_stmt 1 view .LVU866
 2945              	.LBB660:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2946              		.loc 8 50 5 view .LVU867
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2947              		.loc 8 50 13 is_stmt 0 view .LVU868
 2948 04d4 C4ED08FA 		vstr.32	s31, [r4, #32]
 2949              	.LVL258:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2950              		.loc 8 50 13 view .LVU869
 2951              	.LBE660:
 2952              	.LBE659:
 2953              	.LBB661:
 2954              	.LBI661:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 2955              		.loc 8 49 3 is_stmt 1 view .LVU870
 2956              	.LBB662:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2957              		.loc 8 50 5 view .LVU871
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2958              		.loc 8 50 13 is_stmt 0 view .LVU872
 2959 04d8 C4ED07EA 		vstr.32	s29, [r4, #28]
 2960              	.LVL259:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2961              		.loc 8 50 13 view .LVU873
 2962              	.LBE662:
 2963              	.LBE661:
 2964              	.LBB663:
 2965              	.LBI663:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 2966              		.loc 8 49 3 is_stmt 1 view .LVU874
 2967              	.LBB664:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2968              		.loc 8 50 5 view .LVU875
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2969              		.loc 8 50 13 is_stmt 0 view .LVU876
 2970 04dc 84ED069A 		vstr.32	s18, [r4, #24]
 2971              	.LVL260:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2972              		.loc 8 50 13 view .LVU877
 2973              	.LBE664:
 2974              	.LBE663:
 2975              	.LBB665:
 2976              	.LBI665:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 2977              		.loc 8 49 3 is_stmt 1 view .LVU878
 2978              	.LBB666:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2979              		.loc 8 50 5 view .LVU879
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2980              		.loc 8 50 13 is_stmt 0 view .LVU880
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 101


 2981 04e0 C4ED058A 		vstr.32	s17, [r4, #20]
 2982              	.LVL261:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 2983              		.loc 8 50 13 view .LVU881
 2984              	.LBE666:
 2985              	.LBE665:
 2986              		.loc 4 218 1 view .LVU882
 2987 04e4 03B0     		add	sp, sp, #12
 2988              		.cfi_def_cfa_offset 100
 2989              		@ sp needed
 2990 04e6 BDEC108B 		vldm	sp!, {d8-d15}
 2991              		.cfi_restore 94
 2992              		.cfi_restore 95
 2993              		.cfi_restore 92
 2994              		.cfi_restore 93
 2995              		.cfi_restore 90
 2996              		.cfi_restore 91
 2997              		.cfi_restore 88
 2998              		.cfi_restore 89
 2999              		.cfi_restore 86
 3000              		.cfi_restore 87
 3001              		.cfi_restore 84
 3002              		.cfi_restore 85
 3003              		.cfi_restore 82
 3004              		.cfi_restore 83
 3005              		.cfi_restore 80
 3006              		.cfi_restore 81
 3007              		.cfi_def_cfa_offset 36
 3008              	.LVL262:
 3009              		.loc 4 218 1 view .LVU883
 3010 04ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3011              	.LVL263:
 3012              	.L86:
 3013              		.loc 4 218 1 view .LVU884
 3014 04ee 00BF     		.align	2
 3015              	.L85:
 3016 04f0 00000000 		.word	_ZN6stmlib6Random10rng_state_E
 3017 04f4 0D661900 		.word	1664525
 3018 04f8 5FF36E3C 		.word	1013904223
 3019 04fc 0000802F 		.word	796917760
 3020 0500 CDCCCC3C 		.word	1020054733
 3021 0504 CDCC4C3E 		.word	1045220557
 3022 0508 3333F33E 		.word	1056125747
 3023 050c 00000000 		.word	0
 3024 0510 0AD7233C 		.word	1008981770
 3025 0514 9A99193E 		.word	1041865114
 3026 0518 3F351EBF 		.word	-1088539329
 3027              		.cfi_endproc
 3028              	.LFE1551:
 3030              		.section	.text._ZN5torus6String7ProcessEPKfPfS3_j,"ax",%progbits
 3031              		.align	1
 3032              		.global	_ZN5torus6String7ProcessEPKfPfS3_j
 3033              		.syntax unified
 3034              		.thumb
 3035              		.thumb_func
 3036              		.fpu fpv5-d16
 3038              	_ZN5torus6String7ProcessEPKfPfS3_j:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 102


 3039              	.LVL264:
 3040              	.LFB1533:
 219:dsp/string.cpp **** 
 220:dsp/string.cpp **** void String::Process(const float* in, float* out, float* aux, size_t size)
 221:dsp/string.cpp **** {
 3041              		.loc 4 221 1 is_stmt 1 view -0
 3042              		.cfi_startproc
 3043              		@ args = 4, pretend = 0, frame = 0
 3044              		@ frame_needed = 0, uses_anonymous_args = 0
 222:dsp/string.cpp ****     if(enable_dispersion_)
 3045              		.loc 4 222 5 view .LVU886
 221:dsp/string.cpp ****     if(enable_dispersion_)
 3046              		.loc 4 221 1 is_stmt 0 view .LVU887
 3047 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 3048              		.cfi_def_cfa_offset 24
 3049              		.cfi_offset 4, -12
 3050              		.cfi_offset 5, -8
 3051              		.cfi_offset 14, -4
 221:dsp/string.cpp ****     if(enable_dispersion_)
 3052              		.loc 4 221 1 view .LVU888
 3053 0002 069C     		ldr	r4, [sp, #24]
 3054              		.loc 4 222 5 view .LVU889
 3055 0004 90F82450 		ldrb	r5, [r0, #36]	@ zero_extendqisi2
 223:dsp/string.cpp ****     {
 224:dsp/string.cpp ****         ProcessInternal<true>(in, out, aux, size);
 3056              		.loc 4 224 30 view .LVU890
 3057 0008 0094     		str	r4, [sp]
 222:dsp/string.cpp ****     {
 3058              		.loc 4 222 5 view .LVU891
 3059 000a 1DB1     		cbz	r5, .L88
 3060              		.loc 4 224 9 is_stmt 1 view .LVU892
 3061              		.loc 4 224 30 is_stmt 0 view .LVU893
 3062 000c FFF7FEFF 		bl	_ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j
 3063              	.LVL265:
 3064              	.L87:
 225:dsp/string.cpp ****     }
 226:dsp/string.cpp ****     else
 227:dsp/string.cpp ****     {
 228:dsp/string.cpp ****         ProcessInternal<false>(in, out, aux, size);
 229:dsp/string.cpp ****     }
 230:dsp/string.cpp **** }
 3065              		.loc 4 230 1 view .LVU894
 3066 0010 03B0     		add	sp, sp, #12
 3067              		.cfi_remember_state
 3068              		.cfi_def_cfa_offset 12
 3069              		@ sp needed
 3070 0012 30BD     		pop	{r4, r5, pc}
 3071              	.LVL266:
 3072              	.L88:
 3073              		.cfi_restore_state
 228:dsp/string.cpp ****     }
 3074              		.loc 4 228 9 is_stmt 1 view .LVU895
 228:dsp/string.cpp ****     }
 3075              		.loc 4 228 31 is_stmt 0 view .LVU896
 3076 0014 FFF7FEFF 		bl	_ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j
 3077              	.LVL267:
 3078              		.loc 4 230 1 view .LVU897
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 103


 3079 0018 FAE7     		b	.L87
 3080              		.cfi_endproc
 3081              	.LFE1533:
 3083              		.text
 3084              	.Letext0:
 3085              		.file 11 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 3086              		.file 12 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 3087              		.file 13 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 3088              		.file 14 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3089              		.file 15 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3090              		.file 16 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3091              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3092              		.file 18 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3093              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3094              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3095              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3096              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3097              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 3098              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 3099              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3100              		.file 26 "../../stmlib/stmlib.h"
 3101              		.file 27 "./dsp/dsp.h"
 3102              		.file 28 "./resources.h"
 3103              		.file 29 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s 			page 104


DEFINED SYMBOLS
                            *ABS*:0000000000000000 string.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:17     .text._ZN6stmlib11InterpolateEPKfff:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:25     .text._ZN6stmlib11InterpolateEPKfff:0000000000000000 _ZN6stmlib11InterpolateEPKfff
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:71     .text._ZN5torus13DampingFilter7ProcessEf:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:78     .text._ZN5torus13DampingFilter7ProcessEf:0000000000000000 _ZN5torus13DampingFilter7ProcessEf
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:152    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:159    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 _ZN6stmlib16SemitonesToRatioEf
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:207    .text._ZN6stmlib16SemitonesToRatioEf:000000000000003c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:214    .text._ZN5torus6String4InitEb:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:221    .text._ZN5torus6String4InitEb:0000000000000000 _ZN5torus6String4InitEb
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:639    .text._ZN5torus6String4InitEb:0000000000000094 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:651    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:658    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:0000000000000000 _ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:717    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:000000000000005c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:727    .text._ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:734    .text._ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf:0000000000000000 _ZNK6stmlib9DelayLineIfLj2048EE11ReadHermiteEf
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:835    .text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:842    .text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff:0000000000000000 _ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:898    .text._ZNK6stmlib9DelayLineIfLj2048EE4ReadEf:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:905    .text._ZNK6stmlib9DelayLineIfLj2048EE4ReadEf:0000000000000000 _ZNK6stmlib9DelayLineIfLj2048EE4ReadEf
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:957    .text._ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:964    .text._ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j:0000000000000000 _ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:1739   .text._ZN5torus6String15ProcessInternalILb0EEEvPKfPfS4_j:00000000000002e0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:1758   .text._ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:1765   .text._ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j:0000000000000000 _ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:2336   .text._ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j:0000000000000284 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:2367   .text._ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j:00000000000002c0 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:3016   .text._ZN5torus6String15ProcessInternalILb1EEEvPKfPfS4_j:00000000000004f0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:3031   .text._ZN5torus6String7ProcessEPKfPfS3_j:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cc6AdWFS.s:3038   .text._ZN5torus6String7ProcessEPKfPfS3_j:0000000000000000 _ZN5torus6String7ProcessEPKfPfS3_j

UNDEFINED SYMBOLS
_ZN6stmlib19lut_pitch_ratio_lowE
_ZN6stmlib20lut_pitch_ratio_highE
memset
_ZN5torus13lut_svf_shiftE
_ZN6stmlib6Random10rng_state_E
