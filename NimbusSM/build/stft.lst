ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stft.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	_ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0:
  25              	.LVL0:
  26              	.LFB5447:
  27              		.file 1 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
   1:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 2


  32:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 3


  89:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 4


 146:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 5


 203:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 6


 260:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 7


 317:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 8


 374:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 9


 431:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 10


 488:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 11


 545:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
  28              		.loc 1 560 5 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 560 5 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
  35              	.LVL1:
  36              		.loc 1 560 5 view .LVU2
  37 0002 1046     		mov	r0, r2
  38              	.LVL2:
  39              	.LBB190:
  40              	.LBI190:
 511:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  41              		.loc 1 511 5 is_stmt 1 view .LVU3
  42              	.LBB191:
  43              	.LBI191:
 505:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
  44              		.loc 1 505 5 view .LVU4
  45              	.LBB192:
  46              	.LBI192:
 463:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  47              		.loc 1 463 5 view .LVU5
  48              	.LBB193:
  49              	.LBB194:
  50              	.LBI194:
 415:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  51              		.loc 1 415 2 view .LVU6
  52              	.LBB195:
 425:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
  53              		.loc 1 425 4 is_stmt 0 view .LVU7
  54 0004 8B42     		cmp	r3, r1
  55 0006 03D0     		beq	.L1
 426:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  56              		.loc 1 426 23 view .LVU8
  57 0008 CA1A     		subs	r2, r1, r3
  58              	.LVL3:
 426:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  59              		.loc 1 426 23 view .LVU9
  60 000a 1946     		mov	r1, r3
  61              	.LVL4:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 12


 426:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  62              		.loc 1 426 23 view .LVU10
  63 000c FFF7FEBF 		b	memmove
  64              	.LVL5:
  65              	.L1:
 426:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  66              		.loc 1 426 23 view .LVU11
  67              	.LBE195:
  68              	.LBE194:
  69              	.LBE193:
  70              	.LBE192:
  71              	.LBE191:
  72              	.LBE190:
 561:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 562:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 563:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 568:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
  73              		.loc 1 570 5 view .LVU12
  74 0010 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE5447:
  78              		.section	.text._ZN4STFT5ResetEv,"ax",%progbits
  79              		.align	1
  80              		.global	_ZN4STFT5ResetEv
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv5-d16
  86              	_ZN4STFT5ResetEv:
  87              	.LVL6:
  88              	.LFB4856:
  89              		.file 2 "dsp/pvoc/stft.cpp"
   1:dsp/pvoc/stft.cpp **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/stft.cpp **** //
   3:dsp/pvoc/stft.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/stft.cpp **** //
   5:dsp/pvoc/stft.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/stft.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/stft.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/stft.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/stft.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/stft.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/stft.cpp **** //
  12:dsp/pvoc/stft.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/stft.cpp **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/stft.cpp **** //
  15:dsp/pvoc/stft.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/stft.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/stft.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/stft.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/stft.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 13


  20:dsp/pvoc/stft.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/stft.cpp **** // THE SOFTWARE.
  22:dsp/pvoc/stft.cpp **** //
  23:dsp/pvoc/stft.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/stft.cpp **** //
  25:dsp/pvoc/stft.cpp **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/stft.cpp **** //
  27:dsp/pvoc/stft.cpp **** // STFT with overlap-add.
  28:dsp/pvoc/stft.cpp **** 
  29:dsp/pvoc/stft.cpp **** #include "stft.h"
  30:dsp/pvoc/stft.cpp **** #include "stmtemp.h"
  31:dsp/pvoc/stft.cpp **** #include <algorithm>
  32:dsp/pvoc/stft.cpp **** 
  33:dsp/pvoc/stft.cpp **** using namespace daisysp;
  34:dsp/pvoc/stft.cpp **** using namespace std;
  35:dsp/pvoc/stft.cpp **** using namespace daisy;
  36:dsp/pvoc/stft.cpp **** 
  37:dsp/pvoc/stft.cpp **** void STFT::Init(FFT*         fft,
  38:dsp/pvoc/stft.cpp ****                 size_t       fft_size,
  39:dsp/pvoc/stft.cpp ****                 size_t       hop_size,
  40:dsp/pvoc/stft.cpp ****                 float*       fft_buffer,
  41:dsp/pvoc/stft.cpp ****                 float*       ifft_buffer,
  42:dsp/pvoc/stft.cpp ****                 const float* window_lut,
  43:dsp/pvoc/stft.cpp ****                 short*       analysis_synthesis_buffer,
  44:dsp/pvoc/stft.cpp ****                 Modifier*    modifier)
  45:dsp/pvoc/stft.cpp **** {
  46:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
  47:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
  48:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
  49:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
  50:dsp/pvoc/stft.cpp ****     {
  51:dsp/pvoc/stft.cpp ****         ++fft_num_passes_;
  52:dsp/pvoc/stft.cpp ****     }
  53:dsp/pvoc/stft.cpp ****     buffer_size_ = fft_size_ + hop_size_;
  54:dsp/pvoc/stft.cpp **** 
  55:dsp/pvoc/stft.cpp ****     fft_ = fft;
  56:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
  57:dsp/pvoc/stft.cpp ****     arm_rfft_fast_init_f32(fft_, fft_size);
  58:dsp/pvoc/stft.cpp **** #else
  59:dsp/pvoc/stft.cpp ****     fft_->Init();
  60:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
  61:dsp/pvoc/stft.cpp **** 
  62:dsp/pvoc/stft.cpp ****     analysis_  = &analysis_synthesis_buffer[0];
  63:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
  64:dsp/pvoc/stft.cpp **** 
  65:dsp/pvoc/stft.cpp ****     ifft_in_ = fft_in_ = fft_buffer;
  66:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
  67:dsp/pvoc/stft.cpp **** 
  68:dsp/pvoc/stft.cpp ****     window_        = window_lut;
  69:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
  70:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
  71:dsp/pvoc/stft.cpp **** 
  72:dsp/pvoc/stft.cpp ****     parameters_ = NULL;
  73:dsp/pvoc/stft.cpp **** 
  74:dsp/pvoc/stft.cpp ****     Reset();
  75:dsp/pvoc/stft.cpp **** }
  76:dsp/pvoc/stft.cpp **** 
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 14


  77:dsp/pvoc/stft.cpp **** void STFT::Reset()
  78:dsp/pvoc/stft.cpp **** {
  90              		.loc 2 78 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  94              		.loc 2 79 5 view .LVU14
  78:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  95              		.loc 2 78 1 is_stmt 0 view .LVU15
  96 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  97              		.cfi_def_cfa_offset 24
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 5, -8
 100              		.cfi_offset 14, -4
  80:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
 101              		.loc 2 80 23 view .LVU16
 102 0002 D0E90332 		ldrd	r3, r2, [r0, #12]
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
 103              		.loc 2 79 18 view .LVU17
 104 0006 0025     		movs	r5, #0
  78:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
 105              		.loc 2 78 1 view .LVU18
 106 0008 0446     		mov	r4, r0
 107              		.loc 2 80 23 view .LVU19
 108 000a 5B00     		lsls	r3, r3, #1
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
 109              		.loc 2 79 18 view .LVU20
 110 000c 4563     		str	r5, [r0, #52]
 111              		.loc 2 80 5 is_stmt 1 view .LVU21
 112              		.loc 2 80 36 is_stmt 0 view .LVU22
 113 000e B3FBF2F1 		udiv	r1, r3, r2
 114 0012 02FB1133 		mls	r3, r2, r1, r3
  81:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  82:dsp/pvoc/stft.cpp ****     fill(&analysis_[0], &analysis_[buffer_size_], 0);
 115              		.loc 2 82 48 view .LVU23
 116 0016 5200     		lsls	r2, r2, #1
 117              	.LBB206:
 118              	.LBB207:
 119              	.LBB208:
 120              	.LBB209:
 571:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 572:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 573:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 574:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 577:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 578:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 579:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 580:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 581:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 15


 587:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 589:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 590:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 591:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 593:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 595:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 596:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 601:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 604:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 605:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 607:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 609:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 610:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward
 612:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 613:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 616:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 618:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 619:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 620:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 621:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 622:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 623:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 624:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 625:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 626:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 628:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 631:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 633:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 634:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 636:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 637:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 638:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 639:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 640:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 641:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 643:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 16


 644:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 646:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 648:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 650:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 652:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 653:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 654:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 655:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 656:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 657:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 658:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 660:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 663:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 665:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 667:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 670:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 671:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 672:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 673:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 674:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 675:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 677:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 678:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 680:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 682:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 683:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 689:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 691:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 693:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 694:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 695:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 696:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 699:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 17


 701:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 704:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 707:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 711:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __result);
 712:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 713:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 714:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 717:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 720:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 721:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 723:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _OI);
 726:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 727:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 728:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(
 731:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 735:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 742:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 745:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 747:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 748:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   std::__niter_base(__result)));
 751:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 752:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 753:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 754:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 756:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 757:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 18


 758:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_OI);
 760:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 761:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 762:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 767:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 768:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 772:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 776:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 777:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 783:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 784:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 790:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 791:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 794:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 797:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 799:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 800:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 807:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 810:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 811:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 812:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 813:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 19


 815:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 819:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 820:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 826:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 827:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 830:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 833:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 835:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 836:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 843:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       std::__miter_base(__last),
 845:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					       __result);
 846:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 847:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 848:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 850:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 852:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 853:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 856:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 859:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 860:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 861:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __value;
 862:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 863:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 864:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 867:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 870:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 871:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __value;
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 20


 872:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first != __last; ++__first)
 873:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	*__first = __tmp;
 121              		.loc 1 873 11 view .LVU24
 122 0018 2946     		mov	r1, r5
 123 001a 0192     		str	r2, [sp, #4]
 124              	.LBE209:
 125              	.LBE208:
 126              	.LBE207:
 127              	.LBE206:
  81:dsp/pvoc/stft.cpp ****     block_size_  = 0;
 128              		.loc 2 81 18 view .LVU25
 129 001c C0E90E35 		strd	r3, r5, [r0, #56]
 130              		.loc 2 82 5 is_stmt 1 view .LVU26
 131              	.LVL7:
 132              	.LBB213:
 133              	.LBI206:
 874:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 875:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 876:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 878:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline typename
 880:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 883:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       const _Tp __tmp = __c;
 884:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 886:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 887:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__first = __tmp;
 889:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return;
 890:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 891:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 892:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 895:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 896:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 899:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 902:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 904:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     void
 906:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _VTp&);
 909:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 910:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 913:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 21


 915:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 916:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     void
 918:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     const _Tp&);
 921:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 922:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 923:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 929:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 930:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 934:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 937:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 134              		.loc 1 937 5 view .LVU27
 135              	.LBB212:
 136              	.LBI207:
 913:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 137              		.loc 1 913 5 view .LVU28
 138              	.LBB211:
 139              	.LBI208:
 868:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 140              		.loc 1 868 5 view .LVU29
 141              	.LBB210:
 873:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 142              		.loc 1 873 11 is_stmt 0 view .LVU30
 143 0020 C06A     		ldr	r0, [r0, #44]
 144              	.LVL8:
 873:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 145              		.loc 1 873 11 view .LVU31
 146 0022 FFF7FEFF 		bl	memset
 147              	.LVL9:
 873:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 148              		.loc 1 873 11 view .LVU32
 149              	.LBE210:
 150              	.LBE211:
 151              	.LBE212:
 152              	.LBE213:
  83:dsp/pvoc/stft.cpp ****     fill(&synthesis_[0], &synthesis_[buffer_size_], 0);
 153              		.loc 2 83 5 is_stmt 1 view .LVU33
 154              	.LBB214:
 155              	.LBI214:
 156              		.loc 1 937 5 view .LVU34
 157              	.LBB215:
 158              	.LBI215:
 913:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 159              		.loc 1 913 5 view .LVU35
 160              	.LBB216:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 22


 161              	.LBI216:
 868:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      const _Tp& __value)
 162              		.loc 1 868 5 view .LVU36
 163              	.LBB217:
 873:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 164              		.loc 1 873 11 is_stmt 0 view .LVU37
 165 0026 019A     		ldr	r2, [sp, #4]
 166 0028 2946     		mov	r1, r5
 167 002a 206B     		ldr	r0, [r4, #48]
 168 002c FFF7FEFF 		bl	memset
 169              	.LVL10:
 873:c:\programdata\chocolatey\lib\gcc-arm-embedded\tools\gcc-arm-none-eabi-10-2020-q4-major\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 170              		.loc 1 873 11 view .LVU38
 171              	.LBE217:
 172              	.LBE216:
 173              	.LBE215:
 174              	.LBE214:
  84:dsp/pvoc/stft.cpp ****     ready_ = 0;
 175              		.loc 2 84 5 is_stmt 1 view .LVU39
  85:dsp/pvoc/stft.cpp ****     done_  = 0;
 176              		.loc 2 85 12 is_stmt 0 view .LVU40
 177 0030 C4E91055 		strd	r5, r5, [r4, #64]
  86:dsp/pvoc/stft.cpp **** }
 178              		.loc 2 86 1 view .LVU41
 179 0034 03B0     		add	sp, sp, #12
 180              		.cfi_def_cfa_offset 12
 181              		@ sp needed
 182 0036 30BD     		pop	{r4, r5, pc}
 183              		.loc 2 86 1 view .LVU42
 184              		.cfi_endproc
 185              	.LFE4856:
 187              		.section	.text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation,
 188              		.align	1
 189              		.global	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv5-d16
 195              	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:
 196              	.LVL11:
 197              	.LFB4855:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 198              		.loc 2 45 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 20, pretend = 0, frame = 8
 201              		@ frame_needed = 0, uses_anonymous_args = 0
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 202              		.loc 2 46 5 view .LVU44
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 203              		.loc 2 45 1 is_stmt 0 view .LVU45
 204 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 205              		.cfi_def_cfa_offset 36
 206              		.cfi_offset 4, -36
 207              		.cfi_offset 5, -32
 208              		.cfi_offset 6, -28
 209              		.cfi_offset 7, -24
 210              		.cfi_offset 8, -20
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 23


 211              		.cfi_offset 9, -16
 212              		.cfi_offset 10, -12
 213              		.cfi_offset 11, -8
 214              		.cfi_offset 14, -4
 215 0004 2DED028B 		vpush.64	{d8}
 216              		.cfi_def_cfa_offset 44
 217              		.cfi_offset 80, -44
 218              		.cfi_offset 81, -40
 219 0008 83B0     		sub	sp, sp, #12
 220              		.cfi_def_cfa_offset 56
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 221              		.loc 2 45 1 view .LVU46
 222 000a 1646     		mov	r6, r2
 223 000c 0446     		mov	r4, r0
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 224              		.loc 2 47 21 view .LVU47
 225 000e C360     		str	r3, [r0, #12]
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 226              		.loc 2 45 1 view .LVU48
 227 0010 129A     		ldr	r2, [sp, #72]
 228              	.LVL12:
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 229              		.loc 2 46 21 view .LVU49
 230 0012 4660     		str	r6, [r0, #4]
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 231              		.loc 2 47 5 is_stmt 1 view .LVU50
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 232              		.loc 2 48 5 view .LVU51
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 233              		.loc 2 45 1 is_stmt 0 view .LVU52
 234 0014 0192     		str	r2, [sp, #4]
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 235              		.loc 2 48 21 view .LVU53
 236 0016 0022     		movs	r2, #0
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 237              		.loc 2 45 1 view .LVU54
 238 0018 DDE90E98 		ldrd	r9, r8, [sp, #56]
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 239              		.loc 2 48 21 view .LVU55
 240 001c 8260     		str	r2, [r0, #8]
  49:dsp/pvoc/stft.cpp ****     {
 241              		.loc 2 49 5 is_stmt 1 view .LVU56
 242              	.LVL13:
 243              	.LBB229:
  49:dsp/pvoc/stft.cpp ****     {
 244              		.loc 2 49 16 is_stmt 0 view .LVU57
 245 001e 3046     		mov	r0, r6
 246              	.LVL14:
  49:dsp/pvoc/stft.cpp ****     {
 247              		.loc 2 49 16 view .LVU58
 248              	.LBE229:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 249              		.loc 2 45 1 view .LVU59
 250 0020 DDE910B7 		ldrd	fp, r7, [sp, #64]
 251              	.LVL15:
 252              	.L6:
 253              	.LBB230:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 24


  49:dsp/pvoc/stft.cpp ****     {
 254              		.loc 2 49 32 is_stmt 1 discriminator 3 view .LVU60
 255 0024 0128     		cmp	r0, #1
 256 0026 04D9     		bls	.L5
  51:dsp/pvoc/stft.cpp ****     }
 257              		.loc 2 51 9 discriminator 2 view .LVU61
 258 0028 A268     		ldr	r2, [r4, #8]
  49:dsp/pvoc/stft.cpp ****     {
 259              		.loc 2 49 39 is_stmt 0 discriminator 2 view .LVU62
 260 002a 4008     		lsrs	r0, r0, #1
 261              	.LVL16:
  51:dsp/pvoc/stft.cpp ****     }
 262              		.loc 2 51 9 discriminator 2 view .LVU63
 263 002c 0132     		adds	r2, r2, #1
 264 002e A260     		str	r2, [r4, #8]
  49:dsp/pvoc/stft.cpp ****     {
 265              		.loc 2 49 5 is_stmt 1 discriminator 2 view .LVU64
 266              	.LVL17:
  49:dsp/pvoc/stft.cpp ****     {
 267              		.loc 2 49 5 is_stmt 0 discriminator 2 view .LVU65
 268 0030 F8E7     		b	.L6
 269              	.L5:
  49:dsp/pvoc/stft.cpp ****     {
 270              		.loc 2 49 5 discriminator 2 view .LVU66
 271              	.LBE230:
  53:dsp/pvoc/stft.cpp **** 
 272              		.loc 2 53 5 is_stmt 1 view .LVU67
  53:dsp/pvoc/stft.cpp **** 
 273              		.loc 2 53 30 is_stmt 0 view .LVU68
 274 0032 3344     		add	r3, r3, r6
 275              	.LVL18:
  53:dsp/pvoc/stft.cpp **** 
 276              		.loc 2 53 30 view .LVU69
 277 0034 0D46     		mov	r5, r1
 278              	.LBB231:
 279              	.LBB232:
 280              	.LBB233:
 281              	.LBB234:
 282              	.LBB235:
 283              		.file 3 "./shy_fft.h"
   1:./shy_fft.h   **** // Copyright 2014 Emilie Gillet.
   2:./shy_fft.h   **** //
   3:./shy_fft.h   **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./shy_fft.h   **** //
   5:./shy_fft.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./shy_fft.h   **** // of this software and associated documentation files (the "Software"), to deal
   7:./shy_fft.h   **** // in the Software without restriction, including without limitation the rights
   8:./shy_fft.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./shy_fft.h   **** // copies of the Software, and to permit persons to whom the Software is
  10:./shy_fft.h   **** // furnished to do so, subject to the following conditions:
  11:./shy_fft.h   **** //
  12:./shy_fft.h   **** // The above copyright notice and this permission notice shall be included in
  13:./shy_fft.h   **** // all copies or substantial portions of the Software.
  14:./shy_fft.h   **** //
  15:./shy_fft.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./shy_fft.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./shy_fft.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 25


  18:./shy_fft.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./shy_fft.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./shy_fft.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./shy_fft.h   **** // THE SOFTWARE.
  22:./shy_fft.h   **** //
  23:./shy_fft.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./shy_fft.h   **** //
  25:./shy_fft.h   **** // -----------------------------------------------------------------------------
  26:./shy_fft.h   **** //
  27:./shy_fft.h   **** // A modest implementation of real FFT for embedded audio applications,
  28:./shy_fft.h   **** // largely based on Laurent de Soras' FFTReal.
  29:./shy_fft.h   **** //
  30:./shy_fft.h   **** // Improvements:
  31:./shy_fft.h   **** // * No dynamic allocations.
  32:./shy_fft.h   **** // * No additional buffering (can use the input buffer as a workspace).
  33:./shy_fft.h   **** // * No big bitrev lookup table.
  34:./shy_fft.h   **** // * Keep the fixed size template signature, but also provide method for
  35:./shy_fft.h   **** //   variable size (up to the fixed size).
  36:./shy_fft.h   **** 
  37:./shy_fft.h   **** #ifndef STMLIB_FFT_SHY_FFT_H_
  38:./shy_fft.h   **** #define STMLIB_FFT_SHY_FFT_H_
  39:./shy_fft.h   **** 
  40:./shy_fft.h   **** #include <algorithm>
  41:./shy_fft.h   **** #include <cmath>
  42:./shy_fft.h   **** 
  43:./shy_fft.h   **** // Compile-time log 2
  44:./shy_fft.h   **** template <size_t x>
  45:./shy_fft.h   **** struct Log2
  46:./shy_fft.h   **** {
  47:./shy_fft.h   ****     enum
  48:./shy_fft.h   ****     {
  49:./shy_fft.h   ****         value = Log2<x / 2>::value + 1
  50:./shy_fft.h   ****     };
  51:./shy_fft.h   ****     typedef char CheckPowerOf2[((x & (x - 1)) == 0 ? 1 : -1)];
  52:./shy_fft.h   **** };
  53:./shy_fft.h   **** 
  54:./shy_fft.h   **** template <>
  55:./shy_fft.h   **** struct Log2<1>
  56:./shy_fft.h   **** {
  57:./shy_fft.h   ****     enum
  58:./shy_fft.h   ****     {
  59:./shy_fft.h   ****         value = 0
  60:./shy_fft.h   ****     };
  61:./shy_fft.h   **** };
  62:./shy_fft.h   **** 
  63:./shy_fft.h   **** 
  64:./shy_fft.h   **** // Bit reversal LUT size.
  65:./shy_fft.h   **** template <size_t>
  66:./shy_fft.h   **** struct BitReversalLut
  67:./shy_fft.h   **** {
  68:./shy_fft.h   ****     enum
  69:./shy_fft.h   ****     {
  70:./shy_fft.h   ****         size = 1
  71:./shy_fft.h   ****     };
  72:./shy_fft.h   **** };
  73:./shy_fft.h   **** template <>
  74:./shy_fft.h   **** struct BitReversalLut<3>
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 26


  75:./shy_fft.h   **** {
  76:./shy_fft.h   ****     enum
  77:./shy_fft.h   ****     {
  78:./shy_fft.h   ****         size = 2
  79:./shy_fft.h   ****     };
  80:./shy_fft.h   **** };
  81:./shy_fft.h   **** template <>
  82:./shy_fft.h   **** struct BitReversalLut<4>
  83:./shy_fft.h   **** {
  84:./shy_fft.h   ****     enum
  85:./shy_fft.h   ****     {
  86:./shy_fft.h   ****         size = 4
  87:./shy_fft.h   ****     };
  88:./shy_fft.h   **** };
  89:./shy_fft.h   **** template <>
  90:./shy_fft.h   **** struct BitReversalLut<5>
  91:./shy_fft.h   **** {
  92:./shy_fft.h   ****     enum
  93:./shy_fft.h   ****     {
  94:./shy_fft.h   ****         size = 8
  95:./shy_fft.h   ****     };
  96:./shy_fft.h   **** };
  97:./shy_fft.h   **** template <>
  98:./shy_fft.h   **** struct BitReversalLut<6>
  99:./shy_fft.h   **** {
 100:./shy_fft.h   ****     enum
 101:./shy_fft.h   ****     {
 102:./shy_fft.h   ****         size = 16
 103:./shy_fft.h   ****     };
 104:./shy_fft.h   **** };
 105:./shy_fft.h   **** template <>
 106:./shy_fft.h   **** struct BitReversalLut<7>
 107:./shy_fft.h   **** {
 108:./shy_fft.h   ****     enum
 109:./shy_fft.h   ****     {
 110:./shy_fft.h   ****         size = 32
 111:./shy_fft.h   ****     };
 112:./shy_fft.h   **** };
 113:./shy_fft.h   **** template <>
 114:./shy_fft.h   **** struct BitReversalLut<8>
 115:./shy_fft.h   **** {
 116:./shy_fft.h   ****     enum
 117:./shy_fft.h   ****     {
 118:./shy_fft.h   ****         size = 64
 119:./shy_fft.h   ****     };
 120:./shy_fft.h   **** };
 121:./shy_fft.h   **** 
 122:./shy_fft.h   **** 
 123:./shy_fft.h   **** // Typed math functions and constants.
 124:./shy_fft.h   **** template <typename T>
 125:./shy_fft.h   **** struct Math
 126:./shy_fft.h   **** {
 127:./shy_fft.h   ****     inline T pi() const;
 128:./shy_fft.h   ****     inline T sqrt_2_div_2() const;
 129:./shy_fft.h   ****     inline T cos(T x);
 130:./shy_fft.h   ****     inline T sin(T x);
 131:./shy_fft.h   **** };
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 27


 132:./shy_fft.h   **** 
 133:./shy_fft.h   **** template <>
 134:./shy_fft.h   **** struct Math<float>
 135:./shy_fft.h   **** {
 136:./shy_fft.h   ****     inline float pi() const { return 3.141592653589793f; }
 137:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 140:./shy_fft.h   **** };
 141:./shy_fft.h   **** 
 142:./shy_fft.h   **** template <>
 143:./shy_fft.h   **** struct Math<double>
 144:./shy_fft.h   **** {
 145:./shy_fft.h   ****     inline double pi() const { return 3.141592653589793; }
 146:./shy_fft.h   ****     inline float  sqrt_2_div_2() const { return 0.7071067811865476; }
 147:./shy_fft.h   ****     inline double cos(double x) { return cos(x); }
 148:./shy_fft.h   ****     inline double sin(double x) { return sin(x); }
 149:./shy_fft.h   **** };
 150:./shy_fft.h   **** 
 151:./shy_fft.h   **** 
 152:./shy_fft.h   **** // Look-up table for trigonometric data.
 153:./shy_fft.h   **** template <typename T, size_t num_passes>
 154:./shy_fft.h   **** class LutPhasor
 155:./shy_fft.h   **** {
 156:./shy_fft.h   ****   public:
 157:./shy_fft.h   ****     LutPhasor() {}
 158:./shy_fft.h   ****     ~LutPhasor() {}
 159:./shy_fft.h   **** 
 160:./shy_fft.h   ****     void Init()
 161:./shy_fft.h   ****     {
 162:./shy_fft.h   ****         Math<T> math;
 163:./shy_fft.h   **** 
 164:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 165:./shy_fft.h   ****         {
 166:./shy_fft.h   ****             size_t pass_size = 1L << (pass - 1);
 167:./shy_fft.h   ****             T*     pass_ptr  = &trig_lut_[(1L << (pass - 1)) - 4];
 168:./shy_fft.h   ****             T      increment = math.pi() / (pass_size << 1);
 169:./shy_fft.h   ****             T      phase     = 0.0;
 170:./shy_fft.h   ****             for(size_t i = 0; i < pass_size; ++i)
 171:./shy_fft.h   ****             {
 172:./shy_fft.h   ****                 pass_ptr[i] = math.cos(phase);
 173:./shy_fft.h   ****                 phase += increment;
 174:./shy_fft.h   ****             }
 175:./shy_fft.h   ****         }
 176:./shy_fft.h   ****     }
 177:./shy_fft.h   **** 
 178:./shy_fft.h   ****     inline void Start(size_t pass)
 179:./shy_fft.h   ****     {
 180:./shy_fft.h   ****         size_t pass_size = 1 << (pass - 1);
 181:./shy_fft.h   ****         cos_ptr_         = &trig_lut_[pass_size - 4 + 1];
 182:./shy_fft.h   ****         sin_ptr_         = &trig_lut_[pass_size + pass_size - 4 - 1];
 183:./shy_fft.h   ****     }
 184:./shy_fft.h   **** 
 185:./shy_fft.h   ****     inline void Rotate()
 186:./shy_fft.h   ****     {
 187:./shy_fft.h   ****         ++cos_ptr_;
 188:./shy_fft.h   ****         --sin_ptr_;
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 28


 189:./shy_fft.h   ****     }
 190:./shy_fft.h   **** 
 191:./shy_fft.h   ****     inline T cos() const { return *cos_ptr_; }
 192:./shy_fft.h   ****     inline T sin() const { return *sin_ptr_; }
 193:./shy_fft.h   **** 
 194:./shy_fft.h   ****   private:
 195:./shy_fft.h   ****     T  trig_lut_[(1 << (num_passes - 1)) - 4];
 196:./shy_fft.h   ****     T* cos_ptr_;
 197:./shy_fft.h   ****     T* sin_ptr_;
 198:./shy_fft.h   **** };
 199:./shy_fft.h   **** 
 200:./shy_fft.h   **** template <typename T>
 201:./shy_fft.h   **** struct LutPhasor<T, 0>
 202:./shy_fft.h   **** {
 203:./shy_fft.h   ****     void Init(){};
 204:./shy_fft.h   **** };
 205:./shy_fft.h   **** template <typename T>
 206:./shy_fft.h   **** struct LutPhasor<T, 1>
 207:./shy_fft.h   **** {
 208:./shy_fft.h   ****     void Init(){};
 209:./shy_fft.h   **** };
 210:./shy_fft.h   **** template <typename T>
 211:./shy_fft.h   **** struct LutPhasor<T, 2>
 212:./shy_fft.h   **** {
 213:./shy_fft.h   ****     void Init(){};
 214:./shy_fft.h   **** };
 215:./shy_fft.h   **** 
 216:./shy_fft.h   **** template <typename T>
 217:./shy_fft.h   **** struct LutPhasor<T, 3>
 218:./shy_fft.h   **** {
 219:./shy_fft.h   ****     void     Init(){};
 220:./shy_fft.h   ****     void     Start(size_t){};
 221:./shy_fft.h   ****     void     Rotate(){};
 222:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 223:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 224:./shy_fft.h   **** };
 225:./shy_fft.h   **** 
 226:./shy_fft.h   **** 
 227:./shy_fft.h   **** // Another way of generating roots of unity.
 228:./shy_fft.h   **** template <typename T, size_t num_passes>
 229:./shy_fft.h   **** class RotationPhasor
 230:./shy_fft.h   **** {
 231:./shy_fft.h   ****   public:
 232:./shy_fft.h   ****     RotationPhasor() {}
 233:./shy_fft.h   ****     ~RotationPhasor() {}
 234:./shy_fft.h   **** 
 235:./shy_fft.h   ****     void Init()
 236:./shy_fft.h   ****     {
 237:./shy_fft.h   ****         Math<T> math;
 238:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 284              		.loc 3 238 20 view .LVU70
 285 0036 4FF0030A 		mov	r10, #3
 286              	.LBE235:
 287              	.LBE234:
 288              	.LBE233:
 289              	.LBE232:
 290              	.LBE231:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 29


  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 291              		.loc 2 55 10 view .LVU71
 292 003a 2160     		str	r1, [r4]
  53:dsp/pvoc/stft.cpp **** 
 293              		.loc 2 53 18 view .LVU72
 294 003c 2361     		str	r3, [r4, #16]
  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 295              		.loc 2 55 5 is_stmt 1 view .LVU73
  59:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 296              		.loc 2 59 5 view .LVU74
 297              	.LVL19:
 298              	.LBB253:
 299              	.LBI231:
 239:./shy_fft.h   ****         {
 240:./shy_fft.h   ****             size_t index            = (pass - 3) << 1;
 241:./shy_fft.h   ****             T      angle            = math.pi() / (1 << pass);
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 243:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 244:./shy_fft.h   ****         }
 245:./shy_fft.h   ****     }
 246:./shy_fft.h   **** 
 247:./shy_fft.h   ****     inline void Start(size_t pass)
 248:./shy_fft.h   ****     {
 249:./shy_fft.h   ****         size_t index = (pass - 3) << 1;
 250:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 252:./shy_fft.h   ****     }
 253:./shy_fft.h   **** 
 254:./shy_fft.h   ****     inline void Rotate()
 255:./shy_fft.h   ****     {
 256:./shy_fft.h   ****         T temp = cos_ * real_ - sin_ * imag_;
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 258:./shy_fft.h   ****         cos_   = temp;
 259:./shy_fft.h   ****     }
 260:./shy_fft.h   **** 
 261:./shy_fft.h   ****     inline T cos() const { return cos_; }
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 263:./shy_fft.h   **** 
 264:./shy_fft.h   ****   private:
 265:./shy_fft.h   ****     T sin_cos_lut_[(num_passes - 3) << 1];
 266:./shy_fft.h   ****     T cos_;
 267:./shy_fft.h   ****     T sin_;
 268:./shy_fft.h   ****     T real_;
 269:./shy_fft.h   ****     T imag_;
 270:./shy_fft.h   **** };
 271:./shy_fft.h   **** 
 272:./shy_fft.h   **** template <typename T>
 273:./shy_fft.h   **** struct RotationPhasor<T, 0>
 274:./shy_fft.h   **** {
 275:./shy_fft.h   ****     void Init(){};
 276:./shy_fft.h   **** };
 277:./shy_fft.h   **** template <typename T>
 278:./shy_fft.h   **** struct RotationPhasor<T, 1>
 279:./shy_fft.h   **** {
 280:./shy_fft.h   ****     void Init(){};
 281:./shy_fft.h   **** };
 282:./shy_fft.h   **** template <typename T>
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 30


 283:./shy_fft.h   **** struct RotationPhasor<T, 2>
 284:./shy_fft.h   **** {
 285:./shy_fft.h   ****     void Init(){};
 286:./shy_fft.h   **** };
 287:./shy_fft.h   **** 
 288:./shy_fft.h   **** template <typename T>
 289:./shy_fft.h   **** struct RotationPhasor<T, 3>
 290:./shy_fft.h   **** {
 291:./shy_fft.h   ****     void     Init(){};
 292:./shy_fft.h   ****     void     Start(size_t){};
 293:./shy_fft.h   ****     void     Rotate(){};
 294:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 295:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 296:./shy_fft.h   **** };
 297:./shy_fft.h   **** 
 298:./shy_fft.h   **** // Direct transform
 299:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 300:./shy_fft.h   **** struct DirectTransform
 301:./shy_fft.h   **** {
 302:./shy_fft.h   ****   private:
 303:./shy_fft.h   ****     enum
 304:./shy_fft.h   ****     {
 305:./shy_fft.h   ****         size = 1 << num_passes
 306:./shy_fft.h   ****     };
 307:./shy_fft.h   **** 
 308:./shy_fft.h   ****   public:
 309:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 310:./shy_fft.h   ****     {
 311:./shy_fft.h   ****         T*      s;
 312:./shy_fft.h   ****         T*      d;
 313:./shy_fft.h   ****         Math<T> math;
 314:./shy_fft.h   **** 
 315:./shy_fft.h   ****         // First and second pass.
 316:./shy_fft.h   ****         d = output;
 317:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 318:./shy_fft.h   ****         {
 319:./shy_fft.h   ****             const T* s  = input;
 320:./shy_fft.h   ****             size_t   r0 = num_passes <= 8
 321:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 322:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 324:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 325:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 326:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 327:./shy_fft.h   **** 
 328:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 331:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 332:./shy_fft.h   ****             d[0] = a + b;
 333:./shy_fft.h   ****             d[2] = a - b;
 334:./shy_fft.h   ****             d += 4;
 335:./shy_fft.h   ****         }
 336:./shy_fft.h   **** 
 337:./shy_fft.h   ****         // Third pass.
 338:./shy_fft.h   ****         s = output;
 339:./shy_fft.h   ****         d = input;
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 31


 340:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 341:./shy_fft.h   ****         {
 342:./shy_fft.h   ****             T v;
 343:./shy_fft.h   **** 
 344:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 346:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 347:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 348:./shy_fft.h   **** 
 349:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 352:./shy_fft.h   **** 
 353:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 356:./shy_fft.h   ****         }
 357:./shy_fft.h   **** 
 358:./shy_fft.h   ****         // Remaining passes.
 359:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 360:./shy_fft.h   ****         {
 361:./shy_fft.h   ****             // Flip source and destination pointers
 362:./shy_fft.h   ****             {
 363:./shy_fft.h   ****                 T* tmp = s;
 364:./shy_fft.h   ****                 s      = d;
 365:./shy_fft.h   ****                 d      = tmp;
 366:./shy_fft.h   ****             }
 367:./shy_fft.h   **** 
 368:./shy_fft.h   ****             size_t n   = 1 << pass;
 369:./shy_fft.h   ****             size_t n_2 = n >> 1;
 370:./shy_fft.h   **** 
 371:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 372:./shy_fft.h   ****             {
 373:./shy_fft.h   ****                 T* s1r = s + i;
 374:./shy_fft.h   ****                 T* s2r = s1r + n;
 375:./shy_fft.h   ****                 T* dr  = d + i;
 376:./shy_fft.h   ****                 T* di  = dr + n;
 377:./shy_fft.h   **** 
 378:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 383:./shy_fft.h   ****                 T* s2i  = s1i + n;
 384:./shy_fft.h   ****                 phasor->Start(pass);
 385:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 386:./shy_fft.h   ****                 {
 387:./shy_fft.h   ****                     T c = phasor->cos();
 388:./shy_fft.h   ****                     T s = phasor->sin();
 389:./shy_fft.h   ****                     T v;
 390:./shy_fft.h   **** 
 391:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 394:./shy_fft.h   **** 
 395:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 32


 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 398:./shy_fft.h   ****                     phasor->Rotate();
 399:./shy_fft.h   ****                 }
 400:./shy_fft.h   ****             }
 401:./shy_fft.h   ****         }
 402:./shy_fft.h   **** 
 403:./shy_fft.h   ****         // Annoying additional data copy step.
 404:./shy_fft.h   ****         if(d != output)
 405:./shy_fft.h   ****         {
 406:./shy_fft.h   ****             std::copy(&d[0], &d[size], &output[0]);
 407:./shy_fft.h   ****         }
 408:./shy_fft.h   ****     }
 409:./shy_fft.h   **** 
 410:./shy_fft.h   ****     // The exact same thing but with "num_passes" as a run-time argument.
 411:./shy_fft.h   ****     void operator()(T*             input,
 412:./shy_fft.h   ****                     T*             output,
 413:./shy_fft.h   ****                     const uint8_t* bit_rev,
 414:./shy_fft.h   ****                     Phasor*        phasor,
 415:./shy_fft.h   ****                     size_t         rt_num_passes)
 416:./shy_fft.h   ****     {
 417:./shy_fft.h   ****         T*      s;
 418:./shy_fft.h   ****         T*      d;
 419:./shy_fft.h   ****         Math<T> math;
 420:./shy_fft.h   ****         size_t  rt_size = 1 << rt_num_passes;
 421:./shy_fft.h   ****         // First and second pass.
 422:./shy_fft.h   ****         d = output;
 423:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 424:./shy_fft.h   ****         {
 425:./shy_fft.h   ****             const T* s  = input;
 426:./shy_fft.h   ****             size_t   r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 430:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 431:./shy_fft.h   **** 
 432:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 435:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 436:./shy_fft.h   ****             d[0] = a + b;
 437:./shy_fft.h   ****             d[2] = a - b;
 438:./shy_fft.h   ****             d += 4;
 439:./shy_fft.h   ****         }
 440:./shy_fft.h   **** 
 441:./shy_fft.h   ****         // Third pass.
 442:./shy_fft.h   ****         s = output;
 443:./shy_fft.h   ****         d = input;
 444:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 445:./shy_fft.h   ****         {
 446:./shy_fft.h   ****             T v;
 447:./shy_fft.h   **** 
 448:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 450:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 451:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 452:./shy_fft.h   **** 
 453:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 33


 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 456:./shy_fft.h   **** 
 457:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 460:./shy_fft.h   ****         }
 461:./shy_fft.h   **** 
 462:./shy_fft.h   ****         // Remaining passes.
 463:./shy_fft.h   ****         for(size_t pass = 3; pass < rt_num_passes; ++pass)
 464:./shy_fft.h   ****         {
 465:./shy_fft.h   ****             // Flip source and destination pointers
 466:./shy_fft.h   ****             {
 467:./shy_fft.h   ****                 T* tmp = s;
 468:./shy_fft.h   ****                 s      = d;
 469:./shy_fft.h   ****                 d      = tmp;
 470:./shy_fft.h   ****             }
 471:./shy_fft.h   **** 
 472:./shy_fft.h   ****             size_t n   = 1 << pass;
 473:./shy_fft.h   ****             size_t n_2 = n >> 1;
 474:./shy_fft.h   **** 
 475:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 476:./shy_fft.h   ****             {
 477:./shy_fft.h   ****                 T* s1r = s + i;
 478:./shy_fft.h   ****                 T* s2r = s1r + n;
 479:./shy_fft.h   ****                 T* dr  = d + i;
 480:./shy_fft.h   ****                 T* di  = dr + n;
 481:./shy_fft.h   **** 
 482:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 487:./shy_fft.h   ****                 T* s2i  = s1i + n;
 488:./shy_fft.h   ****                 phasor->Start(pass);
 489:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 490:./shy_fft.h   ****                 {
 491:./shy_fft.h   ****                     T c = phasor->cos();
 492:./shy_fft.h   ****                     T s = phasor->sin();
 493:./shy_fft.h   ****                     T v;
 494:./shy_fft.h   **** 
 495:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 498:./shy_fft.h   **** 
 499:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 502:./shy_fft.h   ****                     phasor->Rotate();
 503:./shy_fft.h   ****                 }
 504:./shy_fft.h   ****             }
 505:./shy_fft.h   ****         }
 506:./shy_fft.h   **** 
 507:./shy_fft.h   ****         // Annoying additional data copy step.
 508:./shy_fft.h   ****         if(d != output)
 509:./shy_fft.h   ****         {
 510:./shy_fft.h   ****             std::copy(&d[0], &d[rt_size], &output[0]);
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 34


 511:./shy_fft.h   ****         }
 512:./shy_fft.h   ****     }
 513:./shy_fft.h   **** };
 514:./shy_fft.h   **** 
 515:./shy_fft.h   **** template <typename T, typename Phasor>
 516:./shy_fft.h   **** struct DirectTransform<T, 0, Phasor>
 517:./shy_fft.h   **** {
 518:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 519:./shy_fft.h   ****     {
 520:./shy_fft.h   ****         o[0] = i[0];
 521:./shy_fft.h   ****     }
 522:./shy_fft.h   **** };
 523:./shy_fft.h   **** 
 524:./shy_fft.h   **** template <typename T, typename Phasor>
 525:./shy_fft.h   **** struct DirectTransform<T, 1, Phasor>
 526:./shy_fft.h   **** {
 527:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 528:./shy_fft.h   ****     {
 529:./shy_fft.h   ****         o[0] = i[0] + i[1];
 530:./shy_fft.h   ****         o[1] = i[0] - i[1];
 531:./shy_fft.h   ****     }
 532:./shy_fft.h   **** };
 533:./shy_fft.h   **** 
 534:./shy_fft.h   **** template <typename T, typename Phasor>
 535:./shy_fft.h   **** struct DirectTransform<T, 2, Phasor>
 536:./shy_fft.h   **** {
 537:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 538:./shy_fft.h   ****     {
 539:./shy_fft.h   ****         o[1] = i[0] - i[2];
 540:./shy_fft.h   ****         o[3] = i[1] - i[3];
 541:./shy_fft.h   ****         T a  = i[0] + i[2];
 542:./shy_fft.h   ****         T b  = i[1] + i[3];
 543:./shy_fft.h   ****         o[0] = a + b;
 544:./shy_fft.h   ****         o[2] = a - b;
 545:./shy_fft.h   ****     }
 546:./shy_fft.h   **** };
 547:./shy_fft.h   **** 
 548:./shy_fft.h   **** 
 549:./shy_fft.h   **** // Inverse transform
 550:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 551:./shy_fft.h   **** struct InverseTransform
 552:./shy_fft.h   **** {
 553:./shy_fft.h   ****   private:
 554:./shy_fft.h   ****     enum
 555:./shy_fft.h   ****     {
 556:./shy_fft.h   ****         size = 1 << num_passes
 557:./shy_fft.h   ****     };
 558:./shy_fft.h   **** 
 559:./shy_fft.h   ****   public:
 560:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 561:./shy_fft.h   ****     {
 562:./shy_fft.h   ****         T*      s = (T*)(input);
 563:./shy_fft.h   ****         T*      d = output;
 564:./shy_fft.h   ****         Math<T> math;
 565:./shy_fft.h   **** 
 566:./shy_fft.h   ****         // Remaining passes.
 567:./shy_fft.h   ****         for(size_t pass = num_passes - 1; pass >= 3; --pass)
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 35


 568:./shy_fft.h   ****         {
 569:./shy_fft.h   ****             size_t n   = 1 << pass;
 570:./shy_fft.h   ****             size_t n_2 = n >> 1;
 571:./shy_fft.h   **** 
 572:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 573:./shy_fft.h   ****             {
 574:./shy_fft.h   ****                 T* sr  = s + i;
 575:./shy_fft.h   ****                 T* si  = sr + n;
 576:./shy_fft.h   ****                 T* d1r = d + i;
 577:./shy_fft.h   ****                 T* d2r = d1r + n;
 578:./shy_fft.h   **** 
 579:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 583:./shy_fft.h   **** 
 584:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 585:./shy_fft.h   ****                 T* d2i = d1i + n;
 586:./shy_fft.h   ****                 phasor->Start(pass);
 587:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 588:./shy_fft.h   ****                 {
 589:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 591:./shy_fft.h   **** 
 592:./shy_fft.h   ****                     T c  = phasor->cos();
 593:./shy_fft.h   ****                     T s  = phasor->sin();
 594:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 595:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 596:./shy_fft.h   **** 
 597:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 599:./shy_fft.h   ****                     phasor->Rotate();
 600:./shy_fft.h   ****                 }
 601:./shy_fft.h   ****             }
 602:./shy_fft.h   **** 
 603:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 604:./shy_fft.h   ****             if(d == output)
 605:./shy_fft.h   ****             {
 606:./shy_fft.h   ****                 s = output;
 607:./shy_fft.h   ****                 d = input;
 608:./shy_fft.h   ****             }
 609:./shy_fft.h   ****             else
 610:./shy_fft.h   ****             {
 611:./shy_fft.h   ****                 s = input;
 612:./shy_fft.h   ****                 d = output;
 613:./shy_fft.h   ****             }
 614:./shy_fft.h   ****         }
 615:./shy_fft.h   **** 
 616:./shy_fft.h   ****         // Copy data if necessary.
 617:./shy_fft.h   ****         if(d == output)
 618:./shy_fft.h   ****         {
 619:./shy_fft.h   ****             std::copy(&s[0], &s[size], &output[0]);
 620:./shy_fft.h   ****         }
 621:./shy_fft.h   **** 
 622:./shy_fft.h   ****         s = output;
 623:./shy_fft.h   ****         d = input;
 624:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 36


 625:./shy_fft.h   ****         {
 626:./shy_fft.h   ****             T vr, vi;
 627:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 629:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 630:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 631:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 632:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 633:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 637:./shy_fft.h   ****         }
 638:./shy_fft.h   **** 
 639:./shy_fft.h   ****         // First and second pass.
 640:./shy_fft.h   ****         s = input;
 641:./shy_fft.h   ****         d = output;
 642:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 643:./shy_fft.h   ****         {
 644:./shy_fft.h   ****             size_t r0 = num_passes <= 8
 645:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 646:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 648:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 649:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 650:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 651:./shy_fft.h   **** 
 652:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 654:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 655:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 656:./shy_fft.h   **** 
 657:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 661:./shy_fft.h   ****             s += 4;
 662:./shy_fft.h   ****         }
 663:./shy_fft.h   ****     }
 664:./shy_fft.h   **** 
 665:./shy_fft.h   ****     void operator()(T*             input,
 666:./shy_fft.h   ****                     T*             output,
 667:./shy_fft.h   ****                     const uint8_t* bit_rev,
 668:./shy_fft.h   ****                     Phasor*        phasor,
 669:./shy_fft.h   ****                     size_t         rt_num_passes)
 670:./shy_fft.h   ****     {
 671:./shy_fft.h   ****         T*      s = (T*)(input);
 672:./shy_fft.h   ****         T*      d = output;
 673:./shy_fft.h   ****         Math<T> math;
 674:./shy_fft.h   **** 
 675:./shy_fft.h   ****         size_t rt_size = 1 << rt_num_passes;
 676:./shy_fft.h   **** 
 677:./shy_fft.h   ****         // Remaining passes.
 678:./shy_fft.h   ****         for(size_t pass = rt_num_passes - 1; pass >= 3; --pass)
 679:./shy_fft.h   ****         {
 680:./shy_fft.h   ****             size_t n   = 1 << pass;
 681:./shy_fft.h   ****             size_t n_2 = n >> 1;
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 37


 682:./shy_fft.h   **** 
 683:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 684:./shy_fft.h   ****             {
 685:./shy_fft.h   ****                 T* sr  = s + i;
 686:./shy_fft.h   ****                 T* si  = sr + n;
 687:./shy_fft.h   ****                 T* d1r = d + i;
 688:./shy_fft.h   ****                 T* d2r = d1r + n;
 689:./shy_fft.h   **** 
 690:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 694:./shy_fft.h   **** 
 695:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 696:./shy_fft.h   ****                 T* d2i = d1i + n;
 697:./shy_fft.h   ****                 phasor->Start(pass);
 698:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 699:./shy_fft.h   ****                 {
 700:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 702:./shy_fft.h   **** 
 703:./shy_fft.h   ****                     T c  = phasor->cos();
 704:./shy_fft.h   ****                     T s  = phasor->sin();
 705:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 706:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 707:./shy_fft.h   **** 
 708:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 710:./shy_fft.h   ****                     phasor->Rotate();
 711:./shy_fft.h   ****                 }
 712:./shy_fft.h   ****             }
 713:./shy_fft.h   **** 
 714:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 715:./shy_fft.h   ****             if(d == output)
 716:./shy_fft.h   ****             {
 717:./shy_fft.h   ****                 s = output;
 718:./shy_fft.h   ****                 d = input;
 719:./shy_fft.h   ****             }
 720:./shy_fft.h   ****             else
 721:./shy_fft.h   ****             {
 722:./shy_fft.h   ****                 s = input;
 723:./shy_fft.h   ****                 d = output;
 724:./shy_fft.h   ****             }
 725:./shy_fft.h   ****         }
 726:./shy_fft.h   **** 
 727:./shy_fft.h   ****         // Copy data if necessary.
 728:./shy_fft.h   ****         if(d == output)
 729:./shy_fft.h   ****         {
 730:./shy_fft.h   ****             std::copy(&s[0], &s[rt_size], &output[0]);
 731:./shy_fft.h   ****         }
 732:./shy_fft.h   **** 
 733:./shy_fft.h   ****         s = output;
 734:./shy_fft.h   ****         d = input;
 735:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 736:./shy_fft.h   ****         {
 737:./shy_fft.h   ****             T vr, vi;
 738:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 38


 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 740:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 741:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 742:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 743:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 744:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 745:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 748:./shy_fft.h   ****         }
 749:./shy_fft.h   **** 
 750:./shy_fft.h   ****         // First and second pass.
 751:./shy_fft.h   ****         s = input;
 752:./shy_fft.h   ****         d = output;
 753:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 754:./shy_fft.h   ****         {
 755:./shy_fft.h   ****             size_t r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 759:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 760:./shy_fft.h   **** 
 761:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 763:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 764:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 765:./shy_fft.h   **** 
 766:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 770:./shy_fft.h   ****             s += 4;
 771:./shy_fft.h   ****         }
 772:./shy_fft.h   ****     }
 773:./shy_fft.h   **** };
 774:./shy_fft.h   **** 
 775:./shy_fft.h   **** template <typename T, typename Phasor>
 776:./shy_fft.h   **** struct InverseTransform<T, 0, Phasor>
 777:./shy_fft.h   **** {
 778:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 779:./shy_fft.h   ****     {
 780:./shy_fft.h   ****         o[0] = i[0];
 781:./shy_fft.h   ****     }
 782:./shy_fft.h   **** };
 783:./shy_fft.h   **** 
 784:./shy_fft.h   **** template <typename T, typename Phasor>
 785:./shy_fft.h   **** struct InverseTransform<T, 1, Phasor>
 786:./shy_fft.h   **** {
 787:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 788:./shy_fft.h   ****     {
 789:./shy_fft.h   ****         o[0] = i[0] + i[1];
 790:./shy_fft.h   ****         o[1] = i[0] - i[1];
 791:./shy_fft.h   ****     }
 792:./shy_fft.h   **** };
 793:./shy_fft.h   **** 
 794:./shy_fft.h   **** template <typename T, typename Phasor>
 795:./shy_fft.h   **** struct InverseTransform<T, 2, Phasor>
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 39


 796:./shy_fft.h   **** {
 797:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 798:./shy_fft.h   ****     {
 799:./shy_fft.h   ****         T a = i[0] + i[2];
 800:./shy_fft.h   ****         T b = i[0] - i[2];
 801:./shy_fft.h   **** 
 802:./shy_fft.h   ****         o[0] = a + i[1] * T(2);
 803:./shy_fft.h   ****         o[2] = a - i[1] * T(2);
 804:./shy_fft.h   ****         o[1] = b + i[3] * T(2);
 805:./shy_fft.h   ****         o[3] = b - i[3] * T(2);
 806:./shy_fft.h   ****     }
 807:./shy_fft.h   **** };
 808:./shy_fft.h   **** 
 809:./shy_fft.h   **** 
 810:./shy_fft.h   **** template <typename T                               = float,
 811:./shy_fft.h   ****           size_t size                              = 16,
 812:./shy_fft.h   ****           template <typename, size_t> class Phasor = LutPhasor>
 813:./shy_fft.h   **** class ShyFFT
 814:./shy_fft.h   **** {
 815:./shy_fft.h   ****   public:
 816:./shy_fft.h   ****     enum
 817:./shy_fft.h   ****     {
 818:./shy_fft.h   ****         num_passes = Log2<size>::value,
 819:./shy_fft.h   ****         max_size   = size
 820:./shy_fft.h   ****     };
 821:./shy_fft.h   **** 
 822:./shy_fft.h   ****   private:
 823:./shy_fft.h   ****     typedef Phasor<T, num_passes> PhasorType;
 824:./shy_fft.h   **** 
 825:./shy_fft.h   ****   public:
 826:./shy_fft.h   ****     ShyFFT() {}
 827:./shy_fft.h   ****     ~ShyFFT() {}
 828:./shy_fft.h   **** 
 829:./shy_fft.h   ****     void Init()
 300              		.loc 3 829 10 view .LVU75
 301              	.LBB250:
 830:./shy_fft.h   ****     {
 831:./shy_fft.h   ****         bit_rev_[0] = 0;
 302              		.loc 3 831 21 is_stmt 0 view .LVU76
 303 003e 0023     		movs	r3, #0
 304 0040 81F85830 		strb	r3, [r1, #88]
 305              	.LVL20:
 306              		.loc 3 831 21 view .LVU77
 307              	.LBE250:
 308              	.LBE253:
 832:./shy_fft.h   ****         for(size_t i = 1; i < sizeof(bit_rev_); ++i)
 309              		.loc 3 832 29 is_stmt 1 view .LVU78
 310              	.LBB254:
 311              	.LBB251:
 312              	.LBB248:
 313              	.LBI233:
 235:./shy_fft.h   ****     {
 314              		.loc 3 235 10 view .LVU79
 315              	.LBB246:
 316              	.LBB244:
 238:./shy_fft.h   ****         {
 317              		.loc 3 238 35 view .LVU80
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 40


 318              	.L7:
 238:./shy_fft.h   ****         {
 319              		.loc 3 238 35 is_stmt 0 view .LVU81
 320              	.LBE244:
 321              	.LBE246:
 322              	.LBE248:
 323              	.LBE251:
 324              	.LBE254:
 136:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 325              		.loc 3 136 31 is_stmt 1 view .LVU82
 326              	.LBB255:
 327              	.LBB252:
 328              	.LBB249:
 329              	.LBB247:
 330              	.LBB245:
 331              	.LBB236:
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 332              		.loc 3 241 54 is_stmt 0 view .LVU83
 333 0044 0123     		movs	r3, #1
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 334              		.loc 3 241 20 view .LVU84
 335 0046 9FED1D7A 		vldr.32	s14, .L9
 336              	.LBE236:
 238:./shy_fft.h   ****         {
 337              		.loc 3 238 35 view .LVU85
 338 004a 0835     		adds	r5, r5, #8
 339              	.LBB241:
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 340              		.loc 3 241 54 view .LVU86
 341 004c 03FA0AF3 		lsl	r3, r3, r10
 342              	.LBE241:
 238:./shy_fft.h   ****         {
 343              		.loc 3 238 9 view .LVU87
 344 0050 0AF1010A 		add	r10, r10, #1
 345              	.LVL21:
 346              	.LBB242:
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 347              		.loc 3 241 49 view .LVU88
 348 0054 07EE903A 		vmov	s15, r3	@ int
 349 0058 F8EEE77A 		vcvt.f32.s32	s15, s15
 241:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 350              		.loc 3 241 20 view .LVU89
 351 005c 87EE278A 		vdiv.f32	s16, s14, s15
 352              	.LVL22:
 353              	.LBB237:
 354              	.LBI237:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 355              		.loc 3 138 18 is_stmt 1 view .LVU90
 356              	.LBB238:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 357              		.loc 3 138 33 view .LVU91
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 358              		.loc 3 138 44 is_stmt 0 view .LVU92
 359 0060 B0EE480A 		vmov.f32	s0, s16
 360 0064 FFF7FEFF 		bl	cosf
 361              	.LVL23:
 138:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 41


 362              		.loc 3 138 44 view .LVU93
 363              	.LBE238:
 364              	.LBE237:
 242:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 365              		.loc 3 242 37 view .LVU94
 366 0068 05ED020A 		vstr.32	s0, [r5, #-8]
 367              	.LVL24:
 368              	.LBB239:
 369              	.LBI239:
 139:./shy_fft.h   **** };
 370              		.loc 3 139 18 is_stmt 1 view .LVU95
 371              	.LBB240:
 139:./shy_fft.h   **** };
 372              		.loc 3 139 33 view .LVU96
 139:./shy_fft.h   **** };
 373              		.loc 3 139 44 is_stmt 0 view .LVU97
 374 006c B0EE480A 		vmov.f32	s0, s16
 375 0070 FFF7FEFF 		bl	sinf
 376              	.LVL25:
 139:./shy_fft.h   **** };
 377              		.loc 3 139 44 view .LVU98
 378              	.LBE240:
 379              	.LBE239:
 380              	.LBE242:
 238:./shy_fft.h   ****         {
 381              		.loc 3 238 35 view .LVU99
 382 0074 BAF10C0F 		cmp	r10, #12
 383              	.LBB243:
 243:./shy_fft.h   ****         }
 384              		.loc 3 243 37 view .LVU100
 385 0078 05ED010A 		vstr.32	s0, [r5, #-4]
 386              	.LBE243:
 238:./shy_fft.h   ****         {
 387              		.loc 3 238 9 is_stmt 1 view .LVU101
 388              	.LVL26:
 238:./shy_fft.h   ****         {
 389              		.loc 3 238 35 view .LVU102
 390 007c E2D1     		bne	.L7
 391              	.LVL27:
 238:./shy_fft.h   ****         {
 392              		.loc 3 238 35 is_stmt 0 view .LVU103
 393              	.LBE245:
 394              	.LBE247:
 395              	.LBE249:
 396              	.LBE252:
 397              	.LBE255:
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 398              		.loc 2 62 5 is_stmt 1 view .LVU104
  63:dsp/pvoc/stft.cpp **** 
 399              		.loc 2 63 57 is_stmt 0 view .LVU105
 400 007e 2369     		ldr	r3, [r4, #16]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 401              		.loc 2 69 48 view .LVU106
 402 0080 4FF48052 		mov	r2, #4096
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 403              		.loc 2 62 16 view .LVU107
 404 0084 E762     		str	r7, [r4, #44]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 42


  63:dsp/pvoc/stft.cpp **** 
 405              		.loc 2 63 5 is_stmt 1 view .LVU108
  74:dsp/pvoc/stft.cpp **** }
 406              		.loc 2 74 10 is_stmt 0 view .LVU109
 407 0086 2046     		mov	r0, r4
  63:dsp/pvoc/stft.cpp **** 
 408              		.loc 2 63 18 view .LVU110
 409 0088 07EB4307 		add	r7, r7, r3, lsl #1
  70:dsp/pvoc/stft.cpp **** 
 410              		.loc 2 70 20 view .LVU111
 411 008c 019B     		ldr	r3, [sp, #4]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 412              		.loc 2 65 24 view .LVU112
 413 008e C4F81490 		str	r9, [r4, #20]
  70:dsp/pvoc/stft.cpp **** 
 414              		.loc 2 70 20 view .LVU113
 415 0092 E364     		str	r3, [r4, #76]
  72:dsp/pvoc/stft.cpp **** 
 416              		.loc 2 72 17 view .LVU114
 417 0094 0023     		movs	r3, #0
  63:dsp/pvoc/stft.cpp **** 
 418              		.loc 2 63 16 view .LVU115
 419 0096 2763     		str	r7, [r4, #48]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 420              		.loc 2 65 5 is_stmt 1 view .LVU116
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 421              		.loc 2 65 14 is_stmt 0 view .LVU117
 422 0098 C4F82090 		str	r9, [r4, #32]
  66:dsp/pvoc/stft.cpp **** 
 423              		.loc 2 66 5 is_stmt 1 view .LVU118
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 424              		.loc 2 68 20 is_stmt 0 view .LVU119
 425 009c C4F824B0 		str	fp, [r4, #36]
  72:dsp/pvoc/stft.cpp **** 
 426              		.loc 2 72 17 view .LVU120
 427 00a0 A364     		str	r3, [r4, #72]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 428              		.loc 2 69 48 view .LVU121
 429 00a2 B2FBF6F6 		udiv	r6, r2, r6
 430              	.LVL28:
  66:dsp/pvoc/stft.cpp **** 
 431              		.loc 2 66 15 view .LVU122
 432 00a6 C4E90688 		strd	r8, r8, [r4, #24]
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 433              		.loc 2 68 5 is_stmt 1 view .LVU123
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 434              		.loc 2 69 5 view .LVU124
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 435              		.loc 2 69 20 is_stmt 0 view .LVU125
 436 00aa A662     		str	r6, [r4, #40]
  70:dsp/pvoc/stft.cpp **** 
 437              		.loc 2 70 5 is_stmt 1 view .LVU126
  72:dsp/pvoc/stft.cpp **** 
 438              		.loc 2 72 5 view .LVU127
  74:dsp/pvoc/stft.cpp **** }
 439              		.loc 2 74 5 view .LVU128
  75:dsp/pvoc/stft.cpp **** 
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 43


 440              		.loc 2 75 1 is_stmt 0 view .LVU129
 441 00ac 03B0     		add	sp, sp, #12
 442              		.cfi_def_cfa_offset 44
 443              		@ sp needed
 444 00ae BDEC028B 		vldm	sp!, {d8}
 445              		.cfi_restore 80
 446              		.cfi_restore 81
 447              		.cfi_def_cfa_offset 36
 448 00b2 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 449              		.cfi_restore 14
 450              		.cfi_restore 11
 451              		.cfi_restore 10
 452              		.cfi_restore 9
 453              		.cfi_restore 8
 454              		.cfi_restore 7
 455              		.cfi_restore 6
 456              		.cfi_restore 5
 457              		.cfi_restore 4
 458              		.cfi_def_cfa_offset 0
 459              	.LVL29:
  74:dsp/pvoc/stft.cpp **** }
 460              		.loc 2 74 10 view .LVU130
 461 00b6 FFF7FEBF 		b	_ZN4STFT5ResetEv
 462              	.LVL30:
 463              	.L10:
  74:dsp/pvoc/stft.cpp **** }
 464              		.loc 2 74 10 view .LVU131
 465 00ba 00BF     		.align	2
 466              	.L9:
 467 00bc DB0F4940 		.word	1078530011
 468              		.cfi_endproc
 469              	.LFE4855:
 471              		.section	.text._ZN4STFT7ProcessERK10ParametersPKfPfjj,"ax",%progbits
 472              		.align	1
 473              		.global	_ZN4STFT7ProcessERK10ParametersPKfPfjj
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv5-d16
 479              	_ZN4STFT7ProcessERK10ParametersPKfPfjj:
 480              	.LVL31:
 481              	.LFB4857:
  87:dsp/pvoc/stft.cpp **** 
  88:dsp/pvoc/stft.cpp **** void STFT::Process(const Parameters& parameters,
  89:dsp/pvoc/stft.cpp ****                    const float*      input,
  90:dsp/pvoc/stft.cpp ****                    float*            output,
  91:dsp/pvoc/stft.cpp ****                    size_t            size,
  92:dsp/pvoc/stft.cpp ****                    size_t            stride)
  93:dsp/pvoc/stft.cpp **** {
 482              		.loc 2 93 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 8, pretend = 0, frame = 8
 485              		@ frame_needed = 0, uses_anonymous_args = 0
  94:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 486              		.loc 2 94 5 view .LVU133
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 487              		.loc 2 93 1 is_stmt 0 view .LVU134
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 44


 488 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 489              		.cfi_def_cfa_offset 48
 490              		.cfi_offset 4, -36
 491              		.cfi_offset 5, -32
 492              		.cfi_offset 6, -28
 493              		.cfi_offset 7, -24
 494              		.cfi_offset 8, -20
 495              		.cfi_offset 9, -16
 496              		.cfi_offset 10, -12
 497              		.cfi_offset 11, -8
 498              		.cfi_offset 14, -4
 499              	.LBB263:
 500              	.LBB264:
 501              	.LBB265:
  95:dsp/pvoc/stft.cpp ****     while(size)
  96:dsp/pvoc/stft.cpp ****     {
  97:dsp/pvoc/stft.cpp ****         size_t processed = min(size, hop_size_ - block_size_);
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
  99:dsp/pvoc/stft.cpp ****         {
 100:dsp/pvoc/stft.cpp ****             int32_t sample             = *input * 32768.0f;
 101:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 102:dsp/pvoc/stft.cpp ****             *output
 103:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 104:dsp/pvoc/stft.cpp ****             input += stride;
 502              		.loc 2 104 19 view .LVU135
 503 0004 0D9E     		ldr	r6, [sp, #52]
 504              	.LBE265:
 505              	.LBE264:
 506              	.LBE263:
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 507              		.loc 2 93 1 view .LVU136
 508 0006 DDF830B0 		ldr	fp, [sp, #48]
 509              	.LBB279:
 510              	.LBB273:
 511              	.LBB266:
 512              		.loc 2 104 19 view .LVU137
 513 000a B600     		lsls	r6, r6, #2
 514              	.LBE266:
 515              	.LBE273:
 516              	.LBE279:
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 517              		.loc 2 93 1 view .LVU138
 518 000c 0193     		str	r3, [sp, #4]
  94:dsp/pvoc/stft.cpp ****     while(size)
 519              		.loc 2 94 17 view .LVU139
 520 000e 8164     		str	r1, [r0, #72]
 521              	.LVL32:
 522              	.L12:
  95:dsp/pvoc/stft.cpp ****     while(size)
 523              		.loc 2 95 5 is_stmt 1 view .LVU140
  95:dsp/pvoc/stft.cpp ****     while(size)
 524              		.loc 2 95 11 view .LVU141
 525 0010 BBF1000F 		cmp	fp, #0
 526 0014 47D0     		beq	.L11
 527              	.LBB280:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 528              		.loc 2 97 9 view .LVU142
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 45


  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 529              		.loc 2 97 38 is_stmt 0 view .LVU143
 530 0016 D0F80CE0 		ldr	lr, [r0, #12]
 531              	.LBB274:
 532              	.LBB267:
 101:dsp/pvoc/stft.cpp ****             *output
 533              		.loc 2 101 23 view .LVU144
 534 001a 9146     		mov	r9, r2
 535              	.LBE267:
 536              	.LBE274:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 537              		.loc 2 97 50 view .LVU145
 538 001c C16B     		ldr	r1, [r0, #60]
 539              	.LVL33:
 540              	.LBB275:
  98:dsp/pvoc/stft.cpp ****         {
 541              		.loc 2 98 20 view .LVU146
 542 001e 4FF0000C 		mov	ip, #0
 543              	.LBB268:
 101:dsp/pvoc/stft.cpp ****             *output
 544              		.loc 2 101 23 view .LVU147
 545 0022 446B     		ldr	r4, [r0, #52]
 546              	.LBE268:
 547              	.LBE275:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 548              		.loc 2 97 48 view .LVU148
 549 0024 AEEB0105 		sub	r5, lr, r1
 550              	.LBB276:
 551              	.LBB269:
 101:dsp/pvoc/stft.cpp ****             *output
 552              		.loc 2 101 23 view .LVU149
 553 0028 DDF80480 		ldr	r8, [sp, #4]
 554 002c 5D45     		cmp	r5, fp
 555 002e 28BF     		it	cs
 556 0030 5D46     		movcs	r5, fp
 557              	.LVL34:
 101:dsp/pvoc/stft.cpp ****             *output
 558              		.loc 2 101 23 view .LVU150
 559              	.LBE269:
 560              	.LBE276:
  98:dsp/pvoc/stft.cpp ****         {
 561              		.loc 2 98 9 is_stmt 1 view .LVU151
 562              	.L15:
 563              	.LBB277:
  98:dsp/pvoc/stft.cpp ****         {
 564              		.loc 2 98 29 discriminator 3 view .LVU152
 565 0032 6545     		cmp	r5, ip
 566 0034 1CD0     		beq	.L14
 567              	.LBB270:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 568              		.loc 2 100 13 discriminator 2 view .LVU153
 569              	.LVL35:
 101:dsp/pvoc/stft.cpp ****             *output
 570              		.loc 2 101 13 discriminator 2 view .LVU154
 101:dsp/pvoc/stft.cpp ****             *output
 571              		.loc 2 101 13 is_stmt 0 discriminator 2 view .LVU155
 572              	.LBE270:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 46


 573              	.LBE277:
 574              	.LBE280:
 575              		.file 4 "./stmtemp.h"
   1:./stmtemp.h   **** #include "daisy.h"
   2:./stmtemp.h   **** #include "daisysp.h"
   3:./stmtemp.h   **** #include "resources.h"
   4:./stmtemp.h   **** 
   5:./stmtemp.h   **** using namespace daisy;
   6:./stmtemp.h   **** using namespace daisysp;
   7:./stmtemp.h   **** 
   8:./stmtemp.h   **** #define MAKE_INTEGRAL_FRACTIONAL(x)                   \
   9:./stmtemp.h   ****     int32_t x##_integral   = static_cast<int32_t>(x); \
  10:./stmtemp.h   ****     float   x##_fractional = x - static_cast<float>(x##_integral);
  11:./stmtemp.h   **** 
  12:./stmtemp.h   **** #define SLOPE(out, in, positive, negative)                \
  13:./stmtemp.h   ****     {                                                     \
  14:./stmtemp.h   ****         float error = (in)-out;                           \
  15:./stmtemp.h   ****         out += (error > 0 ? positive : negative) * error; \
  16:./stmtemp.h   ****     }
  17:./stmtemp.h   **** 
  18:./stmtemp.h   **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in)-out);
  19:./stmtemp.h   **** 
  20:./stmtemp.h   **** #define CONSTRAIN(var, min, max) \
  21:./stmtemp.h   ****     if(var < (min))              \
  22:./stmtemp.h   ****     {                            \
  23:./stmtemp.h   ****         var = (min);             \
  24:./stmtemp.h   ****     }                            \
  25:./stmtemp.h   ****     else if(var > (max))         \
  26:./stmtemp.h   ****     {                            \
  27:./stmtemp.h   ****         var = (max);             \
  28:./stmtemp.h   ****     }
  29:./stmtemp.h   **** 
  30:./stmtemp.h   **** #define JOIN(lhs, rhs) JOIN_1(lhs, rhs)
  31:./stmtemp.h   **** #define JOIN_1(lhs, rhs) JOIN_2(lhs, rhs)
  32:./stmtemp.h   **** #define JOIN_2(lhs, rhs) lhs##rhs
  33:./stmtemp.h   **** 
  34:./stmtemp.h   **** #define STATIC_ASSERT(expression, message)                                  \
  35:./stmtemp.h   ****     struct JOIN(__static_assertion_at_line_, __LINE__)                      \
  36:./stmtemp.h   ****     {                                                                       \
  37:./stmtemp.h   ****         impl::StaticAssertion<static_cast<bool>((expression))>              \
  38:./stmtemp.h   ****             JOIN(JOIN(JOIN(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), \
  39:./stmtemp.h   ****                  message);                                                  \
  40:./stmtemp.h   ****     };
  41:./stmtemp.h   **** 
  42:./stmtemp.h   **** namespace impl
  43:./stmtemp.h   **** {
  44:./stmtemp.h   **** template <bool>
  45:./stmtemp.h   **** struct StaticAssertion;
  46:./stmtemp.h   **** 
  47:./stmtemp.h   **** template <>
  48:./stmtemp.h   **** struct StaticAssertion<true>
  49:./stmtemp.h   **** {
  50:./stmtemp.h   **** }; // StaticAssertion<true>
  51:./stmtemp.h   **** 
  52:./stmtemp.h   **** template <int i>
  53:./stmtemp.h   **** struct StaticAssertionTest
  54:./stmtemp.h   **** {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 47


  55:./stmtemp.h   **** }; // StaticAssertionTest<int>
  56:./stmtemp.h   **** 
  57:./stmtemp.h   **** } // namespace impl
  58:./stmtemp.h   **** 
  59:./stmtemp.h   **** template <uint32_t a, uint32_t b, uint32_t c, uint32_t d>
  60:./stmtemp.h   **** struct FourCC
  61:./stmtemp.h   **** {
  62:./stmtemp.h   ****     static const uint32_t value = (((((d << 8) | c) << 8) | b) << 8) | a;
  63:./stmtemp.h   **** };
  64:./stmtemp.h   **** 
  65:./stmtemp.h   **** class CosineOscillator
  66:./stmtemp.h   **** {
  67:./stmtemp.h   ****   public:
  68:./stmtemp.h   ****     CosineOscillator() {}
  69:./stmtemp.h   ****     ~CosineOscillator() {}
  70:./stmtemp.h   **** 
  71:./stmtemp.h   ****     void Init(float freq)
  72:./stmtemp.h   ****     {
  73:./stmtemp.h   ****         float sample_rate = 48000; //hardcoded for now
  74:./stmtemp.h   ****         phs_inc_          = freq / sample_rate;
  75:./stmtemp.h   ****     }
  76:./stmtemp.h   **** 
  77:./stmtemp.h   ****     float Next()
  78:./stmtemp.h   ****     {
  79:./stmtemp.h   ****         phs_ += phs_inc_;
  80:./stmtemp.h   **** 
  81:./stmtemp.h   ****         if(phs_ >= 1.f)
  82:./stmtemp.h   ****         {
  83:./stmtemp.h   ****             phs_ -= 1.f;
  84:./stmtemp.h   ****         }
  85:./stmtemp.h   **** 
  86:./stmtemp.h   ****         value_ = cos(phs_);
  87:./stmtemp.h   **** 
  88:./stmtemp.h   ****         return value_;
  89:./stmtemp.h   ****     }
  90:./stmtemp.h   **** 
  91:./stmtemp.h   ****     float value() { return value_; }
  92:./stmtemp.h   **** 
  93:./stmtemp.h   ****   private:
  94:./stmtemp.h   ****     float value_ = 0.f;
  95:./stmtemp.h   ****     float sample_rate_;
  96:./stmtemp.h   ****     float phs_ = 0.f;
  97:./stmtemp.h   ****     float phs_inc_;
  98:./stmtemp.h   **** };
  99:./stmtemp.h   **** 
 100:./stmtemp.h   **** inline int32_t Clip16(int32_t x)
 101:./stmtemp.h   **** {
 102:./stmtemp.h   ****     if(x < -32768)
 576              		.loc 4 102 5 is_stmt 1 discriminator 2 view .LVU156
 577              	.LBB281:
 578              	.LBB278:
 579              	.LBB271:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 580              		.loc 2 100 49 is_stmt 0 discriminator 2 view .LVU157
 581 0036 D9ED007A 		vldr.32	s15, [r9]
 101:dsp/pvoc/stft.cpp ****             *output
 582              		.loc 2 101 35 discriminator 2 view .LVU158
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 48


 583 003a 04EB0C0A 		add	r10, r4, ip
 101:dsp/pvoc/stft.cpp ****             *output
 584              		.loc 2 101 40 discriminator 2 view .LVU159
 585 003e C36A     		ldr	r3, [r0, #44]
 586              		.loc 2 104 19 discriminator 2 view .LVU160
 587 0040 B144     		add	r9, r9, r6
 588              	.LVL36:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 589              		.loc 2 100 21 discriminator 2 view .LVU161
 590 0042 B0EE677A 		vmov.f32	s14, s15
 591              	.LBE271:
  98:dsp/pvoc/stft.cpp ****         {
 592              		.loc 2 98 9 discriminator 2 view .LVU162
 593 0046 0CF1010C 		add	ip, ip, #1
 594              	.LVL37:
 595              	.LBB272:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 596              		.loc 2 100 21 discriminator 2 view .LVU163
 597 004a BEEEE87A 		vcvt.s32.f32	s14, s14, #15
 598 004e 17EE107A 		vmov	r7, s14	@ int
 101:dsp/pvoc/stft.cpp ****             *output
 599              		.loc 2 101 40 discriminator 2 view .LVU164
 600 0052 07F30F07 		ssat	r7, #16, r7
 601 0056 23F81A70 		strh	r7, [r3, r10, lsl #1]	@ movhi
 102:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 602              		.loc 2 102 13 is_stmt 1 discriminator 2 view .LVU165
 103:dsp/pvoc/stft.cpp ****             input += stride;
 603              		.loc 2 103 64 is_stmt 0 discriminator 2 view .LVU166
 604 005a 076B     		ldr	r7, [r0, #48]
 103:dsp/pvoc/stft.cpp ****             input += stride;
 605              		.loc 2 103 19 discriminator 2 view .LVU167
 606 005c 37F91A30 		ldrsh	r3, [r7, r10, lsl #1]
 607 0060 07EE903A 		vmov	s15, r3	@ int
 608              	.LVL38:
 103:dsp/pvoc/stft.cpp ****             input += stride;
 609              		.loc 2 103 67 discriminator 2 view .LVU168
 610 0064 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
 103:dsp/pvoc/stft.cpp ****             input += stride;
 611              		.loc 2 103 17 discriminator 2 view .LVU169
 612 0068 C8ED007A 		vstr.32	s15, [r8]
 613              		.loc 2 104 13 is_stmt 1 discriminator 2 view .LVU170
 614              	.LVL39:
 105:dsp/pvoc/stft.cpp ****             output += stride;
 615              		.loc 2 105 13 discriminator 2 view .LVU171
 616              		.loc 2 105 20 is_stmt 0 discriminator 2 view .LVU172
 617 006c B044     		add	r8, r8, r6
 618              	.LVL40:
 619              		.loc 2 105 20 discriminator 2 view .LVU173
 620              	.LBE272:
  98:dsp/pvoc/stft.cpp ****         {
 621              		.loc 2 98 9 is_stmt 1 discriminator 2 view .LVU174
  98:dsp/pvoc/stft.cpp ****         {
 622              		.loc 2 98 9 is_stmt 0 discriminator 2 view .LVU175
 623 006e E0E7     		b	.L15
 624              	.L14:
  98:dsp/pvoc/stft.cpp ****         {
 625              		.loc 2 98 9 discriminator 2 view .LVU176
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 49


 626              	.LBE278:
 106:dsp/pvoc/stft.cpp ****         }
 107:dsp/pvoc/stft.cpp **** 
 108:dsp/pvoc/stft.cpp ****         block_size_ += processed;
 109:dsp/pvoc/stft.cpp ****         size -= processed;
 110:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 627              		.loc 2 110 21 view .LVU177
 628 0070 2C44     		add	r4, r4, r5
 629 0072 05FB06F7 		mul	r7, r5, r6
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 630              		.loc 2 108 21 view .LVU178
 631 0076 2944     		add	r1, r1, r5
 109:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 632              		.loc 2 109 14 view .LVU179
 633 0078 ABEB050B 		sub	fp, fp, r5
 634              	.LVL41:
 111:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 635              		.loc 2 111 27 view .LVU180
 636 007c 0569     		ldr	r5, [r0, #16]
 637 007e 3A44     		add	r2, r2, r7
 638 0080 019B     		ldr	r3, [sp, #4]
 639              		.loc 2 111 9 view .LVU181
 640 0082 AC42     		cmp	r4, r5
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 641              		.loc 2 110 21 view .LVU182
 642 0084 4463     		str	r4, [r0, #52]
 643 0086 3B44     		add	r3, r3, r7
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 644              		.loc 2 108 21 view .LVU183
 645 0088 C163     		str	r1, [r0, #60]
 112:dsp/pvoc/stft.cpp ****         {
 113:dsp/pvoc/stft.cpp ****             buffer_ptr_ -= buffer_size_;
 646              		.loc 2 113 25 view .LVU184
 647 008a 28BF     		it	cs
 648 008c 641B     		subcs	r4, r4, r5
 649 008e 0193     		str	r3, [sp, #4]
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 650              		.loc 2 108 9 is_stmt 1 view .LVU185
 109:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 651              		.loc 2 109 9 view .LVU186
 652              	.LVL42:
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 653              		.loc 2 110 9 view .LVU187
 111:dsp/pvoc/stft.cpp ****         {
 654              		.loc 2 111 9 view .LVU188
 655              		.loc 2 113 13 view .LVU189
 656              		.loc 2 113 25 is_stmt 0 view .LVU190
 657 0090 28BF     		it	cs
 658 0092 4463     		strcs	r4, [r0, #52]
 114:dsp/pvoc/stft.cpp ****         }
 115:dsp/pvoc/stft.cpp ****         if(block_size_ >= hop_size_)
 659              		.loc 2 115 9 is_stmt 1 view .LVU191
 660 0094 8E45     		cmp	lr, r1
 661 0096 BBD8     		bhi	.L12
 116:dsp/pvoc/stft.cpp ****         {
 117:dsp/pvoc/stft.cpp ****             block_size_ -= hop_size_;
 662              		.loc 2 117 13 view .LVU192
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 50


 663              		.loc 2 117 25 is_stmt 0 view .LVU193
 664 0098 A1EB0E01 		sub	r1, r1, lr
 665 009c C163     		str	r1, [r0, #60]
 118:dsp/pvoc/stft.cpp ****             ++ready_;
 666              		.loc 2 118 13 is_stmt 1 view .LVU194
 667 009e 016C     		ldr	r1, [r0, #64]
 668 00a0 0131     		adds	r1, r1, #1
 669 00a2 0164     		str	r1, [r0, #64]
 670 00a4 B4E7     		b	.L12
 671              	.LVL43:
 672              	.L11:
 673              		.loc 2 118 13 is_stmt 0 view .LVU195
 674              	.LBE281:
 119:dsp/pvoc/stft.cpp ****         }
 120:dsp/pvoc/stft.cpp ****     }
 121:dsp/pvoc/stft.cpp **** }
 675              		.loc 2 121 1 view .LVU196
 676 00a6 03B0     		add	sp, sp, #12
 677              		.cfi_def_cfa_offset 36
 678              		@ sp needed
 679 00a8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 680              		.loc 2 121 1 view .LVU197
 681              		.cfi_endproc
 682              	.LFE4857:
 684              		.section	.text._ZN14RotationPhasorIfLj12EE5StartEj,"axG",%progbits,_ZN14RotationPhasorIfLj12EE5Sta
 685              		.align	1
 686              		.weak	_ZN14RotationPhasorIfLj12EE5StartEj
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 690              		.fpu fpv5-d16
 692              	_ZN14RotationPhasorIfLj12EE5StartEj:
 693              	.LVL44:
 694              	.LFB5337:
 247:./shy_fft.h   ****     {
 695              		.loc 3 247 17 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 249:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 700              		.loc 3 249 30 is_stmt 0 view .LVU199
 701 0000 0339     		subs	r1, r1, #3
 702              	.LVL45:
 249:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 703              		.loc 3 249 30 view .LVU200
 704 0002 00EBC101 		add	r1, r0, r1, lsl #3
 705              	.LVL46:
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 706              		.loc 3 250 36 view .LVU201
 707 0006 0B68     		ldr	r3, [r1]	@ float
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 708              		.loc 3 250 22 view .LVU202
 709 0008 0365     		str	r3, [r0, #80]	@ float
 250:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 710              		.loc 3 250 14 view .LVU203
 711 000a 8364     		str	r3, [r0, #72]	@ float
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 51


 251:./shy_fft.h   ****     }
 712              		.loc 3 251 36 view .LVU204
 713 000c 4B68     		ldr	r3, [r1, #4]	@ float
 251:./shy_fft.h   ****     }
 714              		.loc 3 251 22 view .LVU205
 715 000e 4365     		str	r3, [r0, #84]	@ float
 251:./shy_fft.h   ****     }
 716              		.loc 3 251 14 view .LVU206
 717 0010 C364     		str	r3, [r0, #76]	@ float
 252:./shy_fft.h   **** 
 718              		.loc 3 252 5 view .LVU207
 719 0012 7047     		bx	lr
 720              		.cfi_endproc
 721              	.LFE5337:
 723              		.section	.text._ZN14RotationPhasorIfLj12EE6RotateEv,"axG",%progbits,_ZN14RotationPhasorIfLj12EE6Ro
 724              		.align	1
 725              		.weak	_ZN14RotationPhasorIfLj12EE6RotateEv
 726              		.syntax unified
 727              		.thumb
 728              		.thumb_func
 729              		.fpu fpv5-d16
 731              	_ZN14RotationPhasorIfLj12EE6RotateEv:
 732              	.LVL47:
 733              	.LFB5340:
 254:./shy_fft.h   ****     {
 734              		.loc 3 254 17 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 739              		.loc 3 256 33 is_stmt 0 view .LVU209
 740 0000 D0ED135A 		vldr.32	s11, [r0, #76]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 741              		.loc 3 256 40 view .LVU210
 742 0004 D0ED156A 		vldr.32	s13, [r0, #84]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 743              		.loc 3 256 18 view .LVU211
 744 0008 90ED126A 		vldr.32	s12, [r0, #72]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 745              		.loc 3 256 11 view .LVU212
 746 000c 26EEE57A 		vnmul.f32	s14, s13, s11
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 747              		.loc 3 256 25 view .LVU213
 748 0010 D0ED147A 		vldr.32	s15, [r0, #80]
 256:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 749              		.loc 3 256 11 view .LVU214
 750 0014 A6EE277A 		vfma.f32	s14, s12, s15
 751              	.LVL48:
 257:./shy_fft.h   ****         cos_   = temp;
 752              		.loc 3 257 38 view .LVU215
 753 0018 67EEA57A 		vmul.f32	s15, s15, s11
 257:./shy_fft.h   ****         cos_   = temp;
 754              		.loc 3 257 31 view .LVU216
 755 001c E6EE267A 		vfma.f32	s15, s12, s13
 258:./shy_fft.h   ****     }
 756              		.loc 3 258 16 view .LVU217
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 52


 757 0020 80ED127A 		vstr.32	s14, [r0, #72]
 257:./shy_fft.h   ****         cos_   = temp;
 758              		.loc 3 257 16 view .LVU218
 759 0024 C0ED137A 		vstr.32	s15, [r0, #76]
 259:./shy_fft.h   **** 
 760              		.loc 3 259 5 view .LVU219
 761 0028 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE5340:
 765              		.section	.text._ZN4STFT6BufferEv,"ax",%progbits
 766              		.align	1
 767              		.global	_ZN4STFT6BufferEv
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv5-d16
 773              	_ZN4STFT6BufferEv:
 774              	.LVL49:
 775              	.LFB4858:
 122:dsp/pvoc/stft.cpp **** 
 123:dsp/pvoc/stft.cpp **** void STFT::Buffer()
 124:dsp/pvoc/stft.cpp **** {
 776              		.loc 2 124 1 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 80
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 125:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 780              		.loc 2 125 5 view .LVU221
 781 0000 D0E91023 		ldrd	r2, r3, [r0, #64]
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 782              		.loc 2 124 1 is_stmt 0 view .LVU222
 783 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 784              		.cfi_def_cfa_offset 36
 785              		.cfi_offset 4, -36
 786              		.cfi_offset 5, -32
 787              		.cfi_offset 6, -28
 788              		.cfi_offset 7, -24
 789              		.cfi_offset 8, -20
 790              		.cfi_offset 9, -16
 791              		.cfi_offset 10, -12
 792              		.cfi_offset 11, -8
 793              		.cfi_offset 14, -4
 794              		.loc 2 125 5 view .LVU223
 795 0008 9A42     		cmp	r2, r3
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 796              		.loc 2 124 1 view .LVU224
 797 000a 95B0     		sub	sp, sp, #84
 798              		.cfi_def_cfa_offset 120
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 799              		.loc 2 124 1 view .LVU225
 800 000c 0446     		mov	r4, r0
 801              		.loc 2 125 5 view .LVU226
 802 000e 00F00186 		beq	.L21
 126:dsp/pvoc/stft.cpp ****     {
 127:dsp/pvoc/stft.cpp ****         return;
 128:dsp/pvoc/stft.cpp ****     }
 129:dsp/pvoc/stft.cpp **** 
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 53


 130:dsp/pvoc/stft.cpp ****     // Copy block to FFT buffer and apply window.
 131:dsp/pvoc/stft.cpp ****     size_t       source_ptr = process_ptr_;
 803              		.loc 2 131 5 is_stmt 1 view .LVU227
 804              		.loc 2 131 18 is_stmt 0 view .LVU228
 805 0012 836B     		ldr	r3, [r0, #56]
 806              	.LVL50:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 807              		.loc 2 132 5 is_stmt 1 view .LVU229
 808              	.LBB361:
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 809              		.loc 2 133 16 is_stmt 0 view .LVU230
 810 0014 0022     		movs	r2, #0
 811              	.LBE361:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 812              		.loc 2 132 18 view .LVU231
 813 0016 416A     		ldr	r1, [r0, #36]
 814              	.LVL51:
 815              		.loc 2 133 5 is_stmt 1 view .LVU232
 816              	.LBB362:
 817              		.loc 2 133 27 is_stmt 0 view .LVU233
 818 0018 4668     		ldr	r6, [r0, #4]
 134:dsp/pvoc/stft.cpp ****     {
 135:dsp/pvoc/stft.cpp ****         fft_in_[i] = w[0] * analysis_[source_ptr];
 819              		.loc 2 135 9 view .LVU234
 820 001a 4569     		ldr	r5, [r0, #20]
 821              	.LVL52:
 822              	.L26:
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 823              		.loc 2 133 25 is_stmt 1 discriminator 1 view .LVU235
 824 001c 9642     		cmp	r6, r2
 825 001e 18D0     		beq	.L24
 826              		.loc 2 135 9 view .LVU236
 827              		.loc 2 135 49 is_stmt 0 view .LVU237
 828 0020 E76A     		ldr	r7, [r4, #44]
 829              		.loc 2 135 20 view .LVU238
 830 0022 05EB8200 		add	r0, r5, r2, lsl #2
 831              		.loc 2 135 27 view .LVU239
 832 0026 91ED007A 		vldr.32	s14, [r1]
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 833              		.loc 2 133 5 view .LVU240
 834 002a 0132     		adds	r2, r2, #1
 835              	.LVL53:
 836              		.loc 2 135 27 view .LVU241
 837 002c 37F91370 		ldrsh	r7, [r7, r3, lsl #1]
 136:dsp/pvoc/stft.cpp ****         ++source_ptr;
 838              		.loc 2 136 9 view .LVU242
 839 0030 0133     		adds	r3, r3, #1
 840              	.LVL54:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 841              		.loc 2 135 27 view .LVU243
 842 0032 07EE907A 		vmov	s15, r7	@ int
 843 0036 F8EEE77A 		vcvt.f32.s32	s15, s15
 844 003a 67EE877A 		vmul.f32	s15, s15, s14
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 845              		.loc 2 135 20 view .LVU244
 846 003e C0ED007A 		vstr.32	s15, [r0]
 847              		.loc 2 136 9 is_stmt 1 view .LVU245
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 54


 848              	.LVL55:
 137:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 849              		.loc 2 137 9 view .LVU246
 850              		.loc 2 137 26 is_stmt 0 view .LVU247
 851 0042 2069     		ldr	r0, [r4, #16]
 852              		.loc 2 137 9 view .LVU248
 853 0044 9842     		cmp	r0, r3
 138:dsp/pvoc/stft.cpp ****         {
 139:dsp/pvoc/stft.cpp ****             source_ptr -= buffer_size_;
 854              		.loc 2 139 13 is_stmt 1 view .LVU249
 855              		.loc 2 139 24 is_stmt 0 view .LVU250
 856 0046 98BF     		it	ls
 857 0048 1B1A     		subls	r3, r3, r0
 858              	.LVL56:
 140:dsp/pvoc/stft.cpp ****         }
 141:dsp/pvoc/stft.cpp ****         w += window_stride_;
 859              		.loc 2 141 9 is_stmt 1 view .LVU251
 860              		.loc 2 141 11 is_stmt 0 view .LVU252
 861 004a A06A     		ldr	r0, [r4, #40]
 862 004c 01EB8001 		add	r1, r1, r0, lsl #2
 863              	.LVL57:
 133:dsp/pvoc/stft.cpp ****     {
 864              		.loc 2 133 5 is_stmt 1 view .LVU253
 133:dsp/pvoc/stft.cpp ****     {
 865              		.loc 2 133 5 is_stmt 0 view .LVU254
 866 0050 E4E7     		b	.L26
 867              	.L24:
 133:dsp/pvoc/stft.cpp ****     {
 868              		.loc 2 133 5 view .LVU255
 869              	.LBE362:
 142:dsp/pvoc/stft.cpp ****     }
 143:dsp/pvoc/stft.cpp **** 
 144:dsp/pvoc/stft.cpp ****     // Compute FFT. fft_in is lost.
 145:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 146:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, fft_in_, fft_out_, 0);
 147:dsp/pvoc/stft.cpp ****     copy(&fft_out_[0], &fft_out_[fft_size_], &fft_in_[0]);
 148:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 149:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 150:dsp/pvoc/stft.cpp ****     {
 151:dsp/pvoc/stft.cpp ****         fft_out_[i]                 = fft_in_[2 * i];
 152:dsp/pvoc/stft.cpp ****         fft_out_[i + fft_size_ / 2] = fft_in_[2 * i + 1];
 153:dsp/pvoc/stft.cpp ****     }
 154:dsp/pvoc/stft.cpp **** #else
 155:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 870              		.loc 2 155 5 is_stmt 1 view .LVU256
 871 0052 B6F5805F 		cmp	r6, #4096
 156:dsp/pvoc/stft.cpp ****     {
 157:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_, fft_num_passes_);
 872              		.loc 2 157 9 is_stmt 0 view .LVU257
 873 0056 2068     		ldr	r0, [r4]
 874              		.loc 2 157 21 view .LVU258
 875 0058 D4F818B0 		ldr	fp, [r4, #24]
 155:dsp/pvoc/stft.cpp ****     {
 876              		.loc 2 155 5 view .LVU259
 877 005c 00F02E82 		beq	.L27
 878              		.loc 2 157 9 is_stmt 1 view .LVU260
 879              		.loc 2 157 21 is_stmt 0 view .LVU261
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 55


 880 0060 A368     		ldr	r3, [r4, #8]
 881              	.LVL58:
 882              	.LBB363:
 883              	.LBB364:
 884              	.LBB365:
 885              	.LBB366:
 886              	.LBB367:
 887              	.LBB368:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 888              		.loc 3 428 32 view .LVU262
 889 0062 5E46     		mov	r6, fp
 890              	.LBE368:
 423:./shy_fft.h   ****         {
 891              		.loc 3 423 20 view .LVU263
 892 0064 0027     		movs	r7, #0
 893              	.LBE367:
 894              	.LBE366:
 895              	.LBE365:
 896              	.LBE364:
 897              	.LBE363:
 898              		.loc 2 157 21 view .LVU264
 899 0066 0493     		str	r3, [sp, #16]
 900              	.LVL59:
 901              	.LBB412:
 902              	.LBI363:
 833:./shy_fft.h   ****         {
 834:./shy_fft.h   ****             uint8_t byte        = 0;
 835:./shy_fft.h   ****             uint8_t source      = i << 2;
 836:./shy_fft.h   ****             uint8_t destination = static_cast<uint8_t>(size >> 1);
 837:./shy_fft.h   ****             while(source)
 838:./shy_fft.h   ****             {
 839:./shy_fft.h   ****                 if(source & 1)
 840:./shy_fft.h   ****                 {
 841:./shy_fft.h   ****                     byte |= destination;
 842:./shy_fft.h   ****                 }
 843:./shy_fft.h   ****                 destination >>= 1;
 844:./shy_fft.h   ****                 source >>= 1;
 845:./shy_fft.h   ****             }
 846:./shy_fft.h   ****             bit_rev_[i] = byte;
 847:./shy_fft.h   ****         }
 848:./shy_fft.h   ****         phasor_.Init();
 849:./shy_fft.h   ****     }
 850:./shy_fft.h   **** 
 851:./shy_fft.h   ****     void Direct(T* input, T* output)
 852:./shy_fft.h   ****     {
 853:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 854:./shy_fft.h   ****         d(input,
 855:./shy_fft.h   ****           output,
 856:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 857:./shy_fft.h   ****           &phasor_);
 858:./shy_fft.h   ****     }
 859:./shy_fft.h   **** 
 860:./shy_fft.h   ****     void Inverse(T* input, T* output)
 861:./shy_fft.h   ****     {
 862:./shy_fft.h   ****         InverseTransform<T, num_passes, Phasor<T, num_passes>> i;
 863:./shy_fft.h   ****         i(input,
 864:./shy_fft.h   ****           output,
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 56


 865:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 866:./shy_fft.h   ****           &phasor_);
 867:./shy_fft.h   ****     }
 868:./shy_fft.h   **** 
 869:./shy_fft.h   ****     void Direct(T* input, T* output, size_t n)
 903              		.loc 3 869 10 is_stmt 1 view .LVU265
 904              	.LBB408:
 905              	.LBB404:
 906              	.LBI365:
 411:./shy_fft.h   ****                     T*             output,
 907              		.loc 3 411 10 view .LVU266
 908              	.LBB400:
 420:./shy_fft.h   ****         // First and second pass.
 909              		.loc 3 420 29 is_stmt 0 view .LVU267
 910 0068 0123     		movs	r3, #1
 911              	.LVL60:
 420:./shy_fft.h   ****         // First and second pass.
 912              		.loc 3 420 29 view .LVU268
 913 006a 049A     		ldr	r2, [sp, #16]
 914              	.LVL61:
 420:./shy_fft.h   ****         // First and second pass.
 915              		.loc 3 420 29 view .LVU269
 916 006c 9340     		lsls	r3, r3, r2
 917              	.LBB373:
 918              	.LBB369:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 919              		.loc 3 428 43 view .LVU270
 920 006e 4FEA930C 		lsr	ip, r3, #2
 921              	.LBE369:
 922              	.LBE373:
 420:./shy_fft.h   ****         // First and second pass.
 923              		.loc 3 420 29 view .LVU271
 924 0072 0593     		str	r3, [sp, #20]
 925              	.LVL62:
 420:./shy_fft.h   ****         // First and second pass.
 926              		.loc 3 420 29 view .LVU272
 927 0074 5B46     		mov	r3, fp
 928              	.LVL63:
 929              	.LBB374:
 930              	.LBB370:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 931              		.loc 3 428 32 view .LVU273
 932 0076 4FEA4C09 		lsl	r9, ip, #1
 933              	.LVL64:
 934              	.L30:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 935              		.loc 3 428 32 view .LVU274
 936              	.LBE370:
 423:./shy_fft.h   ****         {
 937              		.loc 3 423 29 is_stmt 1 view .LVU275
 938 007a 059A     		ldr	r2, [sp, #20]
 939 007c 1036     		adds	r6, r6, #16
 940              	.LVL65:
 423:./shy_fft.h   ****         {
 941              		.loc 3 423 29 is_stmt 0 view .LVU276
 942 007e BA42     		cmp	r2, r7
 943 0080 46D8     		bhi	.L28
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 57


 944 0082 2A46     		mov	r2, r5
 945              	.LBE374:
 946              	.LBB375:
 444:./shy_fft.h   ****         {
 947              		.loc 3 444 20 view .LVU277
 948 0084 0021     		movs	r1, #0
 949              	.LVL66:
 950              	.L29:
 444:./shy_fft.h   ****         {
 951              		.loc 3 444 29 is_stmt 1 view .LVU278
 952 0086 059E     		ldr	r6, [sp, #20]
 953 0088 2033     		adds	r3, r3, #32
 954 008a 2032     		adds	r2, r2, #32
 955 008c 8E42     		cmp	r6, r1
 956 008e 7DD9     		bls	.L72
 957              	.LBB376:
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 958              		.loc 3 448 29 is_stmt 0 view .LVU279
 959 0090 13ED047A 		vldr.32	s14, [r3, #-16]
 960              	.LBE376:
 444:./shy_fft.h   ****         {
 961              		.loc 3 444 42 view .LVU280
 962 0094 0831     		adds	r1, r1, #8
 963              	.LVL67:
 964              	.LBB377:
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 965              		.loc 3 448 29 view .LVU281
 966 0096 53ED087A 		vldr.32	s15, [r3, #-32]
 967 009a 77EE877A 		vadd.f32	s15, s15, s14
 448:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 968              		.loc 3 448 22 view .LVU282
 969 009e 42ED087A 		vstr.32	s15, [r2, #-32]
 449:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 970              		.loc 3 449 29 view .LVU283
 971 00a2 13ED047A 		vldr.32	s14, [r3, #-16]
 972 00a6 53ED087A 		vldr.32	s15, [r3, #-32]
 973 00aa 77EEC77A 		vsub.f32	s15, s15, s14
 449:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 974              		.loc 3 449 22 view .LVU284
 975 00ae 42ED047A 		vstr.32	s15, [r2, #-16]
 450:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 976              		.loc 3 450 25 view .LVU285
 977 00b2 53F8186C 		ldr	r6, [r3, #-24]	@ float
 450:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 978              		.loc 3 450 22 view .LVU286
 979 00b6 42F8186C 		str	r6, [r2, #-24]	@ float
 451:./shy_fft.h   **** 
 980              		.loc 3 451 25 view .LVU287
 981 00ba 53F8086C 		ldr	r6, [r3, #-8]	@ float
 451:./shy_fft.h   **** 
 982              		.loc 3 451 22 view .LVU288
 983 00be 42F8086C 		str	r6, [r2, #-8]	@ float
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 984              		.loc 3 453 34 view .LVU289
 985 00c2 53ED017A 		vldr.32	s15, [r3, #-4]
 986 00c6 13ED037A 		vldr.32	s14, [r3, #-12]
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 58


 987              		.loc 3 454 33 view .LVU290
 988 00ca 53ED076A 		vldr.32	s13, [r3, #-28]
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 989              		.loc 3 453 34 view .LVU291
 990 00ce 37EE677A 		vsub.f32	s14, s14, s15
 991              	.LVL68:
 453:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 992              		.loc 3 453 34 view .LVU292
 993              	.LBE377:
 994              	.LBE375:
 995              	.LBE400:
 996              	.LBE404:
 997              	.LBE408:
 998              	.LBE412:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 999              		.loc 3 137 41 is_stmt 1 view .LVU293
 1000              	.LBB413:
 1001              	.LBB409:
 1002              	.LBB405:
 1003              	.LBB401:
 1004              	.LBB380:
 1005              	.LBB378:
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1006              		.loc 3 454 33 is_stmt 0 view .LVU294
 1007 00d2 DFED8C7A 		vldr.32	s15, .L99
 1008 00d6 E7EE276A 		vfma.f32	s13, s14, s15
 454:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1009              		.loc 3 454 22 view .LVU295
 1010 00da 42ED076A 		vstr.32	s13, [r2, #-28]
 455:./shy_fft.h   **** 
 1011              		.loc 3 455 33 view .LVU296
 1012 00de 53ED076A 		vldr.32	s13, [r3, #-28]
 1013 00e2 E7EE676A 		vfms.f32	s13, s14, s15
 455:./shy_fft.h   **** 
 1014              		.loc 3 455 22 view .LVU297
 1015 00e6 42ED056A 		vstr.32	s13, [r2, #-20]
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1016              		.loc 3 457 34 view .LVU298
 1017 00ea 53ED016A 		vldr.32	s13, [r3, #-4]
 1018 00ee 13ED037A 		vldr.32	s14, [r3, #-12]
 1019              	.LVL69:
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1020              		.loc 3 457 34 view .LVU299
 1021 00f2 37EE267A 		vadd.f32	s14, s14, s13
 1022              	.LVL70:
 457:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1023              		.loc 3 457 34 view .LVU300
 1024              	.LBE378:
 1025              	.LBE380:
 1026              	.LBE401:
 1027              	.LBE405:
 1028              	.LBE409:
 1029              	.LBE413:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1030              		.loc 3 137 41 is_stmt 1 view .LVU301
 1031              	.LBB414:
 1032              	.LBB410:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 59


 1033              	.LBB406:
 1034              	.LBB402:
 1035              	.LBB381:
 1036              	.LBB379:
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1037              		.loc 3 458 26 is_stmt 0 view .LVU302
 1038 00f6 53ED056A 		vldr.32	s13, [r3, #-20]
 1039 00fa E7EE276A 		vfma.f32	s13, s14, s15
 458:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1040              		.loc 3 458 22 view .LVU303
 1041 00fe 42ED036A 		vstr.32	s13, [r2, #-12]
 459:./shy_fft.h   ****         }
 1042              		.loc 3 459 26 view .LVU304
 1043 0102 53ED056A 		vldr.32	s13, [r3, #-20]
 1044 0106 D7EE276A 		vfnms.f32	s13, s14, s15
 459:./shy_fft.h   ****         }
 1045              		.loc 3 459 22 view .LVU305
 1046 010a 42ED016A 		vstr.32	s13, [r2, #-4]
 1047              	.LBE379:
 444:./shy_fft.h   ****         {
 1048              		.loc 3 444 9 is_stmt 1 view .LVU306
 1049              	.LVL71:
 444:./shy_fft.h   ****         {
 1050              		.loc 3 444 9 is_stmt 0 view .LVU307
 1051 010e BAE7     		b	.L29
 1052              	.LVL72:
 1053              	.L28:
 444:./shy_fft.h   ****         {
 1054              		.loc 3 444 9 view .LVU308
 1055              	.LBE381:
 1056              	.LBB382:
 1057              	.LBB371:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1058              		.loc 3 426 39 view .LVU309
 1059 0110 FAB2     		uxtb	r2, r7
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1060              		.loc 3 426 45 view .LVU310
 1061 0112 7D49     		ldr	r1, .L99+4
 1062 0114 12F801E0 		ldrb	lr, [r2, r1]	@ zero_extendqisi2
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1063              		.loc 3 426 65 view .LVU311
 1064 0118 3A0A     		lsrs	r2, r7, #8
 1065              	.LBE371:
 423:./shy_fft.h   ****         {
 1066              		.loc 3 423 42 view .LVU312
 1067 011a 0437     		adds	r7, r7, #4
 1068              	.LVL73:
 1069              	.LBB372:
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1070              		.loc 3 426 69 view .LVU313
 1071 011c 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 427:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 1072              		.loc 3 427 32 view .LVU314
 1073 011e 0499     		ldr	r1, [sp, #16]
 426:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 1074              		.loc 3 426 53 view .LVU315
 1075 0120 42EA0E22 		orr	r2, r2, lr, lsl #8
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 60


 427:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 1076              		.loc 3 427 32 view .LVU316
 1077 0124 C1F11001 		rsb	r1, r1, #16
 427:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 1078              		.loc 3 427 25 view .LVU317
 1079 0128 0A41     		asrs	r2, r2, r1
 1080              	.LVL74:
 428:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 1081              		.loc 3 428 20 view .LVU318
 1082 012a 02EB0901 		add	r1, r2, r9
 1083              	.LVL75:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1084              		.loc 3 432 21 view .LVU319
 1085 012e 05EB8208 		add	r8, r5, r2, lsl #2
 429:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 1086              		.loc 3 429 20 view .LVU320
 1087 0132 6244     		add	r2, r2, ip
 1088              	.LVL76:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1089              		.loc 3 432 29 view .LVU321
 1090 0134 05EB810E 		add	lr, r5, r1, lsl #2
 1091              	.LVL77:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1092              		.loc 3 432 26 view .LVU322
 1093 0138 D8ED007A 		vldr.32	s15, [r8]
 430:./shy_fft.h   **** 
 1094              		.loc 3 430 20 view .LVU323
 1095 013c 6144     		add	r1, r1, ip
 1096              	.LVL78:
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1097              		.loc 3 433 21 view .LVU324
 1098 013e 05EB8202 		add	r2, r5, r2, lsl #2
 1099              	.LVL79:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1100              		.loc 3 432 26 view .LVU325
 1101 0142 9EED007A 		vldr.32	s14, [lr]
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1102              		.loc 3 433 29 view .LVU326
 1103 0146 05EB8101 		add	r1, r5, r1, lsl #2
 1104              	.LVL80:
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1105              		.loc 3 432 26 view .LVU327
 1106 014a 77EEC77A 		vsub.f32	s15, s15, s14
 432:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1107              		.loc 3 432 18 view .LVU328
 1108 014e 46ED037A 		vstr.32	s15, [r6, #-12]
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1109              		.loc 3 433 26 view .LVU329
 1110 0152 91ED007A 		vldr.32	s14, [r1]
 1111 0156 D2ED007A 		vldr.32	s15, [r2]
 1112 015a 77EEC77A 		vsub.f32	s15, s15, s14
 433:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1113              		.loc 3 433 18 view .LVU330
 1114 015e 46ED017A 		vstr.32	s15, [r6, #-4]
 434:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1115              		.loc 3 434 15 view .LVU331
 1116 0162 9EED007A 		vldr.32	s14, [lr]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 61


 1117 0166 D8ED007A 		vldr.32	s15, [r8]
 435:./shy_fft.h   ****             d[0] = a + b;
 1118              		.loc 3 435 15 view .LVU332
 1119 016a D1ED006A 		vldr.32	s13, [r1]
 434:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1120              		.loc 3 434 15 view .LVU333
 1121 016e 77EE877A 		vadd.f32	s15, s15, s14
 1122              	.LVL81:
 435:./shy_fft.h   ****             d[0] = a + b;
 1123              		.loc 3 435 15 view .LVU334
 1124 0172 92ED007A 		vldr.32	s14, [r2]
 1125 0176 37EE267A 		vadd.f32	s14, s14, s13
 1126              	.LVL82:
 436:./shy_fft.h   ****             d[2] = a - b;
 1127              		.loc 3 436 22 view .LVU335
 1128 017a 77EE876A 		vadd.f32	s13, s15, s14
 437:./shy_fft.h   ****             d += 4;
 1129              		.loc 3 437 22 view .LVU336
 1130 017e 77EEC77A 		vsub.f32	s15, s15, s14
 1131              	.LVL83:
 436:./shy_fft.h   ****             d[2] = a - b;
 1132              		.loc 3 436 18 view .LVU337
 1133 0182 46ED046A 		vstr.32	s13, [r6, #-16]
 1134              	.LVL84:
 437:./shy_fft.h   ****             d += 4;
 1135              		.loc 3 437 18 view .LVU338
 1136 0186 46ED027A 		vstr.32	s15, [r6, #-8]
 1137              	.LVL85:
 437:./shy_fft.h   ****             d += 4;
 1138              		.loc 3 437 18 view .LVU339
 1139              	.LBE372:
 423:./shy_fft.h   ****         {
 1140              		.loc 3 423 9 is_stmt 1 view .LVU340
 423:./shy_fft.h   ****         {
 1141              		.loc 3 423 9 is_stmt 0 view .LVU341
 1142 018a 76E7     		b	.L30
 1143              	.LVL86:
 1144              	.L72:
 423:./shy_fft.h   ****         {
 1145              		.loc 3 423 9 view .LVU342
 1146              	.LBE382:
 1147              	.LBB383:
 463:./shy_fft.h   ****         {
 1148              		.loc 3 463 20 view .LVU343
 1149 018c 0327     		movs	r7, #3
 1150              	.LVL87:
 463:./shy_fft.h   ****         {
 1151              		.loc 3 463 20 view .LVU344
 1152              	.LBE383:
 1153              	.LBE402:
 1154              	.LBE406:
 1155              	.LBE410:
 1156              	.LBE414:
 1157              		.loc 2 157 21 view .LVU345
 1158 018e CDF818B0 		str	fp, [sp, #24]
 1159              	.LVL88:
 1160              	.L31:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 62


 1161              	.LBB415:
 1162              	.LBB411:
 1163              	.LBB407:
 1164              	.LBB403:
 1165              	.LBB399:
 463:./shy_fft.h   ****         {
 1166              		.loc 3 463 35 is_stmt 1 view .LVU346
 1167 0192 049B     		ldr	r3, [sp, #16]
 1168 0194 BB42     		cmp	r3, r7
 1169 0196 40F2B980 		bls	.L32
 1170              	.LVL89:
 1171              	.LBB384:
 472:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1172              		.loc 3 472 28 is_stmt 0 view .LVU347
 1173 019a 0123     		movs	r3, #1
 1174 019c 05F10408 		add	r8, r5, #4
 1175 01a0 BB40     		lsls	r3, r3, r7
 1176              	.LVL90:
 473:./shy_fft.h   **** 
 1177              		.loc 3 473 20 view .LVU348
 1178 01a2 5A08     		lsrs	r2, r3, #1
 1179 01a4 0D92     		str	r2, [sp, #52]
 1180              	.LVL91:
 1181              	.LBB385:
 1182              	.LBB386:
 478:./shy_fft.h   ****                 T* dr  = d + i;
 1183              		.loc 3 478 30 view .LVU349
 1184 01a6 0422     		movs	r2, #4
 1185              	.LVL92:
 478:./shy_fft.h   ****                 T* dr  = d + i;
 1186              		.loc 3 478 30 view .LVU350
 1187 01a8 BA40     		lsls	r2, r2, r7
 1188 01aa 0192     		str	r2, [sp, #4]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1189              		.loc 3 484 30 view .LVU351
 1190 01ac 5A08     		lsrs	r2, r3, #1
 1191 01ae 9200     		lsls	r2, r2, #2
 1192 01b0 0792     		str	r2, [sp, #28]
 1193              	.LBE386:
 475:./shy_fft.h   ****             {
 1194              		.loc 3 475 52 view .LVU352
 1195 01b2 5A00     		lsls	r2, r3, #1
 1196 01b4 DB00     		lsls	r3, r3, #3
 1197              	.LVL93:
 475:./shy_fft.h   ****             {
 1198              		.loc 3 475 52 view .LVU353
 1199 01b6 0E92     		str	r2, [sp, #56]
 1200 01b8 0293     		str	r3, [sp, #8]
 1201 01ba 019B     		ldr	r3, [sp, #4]
 1202 01bc 019A     		ldr	r2, [sp, #4]
 1203 01be 05EB0309 		add	r9, r5, r3
 1204 01c2 DDE906A3 		ldrd	r10, r3, [sp, #24]
 1205 01c6 1E1D     		adds	r6, r3, #4
 1206 01c8 5346     		mov	r3, r10
 1207 01ca 1344     		add	r3, r3, r2
 1208 01cc 2E44     		add	r6, r6, r5
 1209 01ce 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 63


 1210 01d0 5300     		lsls	r3, r2, #1
 1211 01d2 0F93     		str	r3, [sp, #60]
 475:./shy_fft.h   ****             {
 1212              		.loc 3 475 24 view .LVU354
 1213 01d4 0023     		movs	r3, #0
 1214 01d6 0993     		str	r3, [sp, #36]
 1215              	.LVL94:
 1216              	.L36:
 475:./shy_fft.h   ****             {
 1217              		.loc 3 475 33 is_stmt 1 view .LVU355
 1218 01d8 059B     		ldr	r3, [sp, #20]
 1219 01da 099A     		ldr	r2, [sp, #36]
 1220 01dc 9342     		cmp	r3, r2
 1221 01de 40F28C80 		bls	.L33
 1222              	.LVL95:
 1223              	.LBB396:
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1224              		.loc 3 482 34 is_stmt 0 view .LVU356
 1225 01e2 99ED007A 		vldr.32	s14, [r9]
 1226 01e6 58ED017A 		vldr.32	s15, [r8, #-4]
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1227              		.loc 3 483 25 view .LVU357
 1228 01ea 039B     		ldr	r3, [sp, #12]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1229              		.loc 3 482 34 view .LVU358
 1230 01ec 77EE877A 		vadd.f32	s15, s15, s14
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1231              		.loc 3 485 25 view .LVU359
 1232 01f0 0799     		ldr	r1, [sp, #28]
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1233              		.loc 3 488 30 view .LVU360
 1234 01f2 1090     		str	r0, [sp, #64]
 482:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1235              		.loc 3 482 25 view .LVU361
 1236 01f4 CAED007A 		vstr.32	s15, [r10]
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1237              		.loc 3 483 34 view .LVU362
 1238 01f8 58ED017A 		vldr.32	s15, [r8, #-4]
 1239 01fc 99ED007A 		vldr.32	s14, [r9]
 1240 0200 77EEC77A 		vsub.f32	s15, s15, s14
 483:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1241              		.loc 3 483 25 view .LVU363
 1242 0204 C3ED007A 		vstr.32	s15, [r3]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1243              		.loc 3 484 25 view .LVU364
 1244 0208 079B     		ldr	r3, [sp, #28]
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1245              		.loc 3 484 30 view .LVU365
 1246 020a 56F8042C 		ldr	r2, [r6, #-4]	@ float
 484:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1247              		.loc 3 484 25 view .LVU366
 1248 020e 5344     		add	r3, r10, r3
 1249 0210 1A60     		str	r2, [r3]	@ float
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1250              		.loc 3 485 30 view .LVU367
 1251 0212 079B     		ldr	r3, [sp, #28]
 1252 0214 4B44     		add	r3, r9, r3
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 64


 1253 0216 1A68     		ldr	r2, [r3]	@ float
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1254              		.loc 3 485 25 view .LVU368
 1255 0218 039B     		ldr	r3, [sp, #12]
 1256 021a 0B44     		add	r3, r3, r1
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1257              		.loc 3 488 30 view .LVU369
 1258 021c 3946     		mov	r1, r7
 485:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1259              		.loc 3 485 25 view .LVU370
 1260 021e 1A60     		str	r2, [r3]	@ float
 1261              	.LVL96:
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1262              		.loc 3 488 30 view .LVU371
 1263 0220 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 1264              	.LVL97:
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1265              		.loc 3 488 30 view .LVU372
 1266 0224 019B     		ldr	r3, [sp, #4]
 1267 0226 4146     		mov	r1, r8
 1268              	.LBB387:
 489:./shy_fft.h   ****                 {
 1269              		.loc 3 489 28 view .LVU373
 1270 0228 1098     		ldr	r0, [sp, #64]
 1271 022a 4344     		add	r3, r3, r8
 1272              	.LBE387:
 488:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1273              		.loc 3 488 30 view .LVU374
 1274 022c 0A96     		str	r6, [sp, #40]
 1275 022e 0893     		str	r3, [sp, #32]
 1276 0230 019B     		ldr	r3, [sp, #4]
 1277 0232 03EB060E 		add	lr, r3, r6
 1278 0236 0AF10403 		add	r3, r10, #4
 1279 023a 0B93     		str	r3, [sp, #44]
 1280 023c 0F9B     		ldr	r3, [sp, #60]
 1281 023e 5344     		add	r3, r10, r3
 1282 0240 0C93     		str	r3, [sp, #48]
 1283              	.LBB395:
 489:./shy_fft.h   ****                 {
 1284              		.loc 3 489 28 view .LVU375
 1285 0242 0123     		movs	r3, #1
 1286              	.LVL98:
 1287              	.L35:
 489:./shy_fft.h   ****                 {
 1288              		.loc 3 489 37 is_stmt 1 view .LVU376
 1289 0244 0D9A     		ldr	r2, [sp, #52]
 1290 0246 9A42     		cmp	r2, r3
 1291 0248 49D9     		bls	.L34
 1292              	.LVL99:
 1293              	.LBB388:
 1294              	.LBB389:
 1295              	.LBI389:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1296              		.loc 3 261 14 view .LVU377
 1297              	.LBE389:
 1298              	.LBB391:
 1299              	.LBB392:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 65


 262:./shy_fft.h   **** 
 1300              		.loc 3 262 35 is_stmt 0 view .LVU378
 1301 024a 90ED136A 		vldr.32	s12, [r0, #76]
 1302 024e 6FF0030C 		mvn	ip, #3
 1303              	.LBE392:
 1304              	.LBE391:
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1305              		.loc 3 495 46 view .LVU379
 1306 0252 9EED007A 		vldr.32	s14, [lr]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1307              		.loc 3 495 33 view .LVU380
 1308 0256 089A     		ldr	r2, [sp, #32]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1309              		.loc 3 495 28 view .LVU381
 1310 0258 27EE467A 		vnmul.f32	s14, s14, s12
 1311              	.LBB393:
 1312              	.LBB390:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1313              		.loc 3 261 35 view .LVU382
 1314 025c D0ED127A 		vldr.32	s15, [r0, #72]
 1315              	.LVL100:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1316              		.loc 3 261 35 view .LVU383
 1317              	.LBE390:
 1318              	.LBE393:
 1319              	.LBB394:
 1320              	.LBI391:
 262:./shy_fft.h   **** 
 1321              		.loc 3 262 14 is_stmt 1 view .LVU384
 262:./shy_fft.h   **** 
 1322              		.loc 3 262 14 is_stmt 0 view .LVU385
 1323              	.LBE394:
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1324              		.loc 3 495 33 view .LVU386
 1325 0260 D2ED006A 		vldr.32	s13, [r2]
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1326              		.loc 3 496 28 view .LVU387
 1327 0264 0B9A     		ldr	r2, [sp, #44]
 495:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1328              		.loc 3 495 28 view .LVU388
 1329 0266 A7EEA67A 		vfma.f32	s14, s15, s13
 1330              	.LVL101:
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1331              		.loc 3 496 33 view .LVU389
 1332 026a D1ED006A 		vldr.32	s13, [r1]
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1333              		.loc 3 500 31 view .LVU390
 1334 026e 1193     		str	r3, [sp, #68]
 502:./shy_fft.h   ****                 }
 1335              		.loc 3 502 35 view .LVU391
 1336 0270 1090     		str	r0, [sp, #64]
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1337              		.loc 3 496 37 view .LVU392
 1338 0272 77EE266A 		vadd.f32	s13, s14, s13
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1339              		.loc 3 496 28 view .LVU393
 1340 0276 E2EC016A 		vstmia.32	r2!, {s13}
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 66


 497:./shy_fft.h   **** 
 1341              		.loc 3 497 37 view .LVU394
 1342 027a F1EC016A 		vldmia.32	r1!, {s13}
 496:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1343              		.loc 3 496 28 view .LVU395
 1344 027e 0B92     		str	r2, [sp, #44]
 1345 0280 039A     		ldr	r2, [sp, #12]
 497:./shy_fft.h   **** 
 1346              		.loc 3 497 37 view .LVU396
 1347 0282 36EEC77A 		vsub.f32	s14, s13, s14
 1348              	.LVL102:
 497:./shy_fft.h   **** 
 1349              		.loc 3 497 37 view .LVU397
 1350 0286 1391     		str	r1, [sp, #76]
 1351 0288 0CFB032C 		mla	ip, ip, r3, r2
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1352              		.loc 3 499 31 view .LVU398
 1353 028c 089A     		ldr	r2, [sp, #32]
 497:./shy_fft.h   **** 
 1354              		.loc 3 497 28 view .LVU399
 1355 028e 8CED007A 		vstr.32	s14, [ip]
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1356              		.loc 3 500 31 view .LVU400
 1357 0292 0CEBC30C 		add	ip, ip, r3, lsl #3
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1358              		.loc 3 499 53 view .LVU401
 1359 0296 BEEC017A 		vldmia.32	lr!, {s14}
 1360 029a 67EE877A 		vmul.f32	s15, s15, s14
 1361              	.LVL103:
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1362              		.loc 3 499 31 view .LVU402
 1363 029e B2EC017A 		vldmia.32	r2!, {s14}
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1364              		.loc 3 499 53 view .LVU403
 1365 02a2 CDF848E0 		str	lr, [sp, #72]
 499:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1366              		.loc 3 499 31 view .LVU404
 1367 02a6 0892     		str	r2, [sp, #32]
 1368 02a8 E6EE077A 		vfma.f32	s15, s12, s14
 1369              	.LVL104:
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1370              		.loc 3 500 40 view .LVU405
 1371 02ac 0A9A     		ldr	r2, [sp, #40]
 1372 02ae 92ED007A 		vldr.32	s14, [r2]
 501:./shy_fft.h   ****                     phasor->Rotate();
 1373              		.loc 3 501 35 view .LVU406
 1374 02b2 1346     		mov	r3, r2
 1375              	.LVL105:
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1376              		.loc 3 500 35 view .LVU407
 1377 02b4 37EE877A 		vadd.f32	s14, s15, s14
 500:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1378              		.loc 3 500 31 view .LVU408
 1379 02b8 8CED007A 		vstr.32	s14, [ip]
 501:./shy_fft.h   ****                     phasor->Rotate();
 1380              		.loc 3 501 35 view .LVU409
 1381 02bc B3EC017A 		vldmia.32	r3!, {s14}
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 67


 1382 02c0 77EEC77A 		vsub.f32	s15, s15, s14
 1383              	.LVL106:
 501:./shy_fft.h   ****                     phasor->Rotate();
 1384              		.loc 3 501 35 view .LVU410
 1385 02c4 0A93     		str	r3, [sp, #40]
 501:./shy_fft.h   ****                     phasor->Rotate();
 1386              		.loc 3 501 31 view .LVU411
 1387 02c6 0C9B     		ldr	r3, [sp, #48]
 1388 02c8 63ED017A 		vstmdb.32	r3!, {s15}
 1389 02cc 0C93     		str	r3, [sp, #48]
 502:./shy_fft.h   ****                 }
 1390              		.loc 3 502 35 view .LVU412
 1391 02ce FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 1392              	.LVL107:
 502:./shy_fft.h   ****                 }
 1393              		.loc 3 502 35 view .LVU413
 1394              	.LBE388:
 489:./shy_fft.h   ****                 {
 1395              		.loc 3 489 17 is_stmt 1 view .LVU414
 1396 02d2 119B     		ldr	r3, [sp, #68]
 1397 02d4 1098     		ldr	r0, [sp, #64]
 1398 02d6 0133     		adds	r3, r3, #1
 1399              	.LVL108:
 489:./shy_fft.h   ****                 {
 1400              		.loc 3 489 17 is_stmt 0 view .LVU415
 1401 02d8 DDE912E1 		ldrd	lr, r1, [sp, #72]
 1402 02dc B2E7     		b	.L35
 1403              	.L34:
 489:./shy_fft.h   ****                 {
 1404              		.loc 3 489 17 view .LVU416
 1405              	.LBE395:
 1406              	.LBE396:
 475:./shy_fft.h   ****             {
 1407              		.loc 3 475 13 is_stmt 1 view .LVU417
 475:./shy_fft.h   ****             {
 1408              		.loc 3 475 46 is_stmt 0 view .LVU418
 1409 02de 099B     		ldr	r3, [sp, #36]
 1410              	.LVL109:
 475:./shy_fft.h   ****             {
 1411              		.loc 3 475 46 view .LVU419
 1412 02e0 0E9A     		ldr	r2, [sp, #56]
 1413 02e2 1344     		add	r3, r3, r2
 1414 02e4 0993     		str	r3, [sp, #36]
 1415              	.LVL110:
 475:./shy_fft.h   ****             {
 1416              		.loc 3 475 46 view .LVU420
 1417 02e6 029B     		ldr	r3, [sp, #8]
 1418              	.LVL111:
 475:./shy_fft.h   ****             {
 1419              		.loc 3 475 46 view .LVU421
 1420 02e8 9944     		add	r9, r9, r3
 1421              	.LVL112:
 475:./shy_fft.h   ****             {
 1422              		.loc 3 475 46 view .LVU422
 1423 02ea 9844     		add	r8, r8, r3
 1424              	.LVL113:
 475:./shy_fft.h   ****             {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 68


 1425              		.loc 3 475 46 view .LVU423
 1426 02ec 9A44     		add	r10, r10, r3
 1427              	.LVL114:
 475:./shy_fft.h   ****             {
 1428              		.loc 3 475 46 view .LVU424
 1429 02ee 1E44     		add	r6, r6, r3
 1430              	.LVL115:
 475:./shy_fft.h   ****             {
 1431              		.loc 3 475 46 view .LVU425
 1432 02f0 DDE90223 		ldrd	r2, r3, [sp, #8]
 1433 02f4 1344     		add	r3, r3, r2
 1434 02f6 0393     		str	r3, [sp, #12]
 1435              	.LVL116:
 475:./shy_fft.h   ****             {
 1436              		.loc 3 475 13 view .LVU426
 1437 02f8 6EE7     		b	.L36
 1438              	.LVL117:
 1439              	.L33:
 475:./shy_fft.h   ****             {
 1440              		.loc 3 475 13 view .LVU427
 1441              	.LBE385:
 1442              	.LBE384:
 463:./shy_fft.h   ****         {
 1443              		.loc 3 463 9 is_stmt 1 view .LVU428
 1444 02fa 069B     		ldr	r3, [sp, #24]
 1445 02fc 0137     		adds	r7, r7, #1
 1446              	.LVL118:
 463:./shy_fft.h   ****         {
 1447              		.loc 3 463 9 is_stmt 0 view .LVU429
 1448 02fe 0695     		str	r5, [sp, #24]
 1449              	.LVL119:
 1450              	.LBB398:
 1451              	.LBB397:
 469:./shy_fft.h   ****             }
 1452              		.loc 3 469 24 view .LVU430
 1453 0300 1D46     		mov	r5, r3
 1454              	.LVL120:
 469:./shy_fft.h   ****             }
 1455              		.loc 3 469 24 view .LVU431
 1456              	.LBE397:
 1457              	.LBE398:
 463:./shy_fft.h   ****         {
 1458              		.loc 3 463 9 view .LVU432
 1459 0302 46E7     		b	.L31
 1460              	.L100:
 1461              		.align	2
 1462              	.L99:
 1463 0304 F304353F 		.word	1060439283
 1464 0308 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 1465              	.LVL121:
 1466              	.L32:
 463:./shy_fft.h   ****         {
 1467              		.loc 3 463 9 view .LVU433
 1468              	.LBE399:
 508:./shy_fft.h   ****         {
 1469              		.loc 3 508 9 view .LVU434
 1470 030c 5D45     		cmp	r5, fp
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 69


 1471 030e 07D0     		beq	.L38
 510:./shy_fft.h   ****         }
 1472              		.loc 3 510 32 view .LVU435
 1473 0310 0421     		movs	r1, #4
 1474 0312 049B     		ldr	r3, [sp, #16]
 510:./shy_fft.h   ****         }
 1475              		.loc 3 510 22 view .LVU436
 1476 0314 5A46     		mov	r2, fp
 1477 0316 2846     		mov	r0, r5
 510:./shy_fft.h   ****         }
 1478              		.loc 3 510 32 view .LVU437
 1479 0318 9940     		lsls	r1, r1, r3
 510:./shy_fft.h   ****         }
 1480              		.loc 3 510 22 view .LVU438
 1481 031a 2944     		add	r1, r1, r5
 1482              	.LVL122:
 1483              	.L98:
 510:./shy_fft.h   ****         }
 1484              		.loc 3 510 22 view .LVU439
 1485              	.LBE403:
 1486              	.LBE407:
 1487              	.LBE411:
 1488              	.LBE415:
 1489              	.LBB416:
 1490              	.LBB417:
 1491              	.LBB418:
 1492              	.LBB419:
 406:./shy_fft.h   ****         }
 1493              		.loc 3 406 22 view .LVU440
 1494 031c FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0
 1495              	.LVL123:
 1496              	.L38:
 1497              	.LBE419:
 1498              	.LBE418:
 1499              	.LBE417:
 1500              	.LBE416:
 158:dsp/pvoc/stft.cpp ****     }
 159:dsp/pvoc/stft.cpp ****     else
 160:dsp/pvoc/stft.cpp ****     {
 161:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_);
 162:dsp/pvoc/stft.cpp ****     }
 163:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 164:dsp/pvoc/stft.cpp ****     // Process in the frequency domain.
 165:dsp/pvoc/stft.cpp ****     if(modifier_ != NULL && parameters_ != NULL)
 1501              		.loc 2 165 5 is_stmt 1 view .LVU441
 1502              		.loc 2 165 8 is_stmt 0 view .LVU442
 1503 0320 E56C     		ldr	r5, [r4, #76]
 166:dsp/pvoc/stft.cpp ****     {
 167:dsp/pvoc/stft.cpp ****         modifier_->Process(*parameters_, &fft_out_[0], &ifft_in_[0]);
 1504              		.loc 2 167 43 view .LVU443
 1505 0322 A069     		ldr	r0, [r4, #24]
 1506              		.loc 2 167 57 view .LVU444
 1507 0324 236A     		ldr	r3, [r4, #32]
 165:dsp/pvoc/stft.cpp ****     {
 1508              		.loc 2 165 5 view .LVU445
 1509 0326 002D     		cmp	r5, #0
 1510 0328 00F00D82 		beq	.L45
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 70


 165:dsp/pvoc/stft.cpp ****     {
 1511              		.loc 2 165 29 discriminator 1 view .LVU446
 1512 032c A16C     		ldr	r1, [r4, #72]
 165:dsp/pvoc/stft.cpp ****     {
 1513              		.loc 2 165 26 discriminator 1 view .LVU447
 1514 032e 0029     		cmp	r1, #0
 1515 0330 00F00982 		beq	.L45
 1516              		.loc 2 167 9 is_stmt 1 view .LVU448
 1517              		.loc 2 167 27 is_stmt 0 view .LVU449
 1518 0334 0246     		mov	r2, r0
 1519 0336 2846     		mov	r0, r5
 1520 0338 FFF7FEFF 		bl	_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
 1521              	.LVL124:
 1522              	.L46:
 168:dsp/pvoc/stft.cpp ****     }
 169:dsp/pvoc/stft.cpp ****     else
 170:dsp/pvoc/stft.cpp ****     {
 171:dsp/pvoc/stft.cpp ****         copy(&fft_out_[0], &fft_out_[fft_size_], &ifft_in_[0]);
 172:dsp/pvoc/stft.cpp ****     }
 173:dsp/pvoc/stft.cpp **** 
 174:dsp/pvoc/stft.cpp ****     // Compute IFFT. ifft_in is lost.
 175:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 176:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 177:dsp/pvoc/stft.cpp ****     copy(&ifft_in_[0], &ifft_in_[fft_size_], &ifft_out_[0]);
 178:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 179:dsp/pvoc/stft.cpp ****     {
 180:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i]     = ifft_out_[i];
 181:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i + 1] = ifft_out_[i + fft_size_ / 2];
 182:dsp/pvoc/stft.cpp ****     }
 183:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, ifft_in_, ifft_out_, 1);
 184:dsp/pvoc/stft.cpp **** #else
 185:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 1523              		.loc 2 185 5 is_stmt 1 view .LVU450
 186:dsp/pvoc/stft.cpp ****     {
 187:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_, fft_num_passes_);
 1524              		.loc 2 187 22 is_stmt 0 view .LVU451
 1525 033c 236A     		ldr	r3, [r4, #32]
 1526              		.loc 2 187 9 view .LVU452
 1527 033e 2068     		ldr	r0, [r4]
 1528              		.loc 2 187 22 view .LVU453
 1529 0340 0193     		str	r3, [sp, #4]
 185:dsp/pvoc/stft.cpp ****     {
 1530              		.loc 2 185 5 view .LVU454
 1531 0342 6368     		ldr	r3, [r4, #4]
 1532              		.loc 2 187 22 view .LVU455
 1533 0344 E569     		ldr	r5, [r4, #28]
 185:dsp/pvoc/stft.cpp ****     {
 1534              		.loc 2 185 5 view .LVU456
 1535 0346 B3F5805F 		cmp	r3, #4096
 1536 034a 00F00783 		beq	.L74
 1537              		.loc 2 187 9 is_stmt 1 view .LVU457
 1538              		.loc 2 187 22 is_stmt 0 view .LVU458
 1539 034e A368     		ldr	r3, [r4, #8]
 1540 0350 A846     		mov	r8, r5
 1541 0352 0493     		str	r3, [sp, #16]
 1542              	.LVL125:
 1543              	.LBB465:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 71


 1544              	.LBI465:
 870:./shy_fft.h   ****     {
 871:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 872:./shy_fft.h   ****         d(input, output, bit_rev_256_lut_, &phasor_, n);
 873:./shy_fft.h   ****     }
 874:./shy_fft.h   **** 
 875:./shy_fft.h   ****     void Inverse(T* input, T* output, size_t n)
 1545              		.loc 3 875 10 is_stmt 1 view .LVU459
 1546              	.LBB466:
 1547              	.LBB467:
 1548              	.LBI467:
 665:./shy_fft.h   ****                     T*             output,
 1549              		.loc 3 665 10 view .LVU460
 1550              	.LBB468:
 675:./shy_fft.h   **** 
 1551              		.loc 3 675 28 is_stmt 0 view .LVU461
 1552 0354 0123     		movs	r3, #1
 1553              	.LVL126:
 675:./shy_fft.h   **** 
 1554              		.loc 3 675 28 view .LVU462
 1555 0356 049A     		ldr	r2, [sp, #16]
 1556 0358 9340     		lsls	r3, r3, r2
 1557              	.LBB469:
 678:./shy_fft.h   ****         {
 1558              		.loc 3 678 20 view .LVU463
 1559 035a 02F1FF39 		add	r9, r2, #-1
 1560              	.LBE469:
 675:./shy_fft.h   **** 
 1561              		.loc 3 675 28 view .LVU464
 1562 035e 0593     		str	r3, [sp, #20]
 1563              	.LVL127:
 671:./shy_fft.h   ****         T*      d = output;
 1564              		.loc 3 671 17 view .LVU465
 1565 0360 019B     		ldr	r3, [sp, #4]
 1566              	.LVL128:
 1567              	.L54:
 1568              	.LBB491:
 678:./shy_fft.h   ****         {
 1569              		.loc 3 678 51 is_stmt 1 view .LVU466
 1570 0362 B9F1020F 		cmp	r9, #2
 1571 0366 40F21782 		bls	.L48
 1572              	.LBB470:
 680:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1573              		.loc 3 680 28 is_stmt 0 view .LVU467
 1574 036a 0126     		movs	r6, #1
 1575              	.LBB471:
 1576              	.LBB472:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1577              		.loc 3 686 29 view .LVU468
 1578 036c 0427     		movs	r7, #4
 1579 036e 03F1040B 		add	fp, r3, #4
 1580              	.LBE472:
 1581              	.LBE471:
 680:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1582              		.loc 3 680 28 view .LVU469
 1583 0372 06FA09F6 		lsl	r6, r6, r9
 1584              	.LVL129:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 72


 1585              	.LBB485:
 1586              	.LBB483:
 686:./shy_fft.h   ****                 T* d1r = d + i;
 1587              		.loc 3 686 29 view .LVU470
 1588 0376 07FA09F7 		lsl	r7, r7, r9
 1589              	.LBE483:
 1590              	.LBE485:
 681:./shy_fft.h   **** 
 1591              		.loc 3 681 20 view .LVU471
 1592 037a 7208     		lsrs	r2, r6, #1
 1593 037c 03EB070A 		add	r10, r3, r7
 1594 0380 0792     		str	r2, [sp, #28]
 1595              	.LVL130:
 1596              	.LBB486:
 683:./shy_fft.h   ****             {
 1597              		.loc 3 683 52 view .LVU472
 1598 0382 7200     		lsls	r2, r6, #1
 1599              	.LVL131:
 683:./shy_fft.h   ****             {
 1600              		.loc 3 683 52 view .LVU473
 1601 0384 F600     		lsls	r6, r6, #3
 1602              	.LVL132:
 683:./shy_fft.h   ****             {
 1603              		.loc 3 683 52 view .LVU474
 1604 0386 0F92     		str	r2, [sp, #60]
 1605 0388 08F10402 		add	r2, r8, #4
 1606 038c 0392     		str	r2, [sp, #12]
 1607 038e 079A     		ldr	r2, [sp, #28]
 1608 0390 08EB8202 		add	r2, r8, r2, lsl #2
 1609 0394 0292     		str	r2, [sp, #8]
 1610 0396 08EB0702 		add	r2, r8, r7
 1611 039a 0A92     		str	r2, [sp, #40]
 1612 039c 079A     		ldr	r2, [sp, #28]
 1613 039e 03EB8203 		add	r3, r3, r2, lsl #2
 1614              	.LVL133:
 683:./shy_fft.h   ****             {
 1615              		.loc 3 683 52 view .LVU475
 1616 03a2 0693     		str	r3, [sp, #24]
 683:./shy_fft.h   ****             {
 1617              		.loc 3 683 24 view .LVU476
 1618 03a4 0023     		movs	r3, #0
 1619 03a6 0893     		str	r3, [sp, #32]
 1620              	.LVL134:
 1621              	.L52:
 683:./shy_fft.h   ****             {
 1622              		.loc 3 683 33 is_stmt 1 view .LVU477
 1623 03a8 059B     		ldr	r3, [sp, #20]
 1624 03aa 089A     		ldr	r2, [sp, #32]
 1625 03ac 9342     		cmp	r3, r2
 1626 03ae 40F2E481 		bls	.L49
 1627              	.LVL135:
 1628              	.LBB484:
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1629              		.loc 3 690 34 is_stmt 0 view .LVU478
 1630 03b2 9AED007A 		vldr.32	s14, [r10]
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1631              		.loc 3 697 30 view .LVU479
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 73


 1632 03b6 4946     		mov	r1, r9
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1633              		.loc 3 690 34 view .LVU480
 1634 03b8 5BED017A 		vldr.32	s15, [fp, #-4]
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1635              		.loc 3 690 26 view .LVU481
 1636 03bc 039B     		ldr	r3, [sp, #12]
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1637              		.loc 3 690 34 view .LVU482
 1638 03be 77EE877A 		vadd.f32	s15, s15, s14
 693:./shy_fft.h   **** 
 1639              		.loc 3 693 30 view .LVU483
 1640 03c2 069A     		ldr	r2, [sp, #24]
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1641              		.loc 3 697 30 view .LVU484
 1642 03c4 1090     		str	r0, [sp, #64]
 693:./shy_fft.h   **** 
 1643              		.loc 3 693 30 view .LVU485
 1644 03c6 3A44     		add	r2, r2, r7
 690:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1645              		.loc 3 690 26 view .LVU486
 1646 03c8 43ED017A 		vstr.32	s15, [r3, #-4]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1647              		.loc 3 691 34 view .LVU487
 1648 03cc 5346     		mov	r3, r10
 1649 03ce 5BED017A 		vldr.32	s15, [fp, #-4]
 1650 03d2 B3EC017A 		vldmia.32	r3!, {s14}
 1651 03d6 77EEC77A 		vsub.f32	s15, s15, s14
 1652 03da 0C93     		str	r3, [sp, #48]
 691:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1653              		.loc 3 691 26 view .LVU488
 1654 03dc 0A9B     		ldr	r3, [sp, #40]
 1655 03de C3ED007A 		vstr.32	s15, [r3]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1656              		.loc 3 692 36 view .LVU489
 1657 03e2 069B     		ldr	r3, [sp, #24]
 1658 03e4 D3ED007A 		vldr.32	s15, [r3]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1659              		.loc 3 692 26 view .LVU490
 1660 03e8 029B     		ldr	r3, [sp, #8]
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1661              		.loc 3 692 36 view .LVU491
 1662 03ea 77EEA77A 		vadd.f32	s15, s15, s15
 692:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1663              		.loc 3 692 26 view .LVU492
 1664 03ee C3ED007A 		vstr.32	s15, [r3]
 693:./shy_fft.h   **** 
 1665              		.loc 3 693 26 view .LVU493
 1666 03f2 3B44     		add	r3, r3, r7
 693:./shy_fft.h   **** 
 1667              		.loc 3 693 36 view .LVU494
 1668 03f4 D2ED007A 		vldr.32	s15, [r2]
 1669 03f8 77EEA77A 		vadd.f32	s15, s15, s15
 693:./shy_fft.h   **** 
 1670              		.loc 3 693 26 view .LVU495
 1671 03fc C3ED007A 		vstr.32	s15, [r3]
 1672              	.LVL136:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 74


 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1673              		.loc 3 697 30 view .LVU496
 1674 0400 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 1675              	.LVL137:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1676              		.loc 3 697 30 view .LVU497
 1677 0404 029A     		ldr	r2, [sp, #8]
 1678              	.LBB473:
 698:./shy_fft.h   ****                 {
 1679              		.loc 3 698 28 view .LVU498
 1680 0406 0120     		movs	r0, #1
 1681              	.LVL138:
 698:./shy_fft.h   ****                 {
 1682              		.loc 3 698 28 view .LVU499
 1683 0408 07EB0A0E 		add	lr, r7, r10
 1684 040c 0432     		adds	r2, r2, #4
 1685              	.LBE473:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1686              		.loc 3 697 30 view .LVU500
 1687 040e 5946     		mov	r1, fp
 1688              	.LBB481:
 698:./shy_fft.h   ****                 {
 1689              		.loc 3 698 28 view .LVU501
 1690 0410 0990     		str	r0, [sp, #36]
 1691 0412 0B92     		str	r2, [sp, #44]
 1692 0414 039A     		ldr	r2, [sp, #12]
 1693 0416 1098     		ldr	r0, [sp, #64]
 1694              	.LVL139:
 698:./shy_fft.h   ****                 {
 1695              		.loc 3 698 28 view .LVU502
 1696 0418 BA18     		adds	r2, r7, r2
 1697 041a 0D92     		str	r2, [sp, #52]
 1698              	.LBE481:
 697:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 1699              		.loc 3 697 30 view .LVU503
 1700 041c 039A     		ldr	r2, [sp, #12]
 1701 041e 0E92     		str	r2, [sp, #56]
 1702 0420 5246     		mov	r2, r10
 1703              	.LVL140:
 1704              	.L51:
 1705              	.LBB482:
 698:./shy_fft.h   ****                 {
 1706              		.loc 3 698 37 is_stmt 1 view .LVU504
 1707 0422 079B     		ldr	r3, [sp, #28]
 1708 0424 9C46     		mov	ip, r3
 1709 0426 099B     		ldr	r3, [sp, #36]
 1710 0428 9C45     		cmp	ip, r3
 1711 042a 40F29381 		bls	.L50
 1712              	.LBB474:
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1713              		.loc 3 700 32 is_stmt 0 view .LVU505
 1714 042e 91ED007A 		vldr.32	s14, [r1]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1715              		.loc 3 700 36 view .LVU506
 1716 0432 72ED017A 		vldmdb.32	r2!, {s15}
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1717              		.loc 3 700 28 view .LVU507
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 75


 1718 0436 0E9B     		ldr	r3, [sp, #56]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1719              		.loc 3 700 36 view .LVU508
 1720 0438 77EE877A 		vadd.f32	s15, s15, s14
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1721              		.loc 3 705 23 view .LVU509
 1722 043c 1292     		str	r2, [sp, #72]
 710:./shy_fft.h   ****                 }
 1723              		.loc 3 710 35 view .LVU510
 1724 043e 1090     		str	r0, [sp, #64]
 700:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1725              		.loc 3 700 28 view .LVU511
 1726 0440 E3EC017A 		vstmia.32	r3!, {s15}
 1727 0444 0E93     		str	r3, [sp, #56]
 701:./shy_fft.h   **** 
 1728              		.loc 3 701 32 view .LVU512
 1729 0446 0C9B     		ldr	r3, [sp, #48]
 701:./shy_fft.h   **** 
 1730              		.loc 3 701 36 view .LVU513
 1731 0448 3EED017A 		vldmdb.32	lr!, {s14}
 701:./shy_fft.h   **** 
 1732              		.loc 3 701 32 view .LVU514
 1733 044c D3ED007A 		vldr.32	s15, [r3]
 701:./shy_fft.h   **** 
 1734              		.loc 3 701 28 view .LVU515
 1735 0450 0B9B     		ldr	r3, [sp, #44]
 701:./shy_fft.h   **** 
 1736              		.loc 3 701 36 view .LVU516
 1737 0452 77EEC77A 		vsub.f32	s15, s15, s14
 706:./shy_fft.h   **** 
 1738              		.loc 3 706 23 view .LVU517
 1739 0456 CDF844E0 		str	lr, [sp, #68]
 701:./shy_fft.h   **** 
 1740              		.loc 3 701 28 view .LVU518
 1741 045a E3EC017A 		vstmia.32	r3!, {s15}
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1742              		.loc 3 705 23 view .LVU519
 1743 045e B1EC017A 		vldmia.32	r1!, {s14}
 1744 0462 D2ED007A 		vldr.32	s15, [r2]
 701:./shy_fft.h   **** 
 1745              		.loc 3 701 28 view .LVU520
 1746 0466 0B93     		str	r3, [sp, #44]
 1747              	.LVL141:
 1748              	.LBB475:
 1749              	.LBI475:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1750              		.loc 3 261 14 is_stmt 1 view .LVU521
 1751              	.LBE475:
 706:./shy_fft.h   **** 
 1752              		.loc 3 706 23 is_stmt 0 view .LVU522
 1753 0468 0C9B     		ldr	r3, [sp, #48]
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1754              		.loc 3 705 23 view .LVU523
 1755 046a 77EE677A 		vsub.f32	s15, s14, s15
 706:./shy_fft.h   **** 
 1756              		.loc 3 706 23 view .LVU524
 1757 046e DEED006A 		vldr.32	s13, [lr]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 76


 1758 0472 B3EC017A 		vldmia.32	r3!, {s14}
 1759              	.LBB477:
 1760              	.LBB478:
 262:./shy_fft.h   **** 
 1761              		.loc 3 262 35 view .LVU525
 1762 0476 D0ED135A 		vldr.32	s11, [r0, #76]
 1763              	.LBE478:
 1764              	.LBE477:
 706:./shy_fft.h   **** 
 1765              		.loc 3 706 23 view .LVU526
 1766 047a 37EE267A 		vadd.f32	s14, s14, s13
 1767              	.LBB479:
 1768              	.LBB476:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1769              		.loc 3 261 35 view .LVU527
 1770 047e 90ED126A 		vldr.32	s12, [r0, #72]
 1771              	.LVL142:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1772              		.loc 3 261 35 view .LVU528
 1773              	.LBE476:
 1774              	.LBE479:
 1775              	.LBB480:
 1776              	.LBI477:
 262:./shy_fft.h   **** 
 1777              		.loc 3 262 14 is_stmt 1 view .LVU529
 262:./shy_fft.h   **** 
 1778              		.loc 3 262 14 is_stmt 0 view .LVU530
 1779              	.LBE480:
 706:./shy_fft.h   **** 
 1780              		.loc 3 706 23 view .LVU531
 1781 0482 0C93     		str	r3, [sp, #48]
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1782              		.loc 3 708 28 view .LVU532
 1783 0484 0D9B     		ldr	r3, [sp, #52]
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1784              		.loc 3 708 42 view .LVU533
 1785 0486 65EE876A 		vmul.f32	s13, s11, s14
 705:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1786              		.loc 3 705 23 view .LVU534
 1787 048a 1391     		str	r1, [sp, #76]
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1788              		.loc 3 708 37 view .LVU535
 1789 048c E6EE276A 		vfma.f32	s13, s12, s15
 709:./shy_fft.h   ****                     phasor->Rotate();
 1790              		.loc 3 709 37 view .LVU536
 1791 0490 67EEE57A 		vnmul.f32	s15, s15, s11
 1792              	.LVL143:
 709:./shy_fft.h   ****                     phasor->Rotate();
 1793              		.loc 3 709 37 view .LVU537
 1794 0494 E6EE077A 		vfma.f32	s15, s12, s14
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1795              		.loc 3 708 28 view .LVU538
 1796 0498 E3EC016A 		vstmia.32	r3!, {s13}
 1797              	.LVL144:
 708:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1798              		.loc 3 708 28 view .LVU539
 1799 049c 0D93     		str	r3, [sp, #52]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 77


 709:./shy_fft.h   ****                     phasor->Rotate();
 1800              		.loc 3 709 28 view .LVU540
 1801 049e 0B9B     		ldr	r3, [sp, #44]
 1802 04a0 03EB070C 		add	ip, r3, r7
 1803 04a4 4CED017A 		vstr.32	s15, [ip, #-4]
 710:./shy_fft.h   ****                 }
 1804              		.loc 3 710 35 view .LVU541
 1805 04a8 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 1806              	.LVL145:
 710:./shy_fft.h   ****                 }
 1807              		.loc 3 710 35 view .LVU542
 1808              	.LBE474:
 698:./shy_fft.h   ****                 {
 1809              		.loc 3 698 17 is_stmt 1 view .LVU543
 1810 04ac 099B     		ldr	r3, [sp, #36]
 1811 04ae 0133     		adds	r3, r3, #1
 1812 04b0 DDE9100E 		ldrd	r0, lr, [sp, #64]
 1813 04b4 DDE91221 		ldrd	r2, r1, [sp, #72]
 1814 04b8 0993     		str	r3, [sp, #36]
 1815              	.LVL146:
 698:./shy_fft.h   ****                 {
 1816              		.loc 3 698 17 is_stmt 0 view .LVU544
 1817 04ba B2E7     		b	.L51
 1818              	.LVL147:
 1819              	.L27:
 698:./shy_fft.h   ****                 {
 1820              		.loc 3 698 17 view .LVU545
 1821 04bc 0BF11001 		add	r1, fp, #16
 1822              	.LVL148:
 698:./shy_fft.h   ****                 {
 1823              		.loc 3 698 17 view .LVU546
 1824              	.LBE482:
 1825              	.LBE484:
 1826              	.LBE486:
 1827              	.LBE470:
 1828              	.LBE491:
 1829              	.LBE468:
 1830              	.LBE467:
 1831              	.LBE466:
 1832              	.LBE465:
 1833              	.LBB520:
 1834              	.LBB461:
 1835              	.LBB457:
 1836              	.LBB453:
 1837              	.LBB420:
 317:./shy_fft.h   ****         {
 1838              		.loc 3 317 20 view .LVU547
 1839 04c0 0026     		movs	r6, #0
 1840              	.LVL149:
 1841              	.L39:
 1842              	.LBB421:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1843              		.loc 3 322 43 view .LVU548
 1844 04c2 F3B2     		uxtb	r3, r6
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1845              		.loc 3 322 49 view .LVU549
 1846 04c4 B24A     		ldr	r2, .L101
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 78


 1847              	.LBE421:
 317:./shy_fft.h   ****         {
 1848              		.loc 3 317 29 view .LVU550
 1849 04c6 1031     		adds	r1, r1, #16
 1850              	.LVL150:
 1851              	.LBB422:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1852              		.loc 3 322 49 view .LVU551
 1853 04c8 9F5C     		ldrb	r7, [r3, r2]	@ zero_extendqisi2
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1854              		.loc 3 322 69 view .LVU552
 1855 04ca 330A     		lsrs	r3, r6, #8
 1856              	.LBE422:
 317:./shy_fft.h   ****         {
 1857              		.loc 3 317 39 view .LVU553
 1858 04cc 0436     		adds	r6, r6, #4
 1859              	.LVL151:
 1860              	.LBB423:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1861              		.loc 3 322 73 view .LVU554
 1862 04ce 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1863              	.LBE423:
 317:./shy_fft.h   ****         {
 1864              		.loc 3 317 29 view .LVU555
 1865 04d0 B6F5805F 		cmp	r6, #4096
 1866              	.LBB424:
 322:./shy_fft.h   ****                                   >> (16 - num_passes);
 1867              		.loc 3 322 57 view .LVU556
 1868 04d4 43EA0723 		orr	r3, r3, r7, lsl #8
 323:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 1869              		.loc 3 323 35 view .LVU557
 1870 04d8 4FEA2313 		asr	r3, r3, #4
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1871              		.loc 3 328 21 view .LVU558
 1872 04dc 4FEA8302 		lsl	r2, r3, #2
 1873 04e0 05EB8303 		add	r3, r5, r3, lsl #2
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1874              		.loc 3 328 29 view .LVU559
 1875 04e4 02F5005C 		add	ip, r2, #8192
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1876              		.loc 3 329 21 view .LVU560
 1877 04e8 02F58057 		add	r7, r2, #4096
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1878              		.loc 3 328 26 view .LVU561
 1879 04ec D3ED007A 		vldr.32	s15, [r3]
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1880              		.loc 3 329 29 view .LVU562
 1881 04f0 02F54052 		add	r2, r2, #12288
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1882              		.loc 3 328 29 view .LVU563
 1883 04f4 AC44     		add	ip, ip, r5
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1884              		.loc 3 329 21 view .LVU564
 1885 04f6 2F44     		add	r7, r7, r5
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1886              		.loc 3 329 29 view .LVU565
 1887 04f8 2A44     		add	r2, r2, r5
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 79


 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1888              		.loc 3 328 26 view .LVU566
 1889 04fa 9CED007A 		vldr.32	s14, [ip]
 1890 04fe 77EEC77A 		vsub.f32	s15, s15, s14
 328:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 1891              		.loc 3 328 18 view .LVU567
 1892 0502 41ED077A 		vstr.32	s15, [r1, #-28]
 1893              	.LVL152:
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1894              		.loc 3 329 26 view .LVU568
 1895 0506 D7ED007A 		vldr.32	s15, [r7]
 1896 050a 92ED007A 		vldr.32	s14, [r2]
 1897 050e 77EEC77A 		vsub.f32	s15, s15, s14
 329:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 1898              		.loc 3 329 18 view .LVU569
 1899 0512 41ED057A 		vstr.32	s15, [r1, #-20]
 330:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1900              		.loc 3 330 15 view .LVU570
 1901 0516 9CED007A 		vldr.32	s14, [ip]
 1902 051a D3ED007A 		vldr.32	s15, [r3]
 331:./shy_fft.h   ****             d[0] = a + b;
 1903              		.loc 3 331 15 view .LVU571
 1904 051e D2ED006A 		vldr.32	s13, [r2]
 330:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 1905              		.loc 3 330 15 view .LVU572
 1906 0522 77EE877A 		vadd.f32	s15, s15, s14
 1907              	.LVL153:
 331:./shy_fft.h   ****             d[0] = a + b;
 1908              		.loc 3 331 15 view .LVU573
 1909 0526 97ED007A 		vldr.32	s14, [r7]
 1910 052a 37EE267A 		vadd.f32	s14, s14, s13
 1911              	.LVL154:
 332:./shy_fft.h   ****             d[2] = a - b;
 1912              		.loc 3 332 22 view .LVU574
 1913 052e 77EE876A 		vadd.f32	s13, s15, s14
 333:./shy_fft.h   ****             d += 4;
 1914              		.loc 3 333 22 view .LVU575
 1915 0532 77EEC77A 		vsub.f32	s15, s15, s14
 1916              	.LVL155:
 332:./shy_fft.h   ****             d[2] = a - b;
 1917              		.loc 3 332 18 view .LVU576
 1918 0536 41ED086A 		vstr.32	s13, [r1, #-32]
 1919              	.LVL156:
 333:./shy_fft.h   ****             d += 4;
 1920              		.loc 3 333 18 view .LVU577
 1921 053a 41ED067A 		vstr.32	s15, [r1, #-24]
 1922              	.LVL157:
 333:./shy_fft.h   ****             d += 4;
 1923              		.loc 3 333 18 view .LVU578
 1924              	.LBE424:
 317:./shy_fft.h   ****         {
 1925              		.loc 3 317 9 is_stmt 1 view .LVU579
 317:./shy_fft.h   ****         {
 1926              		.loc 3 317 29 view .LVU580
 1927 053e C0D1     		bne	.L39
 1928 0540 5B46     		mov	r3, fp
 1929 0542 2A46     		mov	r2, r5
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 80


 1930 0544 0BF58041 		add	r1, fp, #16384
 1931              	.LVL158:
 1932              	.L40:
 317:./shy_fft.h   ****         {
 1933              		.loc 3 317 29 is_stmt 0 view .LVU581
 1934              	.LBE420:
 1935              	.LBB425:
 1936              	.LBB426:
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1937              		.loc 3 344 29 view .LVU582
 1938 0548 93ED047A 		vldr.32	s14, [r3, #16]
 1939              	.LBE426:
 340:./shy_fft.h   ****         {
 1940              		.loc 3 340 29 view .LVU583
 1941 054c 2033     		adds	r3, r3, #32
 1942              	.LBB427:
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1943              		.loc 3 344 29 view .LVU584
 1944 054e 53ED087A 		vldr.32	s15, [r3, #-32]
 1945              	.LBE427:
 340:./shy_fft.h   ****         {
 1946              		.loc 3 340 29 view .LVU585
 1947 0552 2032     		adds	r2, r2, #32
 1948              	.LBB428:
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1949              		.loc 3 344 29 view .LVU586
 1950 0554 77EE877A 		vadd.f32	s15, s15, s14
 344:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1951              		.loc 3 344 22 view .LVU587
 1952 0558 42ED087A 		vstr.32	s15, [r2, #-32]
 345:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 1953              		.loc 3 345 29 view .LVU588
 1954 055c 13ED047A 		vldr.32	s14, [r3, #-16]
 1955 0560 53ED087A 		vldr.32	s15, [r3, #-32]
 1956 0564 77EEC77A 		vsub.f32	s15, s15, s14
 345:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 1957              		.loc 3 345 22 view .LVU589
 1958 0568 42ED047A 		vstr.32	s15, [r2, #-16]
 346:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 1959              		.loc 3 346 25 view .LVU590
 1960 056c 53F8186C 		ldr	r6, [r3, #-24]	@ float
 346:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 1961              		.loc 3 346 22 view .LVU591
 1962 0570 42F8186C 		str	r6, [r2, #-24]	@ float
 347:./shy_fft.h   **** 
 1963              		.loc 3 347 25 view .LVU592
 1964 0574 53F8086C 		ldr	r6, [r3, #-8]	@ float
 347:./shy_fft.h   **** 
 1965              		.loc 3 347 22 view .LVU593
 1966 0578 42F8086C 		str	r6, [r2, #-8]	@ float
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1967              		.loc 3 349 34 view .LVU594
 1968 057c 53ED017A 		vldr.32	s15, [r3, #-4]
 1969 0580 13ED037A 		vldr.32	s14, [r3, #-12]
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1970              		.loc 3 350 33 view .LVU595
 1971 0584 53ED076A 		vldr.32	s13, [r3, #-28]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 81


 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1972              		.loc 3 349 34 view .LVU596
 1973 0588 37EE677A 		vsub.f32	s14, s14, s15
 1974              	.LVL159:
 349:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1975              		.loc 3 349 34 view .LVU597
 1976              	.LBE428:
 1977              	.LBE425:
 1978              	.LBE453:
 1979              	.LBE457:
 1980              	.LBE461:
 1981              	.LBE520:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1982              		.loc 3 137 41 is_stmt 1 view .LVU598
 1983              	.LBB521:
 1984              	.LBB462:
 1985              	.LBB458:
 1986              	.LBB454:
 1987              	.LBB432:
 1988              	.LBB429:
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1989              		.loc 3 350 33 is_stmt 0 view .LVU599
 1990 058c DFED817A 		vldr.32	s15, .L101+4
 1991 0590 E7EE276A 		vfma.f32	s13, s14, s15
 350:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1992              		.loc 3 350 22 view .LVU600
 1993 0594 42ED076A 		vstr.32	s13, [r2, #-28]
 351:./shy_fft.h   **** 
 1994              		.loc 3 351 33 view .LVU601
 1995 0598 53ED076A 		vldr.32	s13, [r3, #-28]
 1996 059c E7EE676A 		vfms.f32	s13, s14, s15
 351:./shy_fft.h   **** 
 1997              		.loc 3 351 22 view .LVU602
 1998 05a0 42ED056A 		vstr.32	s13, [r2, #-20]
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1999              		.loc 3 353 34 view .LVU603
 2000 05a4 53ED016A 		vldr.32	s13, [r3, #-4]
 2001 05a8 13ED037A 		vldr.32	s14, [r3, #-12]
 2002              	.LVL160:
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2003              		.loc 3 353 34 view .LVU604
 2004 05ac 37EE267A 		vadd.f32	s14, s14, s13
 2005              	.LVL161:
 353:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2006              		.loc 3 353 34 view .LVU605
 2007              	.LBE429:
 2008              	.LBE432:
 2009              	.LBE454:
 2010              	.LBE458:
 2011              	.LBE462:
 2012              	.LBE521:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2013              		.loc 3 137 41 is_stmt 1 view .LVU606
 2014              	.LBB522:
 2015              	.LBB463:
 2016              	.LBB459:
 2017              	.LBB455:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 82


 2018              	.LBB433:
 2019              	.LBB430:
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2020              		.loc 3 354 26 is_stmt 0 view .LVU607
 2021 05b0 53ED056A 		vldr.32	s13, [r3, #-20]
 2022 05b4 E7EE276A 		vfma.f32	s13, s14, s15
 354:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2023              		.loc 3 354 22 view .LVU608
 2024 05b8 42ED036A 		vstr.32	s13, [r2, #-12]
 355:./shy_fft.h   ****         }
 2025              		.loc 3 355 26 view .LVU609
 2026 05bc 53ED056A 		vldr.32	s13, [r3, #-20]
 2027              	.LBE430:
 340:./shy_fft.h   ****         {
 2028              		.loc 3 340 29 view .LVU610
 2029 05c0 8B42     		cmp	r3, r1
 2030              	.LBB431:
 355:./shy_fft.h   ****         }
 2031              		.loc 3 355 26 view .LVU611
 2032 05c2 D7EE276A 		vfnms.f32	s13, s14, s15
 355:./shy_fft.h   ****         }
 2033              		.loc 3 355 22 view .LVU612
 2034 05c6 42ED016A 		vstr.32	s13, [r2, #-4]
 2035              	.LBE431:
 340:./shy_fft.h   ****         {
 2036              		.loc 3 340 9 is_stmt 1 view .LVU613
 340:./shy_fft.h   ****         {
 2037              		.loc 3 340 29 view .LVU614
 2038 05ca BDD1     		bne	.L40
 2039              	.LBE433:
 2040              	.LBE455:
 2041              	.LBE459:
 2042              	.LBE463:
 2043              	.LBE522:
 157:dsp/pvoc/stft.cpp ****     }
 2044              		.loc 2 157 21 is_stmt 0 view .LVU615
 2045 05cc 5E46     		mov	r6, fp
 2046              	.LBB523:
 2047              	.LBB464:
 2048              	.LBB460:
 2049              	.LBB456:
 2050              	.LBB434:
 359:./shy_fft.h   ****         {
 2051              		.loc 3 359 20 view .LVU616
 2052 05ce 0321     		movs	r1, #3
 2053              	.LVL162:
 2054              	.L43:
 2055              	.LBB435:
 368:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2056              		.loc 3 368 28 view .LVU617
 2057 05d0 0123     		movs	r3, #1
 2058              	.LBB436:
 2059              	.LBB437:
 374:./shy_fft.h   ****                 T* dr  = d + i;
 2060              		.loc 3 374 30 view .LVU618
 2061 05d2 0422     		movs	r2, #4
 2062 05d4 B046     		mov	r8, r6
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 83


 2063              	.LBE437:
 2064              	.LBE436:
 368:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2065              		.loc 3 368 28 view .LVU619
 2066 05d6 8B40     		lsls	r3, r3, r1
 2067              	.LVL163:
 2068              	.LBB450:
 371:./shy_fft.h   ****             {
 2069              		.loc 3 371 33 is_stmt 1 view .LVU620
 2070              	.LBB447:
 374:./shy_fft.h   ****                 T* dr  = d + i;
 2071              		.loc 3 374 30 is_stmt 0 view .LVU621
 2072 05d8 8A40     		lsls	r2, r2, r1
 2073 05da 0292     		str	r2, [sp, #8]
 2074              	.LBE447:
 2075              	.LBE450:
 369:./shy_fft.h   **** 
 2076              		.loc 3 369 20 view .LVU622
 2077 05dc 5A08     		lsrs	r2, r3, #1
 2078              	.LVL164:
 2079              	.LBB451:
 2080              	.LBB448:
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2081              		.loc 3 380 30 view .LVU623
 2082 05de 9700     		lsls	r7, r2, #2
 2083 05e0 05EB820A 		add	r10, r5, r2, lsl #2
 2084 05e4 2A1D     		adds	r2, r5, #4
 2085              	.LVL165:
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2086              		.loc 3 380 30 view .LVU624
 2087 05e6 0397     		str	r7, [sp, #12]
 2088              	.LBE448:
 371:./shy_fft.h   ****             {
 2089              		.loc 3 371 49 view .LVU625
 2090 05e8 5F00     		lsls	r7, r3, #1
 2091 05ea DB00     		lsls	r3, r3, #3
 2092              	.LVL166:
 371:./shy_fft.h   ****             {
 2093              		.loc 3 371 49 view .LVU626
 2094 05ec 0D97     		str	r7, [sp, #52]
 2095 05ee 0193     		str	r3, [sp, #4]
 2096 05f0 029B     		ldr	r3, [sp, #8]
 2097 05f2 F718     		adds	r7, r6, r3
 2098 05f4 0433     		adds	r3, r3, #4
 2099 05f6 05EB0309 		add	r9, r5, r3
 2100 05fa 029B     		ldr	r3, [sp, #8]
 2101 05fc 5B00     		lsls	r3, r3, #1
 2102 05fe 0E93     		str	r3, [sp, #56]
 371:./shy_fft.h   ****             {
 2103              		.loc 3 371 24 view .LVU627
 2104 0600 0023     		movs	r3, #0
 2105 0602 0493     		str	r3, [sp, #16]
 2106              	.LVL167:
 2107              	.L42:
 2108              	.LBB449:
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2109              		.loc 3 378 34 view .LVU628
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 84


 2110 0604 52ED017A 		vldr.32	s15, [r2, #-4]
 2111 0608 19ED017A 		vldr.32	s14, [r9, #-4]
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2112              		.loc 3 380 25 view .LVU629
 2113 060c 039B     		ldr	r3, [sp, #12]
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2114              		.loc 3 378 34 view .LVU630
 2115 060e 77EE877A 		vadd.f32	s15, s15, s14
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2116              		.loc 3 379 34 view .LVU631
 2117 0612 0692     		str	r2, [sp, #24]
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2118              		.loc 3 380 25 view .LVU632
 2119 0614 4344     		add	r3, r8, r3
 378:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2120              		.loc 3 378 25 view .LVU633
 2121 0616 C8ED007A 		vstr.32	s15, [r8]
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2122              		.loc 3 379 34 view .LVU634
 2123 061a 52ED017A 		vldr.32	s15, [r2, #-4]
 2124 061e 19ED017A 		vldr.32	s14, [r9, #-4]
 2125 0622 77EEC77A 		vsub.f32	s15, s15, s14
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2126              		.loc 3 384 30 view .LVU635
 2127 0626 CDE90F01 		strd	r0, r1, [sp, #60]
 379:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2128              		.loc 3 379 25 view .LVU636
 2129 062a C7ED007A 		vstr.32	s15, [r7]
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2130              		.loc 3 380 30 view .LVU637
 2131 062e DAF800C0 		ldr	ip, [r10]	@ float
 380:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2132              		.loc 3 380 25 view .LVU638
 2133 0632 C3F800C0 		str	ip, [r3]	@ float
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2134              		.loc 3 381 30 view .LVU639
 2135 0636 029B     		ldr	r3, [sp, #8]
 2136 0638 5344     		add	r3, r10, r3
 2137 063a D3F800C0 		ldr	ip, [r3]	@ float
 2138 063e 0C93     		str	r3, [sp, #48]
 381:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2139              		.loc 3 381 25 view .LVU640
 2140 0640 039B     		ldr	r3, [sp, #12]
 2141 0642 FB18     		adds	r3, r7, r3
 2142 0644 C3F800C0 		str	ip, [r3]	@ float
 2143              	.LVL168:
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2144              		.loc 3 384 30 view .LVU641
 2145 0648 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 2146              	.LVL169:
 2147              	.LBB438:
 385:./shy_fft.h   ****                 {
 2148              		.loc 3 385 37 is_stmt 1 view .LVU642
 2149 064c 039B     		ldr	r3, [sp, #12]
 2150              	.LBE438:
 384:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2151              		.loc 3 384 30 is_stmt 0 view .LVU643
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 85


 2152 064e 069A     		ldr	r2, [sp, #24]
 2153 0650 4B44     		add	r3, r3, r9
 2154 0652 0997     		str	r7, [sp, #36]
 2155 0654 0593     		str	r3, [sp, #20]
 2156 0656 08F10403 		add	r3, r8, #4
 2157 065a 0893     		str	r3, [sp, #32]
 2158 065c 0AF10403 		add	r3, r10, #4
 2159 0660 0793     		str	r3, [sp, #28]
 2160 0662 3B1D     		adds	r3, r7, #4
 2161 0664 0A93     		str	r3, [sp, #40]
 2162 0666 0E9B     		ldr	r3, [sp, #56]
 2163 0668 4344     		add	r3, r8, r3
 2164 066a DDE90F01 		ldrd	r0, r1, [sp, #60]
 2165 066e 0B93     		str	r3, [sp, #44]
 2166 0670 4B46     		mov	r3, r9
 2167              	.LVL170:
 2168              	.L41:
 2169              	.LBB446:
 2170              	.LBB439:
 2171              	.LBB440:
 2172              	.LBB441:
 262:./shy_fft.h   **** 
 2173              		.loc 3 262 35 view .LVU644
 2174 0672 90ED136A 		vldr.32	s12, [r0, #76]
 2175              	.LBE441:
 2176              	.LBE440:
 2177              	.LBB442:
 2178              	.LBB443:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 2179              		.loc 3 261 35 view .LVU645
 2180 0676 D0ED127A 		vldr.32	s15, [r0, #72]
 2181              	.LBE443:
 2182              	.LBE442:
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2183              		.loc 3 391 33 view .LVU646
 2184 067a D3ED006A 		vldr.32	s13, [r3]
 2185 067e CDE91112 		strd	r1, r2, [sp, #68]
 2186              	.LVL171:
 2187              	.LBB444:
 2188              	.LBI442:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 2189              		.loc 3 261 14 is_stmt 1 view .LVU647
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 2190              		.loc 3 261 14 is_stmt 0 view .LVU648
 2191              	.LBE444:
 2192              	.LBB445:
 2193              	.LBI440:
 262:./shy_fft.h   **** 
 2194              		.loc 3 262 14 is_stmt 1 view .LVU649
 262:./shy_fft.h   **** 
 2195              		.loc 3 262 14 is_stmt 0 view .LVU650
 2196              	.LBE445:
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2197              		.loc 3 391 46 view .LVU651
 2198 0682 059A     		ldr	r2, [sp, #20]
 2199 0684 92ED007A 		vldr.32	s14, [r2]
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 86


 2200              		.loc 3 392 33 view .LVU652
 2201 0688 069A     		ldr	r2, [sp, #24]
 391:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2202              		.loc 3 391 28 view .LVU653
 2203 068a 27EE467A 		vnmul.f32	s14, s14, s12
 2204 068e A7EEA67A 		vfma.f32	s14, s15, s13
 2205              	.LVL172:
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2206              		.loc 3 392 33 view .LVU654
 2207 0692 D2ED006A 		vldr.32	s13, [r2]
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2208              		.loc 3 392 28 view .LVU655
 2209 0696 089A     		ldr	r2, [sp, #32]
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2210              		.loc 3 392 37 view .LVU656
 2211 0698 77EE266A 		vadd.f32	s13, s14, s13
 392:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2212              		.loc 3 392 28 view .LVU657
 2213 069c E2EC016A 		vstmia.32	r2!, {s13}
 2214 06a0 0892     		str	r2, [sp, #32]
 393:./shy_fft.h   **** 
 2215              		.loc 3 393 37 view .LVU658
 2216 06a2 069A     		ldr	r2, [sp, #24]
 2217 06a4 F2EC016A 		vldmia.32	r2!, {s13}
 2218 06a8 36EEC77A 		vsub.f32	s14, s13, s14
 2219              	.LVL173:
 393:./shy_fft.h   **** 
 2220              		.loc 3 393 37 view .LVU659
 2221 06ac 0692     		str	r2, [sp, #24]
 393:./shy_fft.h   **** 
 2222              		.loc 3 393 28 view .LVU660
 2223 06ae 099A     		ldr	r2, [sp, #36]
 2224 06b0 22ED017A 		vstmdb.32	r2!, {s14}
 2225 06b4 0992     		str	r2, [sp, #36]
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2226              		.loc 3 395 53 view .LVU661
 2227 06b6 059A     		ldr	r2, [sp, #20]
 2228 06b8 B2EC017A 		vldmia.32	r2!, {s14}
 2229 06bc 67EE877A 		vmul.f32	s15, s15, s14
 2230              	.LVL174:
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2231              		.loc 3 395 31 view .LVU662
 2232 06c0 B3EC017A 		vldmia.32	r3!, {s14}
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2233              		.loc 3 395 53 view .LVU663
 2234 06c4 0592     		str	r2, [sp, #20]
 395:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2235              		.loc 3 395 31 view .LVU664
 2236 06c6 1093     		str	r3, [sp, #64]
 2237 06c8 E6EE077A 		vfma.f32	s15, s12, s14
 2238              	.LVL175:
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2239              		.loc 3 396 40 view .LVU665
 2240 06cc 079B     		ldr	r3, [sp, #28]
 2241 06ce 93ED007A 		vldr.32	s14, [r3]
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2242              		.loc 3 396 31 view .LVU666
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 87


 2243 06d2 0A9B     		ldr	r3, [sp, #40]
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2244              		.loc 3 396 35 view .LVU667
 2245 06d4 37EE877A 		vadd.f32	s14, s15, s14
 396:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2246              		.loc 3 396 31 view .LVU668
 2247 06d8 A3EC017A 		vstmia.32	r3!, {s14}
 2248 06dc 0A93     		str	r3, [sp, #40]
 397:./shy_fft.h   ****                     phasor->Rotate();
 2249              		.loc 3 397 35 view .LVU669
 2250 06de 079B     		ldr	r3, [sp, #28]
 2251 06e0 B3EC017A 		vldmia.32	r3!, {s14}
 2252 06e4 77EEC77A 		vsub.f32	s15, s15, s14
 2253              	.LVL176:
 397:./shy_fft.h   ****                     phasor->Rotate();
 2254              		.loc 3 397 35 view .LVU670
 2255 06e8 0793     		str	r3, [sp, #28]
 397:./shy_fft.h   ****                     phasor->Rotate();
 2256              		.loc 3 397 31 view .LVU671
 2257 06ea 0B9B     		ldr	r3, [sp, #44]
 2258 06ec 63ED017A 		vstmdb.32	r3!, {s15}
 398:./shy_fft.h   ****                 }
 2259              		.loc 3 398 35 view .LVU672
 2260 06f0 0F90     		str	r0, [sp, #60]
 397:./shy_fft.h   ****                     phasor->Rotate();
 2261              		.loc 3 397 31 view .LVU673
 2262 06f2 0B93     		str	r3, [sp, #44]
 398:./shy_fft.h   ****                 }
 2263              		.loc 3 398 35 view .LVU674
 2264 06f4 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 2265              	.LVL177:
 398:./shy_fft.h   ****                 }
 2266              		.loc 3 398 35 view .LVU675
 2267              	.LBE439:
 385:./shy_fft.h   ****                 {
 2268              		.loc 3 385 17 is_stmt 1 view .LVU676
 385:./shy_fft.h   ****                 {
 2269              		.loc 3 385 37 view .LVU677
 2270 06f8 0C9B     		ldr	r3, [sp, #48]
 2271 06fa 0F98     		ldr	r0, [sp, #60]
 2272 06fc 1A46     		mov	r2, r3
 2273 06fe 109B     		ldr	r3, [sp, #64]
 2274 0700 9342     		cmp	r3, r2
 2275 0702 DDE91112 		ldrd	r1, r2, [sp, #68]
 2276 0706 B4D1     		bne	.L41
 2277              	.LBE446:
 2278              	.LBE449:
 371:./shy_fft.h   ****             {
 2279              		.loc 3 371 13 view .LVU678
 371:./shy_fft.h   ****             {
 2280              		.loc 3 371 43 is_stmt 0 view .LVU679
 2281 0708 049B     		ldr	r3, [sp, #16]
 2282 070a 9C46     		mov	ip, r3
 2283 070c 0D9B     		ldr	r3, [sp, #52]
 2284 070e 9C44     		add	ip, ip, r3
 371:./shy_fft.h   ****             {
 2285              		.loc 3 371 33 view .LVU680
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 88


 2286 0710 019B     		ldr	r3, [sp, #4]
 2287 0712 BCF5805F 		cmp	ip, #4096
 2288 0716 9844     		add	r8, r8, r3
 2289              	.LVL178:
 371:./shy_fft.h   ****             {
 2290              		.loc 3 371 33 view .LVU681
 2291 0718 1F44     		add	r7, r7, r3
 2292              	.LVL179:
 371:./shy_fft.h   ****             {
 2293              		.loc 3 371 33 view .LVU682
 2294 071a 9A44     		add	r10, r10, r3
 2295              	.LVL180:
 371:./shy_fft.h   ****             {
 2296              		.loc 3 371 33 view .LVU683
 2297 071c 9944     		add	r9, r9, r3
 2298              	.LVL181:
 371:./shy_fft.h   ****             {
 2299              		.loc 3 371 33 view .LVU684
 2300 071e 1A44     		add	r2, r2, r3
 371:./shy_fft.h   ****             {
 2301              		.loc 3 371 43 view .LVU685
 2302 0720 CDF810C0 		str	ip, [sp, #16]
 2303              	.LVL182:
 371:./shy_fft.h   ****             {
 2304              		.loc 3 371 33 is_stmt 1 view .LVU686
 2305 0724 FFF46EAF 		bcc	.L42
 2306              	.LBE451:
 2307              	.LBE435:
 359:./shy_fft.h   ****         {
 2308              		.loc 3 359 9 view .LVU687
 2309 0728 0131     		adds	r1, r1, #1
 2310              	.LVL183:
 359:./shy_fft.h   ****         {
 2311              		.loc 3 359 35 view .LVU688
 2312 072a 0C29     		cmp	r1, #12
 2313 072c 07D1     		bne	.L73
 2314              	.LBE434:
 404:./shy_fft.h   ****         {
 2315              		.loc 3 404 9 is_stmt 0 view .LVU689
 2316 072e 5E45     		cmp	r6, fp
 2317 0730 3FF4F6AD 		beq	.L38
 406:./shy_fft.h   ****         }
 2318              		.loc 3 406 22 view .LVU690
 2319 0734 5A46     		mov	r2, fp
 2320 0736 06F58041 		add	r1, r6, #16384
 2321              	.LVL184:
 406:./shy_fft.h   ****         }
 2322              		.loc 3 406 22 view .LVU691
 2323 073a 3046     		mov	r0, r6
 2324 073c EEE5     		b	.L98
 2325              	.LVL185:
 2326              	.L73:
 2327              	.LBB452:
 406:./shy_fft.h   ****         }
 2328              		.loc 3 406 22 view .LVU692
 2329 073e 2B46     		mov	r3, r5
 2330 0740 3546     		mov	r5, r6
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 89


 2331              	.LVL186:
 406:./shy_fft.h   ****         }
 2332              		.loc 3 406 22 view .LVU693
 2333 0742 1E46     		mov	r6, r3
 2334              	.LVL187:
 406:./shy_fft.h   ****         }
 2335              		.loc 3 406 22 view .LVU694
 2336 0744 44E7     		b	.L43
 2337              	.LVL188:
 2338              	.L45:
 406:./shy_fft.h   ****         }
 2339              		.loc 3 406 22 view .LVU695
 2340              	.LBE452:
 2341              	.LBE456:
 2342              	.LBE460:
 2343              	.LBE464:
 2344              	.LBE523:
 171:dsp/pvoc/stft.cpp ****     }
 2345              		.loc 2 171 9 is_stmt 1 view .LVU696
 171:dsp/pvoc/stft.cpp ****     }
 2346              		.loc 2 171 47 is_stmt 0 view .LVU697
 2347 0746 6168     		ldr	r1, [r4, #4]
 171:dsp/pvoc/stft.cpp ****     }
 2348              		.loc 2 171 13 view .LVU698
 2349 0748 1A46     		mov	r2, r3
 2350 074a 00EB8101 		add	r1, r0, r1, lsl #2
 2351 074e FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0
 2352              	.LVL189:
 2353 0752 F3E5     		b	.L46
 2354              	.LVL190:
 2355              	.L50:
 2356              	.LBB524:
 2357              	.LBB516:
 2358              	.LBB512:
 2359              	.LBB508:
 2360              	.LBB492:
 2361              	.LBB488:
 2362              	.LBB487:
 683:./shy_fft.h   ****             {
 2363              		.loc 3 683 13 is_stmt 1 view .LVU699
 683:./shy_fft.h   ****             {
 2364              		.loc 3 683 46 is_stmt 0 view .LVU700
 2365 0754 089B     		ldr	r3, [sp, #32]
 2366              	.LVL191:
 683:./shy_fft.h   ****             {
 2367              		.loc 3 683 46 view .LVU701
 2368 0756 B344     		add	fp, fp, r6
 2369              	.LVL192:
 683:./shy_fft.h   ****             {
 2370              		.loc 3 683 46 view .LVU702
 2371 0758 0F9A     		ldr	r2, [sp, #60]
 2372 075a B244     		add	r10, r10, r6
 2373              	.LVL193:
 683:./shy_fft.h   ****             {
 2374              		.loc 3 683 46 view .LVU703
 2375 075c 1344     		add	r3, r3, r2
 2376 075e 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 90


 2377              	.LVL194:
 683:./shy_fft.h   ****             {
 2378              		.loc 3 683 46 view .LVU704
 2379 0760 039B     		ldr	r3, [sp, #12]
 2380              	.LVL195:
 683:./shy_fft.h   ****             {
 2381              		.loc 3 683 46 view .LVU705
 2382 0762 3344     		add	r3, r3, r6
 2383 0764 0393     		str	r3, [sp, #12]
 2384              	.LVL196:
 683:./shy_fft.h   ****             {
 2385              		.loc 3 683 46 view .LVU706
 2386 0766 029B     		ldr	r3, [sp, #8]
 2387 0768 3344     		add	r3, r3, r6
 2388 076a 0293     		str	r3, [sp, #8]
 2389              	.LVL197:
 683:./shy_fft.h   ****             {
 2390              		.loc 3 683 46 view .LVU707
 2391 076c 0A9B     		ldr	r3, [sp, #40]
 2392 076e 3344     		add	r3, r3, r6
 2393 0770 0A93     		str	r3, [sp, #40]
 2394              	.LVL198:
 683:./shy_fft.h   ****             {
 2395              		.loc 3 683 46 view .LVU708
 2396 0772 069B     		ldr	r3, [sp, #24]
 2397 0774 3344     		add	r3, r3, r6
 2398 0776 0693     		str	r3, [sp, #24]
 683:./shy_fft.h   ****             {
 2399              		.loc 3 683 13 view .LVU709
 2400 0778 16E6     		b	.L52
 2401              	.LVL199:
 2402              	.L49:
 683:./shy_fft.h   ****             {
 2403              		.loc 3 683 13 view .LVU710
 2404              	.LBE487:
 715:./shy_fft.h   ****             {
 2405              		.loc 3 715 13 view .LVU711
 2406 077a A845     		cmp	r8, r5
 2407              	.LBE488:
 678:./shy_fft.h   ****         {
 2408              		.loc 3 678 9 view .LVU712
 2409 077c 09F1FF39 		add	r9, r9, #-1
 2410              	.LVL200:
 2411              	.LBB489:
 715:./shy_fft.h   ****             {
 2412              		.loc 3 715 13 view .LVU713
 2413 0780 19BF     		ittee	ne
 2414 0782 A846     		movne	r8, r5
 2415              	.LVL201:
 722:./shy_fft.h   ****                 d = output;
 2416              		.loc 3 722 19 view .LVU714
 2417 0784 019B     		ldrne	r3, [sp, #4]
 718:./shy_fft.h   ****             }
 2418              		.loc 3 718 19 view .LVU715
 2419 0786 DDF80480 		ldreq	r8, [sp, #4]
 2420 078a 2B46     		moveq	r3, r5
 2421              	.LVL202:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 91


 718:./shy_fft.h   ****             }
 2422              		.loc 3 718 19 view .LVU716
 2423              	.LBE489:
 678:./shy_fft.h   ****         {
 2424              		.loc 3 678 9 is_stmt 1 view .LVU717
 678:./shy_fft.h   ****         {
 2425              		.loc 3 678 9 is_stmt 0 view .LVU718
 2426 078c E9E5     		b	.L54
 2427              	.L102:
 2428 078e 00BF     		.align	2
 2429              	.L101:
 2430 0790 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 2431 0794 F304353F 		.word	1060439283
 2432              	.LVL203:
 2433              	.L48:
 678:./shy_fft.h   ****         {
 2434              		.loc 3 678 9 view .LVU719
 2435              	.LBE492:
 728:./shy_fft.h   ****         {
 2436              		.loc 3 728 9 view .LVU720
 2437 0798 A845     		cmp	r8, r5
 2438 079a 07D1     		bne	.L55
 730:./shy_fft.h   ****         }
 2439              		.loc 3 730 32 view .LVU721
 2440 079c 049A     		ldr	r2, [sp, #16]
 2441 079e 0421     		movs	r1, #4
 730:./shy_fft.h   ****         }
 2442              		.loc 3 730 22 view .LVU722
 2443 07a0 1846     		mov	r0, r3
 730:./shy_fft.h   ****         }
 2444              		.loc 3 730 32 view .LVU723
 2445 07a2 9140     		lsls	r1, r1, r2
 730:./shy_fft.h   ****         }
 2446              		.loc 3 730 22 view .LVU724
 2447 07a4 2A46     		mov	r2, r5
 2448 07a6 1944     		add	r1, r1, r3
 2449 07a8 FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0
 2450              	.LVL204:
 2451              	.L55:
 730:./shy_fft.h   ****         }
 2452              		.loc 3 730 22 view .LVU725
 2453 07ac 0199     		ldr	r1, [sp, #4]
 2454 07ae 2B46     		mov	r3, r5
 2455              	.LBB493:
 2456              	.LBB490:
 722:./shy_fft.h   ****                 d = output;
 2457              		.loc 3 722 19 view .LVU726
 2458 07b0 0020     		movs	r0, #0
 2459 07b2 0A46     		mov	r2, r1
 2460              	.LVL205:
 2461              	.L58:
 722:./shy_fft.h   ****                 d = output;
 2462              		.loc 3 722 19 view .LVU727
 2463              	.LBE490:
 2464              	.LBE493:
 2465              	.LBB494:
 735:./shy_fft.h   ****         {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 92


 2466              		.loc 3 735 29 is_stmt 1 view .LVU728
 2467 07b4 059E     		ldr	r6, [sp, #20]
 2468 07b6 2033     		adds	r3, r3, #32
 2469 07b8 2032     		adds	r2, r2, #32
 2470 07ba 8642     		cmp	r6, r0
 2471 07bc 49D8     		bhi	.L56
 2472              	.LBE494:
 2473              	.LBB499:
 2474              	.LBB500:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2475              		.loc 3 757 43 is_stmt 0 view .LVU729
 2476 07be B608     		lsrs	r6, r6, #2
 2477              	.LBE500:
 753:./shy_fft.h   ****         {
 2478              		.loc 3 753 20 view .LVU730
 2479 07c0 0022     		movs	r2, #0
 2480              	.LBB501:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2481              		.loc 3 757 32 view .LVU731
 2482 07c2 7700     		lsls	r7, r6, #1
 2483              	.LVL206:
 2484              	.L57:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2485              		.loc 3 757 32 view .LVU732
 2486              	.LBE501:
 753:./shy_fft.h   ****         {
 2487              		.loc 3 753 29 is_stmt 1 view .LVU733
 2488 07c4 059B     		ldr	r3, [sp, #20]
 2489 07c6 1031     		adds	r1, r1, #16
 2490              	.LVL207:
 753:./shy_fft.h   ****         {
 2491              		.loc 3 753 29 is_stmt 0 view .LVU734
 2492 07c8 9342     		cmp	r3, r2
 2493 07ca 00F28A80 		bhi	.L59
 2494              	.LVL208:
 2495              	.L66:
 753:./shy_fft.h   ****         {
 2496              		.loc 3 753 29 view .LVU735
 2497              	.LBE499:
 2498              	.LBE508:
 2499              	.LBE512:
 2500              	.LBE516:
 2501              	.LBE524:
 188:dsp/pvoc/stft.cpp ****     }
 189:dsp/pvoc/stft.cpp ****     else
 190:dsp/pvoc/stft.cpp ****     {
 191:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_);
 192:dsp/pvoc/stft.cpp ****     }
 193:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 194:dsp/pvoc/stft.cpp **** 
 195:dsp/pvoc/stft.cpp ****     size_t destination_ptr = process_ptr_;
 2502              		.loc 2 195 5 is_stmt 1 view .LVU736
 196:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 197:dsp/pvoc/stft.cpp ****     float inverse_window_size = 1.0f / float(fft_size_ / hop_size_ >> 1);
 198:dsp/pvoc/stft.cpp **** #else
 199:dsp/pvoc/stft.cpp ****     float inverse_window_size
 200:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 93


 2503              		.loc 2 200 24 is_stmt 0 view .LVU737
 2504 07ce 6668     		ldr	r6, [r4, #4]
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2505              		.loc 2 199 11 view .LVU738
 2506 07d0 F7EE006A 		vmov.f32	s13, #1.0e+0
 2507              		.loc 2 200 48 view .LVU739
 2508 07d4 E268     		ldr	r2, [r4, #12]
 2509              	.LBB525:
 201:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 202:dsp/pvoc/stft.cpp **** 
 203:dsp/pvoc/stft.cpp ****     w = window_;
 204:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 2510              		.loc 2 204 16 view .LVU740
 2511 07d6 0020     		movs	r0, #0
 2512              	.LBE525:
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2513              		.loc 2 200 34 view .LVU741
 2514 07d8 06FB06F1 		mul	r1, r6, r6
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 2515              		.loc 2 195 12 view .LVU742
 2516 07dc A76B     		ldr	r7, [r4, #56]
 2517              	.LVL209:
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2518              		.loc 2 199 5 is_stmt 1 view .LVU743
 203:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 2519              		.loc 2 203 7 is_stmt 0 view .LVU744
 2520 07de D4F824C0 		ldr	ip, [r4, #36]
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2521              		.loc 2 200 46 view .LVU745
 2522 07e2 B1FBF2F1 		udiv	r1, r1, r2
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2523              		.loc 2 200 58 view .LVU746
 2524 07e6 4908     		lsrs	r1, r1, #1
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2525              		.loc 2 200 18 view .LVU747
 2526 07e8 07EE901A 		vmov	s15, r1	@ int
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 2527              		.loc 2 195 12 view .LVU748
 2528 07ec 3946     		mov	r1, r7
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2529              		.loc 2 200 18 view .LVU749
 2530 07ee F8EEE77A 		vcvt.f32.s32	s15, s15
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2531              		.loc 2 199 11 view .LVU750
 2532 07f2 86EEA77A 		vdiv.f32	s14, s13, s15
 2533              	.LVL210:
 203:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 2534              		.loc 2 203 5 is_stmt 1 view .LVU751
 2535              		.loc 2 204 5 view .LVU752
 2536              	.L60:
 2537              	.LBB529:
 2538              		.loc 2 204 25 discriminator 1 view .LVU753
 2539 07f6 8642     		cmp	r6, r0
 2540 07f8 2569     		ldr	r5, [r4, #16]
 2541 07fa 00F00082 		beq	.L68
 2542              	.LBB526:
 205:dsp/pvoc/stft.cpp ****     {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 94


 206:dsp/pvoc/stft.cpp ****         float s = ifft_out_[i] * w[0] * inverse_window_size;
 2543              		.loc 2 206 9 view .LVU754
 2544              	.LVL211:
 207:dsp/pvoc/stft.cpp **** 
 208:dsp/pvoc/stft.cpp ****         int32_t x = static_cast<int32_t>(s);
 2545              		.loc 2 208 9 view .LVU755
 206:dsp/pvoc/stft.cpp **** 
 2546              		.loc 2 206 30 is_stmt 0 view .LVU756
 2547 07fe E369     		ldr	r3, [r4, #28]
 209:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2548              		.loc 2 209 26 view .LVU757
 2549 0800 A6EB0209 		sub	r9, r6, r2
 206:dsp/pvoc/stft.cpp **** 
 2550              		.loc 2 206 32 view .LVU758
 2551 0804 DCED006A 		vldr.32	s13, [ip]
 210:dsp/pvoc/stft.cpp ****         {
 211:dsp/pvoc/stft.cpp ****             // Overlap-add.
 212:dsp/pvoc/stft.cpp ****             x += synthesis_[destination_ptr];
 2552              		.loc 2 212 44 view .LVU759
 2553 0808 4FEA4108 		lsl	r8, r1, #1
 206:dsp/pvoc/stft.cpp **** 
 2554              		.loc 2 206 30 view .LVU760
 2555 080c 03EB8003 		add	r3, r3, r0, lsl #2
 209:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2556              		.loc 2 209 9 view .LVU761
 2557 0810 8145     		cmp	r9, r0
 2558              		.loc 2 212 44 view .LVU762
 2559 0812 D4F830E0 		ldr	lr, [r4, #48]
 2560              	.LBE526:
 204:dsp/pvoc/stft.cpp ****     {
 2561              		.loc 2 204 5 view .LVU763
 2562 0816 00F10100 		add	r0, r0, #1
 2563              	.LVL212:
 2564              	.LBB527:
 206:dsp/pvoc/stft.cpp **** 
 2565              		.loc 2 206 32 view .LVU764
 2566 081a D3ED007A 		vldr.32	s15, [r3]
 2567              		.loc 2 212 44 view .LVU765
 2568 081e 88BF     		it	hi
 2569 0820 3EF91190 		ldrshhi	r9, [lr, r1, lsl #1]
 213:dsp/pvoc/stft.cpp ****         }
 214:dsp/pvoc/stft.cpp ****         synthesis_[destination_ptr] = Clip16(x);
 215:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2570              		.loc 2 215 9 view .LVU766
 2571 0824 01F10101 		add	r1, r1, #1
 2572              	.LVL213:
 206:dsp/pvoc/stft.cpp **** 
 2573              		.loc 2 206 32 view .LVU767
 2574 0828 67EEA67A 		vmul.f32	s15, s15, s13
 206:dsp/pvoc/stft.cpp **** 
 2575              		.loc 2 206 15 view .LVU768
 2576 082c 67EE877A 		vmul.f32	s15, s15, s14
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2577              		.loc 2 208 17 view .LVU769
 2578 0830 FDEEE77A 		vcvt.s32.f32	s15, s15
 2579 0834 17EE903A 		vmov	r3, s15	@ int
 2580              	.LVL214:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 95


 209:dsp/pvoc/stft.cpp ****         {
 2581              		.loc 2 209 9 is_stmt 1 view .LVU770
 212:dsp/pvoc/stft.cpp ****         }
 2582              		.loc 2 212 13 view .LVU771
 212:dsp/pvoc/stft.cpp ****         }
 2583              		.loc 2 212 15 is_stmt 0 view .LVU772
 2584 0838 88BF     		it	hi
 2585 083a 4B44     		addhi	r3, r3, r9
 2586              	.LVL215:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2587              		.loc 2 214 9 is_stmt 1 view .LVU773
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2588              		.loc 2 214 9 is_stmt 0 view .LVU774
 2589              	.LBE527:
 2590              	.LBE529:
 2591              		.loc 4 102 5 is_stmt 1 view .LVU775
 2592              	.LBB530:
 2593              	.LBB528:
 216:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2594              		.loc 2 216 9 is_stmt 0 view .LVU776
 2595 083c 8D42     		cmp	r5, r1
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2596              		.loc 2 214 37 view .LVU777
 2597 083e 03F30F03 		ssat	r3, #16, r3
 2598              	.LVL216:
 217:dsp/pvoc/stft.cpp ****         {
 218:dsp/pvoc/stft.cpp ****             destination_ptr -= buffer_size_;
 2599              		.loc 2 218 29 view .LVU778
 2600 0842 98BF     		it	ls
 2601 0844 491B     		subls	r1, r1, r5
 2602              	.LVL217:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2603              		.loc 2 214 37 view .LVU779
 2604 0846 2EF80830 		strh	r3, [lr, r8]	@ movhi
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2605              		.loc 2 215 9 is_stmt 1 view .LVU780
 216:dsp/pvoc/stft.cpp ****         {
 2606              		.loc 2 216 9 view .LVU781
 2607              		.loc 2 218 13 view .LVU782
 2608              	.LVL218:
 219:dsp/pvoc/stft.cpp ****         }
 220:dsp/pvoc/stft.cpp ****         w += window_stride_;
 2609              		.loc 2 220 9 view .LVU783
 2610              		.loc 2 220 11 is_stmt 0 view .LVU784
 2611 084a A36A     		ldr	r3, [r4, #40]
 2612 084c 0CEB830C 		add	ip, ip, r3, lsl #2
 2613              	.LVL219:
 2614              		.loc 2 220 11 view .LVU785
 2615              	.LBE528:
 204:dsp/pvoc/stft.cpp ****     {
 2616              		.loc 2 204 5 is_stmt 1 view .LVU786
 204:dsp/pvoc/stft.cpp ****     {
 2617              		.loc 2 204 5 is_stmt 0 view .LVU787
 2618 0850 D1E7     		b	.L60
 2619              	.LVL220:
 2620              	.L56:
 204:dsp/pvoc/stft.cpp ****     {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 96


 2621              		.loc 2 204 5 view .LVU788
 2622              	.LBE530:
 2623              	.LBB531:
 2624              	.LBB517:
 2625              	.LBB513:
 2626              	.LBB509:
 2627              	.LBB504:
 2628              	.LBB495:
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2629              		.loc 3 738 29 view .LVU789
 2630 0852 13ED047A 		vldr.32	s14, [r3, #-16]
 2631              	.LBE495:
 735:./shy_fft.h   ****         {
 2632              		.loc 3 735 42 view .LVU790
 2633 0856 0830     		adds	r0, r0, #8
 2634              	.LVL221:
 2635              	.LBB496:
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2636              		.loc 3 738 29 view .LVU791
 2637 0858 53ED087A 		vldr.32	s15, [r3, #-32]
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2638              		.loc 3 746 34 view .LVU792
 2639 085c 1FED336A 		vldr.32	s12, .L101+4
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2640              		.loc 3 738 29 view .LVU793
 2641 0860 77EE877A 		vadd.f32	s15, s15, s14
 738:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2642              		.loc 3 738 22 view .LVU794
 2643 0864 42ED087A 		vstr.32	s15, [r2, #-32]
 739:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 2644              		.loc 3 739 29 view .LVU795
 2645 0868 13ED047A 		vldr.32	s14, [r3, #-16]
 2646 086c 53ED087A 		vldr.32	s15, [r3, #-32]
 2647 0870 77EEC77A 		vsub.f32	s15, s15, s14
 739:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 2648              		.loc 3 739 22 view .LVU796
 2649 0874 42ED047A 		vstr.32	s15, [r2, #-16]
 740:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 2650              		.loc 3 740 33 view .LVU797
 2651 0878 53ED067A 		vldr.32	s15, [r3, #-24]
 2652 087c 77EEA77A 		vadd.f32	s15, s15, s15
 740:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 2653              		.loc 3 740 22 view .LVU798
 2654 0880 42ED067A 		vstr.32	s15, [r2, #-24]
 741:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 2655              		.loc 3 741 33 view .LVU799
 2656 0884 53ED027A 		vldr.32	s15, [r3, #-8]
 2657 0888 77EEA77A 		vadd.f32	s15, s15, s15
 741:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 2658              		.loc 3 741 22 view .LVU800
 2659 088c 42ED027A 		vstr.32	s15, [r2, #-8]
 742:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 2660              		.loc 3 742 33 view .LVU801
 2661 0890 13ED057A 		vldr.32	s14, [r3, #-20]
 2662 0894 53ED077A 		vldr.32	s15, [r3, #-28]
 2663 0898 77EE877A 		vadd.f32	s15, s15, s14
 742:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 97


 2664              		.loc 3 742 22 view .LVU802
 2665 089c 42ED077A 		vstr.32	s15, [r2, #-28]
 743:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2666              		.loc 3 743 33 view .LVU803
 2667 08a0 13ED017A 		vldr.32	s14, [r3, #-4]
 2668 08a4 53ED037A 		vldr.32	s15, [r3, #-12]
 2669 08a8 77EEC77A 		vsub.f32	s15, s15, s14
 743:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2670              		.loc 3 743 22 view .LVU804
 2671 08ac 42ED057A 		vstr.32	s15, [r2, #-20]
 744:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2672              		.loc 3 744 22 view .LVU805
 2673 08b0 53ED077A 		vldr.32	s15, [r3, #-28]
 2674 08b4 53ED056A 		vldr.32	s13, [r3, #-20]
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2675              		.loc 3 745 22 view .LVU806
 2676 08b8 13ED037A 		vldr.32	s14, [r3, #-12]
 744:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2677              		.loc 3 744 22 view .LVU807
 2678 08bc 77EEE66A 		vsub.f32	s13, s15, s13
 2679              	.LVL222:
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2680              		.loc 3 745 22 view .LVU808
 2681 08c0 53ED017A 		vldr.32	s15, [r3, #-4]
 2682 08c4 77EE277A 		vadd.f32	s15, s14, s15
 2683              	.LVL223:
 745:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2684              		.loc 3 745 22 view .LVU809
 2685              	.LBE496:
 2686              	.LBE504:
 2687              	.LBE509:
 2688              	.LBE513:
 2689              	.LBE517:
 2690              	.LBE531:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2691              		.loc 3 137 41 is_stmt 1 view .LVU810
 2692              	.LBB532:
 2693              	.LBB518:
 2694              	.LBB514:
 2695              	.LBB510:
 2696              	.LBB505:
 2697              	.LBB497:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2698              		.loc 3 746 28 is_stmt 0 view .LVU811
 2699 08c8 36EEA77A 		vadd.f32	s14, s13, s15
 747:./shy_fft.h   ****         }
 2700              		.loc 3 747 28 view .LVU812
 2701 08cc 77EEE67A 		vsub.f32	s15, s15, s13
 2702              	.LVL224:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2703              		.loc 3 746 34 view .LVU813
 2704 08d0 27EE067A 		vmul.f32	s14, s14, s12
 747:./shy_fft.h   ****         }
 2705              		.loc 3 747 34 view .LVU814
 2706 08d4 67EE867A 		vmul.f32	s15, s15, s12
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2707              		.loc 3 746 22 view .LVU815
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 98


 2708 08d8 02ED037A 		vstr.32	s14, [r2, #-12]
 2709              	.LVL225:
 746:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2710              		.loc 3 746 22 view .LVU816
 2711              	.LBE497:
 2712              	.LBE505:
 2713              	.LBE510:
 2714              	.LBE514:
 2715              	.LBE518:
 2716              	.LBE532:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2717              		.loc 3 137 41 is_stmt 1 view .LVU817
 2718              	.LBB533:
 2719              	.LBB519:
 2720              	.LBB515:
 2721              	.LBB511:
 2722              	.LBB506:
 2723              	.LBB498:
 747:./shy_fft.h   ****         }
 2724              		.loc 3 747 22 is_stmt 0 view .LVU818
 2725 08dc 42ED017A 		vstr.32	s15, [r2, #-4]
 2726              	.LBE498:
 735:./shy_fft.h   ****         {
 2727              		.loc 3 735 9 is_stmt 1 view .LVU819
 2728              	.LVL226:
 735:./shy_fft.h   ****         {
 2729              		.loc 3 735 9 is_stmt 0 view .LVU820
 2730 08e0 68E7     		b	.L58
 2731              	.LVL227:
 2732              	.L59:
 735:./shy_fft.h   ****         {
 2733              		.loc 3 735 9 view .LVU821
 2734              	.LBE506:
 2735              	.LBB507:
 2736              	.LBB502:
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2737              		.loc 3 761 29 view .LVU822
 2738 08e2 11ED027A 		vldr.32	s14, [r1, #-8]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2739              		.loc 3 755 37 view .LVU823
 2740 08e6 D3B2     		uxtb	r3, r2
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2741              		.loc 3 761 22 view .LVU824
 2742 08e8 51ED047A 		vldr.32	s15, [r1, #-16]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2743              		.loc 3 755 43 view .LVU825
 2744 08ec CB48     		ldr	r0, .L103
 761:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2745              		.loc 3 761 15 view .LVU826
 2746 08ee 77EE876A 		vadd.f32	s13, s15, s14
 763:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 2747              		.loc 3 763 22 view .LVU827
 2748 08f2 51ED035A 		vldr.32	s11, [r1, #-12]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2749              		.loc 3 755 43 view .LVU828
 2750 08f6 13F800C0 		ldrb	ip, [r3, r0]	@ zero_extendqisi2
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 99


 2751              		.loc 3 755 63 view .LVU829
 2752 08fa 130A     		lsrs	r3, r2, #8
 762:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 2753              		.loc 3 762 15 view .LVU830
 2754 08fc 77EEC77A 		vsub.f32	s15, s15, s14
 764:./shy_fft.h   **** 
 2755              		.loc 3 764 22 view .LVU831
 2756 0900 11ED016A 		vldr.32	s12, [r1, #-4]
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2757              		.loc 3 755 67 view .LVU832
 2758 0904 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2759              		.loc 3 766 25 view .LVU833
 2760 0906 B0EE007A 		vmov.f32	s14, #2.0e+0
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2761              		.loc 3 756 32 view .LVU834
 2762 090a 0498     		ldr	r0, [sp, #16]
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2763              		.loc 3 766 25 view .LVU835
 2764 090c B0EE665A 		vmov.f32	s10, s13
 755:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2765              		.loc 3 755 51 view .LVU836
 2766 0910 43EA0C23 		orr	r3, r3, ip, lsl #8
 2767              	.LBE502:
 753:./shy_fft.h   ****         {
 2768              		.loc 3 753 42 view .LVU837
 2769 0914 0432     		adds	r2, r2, #4
 2770              	.LVL228:
 2771              	.LBB503:
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2772              		.loc 3 756 32 view .LVU838
 2773 0916 C0F11000 		rsb	r0, r0, #16
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2774              		.loc 3 767 25 view .LVU839
 2775 091a E5EEC76A 		vfms.f32	s13, s11, s14
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2776              		.loc 3 766 25 view .LVU840
 2777 091e A5EE875A 		vfma.f32	s10, s11, s14
 756:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2778              		.loc 3 756 25 view .LVU841
 2779 0922 0341     		asrs	r3, r3, r0
 2780              	.LVL229:
 757:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2781              		.loc 3 757 20 view .LVU842
 2782 0924 D819     		adds	r0, r3, r7
 2783              	.LVL230:
 758:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 2784              		.loc 3 758 20 view .LVU843
 2785 0926 03EB060E 		add	lr, r3, r6
 2786              	.LVL231:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2787              		.loc 3 766 14 view .LVU844
 2788 092a 05EB8303 		add	r3, r5, r3, lsl #2
 2789              	.LVL232:
 759:./shy_fft.h   **** 
 2790              		.loc 3 759 20 view .LVU845
 2791 092e 06EB000C 		add	ip, r6, r0
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 100


 2792              	.LVL233:
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2793              		.loc 3 767 14 view .LVU846
 2794 0932 05EB8000 		add	r0, r5, r0, lsl #2
 2795              	.LVL234:
 766:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2796              		.loc 3 766 19 view .LVU847
 2797 0936 83ED005A 		vstr.32	s10, [r3]
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2798              		.loc 3 768 14 view .LVU848
 2799 093a 05EB8E03 		add	r3, r5, lr, lsl #2
 767:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2800              		.loc 3 767 19 view .LVU849
 2801 093e C0ED006A 		vstr.32	s13, [r0]
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2802              		.loc 3 768 25 view .LVU850
 2803 0942 F0EE676A 		vmov.f32	s13, s15
 769:./shy_fft.h   ****             s += 4;
 2804              		.loc 3 769 25 view .LVU851
 2805 0946 E6EE477A 		vfms.f32	s15, s12, s14
 2806              	.LVL235:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2807              		.loc 3 768 25 view .LVU852
 2808 094a E6EE076A 		vfma.f32	s13, s12, s14
 2809              	.LVL236:
 768:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2810              		.loc 3 768 19 view .LVU853
 2811 094e C3ED006A 		vstr.32	s13, [r3]
 769:./shy_fft.h   ****             s += 4;
 2812              		.loc 3 769 14 view .LVU854
 2813 0952 05EB8C03 		add	r3, r5, ip, lsl #2
 769:./shy_fft.h   ****             s += 4;
 2814              		.loc 3 769 19 view .LVU855
 2815 0956 C3ED007A 		vstr.32	s15, [r3]
 2816              	.LVL237:
 769:./shy_fft.h   ****             s += 4;
 2817              		.loc 3 769 19 view .LVU856
 2818              	.LBE503:
 753:./shy_fft.h   ****         {
 2819              		.loc 3 753 9 is_stmt 1 view .LVU857
 753:./shy_fft.h   ****         {
 2820              		.loc 3 753 9 is_stmt 0 view .LVU858
 2821 095a 33E7     		b	.L57
 2822              	.LVL238:
 2823              	.L74:
 753:./shy_fft.h   ****         {
 2824              		.loc 3 753 9 view .LVU859
 2825              	.LBE507:
 2826              	.LBE511:
 2827              	.LBE515:
 2828              	.LBE519:
 2829              	.LBE533:
 187:dsp/pvoc/stft.cpp ****     }
 2830              		.loc 2 187 22 view .LVU860
 2831 095c AB46     		mov	fp, r5
 2832              	.LBB534:
 2833              	.LBB535:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 101


 2834              	.LBB536:
 2835              	.LBB537:
 562:./shy_fft.h   ****         T*      d = output;
 2836              		.loc 3 562 17 view .LVU861
 2837 095e 019E     		ldr	r6, [sp, #4]
 2838              	.LBB538:
 567:./shy_fft.h   ****         {
 2839              		.loc 3 567 20 view .LVU862
 2840 0960 0B21     		movs	r1, #11
 2841              	.L47:
 2842              	.LVL239:
 2843              	.LBB539:
 569:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2844              		.loc 3 569 28 view .LVU863
 2845 0962 0123     		movs	r3, #1
 2846              	.LBB540:
 2847              	.LBB541:
 575:./shy_fft.h   ****                 T* d1r = d + i;
 2848              		.loc 3 575 29 view .LVU864
 2849 0964 0422     		movs	r2, #4
 2850 0966 0BF1040A 		add	r10, fp, #4
 2851              	.LBE541:
 2852              	.LBE540:
 569:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2853              		.loc 3 569 28 view .LVU865
 2854 096a 8B40     		lsls	r3, r3, r1
 2855              	.LVL240:
 2856              	.LBB554:
 572:./shy_fft.h   ****             {
 2857              		.loc 3 572 33 is_stmt 1 view .LVU866
 2858              	.LBB551:
 575:./shy_fft.h   ****                 T* d1r = d + i;
 2859              		.loc 3 575 29 is_stmt 0 view .LVU867
 2860 096c 8A40     		lsls	r2, r2, r1
 2861 096e 0292     		str	r2, [sp, #8]
 2862              	.LBE551:
 2863              	.LBE554:
 570:./shy_fft.h   **** 
 2864              		.loc 3 570 20 view .LVU868
 2865 0970 5A08     		lsrs	r2, r3, #1
 2866              	.LVL241:
 570:./shy_fft.h   **** 
 2867              		.loc 3 570 20 view .LVU869
 2868 0972 4FEAC309 		lsl	r9, r3, #3
 2869              	.LBB555:
 2870              	.LBB552:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2871              		.loc 3 581 30 view .LVU870
 2872 0976 9200     		lsls	r2, r2, #2
 2873              	.LVL242:
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2874              		.loc 3 581 30 view .LVU871
 2875 0978 0392     		str	r2, [sp, #12]
 2876              	.LBE552:
 572:./shy_fft.h   ****             {
 2877              		.loc 3 572 49 view .LVU872
 2878 097a 5A00     		lsls	r2, r3, #1
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 102


 2879 097c 029B     		ldr	r3, [sp, #8]
 2880              	.LVL243:
 572:./shy_fft.h   ****             {
 2881              		.loc 3 572 49 view .LVU873
 2882 097e 0E92     		str	r2, [sp, #56]
 2883 0980 F718     		adds	r7, r6, r3
 2884 0982 5B44     		add	r3, fp, r3
 2885 0984 0493     		str	r3, [sp, #16]
 2886 0986 039B     		ldr	r3, [sp, #12]
 2887 0988 0433     		adds	r3, r3, #4
 2888 098a 0BEB0308 		add	r8, fp, r3
 2889 098e 029B     		ldr	r3, [sp, #8]
 2890 0990 5B00     		lsls	r3, r3, #1
 2891 0992 0D93     		str	r3, [sp, #52]
 572:./shy_fft.h   ****             {
 2892              		.loc 3 572 24 view .LVU874
 2893 0994 0023     		movs	r3, #0
 2894 0996 0593     		str	r3, [sp, #20]
 2895              	.LVL244:
 2896              	.L62:
 2897              	.LBB553:
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2898              		.loc 3 579 34 view .LVU875
 2899 0998 97ED007A 		vldr.32	s14, [r7]
 2900 099c D6ED007A 		vldr.32	s15, [r6]
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2901              		.loc 3 580 26 view .LVU876
 2902 09a0 049B     		ldr	r3, [sp, #16]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2903              		.loc 3 579 34 view .LVU877
 2904 09a2 77EE877A 		vadd.f32	s15, s15, s14
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2905              		.loc 3 586 30 view .LVU878
 2906 09a6 CDE90F01 		strd	r0, r1, [sp, #60]
 579:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 2907              		.loc 3 579 26 view .LVU879
 2908 09aa 4AED017A 		vstr.32	s15, [r10, #-4]
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2909              		.loc 3 580 34 view .LVU880
 2910 09ae 97ED007A 		vldr.32	s14, [r7]
 2911 09b2 D6ED007A 		vldr.32	s15, [r6]
 2912 09b6 77EEC77A 		vsub.f32	s15, s15, s14
 580:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 2913              		.loc 3 580 26 view .LVU881
 2914 09ba C3ED007A 		vstr.32	s15, [r3]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2915              		.loc 3 581 30 view .LVU882
 2916 09be 039B     		ldr	r3, [sp, #12]
 2917 09c0 F318     		adds	r3, r6, r3
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2918              		.loc 3 581 36 view .LVU883
 2919 09c2 D3ED007A 		vldr.32	s15, [r3]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2920              		.loc 3 581 30 view .LVU884
 2921 09c6 0C93     		str	r3, [sp, #48]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2922              		.loc 3 581 36 view .LVU885
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 103


 2923 09c8 77EEA77A 		vadd.f32	s15, s15, s15
 582:./shy_fft.h   **** 
 2924              		.loc 3 582 26 view .LVU886
 2925 09cc DDE90323 		ldrd	r2, r3, [sp, #12]
 581:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 2926              		.loc 3 581 26 view .LVU887
 2927 09d0 48ED017A 		vstr.32	s15, [r8, #-4]
 582:./shy_fft.h   **** 
 2928              		.loc 3 582 26 view .LVU888
 2929 09d4 1344     		add	r3, r3, r2
 582:./shy_fft.h   **** 
 2930              		.loc 3 582 30 view .LVU889
 2931 09d6 BA18     		adds	r2, r7, r2
 582:./shy_fft.h   **** 
 2932              		.loc 3 582 36 view .LVU890
 2933 09d8 D2ED007A 		vldr.32	s15, [r2]
 2934 09dc 77EEA77A 		vadd.f32	s15, s15, s15
 582:./shy_fft.h   **** 
 2935              		.loc 3 582 26 view .LVU891
 2936 09e0 C3ED007A 		vstr.32	s15, [r3]
 2937              	.LVL245:
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2938              		.loc 3 586 30 view .LVU892
 2939 09e4 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE5StartEj
 2940              	.LVL246:
 2941              	.LBB542:
 587:./shy_fft.h   ****                 {
 2942              		.loc 3 587 37 is_stmt 1 view .LVU893
 2943 09e8 0299     		ldr	r1, [sp, #8]
 2944 09ea 3A1D     		adds	r2, r7, #4
 2945 09ec 331D     		adds	r3, r6, #4
 2946 09ee 5144     		add	r1, r1, r10
 2947              	.LBE542:
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2948              		.loc 3 586 30 is_stmt 0 view .LVU894
 2949 09f0 0797     		str	r7, [sp, #28]
 2950 09f2 0692     		str	r2, [sp, #24]
 2951 09f4 0991     		str	r1, [sp, #36]
 2952 09f6 0299     		ldr	r1, [sp, #8]
 2953 09f8 0D9A     		ldr	r2, [sp, #52]
 2954 09fa 4144     		add	r1, r8, r1
 2955 09fc 3244     		add	r2, r2, r6
 2956 09fe 0891     		str	r1, [sp, #32]
 2957 0a00 DDE90F01 		ldrd	r0, r1, [sp, #60]
 2958 0a04 CDE90A8A 		strd	r8, r10, [sp, #40]
 2959              	.LVL247:
 2960              	.L61:
 586:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 2961              		.loc 3 586 30 view .LVU895
 2962 0a08 1291     		str	r1, [sp, #72]
 2963              	.LBB550:
 2964              	.LBB543:
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2965              		.loc 3 589 36 view .LVU896
 2966 0a0a 0799     		ldr	r1, [sp, #28]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2967              		.loc 3 589 32 view .LVU897
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 104


 2968 0a0c 93ED007A 		vldr.32	s14, [r3]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2969              		.loc 3 589 36 view .LVU898
 2970 0a10 71ED017A 		vldmdb.32	r1!, {s15}
 599:./shy_fft.h   ****                 }
 2971              		.loc 3 599 35 view .LVU899
 2972 0a14 0F90     		str	r0, [sp, #60]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2973              		.loc 3 589 36 view .LVU900
 2974 0a16 77EE877A 		vadd.f32	s15, s15, s14
 2975 0a1a 0791     		str	r1, [sp, #28]
 589:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 2976              		.loc 3 589 28 view .LVU901
 2977 0a1c 0B99     		ldr	r1, [sp, #44]
 2978 0a1e E1EC017A 		vstmia.32	r1!, {s15}
 2979 0a22 0B91     		str	r1, [sp, #44]
 590:./shy_fft.h   **** 
 2980              		.loc 3 590 32 view .LVU902
 2981 0a24 0699     		ldr	r1, [sp, #24]
 590:./shy_fft.h   **** 
 2982              		.loc 3 590 36 view .LVU903
 2983 0a26 32ED017A 		vldmdb.32	r2!, {s14}
 590:./shy_fft.h   **** 
 2984              		.loc 3 590 32 view .LVU904
 2985 0a2a D1ED007A 		vldr.32	s15, [r1]
 590:./shy_fft.h   **** 
 2986              		.loc 3 590 28 view .LVU905
 2987 0a2e 0A99     		ldr	r1, [sp, #40]
 590:./shy_fft.h   **** 
 2988              		.loc 3 590 36 view .LVU906
 2989 0a30 77EEC77A 		vsub.f32	s15, s15, s14
 595:./shy_fft.h   **** 
 2990              		.loc 3 595 23 view .LVU907
 2991 0a34 1092     		str	r2, [sp, #64]
 590:./shy_fft.h   **** 
 2992              		.loc 3 590 28 view .LVU908
 2993 0a36 E1EC017A 		vstmia.32	r1!, {s15}
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2994              		.loc 3 594 23 view .LVU909
 2995 0a3a B3EC017A 		vldmia.32	r3!, {s14}
 595:./shy_fft.h   **** 
 2996              		.loc 3 595 23 view .LVU910
 2997 0a3e D2ED006A 		vldr.32	s13, [r2]
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 2998              		.loc 3 594 23 view .LVU911
 2999 0a42 1193     		str	r3, [sp, #68]
 3000 0a44 079B     		ldr	r3, [sp, #28]
 3001              	.LBB544:
 3002              	.LBB545:
 262:./shy_fft.h   **** 
 3003              		.loc 3 262 35 view .LVU912
 3004 0a46 D0ED135A 		vldr.32	s11, [r0, #76]
 3005              	.LBE545:
 3006              	.LBE544:
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 3007              		.loc 3 594 23 view .LVU913
 3008 0a4a D3ED007A 		vldr.32	s15, [r3]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 105


 595:./shy_fft.h   **** 
 3009              		.loc 3 595 23 view .LVU914
 3010 0a4e 069B     		ldr	r3, [sp, #24]
 594:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 3011              		.loc 3 594 23 view .LVU915
 3012 0a50 77EE677A 		vsub.f32	s15, s14, s15
 3013              	.LBB546:
 3014              	.LBB547:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 3015              		.loc 3 261 35 view .LVU916
 3016 0a54 90ED126A 		vldr.32	s12, [r0, #72]
 3017              	.LBE547:
 3018              	.LBE546:
 595:./shy_fft.h   **** 
 3019              		.loc 3 595 23 view .LVU917
 3020 0a58 B3EC017A 		vldmia.32	r3!, {s14}
 590:./shy_fft.h   **** 
 3021              		.loc 3 590 28 view .LVU918
 3022 0a5c 0A91     		str	r1, [sp, #40]
 3023              	.LVL248:
 3024              	.LBB548:
 3025              	.LBI546:
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 3026              		.loc 3 261 14 is_stmt 1 view .LVU919
 261:./shy_fft.h   ****     inline T sin() const { return sin_; }
 3027              		.loc 3 261 14 is_stmt 0 view .LVU920
 3028              	.LBE548:
 3029              	.LBB549:
 3030              	.LBI544:
 262:./shy_fft.h   **** 
 3031              		.loc 3 262 14 is_stmt 1 view .LVU921
 262:./shy_fft.h   **** 
 3032              		.loc 3 262 14 is_stmt 0 view .LVU922
 3033              	.LBE549:
 595:./shy_fft.h   **** 
 3034              		.loc 3 595 23 view .LVU923
 3035 0a5e 37EE267A 		vadd.f32	s14, s14, s13
 3036              	.LVL249:
 595:./shy_fft.h   **** 
 3037              		.loc 3 595 23 view .LVU924
 3038 0a62 0693     		str	r3, [sp, #24]
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3039              		.loc 3 597 28 view .LVU925
 3040 0a64 099B     		ldr	r3, [sp, #36]
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3041              		.loc 3 597 42 view .LVU926
 3042 0a66 65EE876A 		vmul.f32	s13, s11, s14
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3043              		.loc 3 597 37 view .LVU927
 3044 0a6a E6EE276A 		vfma.f32	s13, s12, s15
 598:./shy_fft.h   ****                     phasor->Rotate();
 3045              		.loc 3 598 37 view .LVU928
 3046 0a6e 67EEE57A 		vnmul.f32	s15, s15, s11
 3047              	.LVL250:
 598:./shy_fft.h   ****                     phasor->Rotate();
 3048              		.loc 3 598 37 view .LVU929
 3049 0a72 E6EE077A 		vfma.f32	s15, s12, s14
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 106


 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3050              		.loc 3 597 28 view .LVU930
 3051 0a76 E3EC016A 		vstmia.32	r3!, {s13}
 3052              	.LVL251:
 597:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3053              		.loc 3 597 28 view .LVU931
 3054 0a7a 0993     		str	r3, [sp, #36]
 598:./shy_fft.h   ****                     phasor->Rotate();
 3055              		.loc 3 598 28 view .LVU932
 3056 0a7c 089B     		ldr	r3, [sp, #32]
 3057 0a7e E3EC017A 		vstmia.32	r3!, {s15}
 3058 0a82 0893     		str	r3, [sp, #32]
 599:./shy_fft.h   ****                 }
 3059              		.loc 3 599 35 view .LVU933
 3060 0a84 FFF7FEFF 		bl	_ZN14RotationPhasorIfLj12EE6RotateEv
 3061              	.LVL252:
 599:./shy_fft.h   ****                 }
 3062              		.loc 3 599 35 view .LVU934
 3063              	.LBE543:
 587:./shy_fft.h   ****                 {
 3064              		.loc 3 587 17 is_stmt 1 view .LVU935
 587:./shy_fft.h   ****                 {
 3065              		.loc 3 587 37 view .LVU936
 3066 0a88 0C9B     		ldr	r3, [sp, #48]
 3067 0a8a 1299     		ldr	r1, [sp, #72]
 3068 0a8c 1A46     		mov	r2, r3
 3069 0a8e 119B     		ldr	r3, [sp, #68]
 3070 0a90 9A42     		cmp	r2, r3
 3071 0a92 DDE90F02 		ldrd	r0, r2, [sp, #60]
 3072 0a96 B7D1     		bne	.L61
 3073              	.LBE550:
 3074              	.LBE553:
 572:./shy_fft.h   ****             {
 3075              		.loc 3 572 13 view .LVU937
 572:./shy_fft.h   ****             {
 3076              		.loc 3 572 43 is_stmt 0 view .LVU938
 3077 0a98 059B     		ldr	r3, [sp, #20]
 572:./shy_fft.h   ****             {
 3078              		.loc 3 572 33 view .LVU939
 3079 0a9a 4E44     		add	r6, r6, r9
 3080              	.LVL253:
 572:./shy_fft.h   ****             {
 3081              		.loc 3 572 43 view .LVU940
 3082 0a9c 0E9A     		ldr	r2, [sp, #56]
 572:./shy_fft.h   ****             {
 3083              		.loc 3 572 33 view .LVU941
 3084 0a9e 4F44     		add	r7, r7, r9
 3085              	.LVL254:
 572:./shy_fft.h   ****             {
 3086              		.loc 3 572 33 view .LVU942
 3087 0aa0 CA44     		add	r10, r10, r9
 3088              	.LVL255:
 572:./shy_fft.h   ****             {
 3089              		.loc 3 572 33 view .LVU943
 3090 0aa2 C844     		add	r8, r8, r9
 3091              	.LVL256:
 572:./shy_fft.h   ****             {
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 107


 3092              		.loc 3 572 43 view .LVU944
 3093 0aa4 1344     		add	r3, r3, r2
 3094 0aa6 0593     		str	r3, [sp, #20]
 3095              	.LVL257:
 572:./shy_fft.h   ****             {
 3096              		.loc 3 572 33 is_stmt 1 view .LVU945
 3097 0aa8 049B     		ldr	r3, [sp, #16]
 3098              	.LVL258:
 572:./shy_fft.h   ****             {
 3099              		.loc 3 572 33 is_stmt 0 view .LVU946
 3100 0aaa 4B44     		add	r3, r3, r9
 3101 0aac 0493     		str	r3, [sp, #16]
 3102              	.LVL259:
 572:./shy_fft.h   ****             {
 3103              		.loc 3 572 33 view .LVU947
 3104 0aae 059B     		ldr	r3, [sp, #20]
 3105 0ab0 B3F5805F 		cmp	r3, #4096
 3106 0ab4 FFF470AF 		bcc	.L62
 3107              	.LBE555:
 604:./shy_fft.h   ****             {
 3108              		.loc 3 604 13 view .LVU948
 3109 0ab8 AB45     		cmp	fp, r5
 3110              	.LBE539:
 567:./shy_fft.h   ****         {
 3111              		.loc 3 567 9 view .LVU949
 3112 0aba 01F1FF31 		add	r1, r1, #-1
 3113              	.LBB556:
 604:./shy_fft.h   ****             {
 3114              		.loc 3 604 13 view .LVU950
 3115 0abe 19BF     		ittee	ne
 3116 0ac0 AB46     		movne	fp, r5
 3117              	.LVL260:
 611:./shy_fft.h   ****                 d = output;
 3118              		.loc 3 611 19 view .LVU951
 3119 0ac2 019E     		ldrne	r6, [sp, #4]
 607:./shy_fft.h   ****             }
 3120              		.loc 3 607 19 view .LVU952
 3121 0ac4 DDF804B0 		ldreq	fp, [sp, #4]
 3122 0ac8 2E46     		moveq	r6, r5
 3123              	.LVL261:
 607:./shy_fft.h   ****             }
 3124              		.loc 3 607 19 view .LVU953
 3125              	.LBE556:
 567:./shy_fft.h   ****         {
 3126              		.loc 3 567 9 is_stmt 1 view .LVU954
 567:./shy_fft.h   ****         {
 3127              		.loc 3 567 48 view .LVU955
 3128 0aca 0229     		cmp	r1, #2
 3129 0acc 7FF449AF 		bne	.L47
 3130              	.LBE538:
 617:./shy_fft.h   ****         {
 3131              		.loc 3 617 9 is_stmt 0 view .LVU956
 3132 0ad0 AB45     		cmp	fp, r5
 3133 0ad2 05D1     		bne	.L64
 619:./shy_fft.h   ****         }
 3134              		.loc 3 619 22 view .LVU957
 3135 0ad4 2A46     		mov	r2, r5
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 108


 3136 0ad6 06F58041 		add	r1, r6, #16384
 3137              	.LVL262:
 619:./shy_fft.h   ****         }
 3138              		.loc 3 619 22 view .LVU958
 3139 0ada 3046     		mov	r0, r6
 3140 0adc FFF7FEFF 		bl	_ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0
 3141              	.LVL263:
 3142              	.L64:
 3143 0ae0 2B46     		mov	r3, r5
 3144 0ae2 019A     		ldr	r2, [sp, #4]
 3145 0ae4 05F58041 		add	r1, r5, #16384
 3146              	.LVL264:
 3147              	.L65:
 3148              	.LBB557:
 3149              	.LBB558:
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3150              		.loc 3 627 29 view .LVU959
 3151 0ae8 93ED047A 		vldr.32	s14, [r3, #16]
 3152              	.LBE558:
 624:./shy_fft.h   ****         {
 3153              		.loc 3 624 29 view .LVU960
 3154 0aec 2033     		adds	r3, r3, #32
 3155              	.LBB559:
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3156              		.loc 3 627 29 view .LVU961
 3157 0aee 53ED087A 		vldr.32	s15, [r3, #-32]
 3158              	.LBE559:
 624:./shy_fft.h   ****         {
 3159              		.loc 3 624 29 view .LVU962
 3160 0af2 2032     		adds	r2, r2, #32
 3161              	.LBB560:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3162              		.loc 3 635 34 view .LVU963
 3163 0af4 9FED4A6A 		vldr.32	s12, .L103+4
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3164              		.loc 3 627 29 view .LVU964
 3165 0af8 77EE877A 		vadd.f32	s15, s15, s14
 627:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3166              		.loc 3 627 22 view .LVU965
 3167 0afc 42ED087A 		vstr.32	s15, [r2, #-32]
 628:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 3168              		.loc 3 628 29 view .LVU966
 3169 0b00 13ED047A 		vldr.32	s14, [r3, #-16]
 3170 0b04 53ED087A 		vldr.32	s15, [r3, #-32]
 3171 0b08 77EEC77A 		vsub.f32	s15, s15, s14
 628:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 3172              		.loc 3 628 22 view .LVU967
 3173 0b0c 42ED047A 		vstr.32	s15, [r2, #-16]
 629:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 3174              		.loc 3 629 33 view .LVU968
 3175 0b10 53ED067A 		vldr.32	s15, [r3, #-24]
 3176 0b14 77EEA77A 		vadd.f32	s15, s15, s15
 629:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 3177              		.loc 3 629 22 view .LVU969
 3178 0b18 42ED067A 		vstr.32	s15, [r2, #-24]
 630:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 3179              		.loc 3 630 33 view .LVU970
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 109


 3180 0b1c 53ED027A 		vldr.32	s15, [r3, #-8]
 3181 0b20 77EEA77A 		vadd.f32	s15, s15, s15
 630:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 3182              		.loc 3 630 22 view .LVU971
 3183 0b24 42ED027A 		vstr.32	s15, [r2, #-8]
 631:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 3184              		.loc 3 631 33 view .LVU972
 3185 0b28 13ED057A 		vldr.32	s14, [r3, #-20]
 3186 0b2c 53ED077A 		vldr.32	s15, [r3, #-28]
 3187 0b30 77EE877A 		vadd.f32	s15, s15, s14
 631:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 3188              		.loc 3 631 22 view .LVU973
 3189 0b34 42ED077A 		vstr.32	s15, [r2, #-28]
 632:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 3190              		.loc 3 632 33 view .LVU974
 3191 0b38 13ED017A 		vldr.32	s14, [r3, #-4]
 3192 0b3c 53ED037A 		vldr.32	s15, [r3, #-12]
 3193 0b40 77EEC77A 		vsub.f32	s15, s15, s14
 632:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 3194              		.loc 3 632 22 view .LVU975
 3195 0b44 42ED057A 		vstr.32	s15, [r2, #-20]
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3196              		.loc 3 633 22 view .LVU976
 3197 0b48 53ED077A 		vldr.32	s15, [r3, #-28]
 3198 0b4c 53ED056A 		vldr.32	s13, [r3, #-20]
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3199              		.loc 3 634 22 view .LVU977
 3200 0b50 13ED037A 		vldr.32	s14, [r3, #-12]
 633:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3201              		.loc 3 633 22 view .LVU978
 3202 0b54 77EEE66A 		vsub.f32	s13, s15, s13
 3203              	.LVL265:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3204              		.loc 3 634 22 view .LVU979
 3205 0b58 53ED017A 		vldr.32	s15, [r3, #-4]
 3206              	.LBE560:
 624:./shy_fft.h   ****         {
 3207              		.loc 3 624 29 view .LVU980
 3208 0b5c 9942     		cmp	r1, r3
 3209              	.LBB561:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3210              		.loc 3 634 22 view .LVU981
 3211 0b5e 77EE277A 		vadd.f32	s15, s14, s15
 3212              	.LVL266:
 634:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3213              		.loc 3 634 22 view .LVU982
 3214              	.LBE561:
 3215              	.LBE557:
 3216              	.LBE537:
 3217              	.LBE536:
 3218              	.LBE535:
 3219              	.LBE534:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 3220              		.loc 3 137 41 is_stmt 1 view .LVU983
 3221              	.LBB577:
 3222              	.LBB575:
 3223              	.LBB573:
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 110


 3224              	.LBB571:
 3225              	.LBB564:
 3226              	.LBB562:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3227              		.loc 3 635 28 is_stmt 0 view .LVU984
 3228 0b62 36EEA77A 		vadd.f32	s14, s13, s15
 636:./shy_fft.h   ****         }
 3229              		.loc 3 636 28 view .LVU985
 3230 0b66 77EEE67A 		vsub.f32	s15, s15, s13
 3231              	.LVL267:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3232              		.loc 3 635 34 view .LVU986
 3233 0b6a 27EE067A 		vmul.f32	s14, s14, s12
 636:./shy_fft.h   ****         }
 3234              		.loc 3 636 34 view .LVU987
 3235 0b6e 67EE867A 		vmul.f32	s15, s15, s12
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3236              		.loc 3 635 22 view .LVU988
 3237 0b72 02ED037A 		vstr.32	s14, [r2, #-12]
 3238              	.LVL268:
 635:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3239              		.loc 3 635 22 view .LVU989
 3240              	.LBE562:
 3241              	.LBE564:
 3242              	.LBE571:
 3243              	.LBE573:
 3244              	.LBE575:
 3245              	.LBE577:
 137:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 3246              		.loc 3 137 41 is_stmt 1 view .LVU990
 3247              	.LBB578:
 3248              	.LBB576:
 3249              	.LBB574:
 3250              	.LBB572:
 3251              	.LBB565:
 3252              	.LBB563:
 636:./shy_fft.h   ****         }
 3253              		.loc 3 636 22 is_stmt 0 view .LVU991
 3254 0b76 42ED017A 		vstr.32	s15, [r2, #-4]
 3255              	.LBE563:
 624:./shy_fft.h   ****         {
 3256              		.loc 3 624 9 is_stmt 1 view .LVU992
 624:./shy_fft.h   ****         {
 3257              		.loc 3 624 29 view .LVU993
 3258 0b7a B5D1     		bne	.L65
 3259 0b7c 0199     		ldr	r1, [sp, #4]
 3260              	.LBE565:
 3261              	.LBB566:
 642:./shy_fft.h   ****         {
 3262              		.loc 3 642 20 is_stmt 0 view .LVU994
 3263 0b7e 0020     		movs	r0, #0
 3264 0b80 1031     		adds	r1, r1, #16
 3265              	.LVL269:
 3266              	.L67:
 3267              	.LBB567:
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3268              		.loc 3 652 29 view .LVU995
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 111


 3269 0b82 11ED027A 		vldr.32	s14, [r1, #-8]
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3270              		.loc 3 646 43 view .LVU996
 3271 0b86 C3B2     		uxtb	r3, r0
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3272              		.loc 3 652 22 view .LVU997
 3273 0b88 51ED047A 		vldr.32	s15, [r1, #-16]
 3274              	.LBE567:
 642:./shy_fft.h   ****         {
 3275              		.loc 3 642 29 view .LVU998
 3276 0b8c 1031     		adds	r1, r1, #16
 3277              	.LVL270:
 3278              	.LBB568:
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3279              		.loc 3 646 49 view .LVU999
 3280 0b8e 234A     		ldr	r2, .L103
 652:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3281              		.loc 3 652 15 view .LVU1000
 3282 0b90 77EE876A 		vadd.f32	s13, s15, s14
 3283              	.LVL271:
 654:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 3284              		.loc 3 654 22 view .LVU1001
 3285 0b94 51ED075A 		vldr.32	s11, [r1, #-28]
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3286              		.loc 3 646 49 view .LVU1002
 3287 0b98 9E5C     		ldrb	r6, [r3, r2]	@ zero_extendqisi2
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3288              		.loc 3 646 69 view .LVU1003
 3289 0b9a 030A     		lsrs	r3, r0, #8
 653:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 3290              		.loc 3 653 15 view .LVU1004
 3291 0b9c 77EEC77A 		vsub.f32	s15, s15, s14
 3292              	.LVL272:
 655:./shy_fft.h   **** 
 3293              		.loc 3 655 22 view .LVU1005
 3294 0ba0 11ED056A 		vldr.32	s12, [r1, #-20]
 3295              	.LVL273:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3296              		.loc 3 657 25 view .LVU1006
 3297 0ba4 B0EE007A 		vmov.f32	s14, #2.0e+0
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3298              		.loc 3 646 73 view .LVU1007
 3299 0ba8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3300              		.loc 3 657 25 view .LVU1008
 3301 0baa B0EE665A 		vmov.f32	s10, s13
 3302              	.LBE568:
 642:./shy_fft.h   ****         {
 3303              		.loc 3 642 39 view .LVU1009
 3304 0bae 0430     		adds	r0, r0, #4
 3305              	.LVL274:
 3306              	.LBB569:
 646:./shy_fft.h   ****                                   >> (16 - num_passes);
 3307              		.loc 3 646 57 view .LVU1010
 3308 0bb0 43EA0623 		orr	r3, r3, r6, lsl #8
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3309              		.loc 3 658 25 view .LVU1011
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 112


 3310 0bb4 E5EEC76A 		vfms.f32	s13, s11, s14
 3311              	.LVL275:
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3312              		.loc 3 658 25 view .LVU1012
 3313              	.LBE569:
 642:./shy_fft.h   ****         {
 3314              		.loc 3 642 29 view .LVU1013
 3315 0bb8 B0F5805F 		cmp	r0, #4096
 3316              	.LBB570:
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3317              		.loc 3 657 25 view .LVU1014
 3318 0bbc A5EE875A 		vfma.f32	s10, s11, s14
 3319              	.LVL276:
 647:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 3320              		.loc 3 647 35 view .LVU1015
 3321 0bc0 4FEA2313 		asr	r3, r3, #4
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3322              		.loc 3 657 14 view .LVU1016
 3323 0bc4 4FEA8302 		lsl	r2, r3, #2
 3324 0bc8 05EB8303 		add	r3, r5, r3, lsl #2
 657:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3325              		.loc 3 657 19 view .LVU1017
 3326 0bcc 83ED005A 		vstr.32	s10, [r3]
 3327              	.LVL277:
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3328              		.loc 3 658 14 view .LVU1018
 3329 0bd0 02F50053 		add	r3, r2, #8192
 3330 0bd4 2B44     		add	r3, r3, r5
 658:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3331              		.loc 3 658 19 view .LVU1019
 3332 0bd6 C3ED006A 		vstr.32	s13, [r3]
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3333              		.loc 3 659 25 view .LVU1020
 3334 0bda F0EE676A 		vmov.f32	s13, s15
 660:./shy_fft.h   ****             s += 4;
 3335              		.loc 3 660 25 view .LVU1021
 3336 0bde E6EE477A 		vfms.f32	s15, s12, s14
 3337              	.LVL278:
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3338              		.loc 3 659 14 view .LVU1022
 3339 0be2 02F58053 		add	r3, r2, #4096
 660:./shy_fft.h   ****             s += 4;
 3340              		.loc 3 660 14 view .LVU1023
 3341 0be6 02F54052 		add	r2, r2, #12288
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3342              		.loc 3 659 25 view .LVU1024
 3343 0bea E6EE076A 		vfma.f32	s13, s12, s14
 3344              	.LVL279:
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3345              		.loc 3 659 14 view .LVU1025
 3346 0bee 2B44     		add	r3, r3, r5
 660:./shy_fft.h   ****             s += 4;
 3347              		.loc 3 660 14 view .LVU1026
 3348 0bf0 2A44     		add	r2, r2, r5
 659:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3349              		.loc 3 659 19 view .LVU1027
 3350 0bf2 C3ED006A 		vstr.32	s13, [r3]
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 113


 660:./shy_fft.h   ****             s += 4;
 3351              		.loc 3 660 19 view .LVU1028
 3352 0bf6 C2ED007A 		vstr.32	s15, [r2]
 3353              	.LVL280:
 660:./shy_fft.h   ****             s += 4;
 3354              		.loc 3 660 19 view .LVU1029
 3355              	.LBE570:
 642:./shy_fft.h   ****         {
 3356              		.loc 3 642 9 is_stmt 1 view .LVU1030
 642:./shy_fft.h   ****         {
 3357              		.loc 3 642 29 view .LVU1031
 3358 0bfa C2D1     		bne	.L67
 3359 0bfc E7E5     		b	.L66
 3360              	.LVL281:
 3361              	.L68:
 642:./shy_fft.h   ****         {
 3362              		.loc 3 642 29 is_stmt 0 view .LVU1032
 3363              	.LBE566:
 3364              	.LBE572:
 3365              	.LBE574:
 3366              	.LBE576:
 3367              	.LBE578:
 221:dsp/pvoc/stft.cpp ****     }
 222:dsp/pvoc/stft.cpp **** 
 223:dsp/pvoc/stft.cpp ****     ++done_;
 3368              		.loc 2 223 5 is_stmt 1 view .LVU1033
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3369              		.loc 2 224 18 is_stmt 0 view .LVU1034
 3370 0bfe D319     		adds	r3, r2, r7
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3371              		.loc 2 223 5 view .LVU1035
 3372 0c00 616C     		ldr	r1, [r4, #68]
 3373              	.LVL282:
 225:dsp/pvoc/stft.cpp ****     if(process_ptr_ >= buffer_size_)
 3374              		.loc 2 225 5 view .LVU1036
 3375 0c02 AB42     		cmp	r3, r5
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3376              		.loc 2 224 18 view .LVU1037
 3377 0c04 A363     		str	r3, [r4, #56]
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3378              		.loc 2 223 5 view .LVU1038
 3379 0c06 01F10101 		add	r1, r1, #1
 226:dsp/pvoc/stft.cpp ****     {
 227:dsp/pvoc/stft.cpp ****         process_ptr_ -= buffer_size_;
 3380              		.loc 2 227 22 view .LVU1039
 3381 0c0a 28BF     		it	cs
 3382 0c0c 5B1B     		subcs	r3, r3, r5
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 3383              		.loc 2 223 5 view .LVU1040
 3384 0c0e 6164     		str	r1, [r4, #68]
 224:dsp/pvoc/stft.cpp ****     if(process_ptr_ >= buffer_size_)
 3385              		.loc 2 224 5 is_stmt 1 view .LVU1041
 225:dsp/pvoc/stft.cpp ****     {
 3386              		.loc 2 225 5 view .LVU1042
 3387              		.loc 2 227 9 view .LVU1043
 3388              		.loc 2 227 22 is_stmt 0 view .LVU1044
 3389 0c10 28BF     		it	cs
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 114


 3390 0c12 A363     		strcs	r3, [r4, #56]
 3391              	.LVL283:
 3392              	.L21:
 228:dsp/pvoc/stft.cpp ****     }
 229:dsp/pvoc/stft.cpp **** }
 3393              		.loc 2 229 1 view .LVU1045
 3394 0c14 15B0     		add	sp, sp, #84
 3395              		.cfi_def_cfa_offset 36
 3396              		@ sp needed
 3397 0c16 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3398              	.LVL284:
 3399              	.L104:
 3400              		.loc 2 229 1 view .LVU1046
 3401 0c1a 00BF     		.align	2
 3402              	.L103:
 3403 0c1c 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3404 0c20 F304353F 		.word	1060439283
 3405              		.cfi_endproc
 3406              	.LFE4858:
 3408              		.weak	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3409              		.section	.rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E,"aG",%progbits,_ZN6ShyFFT
 3412              	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:
 3413 0000 008040C0 		.ascii	"\000\200@\300 \240`\340\020\220P\3200\260p\360\010\210"
 3413      20A060E0 
 3413      109050D0 
 3413      30B070F0 
 3413      0888
 3414 0012 48C828A8 		.ascii	"H\310(\250h\350\030\230X\3308\270x\370\004\204D\304"
 3414      68E81898 
 3414      58D838B8 
 3414      78F80484 
 3414      44C4
 3415 0024 24A464E4 		.ascii	"$\244d\344\024\224T\3244\264t\364\014\214L\314,\254"
 3415      149454D4 
 3415      34B474F4 
 3415      0C8C4CCC 
 3415      2CAC
 3416 0036 6CEC1C9C 		.ascii	"l\354\034\234\\\334<\274|\374\002\202B\302\"\242b\342"
 3416      5CDC3CBC 
 3416      7CFC0282 
 3416      42C222A2 
 3416      62E2
 3417 0048 129252D2 		.ascii	"\022\222R\3222\262r\362\012\212J\312*\252j\352\032\232"
 3417      32B272F2 
 3417      0A8A4ACA 
 3417      2AAA6AEA 
 3417      1A9A
 3418 005a 5ADA3ABA 		.ascii	"Z\332:\272z\372\006\206F\306&\246f\346\026\226V\326"
 3418      7AFA0686 
 3418      46C626A6 
 3418      66E61696 
 3418      56D6
 3419 006c 36B676F6 		.ascii	"6\266v\366\016\216N\316.\256n\356\036\236^\336>\276"
 3419      0E8E4ECE 
 3419      2EAE6EEE 
 3419      1E9E5EDE 
 3419      3EBE
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 115


 3420 007e 7EFE0181 		.ascii	"~\376\001\201A\301!\241a\341\021\221Q\3211\261q\361"
 3420      41C121A1 
 3420      61E11191 
 3420      51D131B1 
 3420      71F1
 3421 0090 098949C9 		.ascii	"\011\211I\311)\251i\351\031\231Y\3319\271y\371\005\205"
 3421      29A969E9 
 3421      199959D9 
 3421      39B979F9 
 3421      0585
 3422 00a2 45C525A5 		.ascii	"E\305%\245e\345\025\225U\3255\265u\365\015\215M\315"
 3422      65E51595 
 3422      55D535B5 
 3422      75F50D8D 
 3422      4DCD
 3423 00b4 2DAD6DED 		.ascii	"-\255m\355\035\235]\335=\275}\375\003\203C\303#\243"
 3423      1D9D5DDD 
 3423      3DBD7DFD 
 3423      038343C3 
 3423      23A3
 3424 00c6 63E31393 		.ascii	"c\343\023\223S\3233\263s\363\013\213K\313+\253k\353"
 3424      53D333B3 
 3424      73F30B8B 
 3424      4BCB2BAB 
 3424      6BEB
 3425 00d8 1B9B5BDB 		.ascii	"\033\233[\333;\273{\373\007\207G\307'\247g\347\027\227"
 3425      3BBB7BFB 
 3425      078747C7 
 3425      27A767E7 
 3425      1797
 3426 00ea 57D737B7 		.ascii	"W\3277\267w\367\017\217O\317/\257o\357\037\237_\337"
 3426      77F70F8F 
 3426      4FCF2FAF 
 3426      6FEF1F9F 
 3426      5FDF
 3427 00fc 3FBF7FFF 		.ascii	"?\277\177\377"
 3428              		.text
 3429              	.Letext0:
 3430              		.file 5 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3431              		.file 6 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3432              		.file 7 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3433              		.file 8 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3434              		.file 9 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-m
 3435              		.file 10 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3436              		.file 11 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3437              		.file 12 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3438              		.file 13 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3439              		.file 14 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3440              		.file 15 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3441              		.file 16 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3442              		.file 17 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3443              		.file 18 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3444              		.file 19 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3445              		.file 20 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3446              		.file 21 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3447              		.file 22 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3448              		.file 23 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 116


 3449              		.file 24 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3450              		.file 25 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3451              		.file 26 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3452              		.file 27 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3453              		.file 28 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3454              		.file 29 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3455              		.file 30 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3456              		.file 31 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3457              		.file 32 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3458              		.file 33 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3459              		.file 34 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3460              		.file 35 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3461              		.file 36 "../../libDaisy/src/daisy_core.h"
 3462              		.file 37 "../../libDaisy/src/util/wav_format.h"
 3463              		.file 38 "../../libDaisy/src/dev/max11300.h"
 3464              		.file 39 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3465              		.file 40 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3466              		.file 41 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3467              		.file 42 "../../DaisySP/Source/Control/adenv.h"
 3468              		.file 43 "../../DaisySP/Source/Utility/dsp.h"
 3469              		.file 44 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3470              		.file 45 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10-2020-q4-
 3471              		.file 46 "./resources.h"
 3472              		.file 47 "../../libDaisy/src/dev/sr_595.h"
 3473              		.file 48 "dsp/pvoc/frame_transformation.h"
 3474              		.file 49 "dsp/pvoc/stft.h"
 3475              		.file 50 "<built-in>"
ARM GAS  C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s 			page 117


DEFINED SYMBOLS
                            *ABS*:00000000 stft.cpp
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:17     .text._ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:24     .text._ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0:00000000 _ZSt4copyIPfS0_ET0_T_S2_S1_.isra.0
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:79     .text._ZN4STFT5ResetEv:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:86     .text._ZN4STFT5ResetEv:00000000 _ZN4STFT5ResetEv
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:188    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:195    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:00000000 _ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:467    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:000000bc $d
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:472    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:479    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:00000000 _ZN4STFT7ProcessERK10ParametersPKfPfjj
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:685    .text._ZN14RotationPhasorIfLj12EE5StartEj:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:692    .text._ZN14RotationPhasorIfLj12EE5StartEj:00000000 _ZN14RotationPhasorIfLj12EE5StartEj
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:724    .text._ZN14RotationPhasorIfLj12EE6RotateEv:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:731    .text._ZN14RotationPhasorIfLj12EE6RotateEv:00000000 _ZN14RotationPhasorIfLj12EE6RotateEv
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:766    .text._ZN4STFT6BufferEv:00000000 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:773    .text._ZN4STFT6BufferEv:00000000 _ZN4STFT6BufferEv
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:1463   .text._ZN4STFT6BufferEv:00000304 $d
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:3412   .rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:00000000 _ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:1470   .text._ZN4STFT6BufferEv:0000030c $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:2430   .text._ZN4STFT6BufferEv:00000790 $d
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:2437   .text._ZN4STFT6BufferEv:00000798 $t
C:\Users\daniel\AppData\Local\Temp\ccvJc8a9.s:3403   .text._ZN4STFT6BufferEv:00000c1c $d

UNDEFINED SYMBOLS
memmove
memset
cosf
sinf
_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
