ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stft.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN4STFT5ResetEv,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN4STFT5ResetEv
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN4STFT5ResetEv:
  27              	.LVL0:
  28              	.LFB4866:
  29              		.file 1 "dsp/pvoc/stft.cpp"
   1:dsp/pvoc/stft.cpp **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/stft.cpp **** //
   3:dsp/pvoc/stft.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/stft.cpp **** //
   5:dsp/pvoc/stft.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/stft.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/stft.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/stft.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/stft.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/stft.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/stft.cpp **** //
  12:dsp/pvoc/stft.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/stft.cpp **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/stft.cpp **** //
  15:dsp/pvoc/stft.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/stft.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/stft.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/stft.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/stft.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/pvoc/stft.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/stft.cpp **** // THE SOFTWARE.
  22:dsp/pvoc/stft.cpp **** //
  23:dsp/pvoc/stft.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/stft.cpp **** //
  25:dsp/pvoc/stft.cpp **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/stft.cpp **** //
  27:dsp/pvoc/stft.cpp **** // STFT with overlap-add.
  28:dsp/pvoc/stft.cpp **** 
  29:dsp/pvoc/stft.cpp **** #include "stft.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 2


  30:dsp/pvoc/stft.cpp **** #include "stmtemp.h"
  31:dsp/pvoc/stft.cpp **** #include <algorithm>
  32:dsp/pvoc/stft.cpp **** 
  33:dsp/pvoc/stft.cpp **** using namespace daisysp;
  34:dsp/pvoc/stft.cpp **** using namespace std;
  35:dsp/pvoc/stft.cpp **** using namespace daisy;
  36:dsp/pvoc/stft.cpp **** 
  37:dsp/pvoc/stft.cpp **** void STFT::Init(FFT*         fft,
  38:dsp/pvoc/stft.cpp ****                 size_t       fft_size,
  39:dsp/pvoc/stft.cpp ****                 size_t       hop_size,
  40:dsp/pvoc/stft.cpp ****                 float*       fft_buffer,
  41:dsp/pvoc/stft.cpp ****                 float*       ifft_buffer,
  42:dsp/pvoc/stft.cpp ****                 const float* window_lut,
  43:dsp/pvoc/stft.cpp ****                 short*       analysis_synthesis_buffer,
  44:dsp/pvoc/stft.cpp ****                 Modifier*    modifier)
  45:dsp/pvoc/stft.cpp **** {
  46:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
  47:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
  48:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
  49:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
  50:dsp/pvoc/stft.cpp ****     {
  51:dsp/pvoc/stft.cpp ****         ++fft_num_passes_;
  52:dsp/pvoc/stft.cpp ****     }
  53:dsp/pvoc/stft.cpp ****     buffer_size_ = fft_size_ + hop_size_;
  54:dsp/pvoc/stft.cpp **** 
  55:dsp/pvoc/stft.cpp ****     fft_ = fft;
  56:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
  57:dsp/pvoc/stft.cpp ****     arm_rfft_fast_init_f32(fft_, fft_size);
  58:dsp/pvoc/stft.cpp **** #else
  59:dsp/pvoc/stft.cpp ****     fft_->Init();
  60:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
  61:dsp/pvoc/stft.cpp **** 
  62:dsp/pvoc/stft.cpp ****     analysis_  = &analysis_synthesis_buffer[0];
  63:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
  64:dsp/pvoc/stft.cpp **** 
  65:dsp/pvoc/stft.cpp ****     ifft_in_ = fft_in_ = fft_buffer;
  66:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
  67:dsp/pvoc/stft.cpp **** 
  68:dsp/pvoc/stft.cpp ****     window_        = window_lut;
  69:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
  70:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
  71:dsp/pvoc/stft.cpp **** 
  72:dsp/pvoc/stft.cpp ****     parameters_ = NULL;
  73:dsp/pvoc/stft.cpp **** 
  74:dsp/pvoc/stft.cpp ****     Reset();
  75:dsp/pvoc/stft.cpp **** }
  76:dsp/pvoc/stft.cpp **** 
  77:dsp/pvoc/stft.cpp **** void STFT::Reset()
  78:dsp/pvoc/stft.cpp **** {
  30              		.loc 1 78 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  34              		.loc 1 79 5 view .LVU1
  78:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  35              		.loc 1 78 1 is_stmt 0 view .LVU2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 3


  36 0000 38B5     		push	{r3, r4, r5, lr}
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 3, -16
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  80:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
  42              		.loc 1 80 38 view .LVU3
  43 0002 D0E90335 		ldrd	r3, r5, [r0, #12]
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  44              		.loc 1 79 18 view .LVU4
  45 0006 0021     		movs	r1, #0
  78:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  46              		.loc 1 78 1 view .LVU5
  47 0008 0446     		mov	r4, r0
  48              		.loc 1 80 23 view .LVU6
  49 000a 5B00     		lsls	r3, r3, #1
  79:dsp/pvoc/stft.cpp ****     buffer_ptr_  = 0;
  50              		.loc 1 79 18 view .LVU7
  51 000c 4163     		str	r1, [r0, #52]
  52              		.loc 1 80 5 is_stmt 1 view .LVU8
  81:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  53              		.loc 1 81 18 is_stmt 0 view .LVU9
  54 000e C163     		str	r1, [r0, #60]
  80:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
  55              		.loc 1 80 36 view .LVU10
  56 0010 B3FBF5F0 		udiv	r0, r3, r5
  57              	.LVL1:
  80:dsp/pvoc/stft.cpp ****     process_ptr_ = (2 * hop_size_) % buffer_size_;
  58              		.loc 1 80 36 view .LVU11
  59 0014 05FB1033 		mls	r3, r5, r0, r3
  60              	.LBB234:
  61              	.LBB235:
  62              	.LBB236:
  63              	.LBB237:
  64              		.file 2 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 4


  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 5


  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 6


 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 7


 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 8


 250:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 260:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 261:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 262:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 263:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 264:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 265:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 272:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 275:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 278:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 280:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 283:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 284:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 285:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 286:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 287:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 294:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 297:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 300:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 302:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 306:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 9


 307:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 308:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 311:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 313:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __it; }
 316:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 317:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 321:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _From
 323:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 326:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 328:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 330:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __res; }
 332:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 333:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 338:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 339:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move
 341:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 342:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 343:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 345:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 347:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 349:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 350:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 351:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 352:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 353:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 354:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 355:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 357:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 358:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 360:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 362:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 10


 364:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 365:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 366:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 367:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 368:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 369:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 370:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 372:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 373:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 375:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 377:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 380:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 381:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 382:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 383:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 384:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 385:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 386:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 387:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 388:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 389:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 390:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 392:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 393:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 395:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 397:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 400:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 401:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 402:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 403:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 404:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 405:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 406:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 407:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 408:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 409:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 410:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 412:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 413:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 417:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 418:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 11


 421:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 424:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 428:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 429:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 430:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 431:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 434:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct char_traits;
 435:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 436:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 438:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 439:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 441:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 442:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 448:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 454:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 457:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 460:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 465:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 468:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 471:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 474:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 475:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 477:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 12


 478:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct _Deque_iterator;
 479:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 480:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 482:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 483:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 485:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _OI);
 488:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 489:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 490:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 496:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 502:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 508:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 513:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 514:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 516:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 517:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 518:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 519:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 520:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 522:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  _OI);
 525:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 526:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 527:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 530:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 532:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 533:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 13


 535:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 540:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 541:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 544:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 545:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 546:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 547:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 548:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 554:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 556:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 557:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 558:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 562:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 563:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 568:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 571:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 572:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 573:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 574:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 577:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 578:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 579:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 580:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 581:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 587:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 589:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 590:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 591:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 14


 592:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 593:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 595:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 596:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 601:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 604:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 605:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 607:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 609:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 610:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 612:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 613:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 616:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 618:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 619:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 620:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 621:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 622:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 623:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 624:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 625:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 626:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 628:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 631:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 633:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 634:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 636:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 637:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 638:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 639:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 640:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 641:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 643:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 646:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 648:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 15


 649:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 650:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 652:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 653:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 654:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 655:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 656:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 657:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 658:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 660:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 663:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 665:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 667:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 670:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 671:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 672:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 673:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 674:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 675:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 677:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 678:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 680:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 682:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 683:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 689:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 691:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 693:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 694:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 695:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 696:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 699:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 701:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 704:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 16


 706:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 707:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __last,
 711:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __result);
 712:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 713:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 714:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 717:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 720:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 721:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 723:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _OI);
 726:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 727:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 728:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(
 731:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 735:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 742:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 745:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 747:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 748:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 751:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 752:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 753:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 754:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 756:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 757:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_OI);
 760:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 761:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 762:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 17


 763:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 767:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 768:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 772:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 776:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 777:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 783:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 784:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 790:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 791:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 794:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 797:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 799:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 800:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 807:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 810:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 811:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 812:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 813:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 819:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 18


 820:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 826:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 827:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 830:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 833:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 835:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 836:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 843:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 845:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       __result);
 846:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 847:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 848:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 850:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 852:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 853:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 856:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 859:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 860:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 861:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __value;
 862:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 863:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 864:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 867:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 870:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 871:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
  65              		.loc 2 872 22 view .LVU12
  66 0018 6D00     		lsls	r5, r5, #1
  67              	.LBE237:
  68              	.LBE236:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 19


  69              	.LBE235:
  70              	.LBE234:
  82:dsp/pvoc/stft.cpp ****     fill(&analysis_[0], &analysis_[buffer_size_], 0);
  71              		.loc 1 82 11 view .LVU13
  72 001a E06A     		ldr	r0, [r4, #44]
  80:dsp/pvoc/stft.cpp ****     block_size_  = 0;
  73              		.loc 1 80 18 view .LVU14
  74 001c A363     		str	r3, [r4, #56]
  81:dsp/pvoc/stft.cpp ****     fill(&analysis_[0], &analysis_[buffer_size_], 0);
  75              		.loc 1 81 5 is_stmt 1 view .LVU15
  76              		.loc 1 82 5 view .LVU16
  77              	.LVL2:
  78              	.LBB241:
  79              	.LBI234:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 874:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 875:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 876:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 878:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 880:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 883:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 884:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 886:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 887:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__first = __tmp;
 889:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return;
 890:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 891:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 892:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 895:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 896:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 899:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 902:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 904:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 906:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _VTp&);
 909:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 910:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 20


 916:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 918:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const _Tp&);
 921:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 922:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 923:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 929:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 930:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 934:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 937:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
  80              		.loc 2 937 5 view .LVU17
  81              	.LBB240:
  82              	.LBI235:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
  83              		.loc 2 913 5 view .LVU18
  84              	.LBB239:
  85              	.LBI236:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
  86              		.loc 2 868 5 view .LVU19
  87              	.LBB238:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
  88              		.loc 2 872 22 view .LVU20
  89 001e 02D0     		beq	.L2
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
  90              		.loc 2 873 11 is_stmt 0 view .LVU21
  91 0020 2A46     		mov	r2, r5
  92 0022 FFF7FEFF 		bl	memset
  93              	.LVL3:
  94              	.L2:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
  95              		.loc 2 873 11 view .LVU22
  96              	.LBE238:
  97              	.LBE239:
  98              	.LBE240:
  99              	.LBE241:
  83:dsp/pvoc/stft.cpp ****     fill(&synthesis_[0], &synthesis_[buffer_size_], 0);
 100              		.loc 1 83 5 is_stmt 1 view .LVU23
 101              		.loc 1 83 11 is_stmt 0 view .LVU24
 102 0026 206B     		ldr	r0, [r4, #48]
 103              	.LVL4:
 104              	.LBB242:
 105              	.LBI242:
 106              		.loc 2 937 5 is_stmt 1 view .LVU25
 107              	.LBB243:
 108              	.LBI243:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 21


 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 109              		.loc 2 913 5 view .LVU26
 110              	.LBB244:
 111              	.LBI244:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 112              		.loc 2 868 5 view .LVU27
 113              	.LBB245:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 114              		.loc 2 872 22 view .LVU28
 115 0028 1DB1     		cbz	r5, .L3
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 116              		.loc 2 873 11 is_stmt 0 view .LVU29
 117 002a 2A46     		mov	r2, r5
 118 002c 0021     		movs	r1, #0
 119 002e FFF7FEFF 		bl	memset
 120              	.LVL5:
 121              	.L3:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 122              		.loc 2 873 11 view .LVU30
 123              	.LBE245:
 124              	.LBE244:
 125              	.LBE243:
 126              	.LBE242:
  84:dsp/pvoc/stft.cpp ****     ready_ = 0;
 127              		.loc 1 84 5 is_stmt 1 view .LVU31
 128              		.loc 1 84 12 is_stmt 0 view .LVU32
 129 0032 0023     		movs	r3, #0
  85:dsp/pvoc/stft.cpp ****     done_  = 0;
 130              		.loc 1 85 12 view .LVU33
 131 0034 C4E91033 		strd	r3, r3, [r4, #64]
  86:dsp/pvoc/stft.cpp **** }
 132              		.loc 1 86 1 view .LVU34
 133 0038 38BD     		pop	{r3, r4, r5, pc}
 134              		.loc 1 86 1 view .LVU35
 135              		.cfi_endproc
 136              	.LFE4866:
 138 003a 00BF     		.section	.text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation,
 139              		.align	1
 140              		.p2align 2,,3
 141              		.global	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	_ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:
 148              	.LVL6:
 149              	.LFB4865:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 150              		.loc 1 45 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 20, pretend = 0, frame = 8
 153              		@ frame_needed = 0, uses_anonymous_args = 0
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 154              		.loc 1 46 5 view .LVU37
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 155              		.loc 1 45 1 is_stmt 0 view .LVU38
 156 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 22


 157              		.cfi_def_cfa_offset 36
 158              		.cfi_offset 4, -36
 159              		.cfi_offset 5, -32
 160              		.cfi_offset 6, -28
 161              		.cfi_offset 7, -24
 162              		.cfi_offset 8, -20
 163              		.cfi_offset 9, -16
 164              		.cfi_offset 10, -12
 165              		.cfi_offset 11, -8
 166              		.cfi_offset 14, -4
 167 0004 1446     		mov	r4, r2
 168 0006 8046     		mov	r8, r0
 169 0008 2DED028B 		vpush.64	{d8}
 170              		.cfi_def_cfa_offset 44
 171              		.cfi_offset 80, -44
 172              		.cfi_offset 81, -40
  46:dsp/pvoc/stft.cpp ****     hop_size_       = hop_size;
 173              		.loc 1 46 21 view .LVU39
 174 000c 4260     		str	r2, [r0, #4]
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 175              		.loc 1 47 5 is_stmt 1 view .LVU40
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 176              		.loc 1 45 1 is_stmt 0 view .LVU41
 177 000e 83B0     		sub	sp, sp, #12
 178              		.cfi_def_cfa_offset 56
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 179              		.loc 1 48 21 view .LVU42
 180 0010 0022     		movs	r2, #0
 181              	.LVL7:
 182              	.LBB257:
  49:dsp/pvoc/stft.cpp ****     {
 183              		.loc 1 49 32 view .LVU43
 184 0012 012C     		cmp	r4, #1
 185              	.LBE257:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 186              		.loc 1 45 1 view .LVU44
 187 0014 0E9F     		ldr	r7, [sp, #56]
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 188              		.loc 1 48 21 view .LVU45
 189 0016 8260     		str	r2, [r0, #8]
  47:dsp/pvoc/stft.cpp ****     fft_num_passes_ = 0;
 190              		.loc 1 47 21 view .LVU46
 191 0018 C360     		str	r3, [r0, #12]
  48:dsp/pvoc/stft.cpp ****     for(size_t t = fft_size; t > 1; t >>= 1)
 192              		.loc 1 48 5 is_stmt 1 view .LVU47
  49:dsp/pvoc/stft.cpp ****     {
 193              		.loc 1 49 5 view .LVU48
 194              	.LVL8:
 195              	.LBB258:
  49:dsp/pvoc/stft.cpp ****     {
 196              		.loc 1 49 32 view .LVU49
 197              	.LBE258:
  45:dsp/pvoc/stft.cpp ****     fft_size_       = fft_size;
 198              		.loc 1 45 1 is_stmt 0 view .LVU50
 199 001a DDE91152 		ldrd	r5, r2, [sp, #68]
 200 001e DDE90F69 		ldrd	r6, r9, [sp, #60]
 201 0022 0192     		str	r2, [sp, #4]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 23


 202              	.LBB259:
  49:dsp/pvoc/stft.cpp ****     {
 203              		.loc 1 49 32 view .LVU51
 204 0024 0AD9     		bls	.L13
 205 0026 A446     		mov	ip, r4
 206 0028 0122     		movs	r2, #1
 207              	.LVL9:
 208              	.L14:
  51:dsp/pvoc/stft.cpp ****     }
 209              		.loc 1 51 9 is_stmt 1 discriminator 2 view .LVU52
  49:dsp/pvoc/stft.cpp ****     {
 210              		.loc 1 49 5 discriminator 2 view .LVU53
  49:dsp/pvoc/stft.cpp ****     {
 211              		.loc 1 49 39 is_stmt 0 discriminator 2 view .LVU54
 212 002a 4FEA5C0C 		lsr	ip, ip, #1
 213              	.LVL10:
  49:dsp/pvoc/stft.cpp ****     {
 214              		.loc 1 49 32 is_stmt 1 discriminator 2 view .LVU55
 215 002e 1046     		mov	r0, r2
 216 0030 0132     		adds	r2, r2, #1
 217 0032 BCF1010F 		cmp	ip, #1
 218 0036 F8D1     		bne	.L14
 219 0038 C8F80800 		str	r0, [r8, #8]
 220              	.LVL11:
 221              	.L13:
  49:dsp/pvoc/stft.cpp ****     {
 222              		.loc 1 49 32 is_stmt 0 discriminator 2 view .LVU56
 223              	.LBE259:
  53:dsp/pvoc/stft.cpp **** 
 224              		.loc 1 53 5 is_stmt 1 view .LVU57
  53:dsp/pvoc/stft.cpp **** 
 225              		.loc 1 53 30 is_stmt 0 view .LVU58
 226 003c 2344     		add	r3, r3, r4
 227              	.LVL12:
  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 228              		.loc 1 55 10 view .LVU59
 229 003e C8F80010 		str	r1, [r8]
 230              	.LBB260:
 231              	.LBB261:
 232              		.file 3 "./shy_fft.h"
   1:./shy_fft.h   **** // Copyright 2014 Emilie Gillet.
   2:./shy_fft.h   **** //
   3:./shy_fft.h   **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./shy_fft.h   **** //
   5:./shy_fft.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./shy_fft.h   **** // of this software and associated documentation files (the "Software"), to deal
   7:./shy_fft.h   **** // in the Software without restriction, including without limitation the rights
   8:./shy_fft.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./shy_fft.h   **** // copies of the Software, and to permit persons to whom the Software is
  10:./shy_fft.h   **** // furnished to do so, subject to the following conditions:
  11:./shy_fft.h   **** //
  12:./shy_fft.h   **** // The above copyright notice and this permission notice shall be included in
  13:./shy_fft.h   **** // all copies or substantial portions of the Software.
  14:./shy_fft.h   **** //
  15:./shy_fft.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./shy_fft.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./shy_fft.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 24


  18:./shy_fft.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./shy_fft.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./shy_fft.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./shy_fft.h   **** // THE SOFTWARE.
  22:./shy_fft.h   **** //
  23:./shy_fft.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./shy_fft.h   **** //
  25:./shy_fft.h   **** // -----------------------------------------------------------------------------
  26:./shy_fft.h   **** //
  27:./shy_fft.h   **** // A modest implementation of real FFT for embedded audio applications,
  28:./shy_fft.h   **** // largely based on Laurent de Soras' FFTReal.
  29:./shy_fft.h   **** //
  30:./shy_fft.h   **** // Improvements:
  31:./shy_fft.h   **** // * No dynamic allocations.
  32:./shy_fft.h   **** // * No additional buffering (can use the input buffer as a workspace).
  33:./shy_fft.h   **** // * No big bitrev lookup table.
  34:./shy_fft.h   **** // * Keep the fixed size template signature, but also provide method for
  35:./shy_fft.h   **** //   variable size (up to the fixed size).
  36:./shy_fft.h   **** 
  37:./shy_fft.h   **** #ifndef STMLIB_FFT_SHY_FFT_H_
  38:./shy_fft.h   **** #define STMLIB_FFT_SHY_FFT_H_
  39:./shy_fft.h   **** 
  40:./shy_fft.h   **** #include <algorithm>
  41:./shy_fft.h   **** #include <cmath>
  42:./shy_fft.h   **** #include <stdint.h>
  43:./shy_fft.h   **** 
  44:./shy_fft.h   **** // Compile-time log 2
  45:./shy_fft.h   **** template <size_t x>
  46:./shy_fft.h   **** struct Log2
  47:./shy_fft.h   **** {
  48:./shy_fft.h   ****     enum
  49:./shy_fft.h   ****     {
  50:./shy_fft.h   ****         value = Log2<x / 2>::value + 1
  51:./shy_fft.h   ****     };
  52:./shy_fft.h   ****     typedef char CheckPowerOf2[((x & (x - 1)) == 0 ? 1 : -1)];
  53:./shy_fft.h   **** };
  54:./shy_fft.h   **** 
  55:./shy_fft.h   **** template <>
  56:./shy_fft.h   **** struct Log2<1>
  57:./shy_fft.h   **** {
  58:./shy_fft.h   ****     enum
  59:./shy_fft.h   ****     {
  60:./shy_fft.h   ****         value = 0
  61:./shy_fft.h   ****     };
  62:./shy_fft.h   **** };
  63:./shy_fft.h   **** 
  64:./shy_fft.h   **** 
  65:./shy_fft.h   **** // Bit reversal LUT size.
  66:./shy_fft.h   **** template <size_t>
  67:./shy_fft.h   **** struct BitReversalLut
  68:./shy_fft.h   **** {
  69:./shy_fft.h   ****     enum
  70:./shy_fft.h   ****     {
  71:./shy_fft.h   ****         size = 1
  72:./shy_fft.h   ****     };
  73:./shy_fft.h   **** };
  74:./shy_fft.h   **** template <>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 25


  75:./shy_fft.h   **** struct BitReversalLut<3>
  76:./shy_fft.h   **** {
  77:./shy_fft.h   ****     enum
  78:./shy_fft.h   ****     {
  79:./shy_fft.h   ****         size = 2
  80:./shy_fft.h   ****     };
  81:./shy_fft.h   **** };
  82:./shy_fft.h   **** template <>
  83:./shy_fft.h   **** struct BitReversalLut<4>
  84:./shy_fft.h   **** {
  85:./shy_fft.h   ****     enum
  86:./shy_fft.h   ****     {
  87:./shy_fft.h   ****         size = 4
  88:./shy_fft.h   ****     };
  89:./shy_fft.h   **** };
  90:./shy_fft.h   **** template <>
  91:./shy_fft.h   **** struct BitReversalLut<5>
  92:./shy_fft.h   **** {
  93:./shy_fft.h   ****     enum
  94:./shy_fft.h   ****     {
  95:./shy_fft.h   ****         size = 8
  96:./shy_fft.h   ****     };
  97:./shy_fft.h   **** };
  98:./shy_fft.h   **** template <>
  99:./shy_fft.h   **** struct BitReversalLut<6>
 100:./shy_fft.h   **** {
 101:./shy_fft.h   ****     enum
 102:./shy_fft.h   ****     {
 103:./shy_fft.h   ****         size = 16
 104:./shy_fft.h   ****     };
 105:./shy_fft.h   **** };
 106:./shy_fft.h   **** template <>
 107:./shy_fft.h   **** struct BitReversalLut<7>
 108:./shy_fft.h   **** {
 109:./shy_fft.h   ****     enum
 110:./shy_fft.h   ****     {
 111:./shy_fft.h   ****         size = 32
 112:./shy_fft.h   ****     };
 113:./shy_fft.h   **** };
 114:./shy_fft.h   **** template <>
 115:./shy_fft.h   **** struct BitReversalLut<8>
 116:./shy_fft.h   **** {
 117:./shy_fft.h   ****     enum
 118:./shy_fft.h   ****     {
 119:./shy_fft.h   ****         size = 64
 120:./shy_fft.h   ****     };
 121:./shy_fft.h   **** };
 122:./shy_fft.h   **** 
 123:./shy_fft.h   **** 
 124:./shy_fft.h   **** // Typed math functions and constants.
 125:./shy_fft.h   **** template <typename T>
 126:./shy_fft.h   **** struct Math
 127:./shy_fft.h   **** {
 128:./shy_fft.h   ****     inline T pi() const;
 129:./shy_fft.h   ****     inline T sqrt_2_div_2() const;
 130:./shy_fft.h   ****     inline T cos(T x);
 131:./shy_fft.h   ****     inline T sin(T x);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 26


 132:./shy_fft.h   **** };
 133:./shy_fft.h   **** 
 134:./shy_fft.h   **** template <>
 135:./shy_fft.h   **** struct Math<float>
 136:./shy_fft.h   **** {
 137:./shy_fft.h   ****     inline float pi() const { return 3.141592653589793f; }
 138:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 139:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 140:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 141:./shy_fft.h   **** };
 142:./shy_fft.h   **** 
 143:./shy_fft.h   **** template <>
 144:./shy_fft.h   **** struct Math<double>
 145:./shy_fft.h   **** {
 146:./shy_fft.h   ****     inline double pi() const { return 3.141592653589793; }
 147:./shy_fft.h   ****     inline float  sqrt_2_div_2() const { return 0.7071067811865476; }
 148:./shy_fft.h   ****     inline double cos(double x) { return cos(x); }
 149:./shy_fft.h   ****     inline double sin(double x) { return sin(x); }
 150:./shy_fft.h   **** };
 151:./shy_fft.h   **** 
 152:./shy_fft.h   **** 
 153:./shy_fft.h   **** // Look-up table for trigonometric data.
 154:./shy_fft.h   **** template <typename T, size_t num_passes>
 155:./shy_fft.h   **** class LutPhasor
 156:./shy_fft.h   **** {
 157:./shy_fft.h   ****   public:
 158:./shy_fft.h   ****     LutPhasor() {}
 159:./shy_fft.h   ****     ~LutPhasor() {}
 160:./shy_fft.h   **** 
 161:./shy_fft.h   ****     void Init()
 162:./shy_fft.h   ****     {
 163:./shy_fft.h   ****         Math<T> math;
 164:./shy_fft.h   **** 
 165:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 166:./shy_fft.h   ****         {
 167:./shy_fft.h   ****             size_t pass_size = 1L << (pass - 1);
 168:./shy_fft.h   ****             T*     pass_ptr  = &trig_lut_[(1L << (pass - 1)) - 4];
 169:./shy_fft.h   ****             T      increment = math.pi() / (pass_size << 1);
 170:./shy_fft.h   ****             T      phase     = 0.0;
 171:./shy_fft.h   ****             for(size_t i = 0; i < pass_size; ++i)
 172:./shy_fft.h   ****             {
 173:./shy_fft.h   ****                 pass_ptr[i] = math.cos(phase);
 174:./shy_fft.h   ****                 phase += increment;
 175:./shy_fft.h   ****             }
 176:./shy_fft.h   ****         }
 177:./shy_fft.h   ****     }
 178:./shy_fft.h   **** 
 179:./shy_fft.h   ****     inline void Start(size_t pass)
 180:./shy_fft.h   ****     {
 181:./shy_fft.h   ****         size_t pass_size = 1 << (pass - 1);
 182:./shy_fft.h   ****         cos_ptr_         = &trig_lut_[pass_size - 4 + 1];
 183:./shy_fft.h   ****         sin_ptr_         = &trig_lut_[pass_size + pass_size - 4 - 1];
 184:./shy_fft.h   ****     }
 185:./shy_fft.h   **** 
 186:./shy_fft.h   ****     inline void Rotate()
 187:./shy_fft.h   ****     {
 188:./shy_fft.h   ****         ++cos_ptr_;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 27


 189:./shy_fft.h   ****         --sin_ptr_;
 190:./shy_fft.h   ****     }
 191:./shy_fft.h   **** 
 192:./shy_fft.h   ****     inline T cos() const { return *cos_ptr_; }
 193:./shy_fft.h   ****     inline T sin() const { return *sin_ptr_; }
 194:./shy_fft.h   **** 
 195:./shy_fft.h   ****   private:
 196:./shy_fft.h   ****     T  trig_lut_[(1 << (num_passes - 1)) - 4];
 197:./shy_fft.h   ****     T* cos_ptr_;
 198:./shy_fft.h   ****     T* sin_ptr_;
 199:./shy_fft.h   **** };
 200:./shy_fft.h   **** 
 201:./shy_fft.h   **** template <typename T>
 202:./shy_fft.h   **** struct LutPhasor<T, 0>
 203:./shy_fft.h   **** {
 204:./shy_fft.h   ****     void Init(){};
 205:./shy_fft.h   **** };
 206:./shy_fft.h   **** template <typename T>
 207:./shy_fft.h   **** struct LutPhasor<T, 1>
 208:./shy_fft.h   **** {
 209:./shy_fft.h   ****     void Init(){};
 210:./shy_fft.h   **** };
 211:./shy_fft.h   **** template <typename T>
 212:./shy_fft.h   **** struct LutPhasor<T, 2>
 213:./shy_fft.h   **** {
 214:./shy_fft.h   ****     void Init(){};
 215:./shy_fft.h   **** };
 216:./shy_fft.h   **** 
 217:./shy_fft.h   **** template <typename T>
 218:./shy_fft.h   **** struct LutPhasor<T, 3>
 219:./shy_fft.h   **** {
 220:./shy_fft.h   ****     void     Init(){};
 221:./shy_fft.h   ****     void     Start(size_t){};
 222:./shy_fft.h   ****     void     Rotate(){};
 223:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 224:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 225:./shy_fft.h   **** };
 226:./shy_fft.h   **** 
 227:./shy_fft.h   **** 
 228:./shy_fft.h   **** // Another way of generating roots of unity.
 229:./shy_fft.h   **** template <typename T, size_t num_passes>
 230:./shy_fft.h   **** class RotationPhasor
 231:./shy_fft.h   **** {
 232:./shy_fft.h   ****   public:
 233:./shy_fft.h   ****     RotationPhasor() {}
 234:./shy_fft.h   ****     ~RotationPhasor() {}
 235:./shy_fft.h   **** 
 236:./shy_fft.h   ****     void Init()
 237:./shy_fft.h   ****     {
 238:./shy_fft.h   ****         Math<T> math;
 239:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 240:./shy_fft.h   ****         {
 241:./shy_fft.h   ****             size_t index            = (pass - 3) << 1;
 242:./shy_fft.h   ****             T      angle            = math.pi() / (1 << pass);
 243:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 244:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 245:./shy_fft.h   ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 28


 246:./shy_fft.h   ****     }
 247:./shy_fft.h   **** 
 248:./shy_fft.h   ****     inline void Start(size_t pass)
 249:./shy_fft.h   ****     {
 250:./shy_fft.h   ****         size_t index = (pass - 3) << 1;
 251:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 252:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 253:./shy_fft.h   ****     }
 254:./shy_fft.h   **** 
 255:./shy_fft.h   ****     inline void Rotate()
 256:./shy_fft.h   ****     {
 257:./shy_fft.h   ****         T temp = cos_ * real_ - sin_ * imag_;
 258:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 259:./shy_fft.h   ****         cos_   = temp;
 260:./shy_fft.h   ****     }
 261:./shy_fft.h   **** 
 262:./shy_fft.h   ****     inline T cos() const { return cos_; }
 263:./shy_fft.h   ****     inline T sin() const { return sin_; }
 264:./shy_fft.h   **** 
 265:./shy_fft.h   ****   private:
 266:./shy_fft.h   ****     T sin_cos_lut_[(num_passes - 3) << 1];
 267:./shy_fft.h   ****     T cos_;
 268:./shy_fft.h   ****     T sin_;
 269:./shy_fft.h   ****     T real_;
 270:./shy_fft.h   ****     T imag_;
 271:./shy_fft.h   **** };
 272:./shy_fft.h   **** 
 273:./shy_fft.h   **** template <typename T>
 274:./shy_fft.h   **** struct RotationPhasor<T, 0>
 275:./shy_fft.h   **** {
 276:./shy_fft.h   ****     void Init(){};
 277:./shy_fft.h   **** };
 278:./shy_fft.h   **** template <typename T>
 279:./shy_fft.h   **** struct RotationPhasor<T, 1>
 280:./shy_fft.h   **** {
 281:./shy_fft.h   ****     void Init(){};
 282:./shy_fft.h   **** };
 283:./shy_fft.h   **** template <typename T>
 284:./shy_fft.h   **** struct RotationPhasor<T, 2>
 285:./shy_fft.h   **** {
 286:./shy_fft.h   ****     void Init(){};
 287:./shy_fft.h   **** };
 288:./shy_fft.h   **** 
 289:./shy_fft.h   **** template <typename T>
 290:./shy_fft.h   **** struct RotationPhasor<T, 3>
 291:./shy_fft.h   **** {
 292:./shy_fft.h   ****     void     Init(){};
 293:./shy_fft.h   ****     void     Start(size_t){};
 294:./shy_fft.h   ****     void     Rotate(){};
 295:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 296:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 297:./shy_fft.h   **** };
 298:./shy_fft.h   **** 
 299:./shy_fft.h   **** // Direct transform
 300:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 301:./shy_fft.h   **** struct DirectTransform
 302:./shy_fft.h   **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 29


 303:./shy_fft.h   ****   private:
 304:./shy_fft.h   ****     enum
 305:./shy_fft.h   ****     {
 306:./shy_fft.h   ****         size = 1 << num_passes
 307:./shy_fft.h   ****     };
 308:./shy_fft.h   **** 
 309:./shy_fft.h   ****   public:
 310:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 311:./shy_fft.h   ****     {
 312:./shy_fft.h   ****         T*      s;
 313:./shy_fft.h   ****         T*      d;
 314:./shy_fft.h   ****         Math<T> math;
 315:./shy_fft.h   **** 
 316:./shy_fft.h   ****         // First and second pass.
 317:./shy_fft.h   ****         d = output;
 318:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 319:./shy_fft.h   ****         {
 320:./shy_fft.h   ****             const T* s  = input;
 321:./shy_fft.h   ****             size_t   r0 = num_passes <= 8
 322:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 323:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 324:./shy_fft.h   ****                                   >> (16 - num_passes);
 325:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 326:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 327:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 328:./shy_fft.h   **** 
 329:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 330:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 331:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 332:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 333:./shy_fft.h   ****             d[0] = a + b;
 334:./shy_fft.h   ****             d[2] = a - b;
 335:./shy_fft.h   ****             d += 4;
 336:./shy_fft.h   ****         }
 337:./shy_fft.h   **** 
 338:./shy_fft.h   ****         // Third pass.
 339:./shy_fft.h   ****         s = output;
 340:./shy_fft.h   ****         d = input;
 341:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 342:./shy_fft.h   ****         {
 343:./shy_fft.h   ****             T v;
 344:./shy_fft.h   **** 
 345:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 346:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 347:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 348:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 349:./shy_fft.h   **** 
 350:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 351:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 352:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 353:./shy_fft.h   **** 
 354:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 355:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 356:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 357:./shy_fft.h   ****         }
 358:./shy_fft.h   **** 
 359:./shy_fft.h   ****         // Remaining passes.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 30


 360:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 361:./shy_fft.h   ****         {
 362:./shy_fft.h   ****             // Flip source and destination pointers
 363:./shy_fft.h   ****             {
 364:./shy_fft.h   ****                 T* tmp = s;
 365:./shy_fft.h   ****                 s      = d;
 366:./shy_fft.h   ****                 d      = tmp;
 367:./shy_fft.h   ****             }
 368:./shy_fft.h   **** 
 369:./shy_fft.h   ****             size_t n   = 1 << pass;
 370:./shy_fft.h   ****             size_t n_2 = n >> 1;
 371:./shy_fft.h   **** 
 372:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 373:./shy_fft.h   ****             {
 374:./shy_fft.h   ****                 T* s1r = s + i;
 375:./shy_fft.h   ****                 T* s2r = s1r + n;
 376:./shy_fft.h   ****                 T* dr  = d + i;
 377:./shy_fft.h   ****                 T* di  = dr + n;
 378:./shy_fft.h   **** 
 379:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 380:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 381:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 382:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 383:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 384:./shy_fft.h   ****                 T* s2i  = s1i + n;
 385:./shy_fft.h   ****                 phasor->Start(pass);
 386:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 387:./shy_fft.h   ****                 {
 388:./shy_fft.h   ****                     T c = phasor->cos();
 389:./shy_fft.h   ****                     T s = phasor->sin();
 390:./shy_fft.h   ****                     T v;
 391:./shy_fft.h   **** 
 392:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 393:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 394:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 395:./shy_fft.h   **** 
 396:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 397:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 398:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 399:./shy_fft.h   ****                     phasor->Rotate();
 400:./shy_fft.h   ****                 }
 401:./shy_fft.h   ****             }
 402:./shy_fft.h   ****         }
 403:./shy_fft.h   **** 
 404:./shy_fft.h   ****         // Annoying additional data copy step.
 405:./shy_fft.h   ****         if(d != output)
 406:./shy_fft.h   ****         {
 407:./shy_fft.h   ****             std::copy(&d[0], &d[size], &output[0]);
 408:./shy_fft.h   ****         }
 409:./shy_fft.h   ****     }
 410:./shy_fft.h   **** 
 411:./shy_fft.h   ****     // The exact same thing but with "num_passes" as a run-time argument.
 412:./shy_fft.h   ****     void operator()(T*             input,
 413:./shy_fft.h   ****                     T*             output,
 414:./shy_fft.h   ****                     const uint8_t* bit_rev,
 415:./shy_fft.h   ****                     Phasor*        phasor,
 416:./shy_fft.h   ****                     size_t         rt_num_passes)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 31


 417:./shy_fft.h   ****     {
 418:./shy_fft.h   ****         T*      s;
 419:./shy_fft.h   ****         T*      d;
 420:./shy_fft.h   ****         Math<T> math;
 421:./shy_fft.h   ****         size_t  rt_size = 1 << rt_num_passes;
 422:./shy_fft.h   ****         // First and second pass.
 423:./shy_fft.h   ****         d = output;
 424:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 425:./shy_fft.h   ****         {
 426:./shy_fft.h   ****             const T* s  = input;
 427:./shy_fft.h   ****             size_t   r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 428:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 429:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 430:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 431:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 432:./shy_fft.h   **** 
 433:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 434:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 435:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 436:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 437:./shy_fft.h   ****             d[0] = a + b;
 438:./shy_fft.h   ****             d[2] = a - b;
 439:./shy_fft.h   ****             d += 4;
 440:./shy_fft.h   ****         }
 441:./shy_fft.h   **** 
 442:./shy_fft.h   ****         // Third pass.
 443:./shy_fft.h   ****         s = output;
 444:./shy_fft.h   ****         d = input;
 445:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 446:./shy_fft.h   ****         {
 447:./shy_fft.h   ****             T v;
 448:./shy_fft.h   **** 
 449:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 450:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 451:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 452:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 453:./shy_fft.h   **** 
 454:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 455:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 456:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 457:./shy_fft.h   **** 
 458:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 459:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 460:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 461:./shy_fft.h   ****         }
 462:./shy_fft.h   **** 
 463:./shy_fft.h   ****         // Remaining passes.
 464:./shy_fft.h   ****         for(size_t pass = 3; pass < rt_num_passes; ++pass)
 465:./shy_fft.h   ****         {
 466:./shy_fft.h   ****             // Flip source and destination pointers
 467:./shy_fft.h   ****             {
 468:./shy_fft.h   ****                 T* tmp = s;
 469:./shy_fft.h   ****                 s      = d;
 470:./shy_fft.h   ****                 d      = tmp;
 471:./shy_fft.h   ****             }
 472:./shy_fft.h   **** 
 473:./shy_fft.h   ****             size_t n   = 1 << pass;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 32


 474:./shy_fft.h   ****             size_t n_2 = n >> 1;
 475:./shy_fft.h   **** 
 476:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 477:./shy_fft.h   ****             {
 478:./shy_fft.h   ****                 T* s1r = s + i;
 479:./shy_fft.h   ****                 T* s2r = s1r + n;
 480:./shy_fft.h   ****                 T* dr  = d + i;
 481:./shy_fft.h   ****                 T* di  = dr + n;
 482:./shy_fft.h   **** 
 483:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 484:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 485:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 486:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 487:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 488:./shy_fft.h   ****                 T* s2i  = s1i + n;
 489:./shy_fft.h   ****                 phasor->Start(pass);
 490:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 491:./shy_fft.h   ****                 {
 492:./shy_fft.h   ****                     T c = phasor->cos();
 493:./shy_fft.h   ****                     T s = phasor->sin();
 494:./shy_fft.h   ****                     T v;
 495:./shy_fft.h   **** 
 496:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 497:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 498:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 499:./shy_fft.h   **** 
 500:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 501:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 502:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 503:./shy_fft.h   ****                     phasor->Rotate();
 504:./shy_fft.h   ****                 }
 505:./shy_fft.h   ****             }
 506:./shy_fft.h   ****         }
 507:./shy_fft.h   **** 
 508:./shy_fft.h   ****         // Annoying additional data copy step.
 509:./shy_fft.h   ****         if(d != output)
 510:./shy_fft.h   ****         {
 511:./shy_fft.h   ****             std::copy(&d[0], &d[rt_size], &output[0]);
 512:./shy_fft.h   ****         }
 513:./shy_fft.h   ****     }
 514:./shy_fft.h   **** };
 515:./shy_fft.h   **** 
 516:./shy_fft.h   **** template <typename T, typename Phasor>
 517:./shy_fft.h   **** struct DirectTransform<T, 0, Phasor>
 518:./shy_fft.h   **** {
 519:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 520:./shy_fft.h   ****     {
 521:./shy_fft.h   ****         o[0] = i[0];
 522:./shy_fft.h   ****     }
 523:./shy_fft.h   **** };
 524:./shy_fft.h   **** 
 525:./shy_fft.h   **** template <typename T, typename Phasor>
 526:./shy_fft.h   **** struct DirectTransform<T, 1, Phasor>
 527:./shy_fft.h   **** {
 528:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 529:./shy_fft.h   ****     {
 530:./shy_fft.h   ****         o[0] = i[0] + i[1];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 33


 531:./shy_fft.h   ****         o[1] = i[0] - i[1];
 532:./shy_fft.h   ****     }
 533:./shy_fft.h   **** };
 534:./shy_fft.h   **** 
 535:./shy_fft.h   **** template <typename T, typename Phasor>
 536:./shy_fft.h   **** struct DirectTransform<T, 2, Phasor>
 537:./shy_fft.h   **** {
 538:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 539:./shy_fft.h   ****     {
 540:./shy_fft.h   ****         o[1] = i[0] - i[2];
 541:./shy_fft.h   ****         o[3] = i[1] - i[3];
 542:./shy_fft.h   ****         T a  = i[0] + i[2];
 543:./shy_fft.h   ****         T b  = i[1] + i[3];
 544:./shy_fft.h   ****         o[0] = a + b;
 545:./shy_fft.h   ****         o[2] = a - b;
 546:./shy_fft.h   ****     }
 547:./shy_fft.h   **** };
 548:./shy_fft.h   **** 
 549:./shy_fft.h   **** 
 550:./shy_fft.h   **** // Inverse transform
 551:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 552:./shy_fft.h   **** struct InverseTransform
 553:./shy_fft.h   **** {
 554:./shy_fft.h   ****   private:
 555:./shy_fft.h   ****     enum
 556:./shy_fft.h   ****     {
 557:./shy_fft.h   ****         size = 1 << num_passes
 558:./shy_fft.h   ****     };
 559:./shy_fft.h   **** 
 560:./shy_fft.h   ****   public:
 561:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 562:./shy_fft.h   ****     {
 563:./shy_fft.h   ****         T*      s = (T*)(input);
 564:./shy_fft.h   ****         T*      d = output;
 565:./shy_fft.h   ****         Math<T> math;
 566:./shy_fft.h   **** 
 567:./shy_fft.h   ****         // Remaining passes.
 568:./shy_fft.h   ****         for(size_t pass = num_passes - 1; pass >= 3; --pass)
 569:./shy_fft.h   ****         {
 570:./shy_fft.h   ****             size_t n   = 1 << pass;
 571:./shy_fft.h   ****             size_t n_2 = n >> 1;
 572:./shy_fft.h   **** 
 573:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 574:./shy_fft.h   ****             {
 575:./shy_fft.h   ****                 T* sr  = s + i;
 576:./shy_fft.h   ****                 T* si  = sr + n;
 577:./shy_fft.h   ****                 T* d1r = d + i;
 578:./shy_fft.h   ****                 T* d2r = d1r + n;
 579:./shy_fft.h   **** 
 580:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 581:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 582:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 583:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 584:./shy_fft.h   **** 
 585:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 586:./shy_fft.h   ****                 T* d2i = d1i + n;
 587:./shy_fft.h   ****                 phasor->Start(pass);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 34


 588:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 589:./shy_fft.h   ****                 {
 590:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 591:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 592:./shy_fft.h   **** 
 593:./shy_fft.h   ****                     T c  = phasor->cos();
 594:./shy_fft.h   ****                     T s  = phasor->sin();
 595:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 596:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 597:./shy_fft.h   **** 
 598:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 599:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 600:./shy_fft.h   ****                     phasor->Rotate();
 601:./shy_fft.h   ****                 }
 602:./shy_fft.h   ****             }
 603:./shy_fft.h   **** 
 604:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 605:./shy_fft.h   ****             if(d == output)
 606:./shy_fft.h   ****             {
 607:./shy_fft.h   ****                 s = output;
 608:./shy_fft.h   ****                 d = input;
 609:./shy_fft.h   ****             }
 610:./shy_fft.h   ****             else
 611:./shy_fft.h   ****             {
 612:./shy_fft.h   ****                 s = input;
 613:./shy_fft.h   ****                 d = output;
 614:./shy_fft.h   ****             }
 615:./shy_fft.h   ****         }
 616:./shy_fft.h   **** 
 617:./shy_fft.h   ****         // Copy data if necessary.
 618:./shy_fft.h   ****         if(d == output)
 619:./shy_fft.h   ****         {
 620:./shy_fft.h   ****             std::copy(&s[0], &s[size], &output[0]);
 621:./shy_fft.h   ****         }
 622:./shy_fft.h   **** 
 623:./shy_fft.h   ****         s = output;
 624:./shy_fft.h   ****         d = input;
 625:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 626:./shy_fft.h   ****         {
 627:./shy_fft.h   ****             T vr, vi;
 628:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 629:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 630:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 631:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 632:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 633:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 634:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 635:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 636:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 637:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 638:./shy_fft.h   ****         }
 639:./shy_fft.h   **** 
 640:./shy_fft.h   ****         // First and second pass.
 641:./shy_fft.h   ****         s = input;
 642:./shy_fft.h   ****         d = output;
 643:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 644:./shy_fft.h   ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 35


 645:./shy_fft.h   ****             size_t r0 = num_passes <= 8
 646:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 647:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 648:./shy_fft.h   ****                                   >> (16 - num_passes);
 649:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 650:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 651:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 652:./shy_fft.h   **** 
 653:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 654:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 655:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 656:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 657:./shy_fft.h   **** 
 658:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 659:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 660:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 661:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 662:./shy_fft.h   ****             s += 4;
 663:./shy_fft.h   ****         }
 664:./shy_fft.h   ****     }
 665:./shy_fft.h   **** 
 666:./shy_fft.h   ****     void operator()(T*             input,
 667:./shy_fft.h   ****                     T*             output,
 668:./shy_fft.h   ****                     const uint8_t* bit_rev,
 669:./shy_fft.h   ****                     Phasor*        phasor,
 670:./shy_fft.h   ****                     size_t         rt_num_passes)
 671:./shy_fft.h   ****     {
 672:./shy_fft.h   ****         T*      s = (T*)(input);
 673:./shy_fft.h   ****         T*      d = output;
 674:./shy_fft.h   ****         Math<T> math;
 675:./shy_fft.h   **** 
 676:./shy_fft.h   ****         size_t rt_size = 1 << rt_num_passes;
 677:./shy_fft.h   **** 
 678:./shy_fft.h   ****         // Remaining passes.
 679:./shy_fft.h   ****         for(size_t pass = rt_num_passes - 1; pass >= 3; --pass)
 680:./shy_fft.h   ****         {
 681:./shy_fft.h   ****             size_t n   = 1 << pass;
 682:./shy_fft.h   ****             size_t n_2 = n >> 1;
 683:./shy_fft.h   **** 
 684:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 685:./shy_fft.h   ****             {
 686:./shy_fft.h   ****                 T* sr  = s + i;
 687:./shy_fft.h   ****                 T* si  = sr + n;
 688:./shy_fft.h   ****                 T* d1r = d + i;
 689:./shy_fft.h   ****                 T* d2r = d1r + n;
 690:./shy_fft.h   **** 
 691:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 692:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 693:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 694:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 695:./shy_fft.h   **** 
 696:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 697:./shy_fft.h   ****                 T* d2i = d1i + n;
 698:./shy_fft.h   ****                 phasor->Start(pass);
 699:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 700:./shy_fft.h   ****                 {
 701:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 36


 702:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 703:./shy_fft.h   **** 
 704:./shy_fft.h   ****                     T c  = phasor->cos();
 705:./shy_fft.h   ****                     T s  = phasor->sin();
 706:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 707:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 708:./shy_fft.h   **** 
 709:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 710:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 711:./shy_fft.h   ****                     phasor->Rotate();
 712:./shy_fft.h   ****                 }
 713:./shy_fft.h   ****             }
 714:./shy_fft.h   **** 
 715:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 716:./shy_fft.h   ****             if(d == output)
 717:./shy_fft.h   ****             {
 718:./shy_fft.h   ****                 s = output;
 719:./shy_fft.h   ****                 d = input;
 720:./shy_fft.h   ****             }
 721:./shy_fft.h   ****             else
 722:./shy_fft.h   ****             {
 723:./shy_fft.h   ****                 s = input;
 724:./shy_fft.h   ****                 d = output;
 725:./shy_fft.h   ****             }
 726:./shy_fft.h   ****         }
 727:./shy_fft.h   **** 
 728:./shy_fft.h   ****         // Copy data if necessary.
 729:./shy_fft.h   ****         if(d == output)
 730:./shy_fft.h   ****         {
 731:./shy_fft.h   ****             std::copy(&s[0], &s[rt_size], &output[0]);
 732:./shy_fft.h   ****         }
 733:./shy_fft.h   **** 
 734:./shy_fft.h   ****         s = output;
 735:./shy_fft.h   ****         d = input;
 736:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 737:./shy_fft.h   ****         {
 738:./shy_fft.h   ****             T vr, vi;
 739:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 740:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 741:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 742:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 743:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 744:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 745:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 746:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 747:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 748:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 749:./shy_fft.h   ****         }
 750:./shy_fft.h   **** 
 751:./shy_fft.h   ****         // First and second pass.
 752:./shy_fft.h   ****         s = input;
 753:./shy_fft.h   ****         d = output;
 754:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 755:./shy_fft.h   ****         {
 756:./shy_fft.h   ****             size_t r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 757:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 758:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 37


 759:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 760:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 761:./shy_fft.h   **** 
 762:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 763:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 764:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 765:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 766:./shy_fft.h   **** 
 767:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 768:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 769:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 770:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 771:./shy_fft.h   ****             s += 4;
 772:./shy_fft.h   ****         }
 773:./shy_fft.h   ****     }
 774:./shy_fft.h   **** };
 775:./shy_fft.h   **** 
 776:./shy_fft.h   **** template <typename T, typename Phasor>
 777:./shy_fft.h   **** struct InverseTransform<T, 0, Phasor>
 778:./shy_fft.h   **** {
 779:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 780:./shy_fft.h   ****     {
 781:./shy_fft.h   ****         o[0] = i[0];
 782:./shy_fft.h   ****     }
 783:./shy_fft.h   **** };
 784:./shy_fft.h   **** 
 785:./shy_fft.h   **** template <typename T, typename Phasor>
 786:./shy_fft.h   **** struct InverseTransform<T, 1, Phasor>
 787:./shy_fft.h   **** {
 788:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 789:./shy_fft.h   ****     {
 790:./shy_fft.h   ****         o[0] = i[0] + i[1];
 791:./shy_fft.h   ****         o[1] = i[0] - i[1];
 792:./shy_fft.h   ****     }
 793:./shy_fft.h   **** };
 794:./shy_fft.h   **** 
 795:./shy_fft.h   **** template <typename T, typename Phasor>
 796:./shy_fft.h   **** struct InverseTransform<T, 2, Phasor>
 797:./shy_fft.h   **** {
 798:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 799:./shy_fft.h   ****     {
 800:./shy_fft.h   ****         T a = i[0] + i[2];
 801:./shy_fft.h   ****         T b = i[0] - i[2];
 802:./shy_fft.h   **** 
 803:./shy_fft.h   ****         o[0] = a + i[1] * T(2);
 804:./shy_fft.h   ****         o[2] = a - i[1] * T(2);
 805:./shy_fft.h   ****         o[1] = b + i[3] * T(2);
 806:./shy_fft.h   ****         o[3] = b - i[3] * T(2);
 807:./shy_fft.h   ****     }
 808:./shy_fft.h   **** };
 809:./shy_fft.h   **** 
 810:./shy_fft.h   **** 
 811:./shy_fft.h   **** template <typename T                               = float,
 812:./shy_fft.h   ****           size_t size                              = 16,
 813:./shy_fft.h   ****           template <typename, size_t> class Phasor = LutPhasor>
 814:./shy_fft.h   **** class ShyFFT
 815:./shy_fft.h   **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 38


 816:./shy_fft.h   ****   public:
 817:./shy_fft.h   ****     enum
 818:./shy_fft.h   ****     {
 819:./shy_fft.h   ****         num_passes = Log2<size>::value,
 820:./shy_fft.h   ****         max_size   = size
 821:./shy_fft.h   ****     };
 822:./shy_fft.h   **** 
 823:./shy_fft.h   ****   private:
 824:./shy_fft.h   ****     typedef Phasor<T, num_passes> PhasorType;
 825:./shy_fft.h   **** 
 826:./shy_fft.h   ****   public:
 827:./shy_fft.h   ****     ShyFFT() {}
 828:./shy_fft.h   ****     ~ShyFFT() {}
 829:./shy_fft.h   **** 
 830:./shy_fft.h   ****     void Init()
 831:./shy_fft.h   ****     {
 832:./shy_fft.h   ****         bit_rev_[0] = 0;
 233              		.loc 3 832 21 view .LVU60
 234 0042 9FED280A 		vldr.32	s0, .L20
 235 0046 8A46     		mov	r10, r1
 236              	.LBE261:
 237              	.LBE260:
  53:dsp/pvoc/stft.cpp **** 
 238              		.loc 1 53 18 view .LVU61
 239 0048 C8F81030 		str	r3, [r8, #16]
  55:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 240              		.loc 1 55 5 is_stmt 1 view .LVU62
  59:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 241              		.loc 1 59 5 view .LVU63
 242              	.LVL13:
 243              	.LBB287:
 244              	.LBI260:
 830:./shy_fft.h   ****     {
 245              		.loc 3 830 10 view .LVU64
 246              	.LBB284:
 247              		.loc 3 832 21 is_stmt 0 view .LVU65
 248 004c 0023     		movs	r3, #0
 249 004e 9FED268A 		vldr.32	s16, .L20+4
 250              	.LBB262:
 251              	.LBB263:
 252              	.LBB264:
 239:./shy_fft.h   ****         {
 253              		.loc 3 239 20 view .LVU66
 254 0052 4FF0030B 		mov	fp, #3
 255              	.LBE264:
 256              	.LBE263:
 257              	.LBE262:
 258              		.loc 3 832 21 view .LVU67
 259 0056 81F85830 		strb	r3, [r1, #88]
 260              	.LVL14:
 261              		.loc 3 832 21 view .LVU68
 262              	.LBE284:
 263              	.LBE287:
 833:./shy_fft.h   ****         for(size_t i = 1; i < sizeof(bit_rev_); ++i)
 264              		.loc 3 833 29 is_stmt 1 view .LVU69
 265              	.LBB288:
 266              	.LBB285:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 39


 267              	.LBB282:
 268              	.LBI262:
 236:./shy_fft.h   ****     {
 269              		.loc 3 236 10 view .LVU70
 270              	.LBB280:
 271              	.LBB278:
 239:./shy_fft.h   ****         {
 272              		.loc 3 239 35 view .LVU71
 273 005a 0FE0     		b	.L16
 274              	.LVL15:
 275              	.L19:
 276              	.LBB265:
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 277              		.loc 3 242 49 is_stmt 0 view .LVU72
 278 005c 07EE903A 		vmov	s15, r3	@ int
 279 0060 F8EEE77A 		vcvt.f32.s32	s15, s15
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 280              		.loc 3 242 20 view .LVU73
 281 0064 C7EE278A 		vdiv.f32	s17, s14, s15
 282              	.LBB266:
 283              	.LBB267:
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 284              		.loc 3 139 44 view .LVU74
 285 0068 B0EE680A 		vmov.f32	s0, s17
 286 006c FFF7FEFF 		bl	cosf
 287              	.LVL16:
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 288              		.loc 3 139 44 view .LVU75
 289 0070 B0EE408A 		vmov.f32	s16, s0
 290              	.LBE267:
 291              	.LBE266:
 292              	.LBB269:
 293              	.LBB270:
 140:./shy_fft.h   **** };
 294              		.loc 3 140 44 view .LVU76
 295 0074 B0EE680A 		vmov.f32	s0, s17
 296 0078 FFF7FEFF 		bl	sinf
 297              	.LVL17:
 298              	.L16:
 140:./shy_fft.h   **** };
 299              		.loc 3 140 44 view .LVU77
 300              	.LBE270:
 301              	.LBE269:
 302              	.LBE265:
 303              	.LBE278:
 304              	.LBE280:
 305              	.LBE282:
 306              	.LBE285:
 307              	.LBE288:
 137:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 308              		.loc 3 137 31 is_stmt 1 view .LVU78
 309              	.LBB289:
 310              	.LBB286:
 311              	.LBB283:
 312              	.LBB281:
 313              	.LBB279:
 314              	.LBB274:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 40


 315              	.LBB272:
 316              	.LBI266:
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 317              		.loc 3 139 18 view .LVU79
 318              	.LBB268:
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 319              		.loc 3 139 33 view .LVU80
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 320              		.loc 3 139 33 is_stmt 0 view .LVU81
 321              	.LBE268:
 322              	.LBE272:
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 323              		.loc 3 242 54 view .LVU82
 324 007c 0123     		movs	r3, #1
 243:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 325              		.loc 3 243 37 view .LVU83
 326 007e 8AED008A 		vstr.32	s16, [r10]
 244:./shy_fft.h   ****         }
 327              		.loc 3 244 37 view .LVU84
 328 0082 8AED010A 		vstr.32	s0, [r10, #4]
 329              	.LBE274:
 239:./shy_fft.h   ****         {
 330              		.loc 3 239 35 view .LVU85
 331 0086 0AF1080A 		add	r10, r10, #8
 239:./shy_fft.h   ****         {
 332              		.loc 3 239 9 view .LVU86
 333 008a 9B44     		add	fp, fp, r3
 334              	.LVL18:
 335              	.LBB275:
 336              	.LBB273:
 337              	.LBI269:
 140:./shy_fft.h   **** };
 338              		.loc 3 140 18 is_stmt 1 view .LVU87
 339              	.LBB271:
 140:./shy_fft.h   **** };
 340              		.loc 3 140 33 view .LVU88
 140:./shy_fft.h   **** };
 341              		.loc 3 140 33 is_stmt 0 view .LVU89
 342              	.LBE271:
 343              	.LBE273:
 344              	.LBE275:
 239:./shy_fft.h   ****         {
 345              		.loc 3 239 9 is_stmt 1 view .LVU90
 239:./shy_fft.h   ****         {
 346              		.loc 3 239 35 view .LVU91
 347              	.LBB276:
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 348              		.loc 3 242 20 is_stmt 0 view .LVU92
 349 008c 9FED177A 		vldr.32	s14, .L20+8
 350              	.LBE276:
 239:./shy_fft.h   ****         {
 351              		.loc 3 239 35 view .LVU93
 352 0090 BBF10C0F 		cmp	fp, #12
 353              	.LBB277:
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 354              		.loc 3 242 54 view .LVU94
 355 0094 03FA0BF3 		lsl	r3, r3, fp
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 41


 356              	.LVL19:
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 357              		.loc 3 242 54 view .LVU95
 358              	.LBE277:
 239:./shy_fft.h   ****         {
 359              		.loc 3 239 35 view .LVU96
 360 0098 E0D1     		bne	.L19
 361              	.LVL20:
 239:./shy_fft.h   ****         {
 362              		.loc 3 239 35 view .LVU97
 363              	.LBE279:
 364              	.LBE281:
 365              	.LBE283:
 366              	.LBE286:
 367              	.LBE289:
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 368              		.loc 1 62 5 is_stmt 1 view .LVU98
  70:dsp/pvoc/stft.cpp **** 
 369              		.loc 1 70 20 is_stmt 0 view .LVU99
 370 009a 019B     		ldr	r3, [sp, #4]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 371              		.loc 1 69 48 view .LVU100
 372 009c 4FF48052 		mov	r2, #4096
  62:dsp/pvoc/stft.cpp ****     synthesis_ = &analysis_synthesis_buffer[buffer_size_];
 373              		.loc 1 62 16 view .LVU101
 374 00a0 C8F82C50 		str	r5, [r8, #44]
  63:dsp/pvoc/stft.cpp **** 
 375              		.loc 1 63 5 is_stmt 1 view .LVU102
  74:dsp/pvoc/stft.cpp **** }
 376              		.loc 1 74 10 is_stmt 0 view .LVU103
 377 00a4 4046     		mov	r0, r8
  70:dsp/pvoc/stft.cpp **** 
 378              		.loc 1 70 20 view .LVU104
 379 00a6 C8F84C30 		str	r3, [r8, #76]
  72:dsp/pvoc/stft.cpp **** 
 380              		.loc 1 72 17 view .LVU105
 381 00aa 0023     		movs	r3, #0
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 382              		.loc 1 68 20 view .LVU106
 383 00ac C8F82490 		str	r9, [r8, #36]
  72:dsp/pvoc/stft.cpp **** 
 384              		.loc 1 72 17 view .LVU107
 385 00b0 C8F84830 		str	r3, [r8, #72]
  63:dsp/pvoc/stft.cpp **** 
 386              		.loc 1 63 57 view .LVU108
 387 00b4 D8F81030 		ldr	r3, [r8, #16]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 388              		.loc 1 65 24 view .LVU109
 389 00b8 C8F81470 		str	r7, [r8, #20]
  63:dsp/pvoc/stft.cpp **** 
 390              		.loc 1 63 18 view .LVU110
 391 00bc 05EB4305 		add	r5, r5, r3, lsl #1
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 392              		.loc 1 65 14 view .LVU111
 393 00c0 C8F82070 		str	r7, [r8, #32]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 394              		.loc 1 69 48 view .LVU112
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 42


 395 00c4 B2FBF4F4 		udiv	r4, r2, r4
 396              	.LVL21:
  66:dsp/pvoc/stft.cpp **** 
 397              		.loc 1 66 15 view .LVU113
 398 00c8 C8E90666 		strd	r6, r6, [r8, #24]
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 399              		.loc 1 69 20 view .LVU114
 400 00cc C8F82840 		str	r4, [r8, #40]
  63:dsp/pvoc/stft.cpp **** 
 401              		.loc 1 63 16 view .LVU115
 402 00d0 C8F83050 		str	r5, [r8, #48]
  65:dsp/pvoc/stft.cpp ****     ifft_out_ = fft_out_ = ifft_buffer;
 403              		.loc 1 65 5 is_stmt 1 view .LVU116
  66:dsp/pvoc/stft.cpp **** 
 404              		.loc 1 66 5 view .LVU117
  68:dsp/pvoc/stft.cpp ****     window_stride_ = LUT_SINE_WINDOW_4096_SIZE / fft_size;
 405              		.loc 1 68 5 view .LVU118
  69:dsp/pvoc/stft.cpp ****     modifier_      = modifier;
 406              		.loc 1 69 5 view .LVU119
  70:dsp/pvoc/stft.cpp **** 
 407              		.loc 1 70 5 view .LVU120
  72:dsp/pvoc/stft.cpp **** 
 408              		.loc 1 72 5 view .LVU121
  74:dsp/pvoc/stft.cpp **** }
 409              		.loc 1 74 5 view .LVU122
  75:dsp/pvoc/stft.cpp **** 
 410              		.loc 1 75 1 is_stmt 0 view .LVU123
 411 00d4 03B0     		add	sp, sp, #12
 412              		.cfi_def_cfa_offset 44
 413              		@ sp needed
 414 00d6 BDEC028B 		vldm	sp!, {d8}
 415              		.cfi_restore 80
 416              		.cfi_restore 81
 417              		.cfi_def_cfa_offset 36
 418 00da BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 419              		.cfi_restore 14
 420              		.cfi_restore 11
 421              		.cfi_restore 10
 422              		.cfi_restore 9
 423              		.cfi_restore 8
 424              		.cfi_restore 7
 425              		.cfi_restore 6
 426              		.cfi_restore 5
 427              		.cfi_restore 4
 428              		.cfi_def_cfa_offset 0
 429              	.LVL22:
  74:dsp/pvoc/stft.cpp **** }
 430              		.loc 1 74 10 view .LVU124
 431 00de FFF7FEBF 		b	_ZN4STFT5ResetEv
 432              	.LVL23:
 433              	.L21:
  74:dsp/pvoc/stft.cpp **** }
 434              		.loc 1 74 10 view .LVU125
 435 00e2 00BF     		.align	2
 436              	.L20:
 437 00e4 16EFC33E 		.word	1053028118
 438 00e8 5E836C3F 		.word	1064076126
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 43


 439 00ec DB0F4940 		.word	1078530011
 440              		.cfi_endproc
 441              	.LFE4865:
 443              		.section	.text._ZN4STFT7ProcessERK10ParametersPKfPfjj,"ax",%progbits
 444              		.align	1
 445              		.p2align 2,,3
 446              		.global	_ZN4STFT7ProcessERK10ParametersPKfPfjj
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv5-d16
 452              	_ZN4STFT7ProcessERK10ParametersPKfPfjj:
 453              	.LVL24:
 454              	.LFB4867:
  87:dsp/pvoc/stft.cpp **** 
  88:dsp/pvoc/stft.cpp **** void STFT::Process(const Parameters& parameters,
  89:dsp/pvoc/stft.cpp ****                    const float*      input,
  90:dsp/pvoc/stft.cpp ****                    float*            output,
  91:dsp/pvoc/stft.cpp ****                    size_t            size,
  92:dsp/pvoc/stft.cpp ****                    size_t            stride)
  93:dsp/pvoc/stft.cpp **** {
 455              		.loc 1 93 1 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 8, pretend = 0, frame = 8
 458              		@ frame_needed = 0, uses_anonymous_args = 0
  94:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 459              		.loc 1 94 5 view .LVU127
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 460              		.loc 1 93 1 is_stmt 0 view .LVU128
 461 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 462              		.cfi_def_cfa_offset 36
 463              		.cfi_offset 4, -36
 464              		.cfi_offset 5, -32
 465              		.cfi_offset 6, -28
 466              		.cfi_offset 7, -24
 467              		.cfi_offset 8, -20
 468              		.cfi_offset 9, -16
 469              		.cfi_offset 10, -12
 470              		.cfi_offset 11, -8
 471              		.cfi_offset 14, -4
 472 0004 83B0     		sub	sp, sp, #12
 473              		.cfi_def_cfa_offset 48
 474              		.loc 1 94 17 view .LVU129
 475 0006 8164     		str	r1, [r0, #72]
  93:dsp/pvoc/stft.cpp ****     parameters_ = &parameters;
 476              		.loc 1 93 1 view .LVU130
 477 0008 DDF83090 		ldr	r9, [sp, #48]
  95:dsp/pvoc/stft.cpp ****     while(size)
 478              		.loc 1 95 5 is_stmt 1 view .LVU131
 479              		.loc 1 95 11 view .LVU132
 480 000c B9F1000F 		cmp	r9, #0
 481 0010 56D0     		beq	.L22
 482 0012 9B46     		mov	fp, r3
 483              	.LBB290:
  96:dsp/pvoc/stft.cpp ****     {
  97:dsp/pvoc/stft.cpp ****         size_t processed = min(size, hop_size_ - block_size_);
 484              		.loc 1 97 38 is_stmt 0 view .LVU133
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 44


 485 0014 C368     		ldr	r3, [r0, #12]
 486              	.LVL25:
 487              		.loc 1 97 38 view .LVU134
 488 0016 9246     		mov	r10, r2
 489 0018 8646     		mov	lr, r0
 490 001a 0093     		str	r3, [sp]
 491              	.LBB291:
 492              	.LBB292:
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
  99:dsp/pvoc/stft.cpp ****         {
 100:dsp/pvoc/stft.cpp ****             int32_t sample             = *input * 32768.0f;
 101:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 102:dsp/pvoc/stft.cpp ****             *output
 103:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 104:dsp/pvoc/stft.cpp ****             input += stride;
 493              		.loc 1 104 19 view .LVU135
 494 001c 0D9B     		ldr	r3, [sp, #52]
 495 001e 9E00     		lsls	r6, r3, #2
 496              	.LBE292:
 497              	.LBE291:
 105:dsp/pvoc/stft.cpp ****             output += stride;
 106:dsp/pvoc/stft.cpp ****         }
 107:dsp/pvoc/stft.cpp **** 
 108:dsp/pvoc/stft.cpp ****         block_size_ += processed;
 109:dsp/pvoc/stft.cpp ****         size -= processed;
 110:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 111:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 498              		.loc 1 111 27 view .LVU136
 499 0020 0369     		ldr	r3, [r0, #16]
 500 0022 0193     		str	r3, [sp, #4]
 501              	.LVL26:
 502              	.L24:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 503              		.loc 1 97 9 is_stmt 1 view .LVU137
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 504              		.loc 1 97 50 is_stmt 0 view .LVU138
 505 0024 DEF83CC0 		ldr	ip, [lr, #60]
 506              	.LVL27:
  97:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 507              		.loc 1 97 48 view .LVU139
 508 0028 009B     		ldr	r3, [sp]
 509 002a A3EB0C00 		sub	r0, r3, ip
 510 002e 4845     		cmp	r0, r9
 511 0030 28BF     		it	cs
 512 0032 4846     		movcs	r0, r9
 513              	.LVL28:
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 514              		.loc 1 98 9 is_stmt 1 view .LVU140
 515              	.LBB297:
  98:dsp/pvoc/stft.cpp ****         for(size_t i = 0; i < processed; ++i)
 516              		.loc 1 98 29 view .LVU141
 517 0034 0028     		cmp	r0, #0
 518 0036 4CD0     		beq	.L25
 519              	.LBB293:
 101:dsp/pvoc/stft.cpp ****             *output
 520              		.loc 1 101 23 is_stmt 0 view .LVU142
 521 0038 DEF83420 		ldr	r2, [lr, #52]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 45


 103:dsp/pvoc/stft.cpp ****             input += stride;
 522              		.loc 1 103 38 view .LVU143
 523 003c 5C46     		mov	r4, fp
 101:dsp/pvoc/stft.cpp ****             *output
 524              		.loc 1 101 13 view .LVU144
 525 003e DEF82C70 		ldr	r7, [lr, #44]
 103:dsp/pvoc/stft.cpp ****             input += stride;
 526              		.loc 1 103 38 view .LVU145
 527 0042 5146     		mov	r1, r10
 528 0044 5500     		lsls	r5, r2, #1
 529 0046 02EB0008 		add	r8, r2, r0
 530 004a DEF83030 		ldr	r3, [lr, #48]
 531 004e 07EB4202 		add	r2, r7, r2, lsl #1
 532 0052 023D     		subs	r5, r5, #2
 533 0054 07EB4807 		add	r7, r7, r8, lsl #1
 534 0058 1D44     		add	r5, r5, r3
 535              	.LVL29:
 536              	.L26:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 537              		.loc 1 100 13 is_stmt 1 discriminator 2 view .LVU146
 101:dsp/pvoc/stft.cpp ****             *output
 538              		.loc 1 101 13 discriminator 2 view .LVU147
 101:dsp/pvoc/stft.cpp ****             *output
 539              		.loc 1 101 13 is_stmt 0 discriminator 2 view .LVU148
 540              	.LBE293:
 541              	.LBE297:
 542              	.LBE290:
 543              		.file 4 "./stmtemp.h"
   1:./stmtemp.h   **** #include "daisy.h"
   2:./stmtemp.h   **** #include "daisysp.h"
   3:./stmtemp.h   **** #include "resources.h"
   4:./stmtemp.h   **** 
   5:./stmtemp.h   **** using namespace daisy;
   6:./stmtemp.h   **** using namespace daisysp;
   7:./stmtemp.h   **** 
   8:./stmtemp.h   **** #define MAKE_INTEGRAL_FRACTIONAL(x)                   \
   9:./stmtemp.h   ****     int32_t x##_integral   = static_cast<int32_t>(x); \
  10:./stmtemp.h   ****     float   x##_fractional = x - static_cast<float>(x##_integral);
  11:./stmtemp.h   **** 
  12:./stmtemp.h   **** #define SLOPE(out, in, positive, negative)                \
  13:./stmtemp.h   ****     {                                                     \
  14:./stmtemp.h   ****         float error = (in)-out;                           \
  15:./stmtemp.h   ****         out += (error > 0 ? positive : negative) * error; \
  16:./stmtemp.h   ****     }
  17:./stmtemp.h   **** 
  18:./stmtemp.h   **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in)-out);
  19:./stmtemp.h   **** 
  20:./stmtemp.h   **** #define CONSTRAIN(var, min, max) \
  21:./stmtemp.h   ****     if(var < (min))              \
  22:./stmtemp.h   ****     {                            \
  23:./stmtemp.h   ****         var = (min);             \
  24:./stmtemp.h   ****     }                            \
  25:./stmtemp.h   ****     else if(var > (max))         \
  26:./stmtemp.h   ****     {                            \
  27:./stmtemp.h   ****         var = (max);             \
  28:./stmtemp.h   ****     }
  29:./stmtemp.h   **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 46


  30:./stmtemp.h   **** #define JOIN(lhs, rhs) JOIN_1(lhs, rhs)
  31:./stmtemp.h   **** #define JOIN_1(lhs, rhs) JOIN_2(lhs, rhs)
  32:./stmtemp.h   **** #define JOIN_2(lhs, rhs) lhs##rhs
  33:./stmtemp.h   **** 
  34:./stmtemp.h   **** #define STATIC_ASSERT(expression, message)                                  \
  35:./stmtemp.h   ****     struct JOIN(__static_assertion_at_line_, __LINE__)                      \
  36:./stmtemp.h   ****     {                                                                       \
  37:./stmtemp.h   ****         impl::StaticAssertion<static_cast<bool>((expression))>              \
  38:./stmtemp.h   ****             JOIN(JOIN(JOIN(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), \
  39:./stmtemp.h   ****                  message);                                                  \
  40:./stmtemp.h   ****     };
  41:./stmtemp.h   **** 
  42:./stmtemp.h   **** namespace impl
  43:./stmtemp.h   **** {
  44:./stmtemp.h   **** template <bool>
  45:./stmtemp.h   **** struct StaticAssertion;
  46:./stmtemp.h   **** 
  47:./stmtemp.h   **** template <>
  48:./stmtemp.h   **** struct StaticAssertion<true>
  49:./stmtemp.h   **** {
  50:./stmtemp.h   **** }; // StaticAssertion<true>
  51:./stmtemp.h   **** 
  52:./stmtemp.h   **** template <int i>
  53:./stmtemp.h   **** struct StaticAssertionTest
  54:./stmtemp.h   **** {
  55:./stmtemp.h   **** }; // StaticAssertionTest<int>
  56:./stmtemp.h   **** 
  57:./stmtemp.h   **** } // namespace impl
  58:./stmtemp.h   **** 
  59:./stmtemp.h   **** template <uint32_t a, uint32_t b, uint32_t c, uint32_t d>
  60:./stmtemp.h   **** struct FourCC
  61:./stmtemp.h   **** {
  62:./stmtemp.h   ****     static const uint32_t value = (((((d << 8) | c) << 8) | b) << 8) | a;
  63:./stmtemp.h   **** };
  64:./stmtemp.h   **** 
  65:./stmtemp.h   **** class CosineOscillator
  66:./stmtemp.h   **** {
  67:./stmtemp.h   ****   public:
  68:./stmtemp.h   ****     CosineOscillator() {}
  69:./stmtemp.h   ****     ~CosineOscillator() {}
  70:./stmtemp.h   **** 
  71:./stmtemp.h   ****     void Init(float freq)
  72:./stmtemp.h   ****     {
  73:./stmtemp.h   ****         float sample_rate = 48000; //hardcoded for now
  74:./stmtemp.h   ****         phs_inc_          = freq / sample_rate;
  75:./stmtemp.h   ****     }
  76:./stmtemp.h   **** 
  77:./stmtemp.h   ****     float Next()
  78:./stmtemp.h   ****     {
  79:./stmtemp.h   ****         phs_ += phs_inc_;
  80:./stmtemp.h   **** 
  81:./stmtemp.h   ****         if(phs_ >= 1.f)
  82:./stmtemp.h   ****         {
  83:./stmtemp.h   ****             phs_ -= 1.f;
  84:./stmtemp.h   ****         }
  85:./stmtemp.h   **** 
  86:./stmtemp.h   ****         value_ = cos(phs_);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 47


  87:./stmtemp.h   **** 
  88:./stmtemp.h   ****         return value_;
  89:./stmtemp.h   ****     }
  90:./stmtemp.h   **** 
  91:./stmtemp.h   ****     float value() { return value_; }
  92:./stmtemp.h   **** 
  93:./stmtemp.h   ****   private:
  94:./stmtemp.h   ****     float value_ = 0.f;
  95:./stmtemp.h   ****     float sample_rate_;
  96:./stmtemp.h   ****     float phs_ = 0.f;
  97:./stmtemp.h   ****     float phs_inc_;
  98:./stmtemp.h   **** };
  99:./stmtemp.h   **** 
 100:./stmtemp.h   **** inline int32_t Clip16(int32_t x)
 101:./stmtemp.h   **** {
 102:./stmtemp.h   ****     if(x < -32768)
 544              		.loc 4 102 5 is_stmt 1 discriminator 2 view .LVU149
 545              	.LBB299:
 546              	.LBB298:
 547              	.LBB294:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 548              		.loc 1 100 49 is_stmt 0 discriminator 2 view .LVU150
 549 005a D1ED007A 		vldr.32	s15, [r1]
 104:dsp/pvoc/stft.cpp ****             output += stride;
 550              		.loc 1 104 19 discriminator 2 view .LVU151
 551 005e 3144     		add	r1, r1, r6
 552              	.LVL30:
 100:dsp/pvoc/stft.cpp ****             analysis_[buffer_ptr_ + i] = Clip16(sample);
 553              		.loc 1 100 21 discriminator 2 view .LVU152
 554 0060 B0EE677A 		vmov.f32	s14, s15
 555 0064 BEEEE87A 		vcvt.s32.f32	s14, s14, #15
 556 0068 17EE103A 		vmov	r3, s14	@ int
 101:dsp/pvoc/stft.cpp ****             *output
 557              		.loc 1 101 40 discriminator 2 view .LVU153
 558 006c 03F30F03 		ssat	r3, #16, r3
 559 0070 22F8023B 		strh	r3, [r2], #2	@ movhi
 102:dsp/pvoc/stft.cpp ****                 = static_cast<float>(synthesis_[buffer_ptr_ + i]) / 16384.0f;
 560              		.loc 1 102 13 is_stmt 1 discriminator 2 view .LVU154
 561              	.LBE294:
  98:dsp/pvoc/stft.cpp ****         {
 562              		.loc 1 98 29 is_stmt 0 discriminator 2 view .LVU155
 563 0074 9742     		cmp	r7, r2
 564              	.LBB295:
 103:dsp/pvoc/stft.cpp ****             input += stride;
 565              		.loc 1 103 19 discriminator 2 view .LVU156
 566 0076 35F9023F 		ldrsh	r3, [r5, #2]!
 567 007a 07EE903A 		vmov	s15, r3	@ int
 568              	.LVL31:
 103:dsp/pvoc/stft.cpp ****             input += stride;
 569              		.loc 1 103 67 discriminator 2 view .LVU157
 570 007e FAEEC97A 		vcvt.f32.s32	s15, s15, #14
 103:dsp/pvoc/stft.cpp ****             input += stride;
 571              		.loc 1 103 17 discriminator 2 view .LVU158
 572 0082 C4ED007A 		vstr.32	s15, [r4]
 104:dsp/pvoc/stft.cpp ****             output += stride;
 573              		.loc 1 104 13 is_stmt 1 discriminator 2 view .LVU159
 574              	.LVL32:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 48


 105:dsp/pvoc/stft.cpp ****         }
 575              		.loc 1 105 13 discriminator 2 view .LVU160
 105:dsp/pvoc/stft.cpp ****         }
 576              		.loc 1 105 20 is_stmt 0 discriminator 2 view .LVU161
 577 0086 3444     		add	r4, r4, r6
 578              	.LVL33:
 105:dsp/pvoc/stft.cpp ****         }
 579              		.loc 1 105 20 discriminator 2 view .LVU162
 580              	.LBE295:
  98:dsp/pvoc/stft.cpp ****         {
 581              		.loc 1 98 9 is_stmt 1 discriminator 2 view .LVU163
  98:dsp/pvoc/stft.cpp ****         {
 582              		.loc 1 98 29 discriminator 2 view .LVU164
 583 0088 E7D1     		bne	.L26
 584 008a 00FB06F3 		mul	r3, r0, r6
 585              	.LBB296:
 104:dsp/pvoc/stft.cpp ****             output += stride;
 586              		.loc 1 104 19 is_stmt 0 view .LVU165
 587 008e 9A44     		add	r10, r10, r3
 105:dsp/pvoc/stft.cpp ****         }
 588              		.loc 1 105 20 view .LVU166
 589 0090 9B44     		add	fp, fp, r3
 590              	.LVL34:
 591              	.L27:
 105:dsp/pvoc/stft.cpp ****         }
 592              		.loc 1 105 20 view .LVU167
 593              	.LBE296:
 594              	.LBE298:
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 595              		.loc 1 108 9 is_stmt 1 view .LVU168
 596              		.loc 1 111 9 is_stmt 0 view .LVU169
 597 0092 019B     		ldr	r3, [sp, #4]
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 598              		.loc 1 108 21 view .LVU170
 599 0094 0CEB0002 		add	r2, ip, r0
 109:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 600              		.loc 1 109 14 view .LVU171
 601 0098 A9EB0009 		sub	r9, r9, r0
 602              		.loc 1 111 9 view .LVU172
 603 009c 9845     		cmp	r8, r3
 108:dsp/pvoc/stft.cpp ****         size -= processed;
 604              		.loc 1 108 21 view .LVU173
 605 009e CEF83C20 		str	r2, [lr, #60]
 109:dsp/pvoc/stft.cpp ****         buffer_ptr_ += processed;
 606              		.loc 1 109 9 is_stmt 1 view .LVU174
 607              	.LVL35:
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 608              		.loc 1 110 9 view .LVU175
 609              		.loc 1 111 9 view .LVU176
 610 00a2 10D2     		bcs	.L28
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 611              		.loc 1 110 21 is_stmt 0 view .LVU177
 612 00a4 CEF83480 		str	r8, [lr, #52]
 613              	.L29:
 112:dsp/pvoc/stft.cpp ****         {
 113:dsp/pvoc/stft.cpp ****             buffer_ptr_ -= buffer_size_;
 114:dsp/pvoc/stft.cpp ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 49


 115:dsp/pvoc/stft.cpp ****         if(block_size_ >= hop_size_)
 614              		.loc 1 115 9 is_stmt 1 view .LVU178
 615 00a8 0099     		ldr	r1, [sp]
 616 00aa 9142     		cmp	r1, r2
 617 00ac 05D8     		bhi	.L30
 116:dsp/pvoc/stft.cpp ****         {
 117:dsp/pvoc/stft.cpp ****             block_size_ -= hop_size_;
 618              		.loc 1 117 13 view .LVU179
 118:dsp/pvoc/stft.cpp ****             ++ready_;
 619              		.loc 1 118 13 is_stmt 0 view .LVU180
 620 00ae DEF84030 		ldr	r3, [lr, #64]
 117:dsp/pvoc/stft.cpp ****             ++ready_;
 621              		.loc 1 117 25 view .LVU181
 622 00b2 521A     		subs	r2, r2, r1
 623              		.loc 1 118 13 view .LVU182
 624 00b4 0133     		adds	r3, r3, #1
 625 00b6 CEE90F23 		strd	r2, r3, [lr, #60]
 626              	.L30:
 627              	.LVL36:
 628              		.loc 1 118 13 view .LVU183
 629              	.LBE299:
  95:dsp/pvoc/stft.cpp ****     {
 630              		.loc 1 95 5 is_stmt 1 view .LVU184
  95:dsp/pvoc/stft.cpp ****     {
 631              		.loc 1 95 11 view .LVU185
 632 00ba B9F1000F 		cmp	r9, #0
 633 00be B1D1     		bne	.L24
 634              	.LVL37:
 635              	.L22:
 119:dsp/pvoc/stft.cpp ****         }
 120:dsp/pvoc/stft.cpp ****     }
 121:dsp/pvoc/stft.cpp **** }
 636              		.loc 1 121 1 is_stmt 0 view .LVU186
 637 00c0 03B0     		add	sp, sp, #12
 638              		.cfi_remember_state
 639              		.cfi_def_cfa_offset 36
 640              		@ sp needed
 641 00c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 642              	.LVL38:
 643              	.L28:
 644              		.cfi_restore_state
 645              	.LBB300:
 113:dsp/pvoc/stft.cpp ****         }
 646              		.loc 1 113 13 is_stmt 1 view .LVU187
 113:dsp/pvoc/stft.cpp ****         }
 647              		.loc 1 113 25 is_stmt 0 view .LVU188
 648 00c6 019B     		ldr	r3, [sp, #4]
 649 00c8 A8EB0303 		sub	r3, r8, r3
 650 00cc CEF83430 		str	r3, [lr, #52]
 651 00d0 EAE7     		b	.L29
 652              	.LVL39:
 653              	.L25:
 110:dsp/pvoc/stft.cpp ****         if(buffer_ptr_ >= buffer_size_)
 654              		.loc 1 110 21 view .LVU189
 655 00d2 DEF83480 		ldr	r8, [lr, #52]
 656 00d6 DCE7     		b	.L27
 657              	.LBE300:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 50


 658              		.cfi_endproc
 659              	.LFE4867:
 661              		.section	.text._ZN4STFT6BufferEv,"ax",%progbits
 662              		.align	1
 663              		.p2align 2,,3
 664              		.global	_ZN4STFT6BufferEv
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-d16
 670              	_ZN4STFT6BufferEv:
 671              	.LVL40:
 672              	.LFB4868:
 122:dsp/pvoc/stft.cpp **** 
 123:dsp/pvoc/stft.cpp **** void STFT::Buffer()
 124:dsp/pvoc/stft.cpp **** {
 673              		.loc 1 124 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 72
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 125:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 677              		.loc 1 125 5 view .LVU191
 678 0000 D0E91023 		ldrd	r2, r3, [r0, #64]
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 679              		.loc 1 124 1 is_stmt 0 view .LVU192
 680 0004 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 681              		.cfi_def_cfa_offset 36
 682              		.cfi_offset 4, -36
 683              		.cfi_offset 5, -32
 684              		.cfi_offset 6, -28
 685              		.cfi_offset 7, -24
 686              		.cfi_offset 8, -20
 687              		.cfi_offset 9, -16
 688              		.cfi_offset 10, -12
 689              		.cfi_offset 11, -8
 690              		.cfi_offset 14, -4
 691              		.loc 1 125 5 view .LVU193
 692 0008 9A42     		cmp	r2, r3
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 693              		.loc 1 124 1 view .LVU194
 694 000a 93B0     		sub	sp, sp, #76
 695              		.cfi_def_cfa_offset 112
 124:dsp/pvoc/stft.cpp ****     if(ready_ == done_)
 696              		.loc 1 124 1 view .LVU195
 697 000c 0F90     		str	r0, [sp, #60]
 698              		.loc 1 125 5 view .LVU196
 699 000e 00F0C883 		beq	.L39
 126:dsp/pvoc/stft.cpp ****     {
 127:dsp/pvoc/stft.cpp ****         return;
 128:dsp/pvoc/stft.cpp ****     }
 129:dsp/pvoc/stft.cpp **** 
 130:dsp/pvoc/stft.cpp ****     // Copy block to FFT buffer and apply window.
 131:dsp/pvoc/stft.cpp ****     size_t       source_ptr = process_ptr_;
 700              		.loc 1 131 5 is_stmt 1 view .LVU197
 701              	.LBB434:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 133:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 51


 702              		.loc 1 133 27 is_stmt 0 view .LVU198
 703 0012 D0F804C0 		ldr	ip, [r0, #4]
 704 0016 0146     		mov	r1, r0
 705              	.LBE434:
 131:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 706              		.loc 1 131 18 view .LVU199
 707 0018 836B     		ldr	r3, [r0, #56]
 708              	.LVL41:
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 709              		.loc 1 132 5 is_stmt 1 view .LVU200
 132:dsp/pvoc/stft.cpp ****     const float* w          = window_;
 710              		.loc 1 132 18 is_stmt 0 view .LVU201
 711 001a 406A     		ldr	r0, [r0, #36]
 712              	.LVL42:
 713              		.loc 1 133 5 is_stmt 1 view .LVU202
 714              	.LBB435:
 715              		.loc 1 133 25 view .LVU203
 716 001c BCF1000F 		cmp	ip, #0
 717 0020 00F0D386 		beq	.L151
 134:dsp/pvoc/stft.cpp ****     {
 135:dsp/pvoc/stft.cpp ****         fft_in_[i] = w[0] * analysis_[source_ptr];
 718              		.loc 1 135 29 is_stmt 0 view .LVU204
 719 0024 0F9A     		ldr	r2, [sp, #60]
 720              		.loc 1 135 9 view .LVU205
 721 0026 5169     		ldr	r1, [r2, #20]
 722              	.LVL43:
 136:dsp/pvoc/stft.cpp ****         ++source_ptr;
 137:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 138:dsp/pvoc/stft.cpp ****         {
 139:dsp/pvoc/stft.cpp ****             source_ptr -= buffer_size_;
 140:dsp/pvoc/stft.cpp ****         }
 141:dsp/pvoc/stft.cpp ****         w += window_stride_;
 723              		.loc 1 141 11 view .LVU206
 724 0028 956A     		ldr	r5, [r2, #40]
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 725              		.loc 1 135 29 view .LVU207
 726 002a D76A     		ldr	r7, [r2, #44]
 727 002c 01EB8C06 		add	r6, r1, ip, lsl #2
 137:dsp/pvoc/stft.cpp ****         {
 728              		.loc 1 137 26 view .LVU208
 729 0030 1469     		ldr	r4, [r2, #16]
 730              		.loc 1 141 11 view .LVU209
 731 0032 AD00     		lsls	r5, r5, #2
 732 0034 0A46     		mov	r2, r1
 733              	.LVL44:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 734              		.loc 1 135 9 view .LVU210
 735 0036 0D91     		str	r1, [sp, #52]
 736              	.LVL45:
 737              	.L45:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 738              		.loc 1 135 9 is_stmt 1 view .LVU211
 139:dsp/pvoc/stft.cpp ****         }
 739              		.loc 1 139 13 view .LVU212
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 740              		.loc 1 135 27 is_stmt 0 view .LVU213
 741 0038 37F913E0 		ldrsh	lr, [r7, r3, lsl #1]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 52


 136:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 742              		.loc 1 136 9 view .LVU214
 743 003c 0133     		adds	r3, r3, #1
 744              	.LVL46:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 745              		.loc 1 135 27 view .LVU215
 746 003e 90ED007A 		vldr.32	s14, [r0]
 747              		.loc 1 141 11 view .LVU216
 748 0042 2844     		add	r0, r0, r5
 749              	.LVL47:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 750              		.loc 1 135 27 view .LVU217
 751 0044 07EE90EA 		vmov	s15, lr	@ int
 137:dsp/pvoc/stft.cpp ****         {
 752              		.loc 1 137 9 view .LVU218
 753 0048 9C42     		cmp	r4, r3
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 754              		.loc 1 135 27 view .LVU219
 755 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 139:dsp/pvoc/stft.cpp ****         }
 756              		.loc 1 139 24 view .LVU220
 757 004e 98BF     		it	ls
 758 0050 1B1B     		subls	r3, r3, r4
 759              	.LVL48:
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 760              		.loc 1 135 27 view .LVU221
 761 0052 67EE877A 		vmul.f32	s15, s15, s14
 135:dsp/pvoc/stft.cpp ****         ++source_ptr;
 762              		.loc 1 135 20 view .LVU222
 763 0056 E1EC017A 		vstmia.32	r1!, {s15}
 136:dsp/pvoc/stft.cpp ****         if(source_ptr >= buffer_size_)
 764              		.loc 1 136 9 is_stmt 1 view .LVU223
 137:dsp/pvoc/stft.cpp ****         {
 765              		.loc 1 137 9 view .LVU224
 766              	.LVL49:
 767              		.loc 1 141 9 view .LVU225
 133:dsp/pvoc/stft.cpp ****     {
 768              		.loc 1 133 5 view .LVU226
 133:dsp/pvoc/stft.cpp ****     {
 769              		.loc 1 133 25 view .LVU227
 770 005a 8E42     		cmp	r6, r1
 771 005c ECD1     		bne	.L45
 772              	.LBE435:
 142:dsp/pvoc/stft.cpp ****     }
 143:dsp/pvoc/stft.cpp **** 
 144:dsp/pvoc/stft.cpp ****     // Compute FFT. fft_in is lost.
 145:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 146:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, fft_in_, fft_out_, 0);
 147:dsp/pvoc/stft.cpp ****     copy(&fft_out_[0], &fft_out_[fft_size_], &fft_in_[0]);
 148:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 149:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 150:dsp/pvoc/stft.cpp ****     {
 151:dsp/pvoc/stft.cpp ****         fft_out_[i]                 = fft_in_[2 * i];
 152:dsp/pvoc/stft.cpp ****         fft_out_[i + fft_size_ / 2] = fft_in_[2 * i + 1];
 153:dsp/pvoc/stft.cpp ****     }
 154:dsp/pvoc/stft.cpp **** #else
 155:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 53


 773              		.loc 1 155 5 view .LVU228
 774 005e BCF5805F 		cmp	ip, #4096
 775 0062 00F0A183 		beq	.L46
 776              	.LVL50:
 777              	.L43:
 156:dsp/pvoc/stft.cpp ****     {
 157:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_, fft_num_passes_);
 778              		.loc 1 157 9 view .LVU229
 779              		.loc 1 157 21 is_stmt 0 view .LVU230
 780 0066 0F9A     		ldr	r2, [sp, #60]
 781              	.LBB436:
 782              	.LBB437:
 783              	.LBB438:
 784              	.LBB439:
 421:./shy_fft.h   ****         // First and second pass.
 785              		.loc 3 421 29 view .LVU231
 786 0068 0123     		movs	r3, #1
 787              	.LBE439:
 788              	.LBE438:
 789              	.LBE437:
 790              	.LBE436:
 791              		.loc 1 157 21 view .LVU232
 792 006a 9168     		ldr	r1, [r2, #8]
 793 006c 9069     		ldr	r0, [r2, #24]
 794              	.LVL51:
 795              	.LBB512:
 796              	.LBB506:
 797              	.LBB500:
 798              	.LBB494:
 799              	.LBB440:
 424:./shy_fft.h   ****         {
 800              		.loc 3 424 29 view .LVU233
 801 006e 13FA01F4 		lsls	r4, r3, r1
 802              	.LBE440:
 803              	.LBE494:
 804              	.LBE500:
 805              	.LBE506:
 806              	.LBE512:
 807              		.loc 1 157 9 view .LVU234
 808 0072 D2F800A0 		ldr	r10, [r2]
 809              	.LVL52:
 810              		.loc 1 157 21 view .LVU235
 811 0076 1091     		str	r1, [sp, #64]
 812 0078 1190     		str	r0, [sp, #68]
 813              	.LVL53:
 814              	.LBB513:
 815              	.LBI436:
 834:./shy_fft.h   ****         {
 835:./shy_fft.h   ****             uint8_t byte        = 0;
 836:./shy_fft.h   ****             uint8_t source      = i << 2;
 837:./shy_fft.h   ****             uint8_t destination = static_cast<uint8_t>(size >> 1);
 838:./shy_fft.h   ****             while(source)
 839:./shy_fft.h   ****             {
 840:./shy_fft.h   ****                 if(source & 1)
 841:./shy_fft.h   ****                 {
 842:./shy_fft.h   ****                     byte |= destination;
 843:./shy_fft.h   ****                 }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 54


 844:./shy_fft.h   ****                 destination >>= 1;
 845:./shy_fft.h   ****                 source >>= 1;
 846:./shy_fft.h   ****             }
 847:./shy_fft.h   ****             bit_rev_[i] = byte;
 848:./shy_fft.h   ****         }
 849:./shy_fft.h   ****         phasor_.Init();
 850:./shy_fft.h   ****     }
 851:./shy_fft.h   **** 
 852:./shy_fft.h   ****     void Direct(T* input, T* output)
 853:./shy_fft.h   ****     {
 854:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 855:./shy_fft.h   ****         d(input,
 856:./shy_fft.h   ****           output,
 857:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 858:./shy_fft.h   ****           &phasor_);
 859:./shy_fft.h   ****     }
 860:./shy_fft.h   **** 
 861:./shy_fft.h   ****     void Inverse(T* input, T* output)
 862:./shy_fft.h   ****     {
 863:./shy_fft.h   ****         InverseTransform<T, num_passes, Phasor<T, num_passes>> i;
 864:./shy_fft.h   ****         i(input,
 865:./shy_fft.h   ****           output,
 866:./shy_fft.h   ****           num_passes <= 8 ? &bit_rev_[0] : bit_rev_256_lut_,
 867:./shy_fft.h   ****           &phasor_);
 868:./shy_fft.h   ****     }
 869:./shy_fft.h   **** 
 870:./shy_fft.h   ****     void Direct(T* input, T* output, size_t n)
 816              		.loc 3 870 10 is_stmt 1 view .LVU236
 817              	.LBB507:
 818              	.LBB501:
 819              	.LBI438:
 412:./shy_fft.h   ****                     T*             output,
 820              		.loc 3 412 10 view .LVU237
 821              	.LBB495:
 822              	.LBB447:
 424:./shy_fft.h   ****         {
 823              		.loc 3 424 29 view .LVU238
 824 007a 0894     		str	r4, [sp, #32]
 825 007c 00F09F80 		beq	.L47
 826              	.LBB441:
 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 827              		.loc 3 429 43 is_stmt 0 view .LVU239
 828 0080 A708     		lsrs	r7, r4, #2
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 829              		.loc 3 428 32 view .LVU240
 830 0082 0022     		movs	r2, #0
 831              	.LVL54:
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 832              		.loc 3 428 32 view .LVU241
 833 0084 C1F11008 		rsb	r8, r1, #16
 834              	.LBE441:
 424:./shy_fft.h   ****         {
 835              		.loc 3 424 20 view .LVU242
 836 0088 A346     		mov	fp, r4
 837 008a 00F11001 		add	r1, r0, #16
 838              	.LVL55:
 839              	.LBB442:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 55


 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 840              		.loc 3 429 32 view .LVU243
 841 008e 07FA03F9 		lsl	r9, r7, r3
 842              	.LBE442:
 424:./shy_fft.h   ****         {
 843              		.loc 3 424 20 view .LVU244
 844 0092 1046     		mov	r0, r2
 845              	.LVL56:
 846              	.LBB443:
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 847              		.loc 3 428 32 view .LVU245
 848 0094 1346     		mov	r3, r2
 849              	.LBE443:
 424:./shy_fft.h   ****         {
 850              		.loc 3 424 20 view .LVU246
 851 0096 BC46     		mov	ip, r7
 852 0098 0D9C     		ldr	r4, [sp, #52]
 853              	.LVL57:
 424:./shy_fft.h   ****         {
 854              		.loc 3 424 20 view .LVU247
 855 009a CDF800A0 		str	r10, [sp]
 856 009e 03E0     		b	.L49
 857              	.LVL58:
 858              	.L152:
 859              	.LBB444:
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 860              		.loc 3 427 45 view .LVU248
 861 00a0 1AF80730 		ldrb	r3, [r10, r7]	@ zero_extendqisi2
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 862              		.loc 3 427 69 view .LVU249
 863 00a4 1EF80720 		ldrb	r2, [lr, r7]	@ zero_extendqisi2
 864              	.LVL59:
 865              	.L49:
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 866              		.loc 3 427 53 view .LVU250
 867 00a8 42EA0323 		orr	r3, r2, r3, lsl #8
 868              	.LBE444:
 424:./shy_fft.h   ****         {
 869              		.loc 3 424 42 view .LVU251
 870 00ac 0430     		adds	r0, r0, #4
 871              	.LVL60:
 424:./shy_fft.h   ****         {
 872              		.loc 3 424 29 view .LVU252
 873 00ae 1031     		adds	r1, r1, #16
 874              	.LVL61:
 875              	.LBB445:
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 876              		.loc 3 427 45 view .LVU253
 877 00b0 B54F     		ldr	r7, .L159
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 878              		.loc 3 428 25 view .LVU254
 879 00b2 43FA08F3 		asr	r3, r3, r8
 880              	.LVL62:
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 881              		.loc 3 428 25 view .LVU255
 882              	.LBE445:
 424:./shy_fft.h   ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 56


 883              		.loc 3 424 29 view .LVU256
 884 00b6 8345     		cmp	fp, r0
 885              	.LBB446:
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 886              		.loc 3 427 39 view .LVU257
 887 00b8 5FFA80FA 		uxtb	r10, r0
 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 888              		.loc 3 429 20 view .LVU258
 889 00bc 03EB0902 		add	r2, r3, r9
 890              	.LVL63:
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 891              		.loc 3 433 21 view .LVU259
 892 00c0 04EB8306 		add	r6, r4, r3, lsl #2
 430:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 893              		.loc 3 430 20 view .LVU260
 894 00c4 6344     		add	r3, r3, ip
 895              	.LVL64:
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 896              		.loc 3 427 65 view .LVU261
 897 00c6 4FEA102E 		lsr	lr, r0, #8
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 898              		.loc 3 433 29 view .LVU262
 899 00ca 04EB8205 		add	r5, r4, r2, lsl #2
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 900              		.loc 3 433 26 view .LVU263
 901 00ce D6ED007A 		vldr.32	s15, [r6]
 431:./shy_fft.h   **** 
 902              		.loc 3 431 20 view .LVU264
 903 00d2 6244     		add	r2, r2, ip
 904              	.LVL65:
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 905              		.loc 3 434 21 view .LVU265
 906 00d4 04EB8303 		add	r3, r4, r3, lsl #2
 907              	.LVL66:
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 908              		.loc 3 433 26 view .LVU266
 909 00d8 95ED007A 		vldr.32	s14, [r5]
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 910              		.loc 3 434 29 view .LVU267
 911 00dc 04EB8202 		add	r2, r4, r2, lsl #2
 912              	.LVL67:
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 913              		.loc 3 433 26 view .LVU268
 914 00e0 77EEC77A 		vsub.f32	s15, s15, s14
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 915              		.loc 3 433 18 view .LVU269
 916 00e4 41ED077A 		vstr.32	s15, [r1, #-28]
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 917              		.loc 3 434 26 view .LVU270
 918 00e8 92ED007A 		vldr.32	s14, [r2]
 919 00ec D3ED007A 		vldr.32	s15, [r3]
 920 00f0 77EEC77A 		vsub.f32	s15, s15, s14
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 921              		.loc 3 434 18 view .LVU271
 922 00f4 41ED057A 		vstr.32	s15, [r1, #-20]
 436:./shy_fft.h   ****             d[0] = a + b;
 923              		.loc 3 436 15 view .LVU272
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 57


 924 00f8 D2ED006A 		vldr.32	s13, [r2]
 435:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 925              		.loc 3 435 15 view .LVU273
 926 00fc D6ED007A 		vldr.32	s15, [r6]
 927 0100 95ED006A 		vldr.32	s12, [r5]
 436:./shy_fft.h   ****             d[0] = a + b;
 928              		.loc 3 436 15 view .LVU274
 929 0104 93ED007A 		vldr.32	s14, [r3]
 435:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 930              		.loc 3 435 15 view .LVU275
 931 0108 77EE867A 		vadd.f32	s15, s15, s12
 932              	.LVL68:
 436:./shy_fft.h   ****             d[0] = a + b;
 933              		.loc 3 436 15 view .LVU276
 934 010c 37EE267A 		vadd.f32	s14, s14, s13
 935              	.LVL69:
 437:./shy_fft.h   ****             d[2] = a - b;
 936              		.loc 3 437 22 view .LVU277
 937 0110 77EE876A 		vadd.f32	s13, s15, s14
 438:./shy_fft.h   ****             d += 4;
 938              		.loc 3 438 22 view .LVU278
 939 0114 77EEC77A 		vsub.f32	s15, s15, s14
 940              	.LVL70:
 437:./shy_fft.h   ****             d[2] = a - b;
 941              		.loc 3 437 18 view .LVU279
 942 0118 41ED086A 		vstr.32	s13, [r1, #-32]
 943              	.LVL71:
 438:./shy_fft.h   ****             d += 4;
 944              		.loc 3 438 18 view .LVU280
 945 011c 41ED067A 		vstr.32	s15, [r1, #-24]
 946              	.LVL72:
 438:./shy_fft.h   ****             d += 4;
 947              		.loc 3 438 18 view .LVU281
 948              	.LBE446:
 424:./shy_fft.h   ****         {
 949              		.loc 3 424 9 is_stmt 1 view .LVU282
 424:./shy_fft.h   ****         {
 950              		.loc 3 424 29 view .LVU283
 951 0120 BED8     		bhi	.L152
 952 0122 089B     		ldr	r3, [sp, #32]
 953 0124 119A     		ldr	r2, [sp, #68]
 954 0126 013B     		subs	r3, r3, #1
 955 0128 DDF800A0 		ldr	r10, [sp]
 956 012c 02F12000 		add	r0, r2, #32
 957              	.LVL73:
 424:./shy_fft.h   ****         {
 958              		.loc 3 424 29 is_stmt 0 view .LVU284
 959 0130 DB08     		lsrs	r3, r3, #3
 960 0132 00EB4310 		add	r0, r0, r3, lsl #5
 961 0136 1346     		mov	r3, r2
 962 0138 0D9A     		ldr	r2, [sp, #52]
 963              	.LVL74:
 964              	.L52:
 424:./shy_fft.h   ****         {
 965              		.loc 3 424 29 view .LVU285
 966              	.LBE447:
 967              	.LBB448:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 58


 968              	.LBB449:
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 969              		.loc 3 449 29 view .LVU286
 970 013a 93ED007A 		vldr.32	s14, [r3]
 971              	.LBE449:
 445:./shy_fft.h   ****         {
 972              		.loc 3 445 29 view .LVU287
 973 013e 2032     		adds	r2, r2, #32
 974              	.LBB450:
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 975              		.loc 3 449 29 view .LVU288
 976 0140 D3ED046A 		vldr.32	s13, [r3, #16]
 977              	.LBE450:
 445:./shy_fft.h   ****         {
 978              		.loc 3 445 29 view .LVU289
 979 0144 2033     		adds	r3, r3, #32
 980              	.LBB451:
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 981              		.loc 3 455 33 view .LVU290
 982 0146 DFED917A 		vldr.32	s15, .L159+4
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 983              		.loc 3 449 29 view .LVU291
 984 014a 37EE267A 		vadd.f32	s14, s14, s13
 985              	.LBE451:
 445:./shy_fft.h   ****         {
 986              		.loc 3 445 29 view .LVU292
 987 014e 8342     		cmp	r3, r0
 988              	.LBB452:
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 989              		.loc 3 449 22 view .LVU293
 990 0150 02ED087A 		vstr.32	s14, [r2, #-32]
 450:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 991              		.loc 3 450 29 view .LVU294
 992 0154 53ED046A 		vldr.32	s13, [r3, #-16]
 993 0158 13ED087A 		vldr.32	s14, [r3, #-32]
 994 015c 37EE667A 		vsub.f32	s14, s14, s13
 450:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 995              		.loc 3 450 22 view .LVU295
 996 0160 02ED047A 		vstr.32	s14, [r2, #-16]
 451:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 997              		.loc 3 451 25 view .LVU296
 998 0164 53F8181C 		ldr	r1, [r3, #-24]	@ float
 451:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 999              		.loc 3 451 22 view .LVU297
 1000 0168 42F8181C 		str	r1, [r2, #-24]	@ float
 452:./shy_fft.h   **** 
 1001              		.loc 3 452 25 view .LVU298
 1002 016c 53F8081C 		ldr	r1, [r3, #-8]	@ float
 452:./shy_fft.h   **** 
 1003              		.loc 3 452 22 view .LVU299
 1004 0170 42F8081C 		str	r1, [r2, #-8]	@ float
 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1005              		.loc 3 454 34 view .LVU300
 1006 0174 13ED016A 		vldr.32	s12, [r3, #-4]
 1007 0178 13ED037A 		vldr.32	s14, [r3, #-12]
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1008              		.loc 3 455 33 view .LVU301
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 59


 1009 017c 53ED076A 		vldr.32	s13, [r3, #-28]
 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1010              		.loc 3 454 34 view .LVU302
 1011 0180 37EE467A 		vsub.f32	s14, s14, s12
 1012              	.LVL75:
 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 1013              		.loc 3 454 34 view .LVU303
 1014              	.LBE452:
 1015              	.LBE448:
 1016              	.LBE495:
 1017              	.LBE501:
 1018              	.LBE507:
 1019              	.LBE513:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 1020              		.loc 3 138 41 is_stmt 1 view .LVU304
 1021              	.LBB514:
 1022              	.LBB508:
 1023              	.LBB502:
 1024              	.LBB496:
 1025              	.LBB455:
 1026              	.LBB453:
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1027              		.loc 3 455 33 is_stmt 0 view .LVU305
 1028 0184 E7EE276A 		vfma.f32	s13, s14, s15
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 1029              		.loc 3 455 22 view .LVU306
 1030 0188 42ED076A 		vstr.32	s13, [r2, #-28]
 456:./shy_fft.h   **** 
 1031              		.loc 3 456 33 view .LVU307
 1032 018c 53ED076A 		vldr.32	s13, [r3, #-28]
 1033 0190 E7EE676A 		vfms.f32	s13, s14, s15
 456:./shy_fft.h   **** 
 1034              		.loc 3 456 22 view .LVU308
 1035 0194 42ED056A 		vstr.32	s13, [r2, #-20]
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1036              		.loc 3 458 34 view .LVU309
 1037 0198 13ED037A 		vldr.32	s14, [r3, #-12]
 1038              	.LVL76:
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1039              		.loc 3 458 34 view .LVU310
 1040 019c 13ED016A 		vldr.32	s12, [r3, #-4]
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1041              		.loc 3 459 26 view .LVU311
 1042 01a0 53ED056A 		vldr.32	s13, [r3, #-20]
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1043              		.loc 3 458 34 view .LVU312
 1044 01a4 37EE067A 		vadd.f32	s14, s14, s12
 1045              	.LVL77:
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 1046              		.loc 3 458 34 view .LVU313
 1047              	.LBE453:
 1048              	.LBE455:
 1049              	.LBE496:
 1050              	.LBE502:
 1051              	.LBE508:
 1052              	.LBE514:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 60


 1053              		.loc 3 138 41 is_stmt 1 view .LVU314
 1054              	.LBB515:
 1055              	.LBB509:
 1056              	.LBB503:
 1057              	.LBB497:
 1058              	.LBB456:
 1059              	.LBB454:
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1060              		.loc 3 459 26 is_stmt 0 view .LVU315
 1061 01a8 E7EE276A 		vfma.f32	s13, s14, s15
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 1062              		.loc 3 459 22 view .LVU316
 1063 01ac 42ED036A 		vstr.32	s13, [r2, #-12]
 460:./shy_fft.h   ****         }
 1064              		.loc 3 460 26 view .LVU317
 1065 01b0 53ED056A 		vldr.32	s13, [r3, #-20]
 1066 01b4 D7EE276A 		vfnms.f32	s13, s14, s15
 460:./shy_fft.h   ****         }
 1067              		.loc 3 460 22 view .LVU318
 1068 01b8 42ED016A 		vstr.32	s13, [r2, #-4]
 1069              	.LBE454:
 445:./shy_fft.h   ****         {
 1070              		.loc 3 445 9 is_stmt 1 view .LVU319
 445:./shy_fft.h   ****         {
 1071              		.loc 3 445 29 view .LVU320
 1072 01bc BDD1     		bne	.L52
 1073              	.LVL78:
 1074              	.L47:
 445:./shy_fft.h   ****         {
 1075              		.loc 3 445 29 is_stmt 0 view .LVU321
 1076              	.LBE456:
 1077              	.LBB457:
 464:./shy_fft.h   ****         {
 1078              		.loc 3 464 35 is_stmt 1 view .LVU322
 1079 01be 109B     		ldr	r3, [sp, #64]
 1080 01c0 032B     		cmp	r3, #3
 1081 01c2 40F2E580 		bls	.L153
 1082 01c6 0AF10403 		add	r3, r10, #4
 1083 01ca CDF818A0 		str	r10, [sp, #24]
 1084 01ce 0593     		str	r3, [sp, #20]
 1085              	.LBE457:
 1086              	.LBE497:
 1087              	.LBE503:
 1088              	.LBE509:
 1089              	.LBE515:
 1090              		.loc 1 157 21 is_stmt 0 view .LVU323
 1091 01d0 119B     		ldr	r3, [sp, #68]
 1092 01d2 0C93     		str	r3, [sp, #48]
 1093              	.LBB516:
 1094              	.LBB510:
 1095              	.LBB504:
 1096              	.LBB498:
 1097              	.LBB479:
 464:./shy_fft.h   ****         {
 1098              		.loc 3 464 20 view .LVU324
 1099 01d4 0323     		movs	r3, #3
 1100 01d6 0E93     		str	r3, [sp, #56]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 61


 1101              	.LVL79:
 1102              	.L54:
 1103              	.LBB458:
 473:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1104              		.loc 3 473 28 view .LVU325
 1105 01d8 0E9B     		ldr	r3, [sp, #56]
 1106 01da 4FF0010E 		mov	lr, #1
 1107 01de 0EFA03FE 		lsl	lr, lr, r3
 1108              	.LVL80:
 474:./shy_fft.h   **** 
 1109              		.loc 3 474 20 view .LVU326
 1110 01e2 4FEA5E03 		lsr	r3, lr, #1
 1111 01e6 0793     		str	r3, [sp, #28]
 1112              	.LVL81:
 1113              	.LBB459:
 476:./shy_fft.h   ****             {
 1114              		.loc 3 476 33 is_stmt 1 view .LVU327
 1115 01e8 089B     		ldr	r3, [sp, #32]
 1116              	.LVL82:
 476:./shy_fft.h   ****             {
 1117              		.loc 3 476 33 is_stmt 0 view .LVU328
 1118 01ea 002B     		cmp	r3, #0
 1119 01ec 00F0BA80 		beq	.L56
 1120              	.LBB460:
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1121              		.loc 3 485 30 view .LVU329
 1122 01f0 079C     		ldr	r4, [sp, #28]
 479:./shy_fft.h   ****                 T* dr  = d + i;
 1123              		.loc 3 479 30 view .LVU330
 1124 01f2 0423     		movs	r3, #4
 1125 01f4 0E9A     		ldr	r2, [sp, #56]
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1126              		.loc 3 485 30 view .LVU331
 1127 01f6 4FEA840C 		lsl	ip, r4, #2
 1128 01fa 0D98     		ldr	r0, [sp, #52]
 479:./shy_fft.h   ****                 T* dr  = d + i;
 1129              		.loc 3 479 30 view .LVU332
 1130 01fc 03FA02F1 		lsl	r1, r3, r2
 1131              	.LBE460:
 476:./shy_fft.h   ****             {
 1132              		.loc 3 476 52 view .LVU333
 1133 0200 4FEA4E03 		lsl	r3, lr, #1
 1134 0204 4FEACE0E 		lsl	lr, lr, #3
 1135              	.LVL83:
 476:./shy_fft.h   ****             {
 1136              		.loc 3 476 52 view .LVU334
 1137 0208 0A93     		str	r3, [sp, #40]
 1138 020a 6346     		mov	r3, ip
 1139 020c 01F10408 		add	r8, r1, #4
 1140 0210 00EB010C 		add	ip, r0, r1
 1141 0214 1A1D     		adds	r2, r3, #4
 1142              	.LBB477:
 479:./shy_fft.h   ****                 T* dr  = d + i;
 1143              		.loc 3 479 30 view .LVU335
 1144 0216 0991     		str	r1, [sp, #36]
 1145 0218 9C44     		add	ip, ip, r3
 1146 021a 0B46     		mov	r3, r1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 62


 1147 021c 8218     		adds	r2, r0, r2
 1148 021e 5B00     		lsls	r3, r3, #1
 1149 0220 0092     		str	r2, [sp]
 1150 0222 08EB8402 		add	r2, r8, r4, lsl #2
 1151 0226 8044     		add	r8, r8, r0
 1152 0228 0B93     		str	r3, [sp, #44]
 1153 022a 00EB020B 		add	fp, r0, r2
 1154 022e 0246     		mov	r2, r0
 1155 0230 0C98     		ldr	r0, [sp, #48]
 1156              	.LBE477:
 476:./shy_fft.h   ****             {
 1157              		.loc 3 476 24 view .LVU336
 1158 0232 0023     		movs	r3, #0
 1159 0234 02F10409 		add	r9, r2, #4
 1160 0238 4118     		adds	r1, r0, r1
 1161 023a 0493     		str	r3, [sp, #16]
 1162 023c 0291     		str	r1, [sp, #8]
 1163 023e 0146     		mov	r1, r0
 1164 0240 00EB8400 		add	r0, r0, r4, lsl #2
 1165 0244 0A1D     		adds	r2, r1, #4
 1166 0246 0390     		str	r0, [sp, #12]
 1167 0248 0192     		str	r2, [sp, #4]
 1168              	.LVL84:
 1169              	.L57:
 1170              	.LBB478:
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1171              		.loc 3 483 34 view .LVU337
 1172 024a 18ED017A 		vldr.32	s14, [r8, #-4]
 1173 024e 59ED017A 		vldr.32	s15, [r9, #-4]
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1174              		.loc 3 483 25 view .LVU338
 1175 0252 019B     		ldr	r3, [sp, #4]
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1176              		.loc 3 483 34 view .LVU339
 1177 0254 77EE877A 		vadd.f32	s15, s15, s14
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1178              		.loc 3 485 25 view .LVU340
 1179 0258 039A     		ldr	r2, [sp, #12]
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 1180              		.loc 3 483 25 view .LVU341
 1181 025a 43ED017A 		vstr.32	s15, [r3, #-4]
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1182              		.loc 3 484 34 view .LVU342
 1183 025e 59ED017A 		vldr.32	s15, [r9, #-4]
 1184 0262 18ED017A 		vldr.32	s14, [r8, #-4]
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1185              		.loc 3 484 25 view .LVU343
 1186 0266 029B     		ldr	r3, [sp, #8]
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1187              		.loc 3 484 34 view .LVU344
 1188 0268 77EEC77A 		vsub.f32	s15, s15, s14
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 1189              		.loc 3 484 25 view .LVU345
 1190 026c C3ED007A 		vstr.32	s15, [r3]
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1191              		.loc 3 485 30 view .LVU346
 1192 0270 009B     		ldr	r3, [sp]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 63


 1193 0272 53F8043C 		ldr	r3, [r3, #-4]	@ float
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 1194              		.loc 3 485 25 view .LVU347
 1195 0276 1360     		str	r3, [r2]	@ float
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1196              		.loc 3 486 25 view .LVU348
 1197 0278 099B     		ldr	r3, [sp, #36]
 1198 027a D318     		adds	r3, r2, r3
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1199              		.loc 3 486 30 view .LVU349
 1200 027c 5BF8042C 		ldr	r2, [fp, #-4]	@ float
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 1201              		.loc 3 486 25 view .LVU350
 1202 0280 1A60     		str	r2, [r3]	@ float
 1203              	.LVL85:
 1204              	.LBB461:
 1205              	.LBI461:
 248:./shy_fft.h   ****     {
 1206              		.loc 3 248 17 is_stmt 1 view .LVU351
 1207              	.LBB462:
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1208              		.loc 3 251 36 is_stmt 0 view .LVU352
 1209 0282 059B     		ldr	r3, [sp, #20]
 1210 0284 53ED017A 		vldr.32	s15, [r3, #-4]
 252:./shy_fft.h   ****     }
 1211              		.loc 3 252 36 view .LVU353
 1212 0288 069B     		ldr	r3, [sp, #24]
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1213              		.loc 3 251 22 view .LVU354
 1214 028a CAED147A 		vstr.32	s15, [r10, #80]
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1215              		.loc 3 251 14 view .LVU355
 1216 028e CAED127A 		vstr.32	s15, [r10, #72]
 252:./shy_fft.h   ****     }
 1217              		.loc 3 252 36 view .LVU356
 1218 0292 D3ED016A 		vldr.32	s13, [r3, #4]
 1219              	.LBE462:
 1220              	.LBE461:
 1221              	.LBB465:
 490:./shy_fft.h   ****                 {
 1222              		.loc 3 490 37 view .LVU357
 1223 0296 079B     		ldr	r3, [sp, #28]
 1224              	.LBE465:
 1225              	.LBB473:
 1226              	.LBB463:
 252:./shy_fft.h   ****     }
 1227              		.loc 3 252 22 view .LVU358
 1228 0298 CAED156A 		vstr.32	s13, [r10, #84]
 1229              	.LBE463:
 1230              	.LBE473:
 1231              	.LBB474:
 490:./shy_fft.h   ****                 {
 1232              		.loc 3 490 37 view .LVU359
 1233 029c 012B     		cmp	r3, #1
 1234              	.LBE474:
 1235              	.LBB475:
 1236              	.LBB464:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 64


 252:./shy_fft.h   ****     }
 1237              		.loc 3 252 14 view .LVU360
 1238 029e CAED136A 		vstr.32	s13, [r10, #76]
 1239              	.LVL86:
 252:./shy_fft.h   ****     }
 1240              		.loc 3 252 14 view .LVU361
 1241              	.LBE464:
 1242              	.LBE475:
 1243              	.LBB476:
 490:./shy_fft.h   ****                 {
 1244              		.loc 3 490 37 is_stmt 1 view .LVU362
 1245 02a2 47D9     		bls	.L58
 1246 02a4 0B9B     		ldr	r3, [sp, #44]
 1247 02a6 4946     		mov	r1, r9
 1248 02a8 019D     		ldr	r5, [sp, #4]
 1249 02aa 5A46     		mov	r2, fp
 1250 02ac 1C1F     		subs	r4, r3, #4
 1251 02ae 029E     		ldr	r6, [sp, #8]
 1252 02b0 0098     		ldr	r0, [sp]
 1253 02b2 4346     		mov	r3, r8
 1254 02b4 2C44     		add	r4, r4, r5
 1255 02b6 371D     		adds	r7, r6, #4
 1256              	.LVL87:
 1257              	.L59:
 1258              	.LBB466:
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1259              		.loc 3 496 46 is_stmt 0 view .LVU363
 1260 02b8 92ED007A 		vldr.32	s14, [r2]
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1261              		.loc 3 496 33 view .LVU364
 1262 02bc D3ED005A 		vldr.32	s11, [r3]
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1263              		.loc 3 496 28 view .LVU365
 1264 02c0 26EEC77A 		vnmul.f32	s14, s13, s14
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1265              		.loc 3 497 33 view .LVU366
 1266 02c4 91ED006A 		vldr.32	s12, [r1]
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 1267              		.loc 3 496 28 view .LVU367
 1268 02c8 A5EEA77A 		vfma.f32	s14, s11, s15
 1269              	.LVL88:
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1270              		.loc 3 497 37 view .LVU368
 1271 02cc 37EE066A 		vadd.f32	s12, s14, s12
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 1272              		.loc 3 497 28 view .LVU369
 1273 02d0 A5EC016A 		vstmia.32	r5!, {s12}
 1274              	.LVL89:
 498:./shy_fft.h   **** 
 1275              		.loc 3 498 37 view .LVU370
 1276 02d4 B1EC016A 		vldmia.32	r1!, {s12}
 1277 02d8 36EE477A 		vsub.f32	s14, s12, s14
 1278              	.LVL90:
 498:./shy_fft.h   **** 
 1279              		.loc 3 498 28 view .LVU371
 1280 02dc 26ED017A 		vstmdb.32	r6!, {s14}
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 65


 1281              		.loc 3 500 53 view .LVU372
 1282 02e0 B2EC017A 		vldmia.32	r2!, {s14}
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1283              		.loc 3 500 31 view .LVU373
 1284 02e4 F3EC015A 		vldmia.32	r3!, {s11}
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1285              		.loc 3 500 53 view .LVU374
 1286 02e8 67EE877A 		vmul.f32	s15, s15, s14
 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1287              		.loc 3 501 40 view .LVU375
 1288 02ec 90ED006A 		vldr.32	s12, [r0]
 1289              	.LBE466:
 490:./shy_fft.h   ****                 {
 1290              		.loc 3 490 37 view .LVU376
 1291 02f0 9C45     		cmp	ip, r3
 1292              	.LBB471:
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 1293              		.loc 3 500 31 view .LVU377
 1294 02f2 E5EEA67A 		vfma.f32	s15, s11, s13
 1295              	.LVL91:
 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1296              		.loc 3 501 35 view .LVU378
 1297 02f6 37EE867A 		vadd.f32	s14, s15, s12
 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 1298              		.loc 3 501 31 view .LVU379
 1299 02fa A7EC017A 		vstmia.32	r7!, {s14}
 502:./shy_fft.h   ****                     phasor->Rotate();
 1300              		.loc 3 502 35 view .LVU380
 1301 02fe B0EC017A 		vldmia.32	r0!, {s14}
 1302 0302 77EEC77A 		vsub.f32	s15, s15, s14
 1303              	.LVL92:
 502:./shy_fft.h   ****                     phasor->Rotate();
 1304              		.loc 3 502 31 view .LVU381
 1305 0306 64ED017A 		vstmdb.32	r4!, {s15}
 1306              	.LVL93:
 1307              	.LBB467:
 1308              	.LBI467:
 255:./shy_fft.h   ****     {
 1309              		.loc 3 255 17 is_stmt 1 view .LVU382
 1310              	.LBB468:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1311              		.loc 3 257 33 is_stmt 0 view .LVU383
 1312 030a DAED136A 		vldr.32	s13, [r10, #76]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1313              		.loc 3 257 25 view .LVU384
 1314 030e DAED145A 		vldr.32	s11, [r10, #80]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1315              		.loc 3 257 40 view .LVU385
 1316 0312 9AED157A 		vldr.32	s14, [r10, #84]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1317              		.loc 3 257 18 view .LVU386
 1318 0316 9AED126A 		vldr.32	s12, [r10, #72]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1319              		.loc 3 257 11 view .LVU387
 1320 031a 67EE667A 		vnmul.f32	s15, s14, s13
 258:./shy_fft.h   ****         cos_   = temp;
 1321              		.loc 3 258 38 view .LVU388
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 66


 1322 031e 65EEA66A 		vmul.f32	s13, s11, s13
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1323              		.loc 3 257 11 view .LVU389
 1324 0322 E6EE257A 		vfma.f32	s15, s12, s11
 1325              	.LVL94:
 258:./shy_fft.h   ****         cos_   = temp;
 1326              		.loc 3 258 31 view .LVU390
 1327 0326 E6EE076A 		vfma.f32	s13, s12, s14
 259:./shy_fft.h   ****     }
 1328              		.loc 3 259 16 view .LVU391
 1329 032a CAED127A 		vstr.32	s15, [r10, #72]
 1330              	.LVL95:
 259:./shy_fft.h   ****     }
 1331              		.loc 3 259 16 view .LVU392
 1332              	.LBE468:
 1333              	.LBE467:
 1334              	.LBE471:
 490:./shy_fft.h   ****                 {
 1335              		.loc 3 490 17 is_stmt 1 view .LVU393
 490:./shy_fft.h   ****                 {
 1336              		.loc 3 490 37 view .LVU394
 1337              	.LBB472:
 1338              	.LBB470:
 1339              	.LBB469:
 258:./shy_fft.h   ****         cos_   = temp;
 1340              		.loc 3 258 16 is_stmt 0 view .LVU395
 1341 032e CAED136A 		vstr.32	s13, [r10, #76]
 1342              	.LBE469:
 1343              	.LBE470:
 1344              	.LBE472:
 490:./shy_fft.h   ****                 {
 1345              		.loc 3 490 37 view .LVU396
 1346 0332 C1D1     		bne	.L59
 1347              	.L58:
 490:./shy_fft.h   ****                 {
 1348              		.loc 3 490 37 view .LVU397
 1349              	.LBE476:
 1350              	.LBE478:
 476:./shy_fft.h   ****             {
 1351              		.loc 3 476 13 is_stmt 1 view .LVU398
 476:./shy_fft.h   ****             {
 1352              		.loc 3 476 46 is_stmt 0 view .LVU399
 1353 0334 049B     		ldr	r3, [sp, #16]
 476:./shy_fft.h   ****             {
 1354              		.loc 3 476 33 view .LVU400
 1355 0336 F044     		add	r8, r8, lr
 1356              	.LVL96:
 476:./shy_fft.h   ****             {
 1357              		.loc 3 476 46 view .LVU401
 1358 0338 0A9A     		ldr	r2, [sp, #40]
 476:./shy_fft.h   ****             {
 1359              		.loc 3 476 33 view .LVU402
 1360 033a F344     		add	fp, fp, lr
 1361 033c F144     		add	r9, r9, lr
 1362              	.LVL97:
 476:./shy_fft.h   ****             {
 1363              		.loc 3 476 33 view .LVU403
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 67


 1364 033e F444     		add	ip, ip, lr
 476:./shy_fft.h   ****             {
 1365              		.loc 3 476 46 view .LVU404
 1366 0340 1344     		add	r3, r3, r2
 476:./shy_fft.h   ****             {
 1367              		.loc 3 476 33 view .LVU405
 1368 0342 029A     		ldr	r2, [sp, #8]
 1369 0344 7244     		add	r2, r2, lr
 476:./shy_fft.h   ****             {
 1370              		.loc 3 476 46 view .LVU406
 1371 0346 0493     		str	r3, [sp, #16]
 1372              	.LVL98:
 476:./shy_fft.h   ****             {
 1373              		.loc 3 476 33 is_stmt 1 view .LVU407
 1374 0348 0292     		str	r2, [sp, #8]
 1375              	.LVL99:
 476:./shy_fft.h   ****             {
 1376              		.loc 3 476 33 is_stmt 0 view .LVU408
 1377 034a 039A     		ldr	r2, [sp, #12]
 1378 034c 7244     		add	r2, r2, lr
 1379 034e 0392     		str	r2, [sp, #12]
 1380 0350 019A     		ldr	r2, [sp, #4]
 1381 0352 7244     		add	r2, r2, lr
 1382 0354 0192     		str	r2, [sp, #4]
 1383              	.LVL100:
 476:./shy_fft.h   ****             {
 1384              		.loc 3 476 33 view .LVU409
 1385 0356 009A     		ldr	r2, [sp]
 1386 0358 7244     		add	r2, r2, lr
 1387 035a 0092     		str	r2, [sp]
 1388              	.LVL101:
 476:./shy_fft.h   ****             {
 1389              		.loc 3 476 33 view .LVU410
 1390 035c 089A     		ldr	r2, [sp, #32]
 1391 035e 9A42     		cmp	r2, r3
 1392 0360 3FF673AF 		bhi	.L57
 1393              	.LVL102:
 1394              	.L56:
 476:./shy_fft.h   ****             {
 1395              		.loc 3 476 33 view .LVU411
 1396              	.LBE459:
 1397              	.LBE458:
 464:./shy_fft.h   ****         {
 1398              		.loc 3 464 9 is_stmt 1 view .LVU412
 464:./shy_fft.h   ****         {
 1399              		.loc 3 464 35 is_stmt 0 view .LVU413
 1400 0364 069A     		ldr	r2, [sp, #24]
 464:./shy_fft.h   ****         {
 1401              		.loc 3 464 9 view .LVU414
 1402 0366 0E9B     		ldr	r3, [sp, #56]
 464:./shy_fft.h   ****         {
 1403              		.loc 3 464 35 view .LVU415
 1404 0368 0832     		adds	r2, r2, #8
 464:./shy_fft.h   ****         {
 1405              		.loc 3 464 9 view .LVU416
 1406 036a 0133     		adds	r3, r3, #1
 464:./shy_fft.h   ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 68


 1407              		.loc 3 464 35 view .LVU417
 1408 036c 0692     		str	r2, [sp, #24]
 1409 036e 059A     		ldr	r2, [sp, #20]
 464:./shy_fft.h   ****         {
 1410              		.loc 3 464 9 view .LVU418
 1411 0370 0E93     		str	r3, [sp, #56]
 1412              	.LVL103:
 464:./shy_fft.h   ****         {
 1413              		.loc 3 464 35 is_stmt 1 view .LVU419
 1414 0372 0832     		adds	r2, r2, #8
 1415 0374 0592     		str	r2, [sp, #20]
 1416 0376 109A     		ldr	r2, [sp, #64]
 1417 0378 9A42     		cmp	r2, r3
 1418 037a 0BD0     		beq	.L50
 1419 037c DDE90C23 		ldrd	r2, r3, [sp, #48]
 1420              	.LVL104:
 464:./shy_fft.h   ****         {
 1421              		.loc 3 464 35 is_stmt 0 view .LVU420
 1422 0380 CDE90C32 		strd	r3, r2, [sp, #48]
 1423              	.LVL105:
 464:./shy_fft.h   ****         {
 1424              		.loc 3 464 35 view .LVU421
 1425 0384 28E7     		b	.L54
 1426              	.L160:
 1427 0386 00BF     		.align	2
 1428              	.L159:
 1429 0388 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 1430 038c F304353F 		.word	1060439283
 1431              	.LVL106:
 1432              	.L153:
 464:./shy_fft.h   ****         {
 1433              		.loc 3 464 35 view .LVU422
 1434              	.LBE479:
 444:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 1435              		.loc 3 444 11 view .LVU423
 1436 0390 0D9B     		ldr	r3, [sp, #52]
 1437 0392 0C93     		str	r3, [sp, #48]
 1438              	.LVL107:
 1439              	.L50:
 509:./shy_fft.h   ****         {
 1440              		.loc 3 509 9 view .LVU424
 1441 0394 1198     		ldr	r0, [sp, #68]
 1442 0396 0C99     		ldr	r1, [sp, #48]
 1443 0398 8842     		cmp	r0, r1
 1444 039a 09D0     		beq	.L60
 511:./shy_fft.h   ****         }
 1445              		.loc 3 511 32 view .LVU425
 1446 039c 0422     		movs	r2, #4
 1447              	.LVL108:
 1448              	.LBB480:
 1449              	.LBI480:
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1450              		.loc 2 560 5 is_stmt 1 view .LVU426
 1451              	.LBB481:
 1452              	.LBI481:
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1453              		.loc 2 511 5 view .LVU427
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 69


 1454              	.LBB482:
 1455              	.LBI482:
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1456              		.loc 2 505 5 view .LVU428
 1457              	.LBB483:
 1458              	.LBI483:
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1459              		.loc 2 463 5 view .LVU429
 1460              	.LBB484:
 1461              	.LBB485:
 1462              	.LBI485:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 1463              		.loc 2 415 2 view .LVU430
 1464              	.LBB486:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1465              		.loc 2 425 4 is_stmt 0 view .LVU431
 1466 039e 109B     		ldr	r3, [sp, #64]
 1467 03a0 9A40     		lsls	r2, r2, r3
 1468              	.LVL109:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1469              		.loc 2 425 4 view .LVU432
 1470 03a2 00F00385 		beq	.L103
 1471              	.LVL110:
 1472              	.L150:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1473              		.loc 2 425 4 view .LVU433
 1474              	.LBE486:
 1475              	.LBE485:
 1476              	.LBE484:
 1477              	.LBE483:
 1478              	.LBE482:
 1479              	.LBE481:
 1480              	.LBE480:
 1481              	.LBE498:
 1482              	.LBE504:
 1483              	.LBE510:
 1484              	.LBE516:
 1485              	.LBB517:
 1486              	.LBB518:
 1487              	.LBB519:
 1488              	.LBB520:
 1489              	.LBB521:
 1490              	.LBB522:
 1491              	.LBB523:
 1492              	.LBB524:
 1493              	.LBB525:
 1494              	.LBB526:
 1495              	.LBB527:
 1496              	.LBB528:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1497              		.loc 2 426 23 view .LVU434
 1498 03a6 FFF7FEFF 		bl	memmove
 1499              	.LVL111:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1500              		.loc 2 426 23 view .LVU435
 1501              	.LBE528:
 1502              	.LBE527:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 70


 1503              	.LBE526:
 1504              	.LBE525:
 1505              	.LBE524:
 1506              	.LBE523:
 1507              	.LBE522:
 1508              	.LBE521:
 1509              	.LBE520:
 1510              	.LBE519:
 1511              	.LBE518:
 1512              	.LBE517:
 158:dsp/pvoc/stft.cpp ****     }
 159:dsp/pvoc/stft.cpp ****     else
 160:dsp/pvoc/stft.cpp ****     {
 161:dsp/pvoc/stft.cpp ****         fft_->Direct(fft_in_, fft_out_);
 162:dsp/pvoc/stft.cpp ****     }
 163:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 164:dsp/pvoc/stft.cpp ****     // Process in the frequency domain.
 165:dsp/pvoc/stft.cpp ****     if(modifier_ != NULL && parameters_ != NULL)
 166:dsp/pvoc/stft.cpp ****     {
 167:dsp/pvoc/stft.cpp ****         modifier_->Process(*parameters_, &fft_out_[0], &ifft_in_[0]);
 1513              		.loc 1 167 43 view .LVU436
 1514 03aa 0F9B     		ldr	r3, [sp, #60]
 1515 03ac 9B69     		ldr	r3, [r3, #24]
 1516 03ae 0C93     		str	r3, [sp, #48]
 1517              	.LVL112:
 1518              	.L60:
 165:dsp/pvoc/stft.cpp ****     {
 1519              		.loc 1 165 5 is_stmt 1 view .LVU437
 165:dsp/pvoc/stft.cpp ****     {
 1520              		.loc 1 165 8 is_stmt 0 view .LVU438
 1521 03b0 0F9B     		ldr	r3, [sp, #60]
 1522 03b2 D86C     		ldr	r0, [r3, #76]
 165:dsp/pvoc/stft.cpp ****     {
 1523              		.loc 1 165 5 view .LVU439
 1524 03b4 0028     		cmp	r0, #0
 1525 03b6 00F06283 		beq	.L68
 1526              	.L100:
 165:dsp/pvoc/stft.cpp ****     {
 1527              		.loc 1 165 29 discriminator 1 view .LVU440
 1528 03ba 0F9C     		ldr	r4, [sp, #60]
 1529 03bc A16C     		ldr	r1, [r4, #72]
 165:dsp/pvoc/stft.cpp ****     {
 1530              		.loc 1 165 26 discriminator 1 view .LVU441
 1531 03be 0029     		cmp	r1, #0
 1532 03c0 00F05D83 		beq	.L68
 1533              		.loc 1 167 9 is_stmt 1 view .LVU442
 1534              		.loc 1 167 27 is_stmt 0 view .LVU443
 1535 03c4 236A     		ldr	r3, [r4, #32]
 1536 03c6 0C9A     		ldr	r2, [sp, #48]
 1537 03c8 FFF7FEFF 		bl	_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
 1538              	.LVL113:
 168:dsp/pvoc/stft.cpp ****     }
 169:dsp/pvoc/stft.cpp ****     else
 170:dsp/pvoc/stft.cpp ****     {
 171:dsp/pvoc/stft.cpp ****         copy(&fft_out_[0], &fft_out_[fft_size_], &ifft_in_[0]);
 172:dsp/pvoc/stft.cpp ****     }
 173:dsp/pvoc/stft.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 71


 174:dsp/pvoc/stft.cpp ****     // Compute IFFT. ifft_in is lost.
 175:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 176:dsp/pvoc/stft.cpp ****     // Re-arrange data.
 177:dsp/pvoc/stft.cpp ****     copy(&ifft_in_[0], &ifft_in_[fft_size_], &ifft_out_[0]);
 178:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_ / 2; ++i)
 179:dsp/pvoc/stft.cpp ****     {
 180:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i]     = ifft_out_[i];
 181:dsp/pvoc/stft.cpp ****         ifft_in_[2 * i + 1] = ifft_out_[i + fft_size_ / 2];
 182:dsp/pvoc/stft.cpp ****     }
 183:dsp/pvoc/stft.cpp ****     arm_rfft_fast_f32(fft_, ifft_in_, ifft_out_, 1);
 184:dsp/pvoc/stft.cpp **** #else
 185:dsp/pvoc/stft.cpp ****     if(fft_size_ != FFT::max_size)
 1539              		.loc 1 185 8 view .LVU444
 1540 03cc 6268     		ldr	r2, [r4, #4]
 186:dsp/pvoc/stft.cpp ****     {
 187:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_, fft_num_passes_);
 1541              		.loc 1 187 22 view .LVU445
 1542 03ce 236A     		ldr	r3, [r4, #32]
 185:dsp/pvoc/stft.cpp ****     {
 1543              		.loc 1 185 8 view .LVU446
 1544 03d0 1092     		str	r2, [sp, #64]
 1545              		.loc 1 187 22 view .LVU447
 1546 03d2 0D93     		str	r3, [sp, #52]
 1547              	.L69:
 185:dsp/pvoc/stft.cpp ****     {
 1548              		.loc 1 185 5 is_stmt 1 view .LVU448
 1549 03d4 109B     		ldr	r3, [sp, #64]
 1550 03d6 B3F5805F 		cmp	r3, #4096
 1551              		.loc 1 187 9 is_stmt 0 view .LVU449
 1552 03da 0F9B     		ldr	r3, [sp, #60]
 1553 03dc D3F800B0 		ldr	fp, [r3]
 185:dsp/pvoc/stft.cpp ****     {
 1554              		.loc 1 185 5 view .LVU450
 1555 03e0 00F06A83 		beq	.L70
 1556              		.loc 1 187 9 is_stmt 1 view .LVU451
 1557              		.loc 1 187 22 is_stmt 0 view .LVU452
 1558 03e4 D969     		ldr	r1, [r3, #28]
 1559 03e6 9B68     		ldr	r3, [r3, #8]
 1560 03e8 0E91     		str	r1, [sp, #56]
 1561 03ea 1A46     		mov	r2, r3
 1562 03ec 1193     		str	r3, [sp, #68]
 1563              	.LVL114:
 1564              	.LBB601:
 1565              	.LBI601:
 871:./shy_fft.h   ****     {
 872:./shy_fft.h   ****         DirectTransform<T, num_passes, Phasor<T, num_passes>> d;
 873:./shy_fft.h   ****         d(input, output, bit_rev_256_lut_, &phasor_, n);
 874:./shy_fft.h   ****     }
 875:./shy_fft.h   **** 
 876:./shy_fft.h   ****     void Inverse(T* input, T* output, size_t n)
 1566              		.loc 3 876 10 is_stmt 1 view .LVU453
 1567              	.LBB602:
 1568              	.LBB603:
 1569              	.LBI603:
 666:./shy_fft.h   ****                     T*             output,
 1570              		.loc 3 666 10 view .LVU454
 1571              	.LBB604:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 72


 676:./shy_fft.h   **** 
 1572              		.loc 3 676 28 is_stmt 0 view .LVU455
 1573 03ee 0123     		movs	r3, #1
 1574 03f0 9340     		lsls	r3, r3, r2
 1575 03f2 0793     		str	r3, [sp, #28]
 1576              	.LVL115:
 1577              	.LBB605:
 679:./shy_fft.h   ****         {
 1578              		.loc 3 679 20 view .LVU456
 1579 03f4 1346     		mov	r3, r2
 1580              	.LVL116:
 679:./shy_fft.h   ****         {
 1581              		.loc 3 679 20 view .LVU457
 1582 03f6 013A     		subs	r2, r2, #1
 1583              	.LVL117:
 679:./shy_fft.h   ****         {
 1584              		.loc 3 679 51 view .LVU458
 1585 03f8 022A     		cmp	r2, #2
 679:./shy_fft.h   ****         {
 1586              		.loc 3 679 20 view .LVU459
 1587 03fa 0B92     		str	r2, [sp, #44]
 1588              	.LVL118:
 679:./shy_fft.h   ****         {
 1589              		.loc 3 679 51 is_stmt 1 view .LVU460
 1590 03fc 40F2EC84 		bls	.L105
 1591 0400 0BEBC303 		add	r3, fp, r3, lsl #3
 1592              	.LVL119:
 679:./shy_fft.h   ****         {
 1593              		.loc 3 679 51 is_stmt 0 view .LVU461
 1594              	.LBE605:
 672:./shy_fft.h   ****         T*      d = output;
 1595              		.loc 3 672 17 view .LVU462
 1596 0404 DDF83480 		ldr	r8, [sp, #52]
 1597              	.LBE604:
 1598              	.LBE603:
 1599              	.LBE602:
 1600              	.LBE601:
 1601              		.loc 1 187 22 view .LVU463
 1602 0408 0C91     		str	r1, [sp, #48]
 1603 040a 0593     		str	r3, [sp, #20]
 1604              	.LVL120:
 1605              	.L79:
 1606              	.LBB678:
 1607              	.LBB672:
 1608              	.LBB666:
 1609              	.LBB660:
 1610              	.LBB629:
 1611              	.LBB606:
 681:./shy_fft.h   ****             size_t n_2 = n >> 1;
 1612              		.loc 3 681 28 view .LVU464
 1613 040c 0B9B     		ldr	r3, [sp, #44]
 1614 040e 4FF0010E 		mov	lr, #1
 1615 0412 0EFA03FE 		lsl	lr, lr, r3
 1616              	.LVL121:
 682:./shy_fft.h   **** 
 1617              		.loc 3 682 20 view .LVU465
 1618 0416 4FEA5E03 		lsr	r3, lr, #1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 73


 1619 041a 0693     		str	r3, [sp, #24]
 1620              	.LVL122:
 1621              	.LBB607:
 684:./shy_fft.h   ****             {
 1622              		.loc 3 684 33 is_stmt 1 view .LVU466
 1623 041c 079B     		ldr	r3, [sp, #28]
 1624              	.LVL123:
 684:./shy_fft.h   ****             {
 1625              		.loc 3 684 33 is_stmt 0 view .LVU467
 1626 041e 002B     		cmp	r3, #0
 1627 0420 00F0BA80 		beq	.L75
 1628              	.LBB608:
 687:./shy_fft.h   ****                 T* d1r = d + i;
 1629              		.loc 3 687 29 view .LVU468
 1630 0424 0423     		movs	r3, #4
 1631 0426 0B9A     		ldr	r2, [sp, #44]
 1632 0428 0C99     		ldr	r1, [sp, #48]
 1633 042a 03FA02F0 		lsl	r0, r3, r2
 1634              	.LBE608:
 684:./shy_fft.h   ****             {
 1635              		.loc 3 684 52 view .LVU469
 1636 042e 4FEA4E03 		lsl	r3, lr, #1
 1637 0432 069A     		ldr	r2, [sp, #24]
 1638 0434 4FEACE0E 		lsl	lr, lr, #3
 1639              	.LVL124:
 684:./shy_fft.h   ****             {
 1640              		.loc 3 684 52 view .LVU470
 1641 0438 0993     		str	r3, [sp, #36]
 1642 043a 031D     		adds	r3, r0, #4
 1643 043c 01EB8204 		add	r4, r1, r2, lsl #2
 1644              	.LBB626:
 687:./shy_fft.h   ****                 T* d1r = d + i;
 1645              		.loc 3 687 29 view .LVU471
 1646 0440 0890     		str	r0, [sp, #32]
 1647 0442 08EB820A 		add	r10, r8, r2, lsl #2
 1648 0446 08EB0309 		add	r9, r8, r3
 1649 044a 03EB8202 		add	r2, r3, r2, lsl #2
 1650 044e CB18     		adds	r3, r1, r3
 1651 0450 0394     		str	r4, [sp, #12]
 1652 0452 D446     		mov	ip, r10
 1653 0454 0193     		str	r3, [sp, #4]
 1654 0456 4300     		lsls	r3, r0, #1
 1655 0458 0C1D     		adds	r4, r1, #4
 1656 045a 8A18     		adds	r2, r1, r2
 1657 045c 0A93     		str	r3, [sp, #40]
 1658              	.LBE626:
 684:./shy_fft.h   ****             {
 1659              		.loc 3 684 24 view .LVU472
 1660 045e 0023     		movs	r3, #0
 1661 0460 0294     		str	r4, [sp, #8]
 1662 0462 0092     		str	r2, [sp]
 1663 0464 0493     		str	r3, [sp, #16]
 1664              	.LVL125:
 1665              	.L76:
 1666              	.LBB627:
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1667              		.loc 3 691 34 view .LVU473
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 74


 1668 0466 19ED017A 		vldr.32	s14, [r9, #-4]
 1669 046a D8ED007A 		vldr.32	s15, [r8]
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1670              		.loc 3 691 26 view .LVU474
 1671 046e 029B     		ldr	r3, [sp, #8]
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1672              		.loc 3 691 34 view .LVU475
 1673 0470 77EE877A 		vadd.f32	s15, s15, s14
 694:./shy_fft.h   **** 
 1674              		.loc 3 694 30 view .LVU476
 1675 0474 089A     		ldr	r2, [sp, #32]
 1676              	.LBB609:
 1677              	.LBB610:
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1678              		.loc 3 251 36 view .LVU477
 1679 0476 0599     		ldr	r1, [sp, #20]
 1680              	.LBE610:
 1681              	.LBE609:
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 1682              		.loc 3 691 26 view .LVU478
 1683 0478 43ED017A 		vstr.32	s15, [r3, #-4]
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1684              		.loc 3 692 34 view .LVU479
 1685 047c D8ED007A 		vldr.32	s15, [r8]
 1686 0480 19ED017A 		vldr.32	s14, [r9, #-4]
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1687              		.loc 3 692 26 view .LVU480
 1688 0484 019B     		ldr	r3, [sp, #4]
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1689              		.loc 3 692 34 view .LVU481
 1690 0486 77EEC77A 		vsub.f32	s15, s15, s14
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 1691              		.loc 3 692 26 view .LVU482
 1692 048a 43ED017A 		vstr.32	s15, [r3, #-4]
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1693              		.loc 3 693 36 view .LVU483
 1694 048e DAED007A 		vldr.32	s15, [r10]
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1695              		.loc 3 693 26 view .LVU484
 1696 0492 039B     		ldr	r3, [sp, #12]
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1697              		.loc 3 693 36 view .LVU485
 1698 0494 77EEA77A 		vadd.f32	s15, s15, s15
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 1699              		.loc 3 693 26 view .LVU486
 1700 0498 C3ED007A 		vstr.32	s15, [r3]
 694:./shy_fft.h   **** 
 1701              		.loc 3 694 30 view .LVU487
 1702 049c 0AEB0203 		add	r3, r10, r2
 1703 04a0 4244     		add	r2, r2, r8
 1704              	.LVL126:
 1705              	.LBB612:
 1706              	.LBI609:
 248:./shy_fft.h   ****     {
 1707              		.loc 3 248 17 is_stmt 1 view .LVU488
 248:./shy_fft.h   ****     {
 1708              		.loc 3 248 17 is_stmt 0 view .LVU489
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 75


 1709              	.LBE612:
 1710              	.LBB613:
 699:./shy_fft.h   ****                 {
 1711              		.loc 3 699 37 is_stmt 1 view .LVU490
 1712              	.LBE613:
 694:./shy_fft.h   **** 
 1713              		.loc 3 694 36 is_stmt 0 view .LVU491
 1714 04a2 D3ED007A 		vldr.32	s15, [r3]
 694:./shy_fft.h   **** 
 1715              		.loc 3 694 26 view .LVU492
 1716 04a6 009B     		ldr	r3, [sp]
 694:./shy_fft.h   **** 
 1717              		.loc 3 694 36 view .LVU493
 1718 04a8 77EEA77A 		vadd.f32	s15, s15, s15
 694:./shy_fft.h   **** 
 1719              		.loc 3 694 26 view .LVU494
 1720 04ac 43ED017A 		vstr.32	s15, [r3, #-4]
 1721              	.LBB624:
 1722              	.LBB611:
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1723              		.loc 3 251 36 view .LVU495
 1724 04b0 51F8203C 		ldr	r3, [r1, #-32]	@ float
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1725              		.loc 3 251 22 view .LVU496
 1726 04b4 CBF85030 		str	r3, [fp, #80]	@ float
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 1727              		.loc 3 251 14 view .LVU497
 1728 04b8 CBF84830 		str	r3, [fp, #72]	@ float
 252:./shy_fft.h   ****     }
 1729              		.loc 3 252 36 view .LVU498
 1730 04bc 51F81C3C 		ldr	r3, [r1, #-28]	@ float
 252:./shy_fft.h   ****     }
 1731              		.loc 3 252 22 view .LVU499
 1732 04c0 CBF85430 		str	r3, [fp, #84]	@ float
 252:./shy_fft.h   ****     }
 1733              		.loc 3 252 14 view .LVU500
 1734 04c4 CBF84C30 		str	r3, [fp, #76]	@ float
 1735              	.LBE611:
 1736              	.LBE624:
 1737              	.LBB625:
 699:./shy_fft.h   ****                 {
 1738              		.loc 3 699 37 view .LVU501
 1739 04c8 069B     		ldr	r3, [sp, #24]
 1740 04ca 012B     		cmp	r3, #1
 1741 04cc 4CD9     		bls	.L77
 1742 04ce 0A99     		ldr	r1, [sp, #40]
 1743 04d0 08F10403 		add	r3, r8, #4
 1744 04d4 029C     		ldr	r4, [sp, #8]
 1745 04d6 01EB0800 		add	r0, r1, r8
 1746 04da 0399     		ldr	r1, [sp, #12]
 1747 04dc DDE90065 		ldrd	r6, r5, [sp]
 1748 04e0 0F1D     		adds	r7, r1, #4
 1749 04e2 4946     		mov	r1, r9
 1750              	.LVL127:
 1751              	.L78:
 1752              	.LBB614:
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 76


 1753              		.loc 3 701 32 view .LVU502
 1754 04e4 93ED007A 		vldr.32	s14, [r3]
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1755              		.loc 3 701 36 view .LVU503
 1756 04e8 72ED017A 		vldmdb.32	r2!, {s15}
 1757 04ec 77EE877A 		vadd.f32	s15, s15, s14
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 1758              		.loc 3 701 28 view .LVU504
 1759 04f0 E4EC017A 		vstmia.32	r4!, {s15}
 702:./shy_fft.h   **** 
 1760              		.loc 3 702 36 view .LVU505
 1761 04f4 30ED017A 		vldmdb.32	r0!, {s14}
 702:./shy_fft.h   **** 
 1762              		.loc 3 702 32 view .LVU506
 1763 04f8 D1ED007A 		vldr.32	s15, [r1]
 702:./shy_fft.h   **** 
 1764              		.loc 3 702 36 view .LVU507
 1765 04fc 77EEC77A 		vsub.f32	s15, s15, s14
 702:./shy_fft.h   **** 
 1766              		.loc 3 702 28 view .LVU508
 1767 0500 E7EC017A 		vstmia.32	r7!, {s15}
 1768              	.LVL128:
 1769              	.LBB615:
 1770              	.LBI615:
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1771              		.loc 3 262 14 is_stmt 1 view .LVU509
 1772              	.LBE615:
 706:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1773              		.loc 3 706 23 is_stmt 0 view .LVU510
 1774 0504 B3EC017A 		vldmia.32	r3!, {s14}
 1775 0508 D2ED005A 		vldr.32	s11, [r2]
 707:./shy_fft.h   **** 
 1776              		.loc 3 707 23 view .LVU511
 1777 050c 90ED006A 		vldr.32	s12, [r0]
 1778              	.LBE614:
 699:./shy_fft.h   ****                 {
 1779              		.loc 3 699 37 view .LVU512
 1780 0510 9C45     		cmp	ip, r3
 1781              	.LBB623:
 707:./shy_fft.h   **** 
 1782              		.loc 3 707 23 view .LVU513
 1783 0512 F1EC016A 		vldmia.32	r1!, {s13}
 706:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 1784              		.loc 3 706 23 view .LVU514
 1785 0516 37EE657A 		vsub.f32	s14, s14, s11
 1786              	.LBB617:
 1787              	.LBB618:
 263:./shy_fft.h   **** 
 1788              		.loc 3 263 35 view .LVU515
 1789 051a DBED137A 		vldr.32	s15, [fp, #76]
 1790              	.LBE618:
 1791              	.LBE617:
 707:./shy_fft.h   **** 
 1792              		.loc 3 707 23 view .LVU516
 1793 051e 76EE866A 		vadd.f32	s13, s13, s12
 1794              	.LBB619:
 1795              	.LBB616:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 77


 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1796              		.loc 3 262 35 view .LVU517
 1797 0522 DBED125A 		vldr.32	s11, [fp, #72]
 1798              	.LVL129:
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 1799              		.loc 3 262 35 view .LVU518
 1800              	.LBE616:
 1801              	.LBE619:
 1802              	.LBB620:
 1803              	.LBI617:
 263:./shy_fft.h   **** 
 1804              		.loc 3 263 14 is_stmt 1 view .LVU519
 263:./shy_fft.h   **** 
 1805              		.loc 3 263 14 is_stmt 0 view .LVU520
 1806              	.LBE620:
 710:./shy_fft.h   ****                     phasor->Rotate();
 1807              		.loc 3 710 37 view .LVU521
 1808 0526 27EE676A 		vnmul.f32	s12, s14, s15
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1809              		.loc 3 709 42 view .LVU522
 1810 052a 67EEA67A 		vmul.f32	s15, s15, s13
 1811              	.LVL130:
 710:./shy_fft.h   ****                     phasor->Rotate();
 1812              		.loc 3 710 37 view .LVU523
 1813 052e A5EEA66A 		vfma.f32	s12, s11, s13
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1814              		.loc 3 709 37 view .LVU524
 1815 0532 E5EE877A 		vfma.f32	s15, s11, s14
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 1816              		.loc 3 709 28 view .LVU525
 1817 0536 E5EC017A 		vstmia.32	r5!, {s15}
 1818              	.LVL131:
 710:./shy_fft.h   ****                     phasor->Rotate();
 1819              		.loc 3 710 28 view .LVU526
 1820 053a A6EC016A 		vstmia.32	r6!, {s12}
 1821              	.LVL132:
 1822              	.LBB621:
 1823              	.LBI621:
 255:./shy_fft.h   ****     {
 1824              		.loc 3 255 17 is_stmt 1 view .LVU527
 1825              	.LBB622:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1826              		.loc 3 257 33 is_stmt 0 view .LVU528
 1827 053e DBED137A 		vldr.32	s15, [fp, #76]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1828              		.loc 3 257 25 view .LVU529
 1829 0542 DBED146A 		vldr.32	s13, [fp, #80]
 1830              	.LVL133:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1831              		.loc 3 257 40 view .LVU530
 1832 0546 DBED155A 		vldr.32	s11, [fp, #84]
 1833              	.LVL134:
 258:./shy_fft.h   ****         cos_   = temp;
 1834              		.loc 3 258 38 view .LVU531
 1835 054a 26EEA77A 		vmul.f32	s14, s13, s15
 1836              	.LVL135:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 78


 1837              		.loc 3 257 18 view .LVU532
 1838 054e 9BED126A 		vldr.32	s12, [fp, #72]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1839              		.loc 3 257 11 view .LVU533
 1840 0552 65EEE77A 		vnmul.f32	s15, s11, s15
 258:./shy_fft.h   ****         cos_   = temp;
 1841              		.loc 3 258 31 view .LVU534
 1842 0556 A6EE257A 		vfma.f32	s14, s12, s11
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 1843              		.loc 3 257 11 view .LVU535
 1844 055a E6EE267A 		vfma.f32	s15, s12, s13
 1845              	.LVL136:
 258:./shy_fft.h   ****         cos_   = temp;
 1846              		.loc 3 258 16 view .LVU536
 1847 055e 8BED137A 		vstr.32	s14, [fp, #76]
 259:./shy_fft.h   ****     }
 1848              		.loc 3 259 16 view .LVU537
 1849 0562 CBED127A 		vstr.32	s15, [fp, #72]
 1850              	.LVL137:
 259:./shy_fft.h   ****     }
 1851              		.loc 3 259 16 view .LVU538
 1852              	.LBE622:
 1853              	.LBE621:
 1854              	.LBE623:
 699:./shy_fft.h   ****                 {
 1855              		.loc 3 699 17 is_stmt 1 view .LVU539
 699:./shy_fft.h   ****                 {
 1856              		.loc 3 699 37 view .LVU540
 1857 0566 BDD1     		bne	.L78
 1858              	.L77:
 699:./shy_fft.h   ****                 {
 1859              		.loc 3 699 37 is_stmt 0 view .LVU541
 1860              	.LBE625:
 1861              	.LBE627:
 684:./shy_fft.h   ****             {
 1862              		.loc 3 684 13 is_stmt 1 view .LVU542
 684:./shy_fft.h   ****             {
 1863              		.loc 3 684 46 is_stmt 0 view .LVU543
 1864 0568 049B     		ldr	r3, [sp, #16]
 684:./shy_fft.h   ****             {
 1865              		.loc 3 684 33 view .LVU544
 1866 056a F044     		add	r8, r8, lr
 1867              	.LVL138:
 684:./shy_fft.h   ****             {
 1868              		.loc 3 684 46 view .LVU545
 1869 056c 099A     		ldr	r2, [sp, #36]
 684:./shy_fft.h   ****             {
 1870              		.loc 3 684 33 view .LVU546
 1871 056e F244     		add	r10, r10, lr
 1872 0570 F144     		add	r9, r9, lr
 1873 0572 F444     		add	ip, ip, lr
 684:./shy_fft.h   ****             {
 1874              		.loc 3 684 46 view .LVU547
 1875 0574 1344     		add	r3, r3, r2
 684:./shy_fft.h   ****             {
 1876              		.loc 3 684 33 view .LVU548
 1877 0576 039A     		ldr	r2, [sp, #12]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 79


 1878 0578 7244     		add	r2, r2, lr
 684:./shy_fft.h   ****             {
 1879              		.loc 3 684 46 view .LVU549
 1880 057a 0493     		str	r3, [sp, #16]
 1881              	.LVL139:
 684:./shy_fft.h   ****             {
 1882              		.loc 3 684 33 is_stmt 1 view .LVU550
 1883 057c 0392     		str	r2, [sp, #12]
 1884              	.LVL140:
 684:./shy_fft.h   ****             {
 1885              		.loc 3 684 33 is_stmt 0 view .LVU551
 1886 057e 029A     		ldr	r2, [sp, #8]
 1887 0580 7244     		add	r2, r2, lr
 1888 0582 0292     		str	r2, [sp, #8]
 1889              	.LVL141:
 684:./shy_fft.h   ****             {
 1890              		.loc 3 684 33 view .LVU552
 1891 0584 019A     		ldr	r2, [sp, #4]
 1892 0586 7244     		add	r2, r2, lr
 1893 0588 0192     		str	r2, [sp, #4]
 1894              	.LVL142:
 684:./shy_fft.h   ****             {
 1895              		.loc 3 684 33 view .LVU553
 1896 058a 009A     		ldr	r2, [sp]
 1897 058c 7244     		add	r2, r2, lr
 1898 058e 0092     		str	r2, [sp]
 1899 0590 079A     		ldr	r2, [sp, #28]
 1900 0592 9A42     		cmp	r2, r3
 1901 0594 3FF667AF 		bhi	.L76
 1902              	.LVL143:
 1903              	.L75:
 684:./shy_fft.h   ****             {
 1904              		.loc 3 684 33 view .LVU554
 1905              	.LBE607:
 716:./shy_fft.h   ****             {
 1906              		.loc 3 716 13 view .LVU555
 1907 0598 0E9B     		ldr	r3, [sp, #56]
 1908 059a 0C9A     		ldr	r2, [sp, #48]
 1909 059c 9342     		cmp	r3, r2
 1910 059e 00F06A82 		beq	.L106
 723:./shy_fft.h   ****                 d = output;
 1911              		.loc 3 723 19 view .LVU556
 1912 05a2 DDF83480 		ldr	r8, [sp, #52]
 716:./shy_fft.h   ****             {
 1913              		.loc 3 716 13 view .LVU557
 1914 05a6 0C93     		str	r3, [sp, #48]
 1915              	.LVL144:
 1916              	.L73:
 716:./shy_fft.h   ****             {
 1917              		.loc 3 716 13 view .LVU558
 1918              	.LBE606:
 679:./shy_fft.h   ****         {
 1919              		.loc 3 679 9 is_stmt 1 view .LVU559
 1920 05a8 0B9B     		ldr	r3, [sp, #44]
 679:./shy_fft.h   ****         {
 1921              		.loc 3 679 51 is_stmt 0 view .LVU560
 1922 05aa 059A     		ldr	r2, [sp, #20]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 80


 679:./shy_fft.h   ****         {
 1923              		.loc 3 679 9 view .LVU561
 1924 05ac 013B     		subs	r3, r3, #1
 679:./shy_fft.h   ****         {
 1925              		.loc 3 679 51 view .LVU562
 1926 05ae 083A     		subs	r2, r2, #8
 1927 05b0 022B     		cmp	r3, #2
 679:./shy_fft.h   ****         {
 1928              		.loc 3 679 9 view .LVU563
 1929 05b2 0B93     		str	r3, [sp, #44]
 1930              	.LVL145:
 679:./shy_fft.h   ****         {
 1931              		.loc 3 679 51 is_stmt 1 view .LVU564
 1932 05b4 0592     		str	r2, [sp, #20]
 1933 05b6 7FF429AF 		bne	.L79
 1934              	.LBE629:
 729:./shy_fft.h   ****         {
 1935              		.loc 3 729 9 is_stmt 0 view .LVU565
 1936 05ba 0E9B     		ldr	r3, [sp, #56]
 1937              	.LVL146:
 729:./shy_fft.h   ****         {
 1938              		.loc 3 729 9 view .LVU566
 1939 05bc 0C9A     		ldr	r2, [sp, #48]
 1940 05be 9342     		cmp	r3, r2
 1941 05c0 00F00C84 		beq	.L71
 1942              	.LVL147:
 1943              	.L80:
 1944              	.LBB630:
 736:./shy_fft.h   ****         {
 1945              		.loc 3 736 29 is_stmt 1 view .LVU567
 1946 05c4 079B     		ldr	r3, [sp, #28]
 1947 05c6 002B     		cmp	r3, #0
 1948 05c8 00F0A080 		beq	.L81
 1949 05cc 0E9A     		ldr	r2, [sp, #56]
 1950 05ce 013B     		subs	r3, r3, #1
 1951 05d0 02F12001 		add	r1, r2, #32
 1952 05d4 DB08     		lsrs	r3, r3, #3
 1953 05d6 01EB4311 		add	r1, r1, r3, lsl #5
 1954 05da 1346     		mov	r3, r2
 1955 05dc 0D9A     		ldr	r2, [sp, #52]
 1956              	.LVL148:
 1957              	.L82:
 1958              	.LBB631:
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1959              		.loc 3 739 29 is_stmt 0 view .LVU568
 1960 05de D3ED007A 		vldr.32	s15, [r3]
 1961              	.LBE631:
 736:./shy_fft.h   ****         {
 1962              		.loc 3 736 29 view .LVU569
 1963 05e2 2032     		adds	r2, r2, #32
 1964              	.LBB632:
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1965              		.loc 3 739 29 view .LVU570
 1966 05e4 93ED047A 		vldr.32	s14, [r3, #16]
 1967              	.LBE632:
 736:./shy_fft.h   ****         {
 1968              		.loc 3 736 29 view .LVU571
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 81


 1969 05e8 2033     		adds	r3, r3, #32
 1970              	.LBB633:
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 1971              		.loc 3 747 34 view .LVU572
 1972 05ea 1FED986A 		vldr.32	s12, .L159+4
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1973              		.loc 3 739 29 view .LVU573
 1974 05ee 77EE877A 		vadd.f32	s15, s15, s14
 1975              	.LBE633:
 736:./shy_fft.h   ****         {
 1976              		.loc 3 736 29 view .LVU574
 1977 05f2 9942     		cmp	r1, r3
 1978              	.LBB634:
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 1979              		.loc 3 739 22 view .LVU575
 1980 05f4 42ED087A 		vstr.32	s15, [r2, #-32]
 740:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 1981              		.loc 3 740 29 view .LVU576
 1982 05f8 13ED047A 		vldr.32	s14, [r3, #-16]
 1983 05fc 53ED087A 		vldr.32	s15, [r3, #-32]
 1984 0600 77EEC77A 		vsub.f32	s15, s15, s14
 740:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 1985              		.loc 3 740 22 view .LVU577
 1986 0604 42ED047A 		vstr.32	s15, [r2, #-16]
 741:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 1987              		.loc 3 741 33 view .LVU578
 1988 0608 53ED067A 		vldr.32	s15, [r3, #-24]
 1989 060c 77EEA77A 		vadd.f32	s15, s15, s15
 741:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 1990              		.loc 3 741 22 view .LVU579
 1991 0610 42ED067A 		vstr.32	s15, [r2, #-24]
 742:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 1992              		.loc 3 742 33 view .LVU580
 1993 0614 53ED027A 		vldr.32	s15, [r3, #-8]
 1994 0618 77EEA77A 		vadd.f32	s15, s15, s15
 742:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 1995              		.loc 3 742 22 view .LVU581
 1996 061c 42ED027A 		vstr.32	s15, [r2, #-8]
 743:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 1997              		.loc 3 743 33 view .LVU582
 1998 0620 13ED057A 		vldr.32	s14, [r3, #-20]
 1999 0624 53ED077A 		vldr.32	s15, [r3, #-28]
 2000 0628 77EE877A 		vadd.f32	s15, s15, s14
 743:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 2001              		.loc 3 743 22 view .LVU583
 2002 062c 42ED077A 		vstr.32	s15, [r2, #-28]
 744:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2003              		.loc 3 744 33 view .LVU584
 2004 0630 13ED017A 		vldr.32	s14, [r3, #-4]
 2005 0634 53ED037A 		vldr.32	s15, [r3, #-12]
 2006 0638 77EEC77A 		vsub.f32	s15, s15, s14
 744:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 2007              		.loc 3 744 22 view .LVU585
 2008 063c 42ED057A 		vstr.32	s15, [r2, #-20]
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2009              		.loc 3 746 22 view .LVU586
 2010 0640 53ED016A 		vldr.32	s13, [r3, #-4]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 82


 745:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2011              		.loc 3 745 22 view .LVU587
 2012 0644 13ED077A 		vldr.32	s14, [r3, #-28]
 2013 0648 53ED055A 		vldr.32	s11, [r3, #-20]
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2014              		.loc 3 746 22 view .LVU588
 2015 064c 53ED037A 		vldr.32	s15, [r3, #-12]
 745:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 2016              		.loc 3 745 22 view .LVU589
 2017 0650 37EE657A 		vsub.f32	s14, s14, s11
 2018              	.LVL149:
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2019              		.loc 3 746 22 view .LVU590
 2020 0654 77EEA67A 		vadd.f32	s15, s15, s13
 2021              	.LVL150:
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 2022              		.loc 3 746 22 view .LVU591
 2023              	.LBE634:
 2024              	.LBE630:
 2025              	.LBE660:
 2026              	.LBE666:
 2027              	.LBE672:
 2028              	.LBE678:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2029              		.loc 3 138 41 is_stmt 1 view .LVU592
 2030              	.LBB679:
 2031              	.LBB673:
 2032              	.LBB667:
 2033              	.LBB661:
 2034              	.LBB637:
 2035              	.LBB635:
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2036              		.loc 3 747 28 is_stmt 0 view .LVU593
 2037 0658 77EE276A 		vadd.f32	s13, s14, s15
 748:./shy_fft.h   ****         }
 2038              		.loc 3 748 28 view .LVU594
 2039 065c 77EEC77A 		vsub.f32	s15, s15, s14
 2040              	.LVL151:
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2041              		.loc 3 747 34 view .LVU595
 2042 0660 26EE867A 		vmul.f32	s14, s13, s12
 2043              	.LVL152:
 748:./shy_fft.h   ****         }
 2044              		.loc 3 748 34 view .LVU596
 2045 0664 67EE867A 		vmul.f32	s15, s15, s12
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2046              		.loc 3 747 22 view .LVU597
 2047 0668 02ED037A 		vstr.32	s14, [r2, #-12]
 2048              	.LVL153:
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 2049              		.loc 3 747 22 view .LVU598
 2050              	.LBE635:
 2051              	.LBE637:
 2052              	.LBE661:
 2053              	.LBE667:
 2054              	.LBE673:
 2055              	.LBE679:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 83


 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2056              		.loc 3 138 41 is_stmt 1 view .LVU599
 2057              	.LBB680:
 2058              	.LBB674:
 2059              	.LBB668:
 2060              	.LBB662:
 2061              	.LBB638:
 2062              	.LBB636:
 748:./shy_fft.h   ****         }
 2063              		.loc 3 748 22 is_stmt 0 view .LVU600
 2064 066c 42ED017A 		vstr.32	s15, [r2, #-4]
 2065              	.LBE636:
 736:./shy_fft.h   ****         {
 2066              		.loc 3 736 9 is_stmt 1 view .LVU601
 736:./shy_fft.h   ****         {
 2067              		.loc 3 736 29 view .LVU602
 2068 0670 B5D1     		bne	.L82
 2069              	.LBE638:
 2070              	.LBB639:
 2071              	.LBB640:
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2072              		.loc 3 757 32 is_stmt 0 view .LVU603
 2073 0672 119B     		ldr	r3, [sp, #68]
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2074              		.loc 3 758 43 view .LVU604
 2075 0674 0799     		ldr	r1, [sp, #28]
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2076              		.loc 3 757 32 view .LVU605
 2077 0676 C3F11005 		rsb	r5, r3, #16
 2078 067a 0D9A     		ldr	r2, [sp, #52]
 2079 067c 0023     		movs	r3, #0
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2080              		.loc 3 758 43 view .LVU606
 2081 067e 8C08     		lsrs	r4, r1, #2
 2082 0680 1032     		adds	r2, r2, #16
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2083              		.loc 3 757 32 view .LVU607
 2084 0682 0E9F     		ldr	r7, [sp, #56]
 2085 0684 1846     		mov	r0, r3
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2086              		.loc 3 758 32 view .LVU608
 2087 0686 6600     		lsls	r6, r4, #1
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2088              		.loc 3 757 32 view .LVU609
 2089 0688 1946     		mov	r1, r3
 2090 068a DDF81CE0 		ldr	lr, [sp, #28]
 2091 068e 02E0     		b	.L83
 2092              	.LVL154:
 2093              	.L154:
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2094              		.loc 3 756 43 view .LVU610
 2095 0690 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2096              		.loc 3 756 67 view .LVU611
 2097 0692 1CF80330 		ldrb	r3, [ip, r3]	@ zero_extendqisi2
 2098              	.LVL155:
 2099              	.L83:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 84


 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2100              		.loc 3 762 29 view .LVU612
 2101 0696 12ED026A 		vldr.32	s12, [r2, #-8]
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2102              		.loc 3 767 25 view .LVU613
 2103 069a F0EE006A 		vmov.f32	s13, #2.0e+0
 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2104              		.loc 3 762 22 view .LVU614
 2105 069e 52ED047A 		vldr.32	s15, [r2, #-16]
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2106              		.loc 3 756 51 view .LVU615
 2107 06a2 43EA0023 		orr	r3, r3, r0, lsl #8
 764:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 2108              		.loc 3 764 22 view .LVU616
 2109 06a6 52ED035A 		vldr.32	s11, [r2, #-12]
 2110              	.LBE640:
 754:./shy_fft.h   ****         {
 2111              		.loc 3 754 42 view .LVU617
 2112 06aa 0431     		adds	r1, r1, #4
 2113              	.LVL156:
 2114              	.LBB641:
 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 2115              		.loc 3 762 15 view .LVU618
 2116 06ac 37EE867A 		vadd.f32	s14, s15, s12
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 2117              		.loc 3 757 25 view .LVU619
 2118 06b0 2B41     		asrs	r3, r3, r5
 2119              	.LVL157:
 763:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 2120              		.loc 3 763 15 view .LVU620
 2121 06b2 77EEC67A 		vsub.f32	s15, s15, s12
 765:./shy_fft.h   **** 
 2122              		.loc 3 765 22 view .LVU621
 2123 06b6 12ED016A 		vldr.32	s12, [r2, #-4]
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 2124              		.loc 3 758 20 view .LVU622
 2125 06ba 9819     		adds	r0, r3, r6
 759:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 2126              		.loc 3 759 20 view .LVU623
 2127 06bc 03EB0408 		add	r8, r3, r4
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2128              		.loc 3 767 25 view .LVU624
 2129 06c0 B0EE475A 		vmov.f32	s10, s14
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2130              		.loc 3 767 14 view .LVU625
 2131 06c4 07EB8303 		add	r3, r7, r3, lsl #2
 2132              	.LVL158:
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2133              		.loc 3 768 25 view .LVU626
 2134 06c8 A5EEE67A 		vfms.f32	s14, s11, s13
 760:./shy_fft.h   **** 
 2135              		.loc 3 760 20 view .LVU627
 2136 06cc 04EB000C 		add	ip, r4, r0
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2137              		.loc 3 769 14 view .LVU628
 2138 06d0 07EB8808 		add	r8, r7, r8, lsl #2
 2139              	.LBE641:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 85


 754:./shy_fft.h   ****         {
 2140              		.loc 3 754 29 view .LVU629
 2141 06d4 8E45     		cmp	lr, r1
 2142              	.LBB642:
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2143              		.loc 3 767 25 view .LVU630
 2144 06d6 A5EEA65A 		vfma.f32	s10, s11, s13
 2145              	.LVL159:
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2146              		.loc 3 768 14 view .LVU631
 2147 06da 07EB8000 		add	r0, r7, r0, lsl #2
 2148              	.LVL160:
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2149              		.loc 3 769 25 view .LVU632
 2150 06de F0EE675A 		vmov.f32	s11, s15
 770:./shy_fft.h   ****             s += 4;
 2151              		.loc 3 770 14 view .LVU633
 2152 06e2 07EB8C0C 		add	ip, r7, ip, lsl #2
 770:./shy_fft.h   ****             s += 4;
 2153              		.loc 3 770 25 view .LVU634
 2154 06e6 E6EE667A 		vfms.f32	s15, s12, s13
 2155              	.LBE642:
 754:./shy_fft.h   ****         {
 2156              		.loc 3 754 29 view .LVU635
 2157 06ea 02F11002 		add	r2, r2, #16
 2158              	.LVL161:
 2159              	.LBB643:
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2160              		.loc 3 769 25 view .LVU636
 2161 06ee E6EE265A 		vfma.f32	s11, s12, s13
 2162              	.LVL162:
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 2163              		.loc 3 767 19 view .LVU637
 2164 06f2 83ED005A 		vstr.32	s10, [r3]
 2165              	.LVL163:
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 2166              		.loc 3 768 19 view .LVU638
 2167 06f6 80ED007A 		vstr.32	s14, [r0]
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2168              		.loc 3 756 37 view .LVU639
 2169 06fa C8B2     		uxtb	r0, r1
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2170              		.loc 3 756 43 view .LVU640
 2171 06fc 304B     		ldr	r3, .L161
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 2172              		.loc 3 769 19 view .LVU641
 2173 06fe C8ED005A 		vstr.32	s11, [r8]
 770:./shy_fft.h   ****             s += 4;
 2174              		.loc 3 770 19 view .LVU642
 2175 0702 CCED007A 		vstr.32	s15, [ip]
 2176              	.LVL164:
 770:./shy_fft.h   ****             s += 4;
 2177              		.loc 3 770 19 view .LVU643
 2178              	.LBE643:
 754:./shy_fft.h   ****         {
 2179              		.loc 3 754 9 is_stmt 1 view .LVU644
 754:./shy_fft.h   ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 86


 2180              		.loc 3 754 29 view .LVU645
 2181              	.LBB644:
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 2182              		.loc 3 756 63 is_stmt 0 view .LVU646
 2183 0706 4FEA112C 		lsr	ip, r1, #8
 2184              	.LBE644:
 754:./shy_fft.h   ****         {
 2185              		.loc 3 754 29 view .LVU647
 2186 070a C1D8     		bhi	.L154
 2187              	.LVL165:
 2188              	.L81:
 754:./shy_fft.h   ****         {
 2189              		.loc 3 754 29 view .LVU648
 2190              	.LBE639:
 2191              	.LBE662:
 2192              	.LBE668:
 2193              	.LBE674:
 2194              	.LBE680:
 188:dsp/pvoc/stft.cpp ****     }
 189:dsp/pvoc/stft.cpp ****     else
 190:dsp/pvoc/stft.cpp ****     {
 191:dsp/pvoc/stft.cpp ****         fft_->Inverse(ifft_in_, ifft_out_);
 192:dsp/pvoc/stft.cpp ****     }
 193:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 194:dsp/pvoc/stft.cpp **** 
 195:dsp/pvoc/stft.cpp ****     size_t destination_ptr = process_ptr_;
 2195              		.loc 1 195 5 is_stmt 1 view .LVU649
 196:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 197:dsp/pvoc/stft.cpp ****     float inverse_window_size = 1.0f / float(fft_size_ / hop_size_ >> 1);
 198:dsp/pvoc/stft.cpp **** #else
 199:dsp/pvoc/stft.cpp ****     float inverse_window_size
 200:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2196              		.loc 1 200 48 is_stmt 0 view .LVU650
 2197 070c 0F9A     		ldr	r2, [sp, #60]
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2198              		.loc 1 199 11 view .LVU651
 2199 070e B7EE007A 		vmov.f32	s14, #1.0e+0
 2200              		.loc 1 200 34 view .LVU652
 2201 0712 1098     		ldr	r0, [sp, #64]
 2202              		.loc 1 200 48 view .LVU653
 2203 0714 D2F80C80 		ldr	r8, [r2, #12]
 2204              		.loc 1 200 34 view .LVU654
 2205 0718 00FB00F3 		mul	r3, r0, r0
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 2206              		.loc 1 195 12 view .LVU655
 2207 071c D2F83890 		ldr	r9, [r2, #56]
 2208              	.LVL166:
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2209              		.loc 1 199 5 is_stmt 1 view .LVU656
 201:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 202:dsp/pvoc/stft.cpp **** 
 203:dsp/pvoc/stft.cpp ****     w = window_;
 2210              		.loc 1 203 7 is_stmt 0 view .LVU657
 2211 0720 516A     		ldr	r1, [r2, #36]
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2212              		.loc 1 200 46 view .LVU658
 2213 0722 B3FBF8F3 		udiv	r3, r3, r8
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 87


 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2214              		.loc 1 200 58 view .LVU659
 2215 0726 5B08     		lsrs	r3, r3, #1
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 2216              		.loc 1 200 18 view .LVU660
 2217 0728 07EE903A 		vmov	s15, r3	@ int
 2218 072c F8EEE77A 		vcvt.f32.s32	s15, s15
 199:dsp/pvoc/stft.cpp ****         = 1.0f / float(fft_size_ * fft_size_ / hop_size_ >> 1);
 2219              		.loc 1 199 11 view .LVU661
 2220 0730 C7EE276A 		vdiv.f32	s13, s14, s15
 2221              	.LVL167:
 2222              		.loc 1 203 5 is_stmt 1 view .LVU662
 204:dsp/pvoc/stft.cpp ****     for(size_t i = 0; i < fft_size_; ++i)
 2223              		.loc 1 204 5 view .LVU663
 2224              	.LBB681:
 2225              		.loc 1 204 25 view .LVU664
 2226 0734 0028     		cmp	r0, #0
 2227 0736 00F04C83 		beq	.L91
 2228              	.LBB682:
 205:dsp/pvoc/stft.cpp ****     {
 206:dsp/pvoc/stft.cpp ****         float s = ifft_out_[i] * w[0] * inverse_window_size;
 207:dsp/pvoc/stft.cpp **** 
 208:dsp/pvoc/stft.cpp ****         int32_t x = static_cast<int32_t>(s);
 209:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 210:dsp/pvoc/stft.cpp ****         {
 211:dsp/pvoc/stft.cpp ****             // Overlap-add.
 212:dsp/pvoc/stft.cpp ****             x += synthesis_[destination_ptr];
 213:dsp/pvoc/stft.cpp ****         }
 214:dsp/pvoc/stft.cpp ****         synthesis_[destination_ptr] = Clip16(x);
 215:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 216:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 217:dsp/pvoc/stft.cpp ****         {
 218:dsp/pvoc/stft.cpp ****             destination_ptr -= buffer_size_;
 219:dsp/pvoc/stft.cpp ****         }
 220:dsp/pvoc/stft.cpp ****         w += window_stride_;
 2229              		.loc 1 220 11 is_stmt 0 view .LVU665
 2230 073a 976A     		ldr	r7, [r2, #40]
 209:dsp/pvoc/stft.cpp ****         {
 2231              		.loc 1 209 26 view .LVU666
 2232 073c A0EB080C 		sub	ip, r0, r8
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2233              		.loc 1 214 9 view .LVU667
 2234 0740 156B     		ldr	r5, [r2, #48]
 2235              	.LBE682:
 2236              	.LBE681:
 195:dsp/pvoc/stft.cpp **** #ifdef USE_ARM_FFT
 2237              		.loc 1 195 12 view .LVU668
 2238 0742 4B46     		mov	r3, r9
 2239              	.LBB687:
 2240              	.LBB683:
 216:dsp/pvoc/stft.cpp ****         {
 2241              		.loc 1 216 31 view .LVU669
 2242 0744 1669     		ldr	r6, [r2, #16]
 2243              		.loc 1 220 11 view .LVU670
 2244 0746 BF00     		lsls	r7, r7, #2
 2245 0748 D469     		ldr	r4, [r2, #28]
 2246              	.LBE683:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 88


 204:dsp/pvoc/stft.cpp ****     {
 2247              		.loc 1 204 16 view .LVU671
 2248 074a 8246     		mov	r10, r0
 2249 074c 0022     		movs	r2, #0
 2250              	.LVL168:
 2251              	.L96:
 2252              	.LBB684:
 206:dsp/pvoc/stft.cpp **** 
 2253              		.loc 1 206 9 is_stmt 1 view .LVU672
 212:dsp/pvoc/stft.cpp ****         }
 2254              		.loc 1 212 13 view .LVU673
 206:dsp/pvoc/stft.cpp **** 
 2255              		.loc 1 206 32 is_stmt 0 view .LVU674
 2256 074e 91ED007A 		vldr.32	s14, [r1]
 209:dsp/pvoc/stft.cpp ****         {
 2257              		.loc 1 209 9 view .LVU675
 2258 0752 6245     		cmp	r2, ip
 206:dsp/pvoc/stft.cpp **** 
 2259              		.loc 1 206 30 view .LVU676
 2260 0754 F4EC017A 		vldmia.32	r4!, {s15}
 2261              	.LVL169:
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2262              		.loc 1 208 9 is_stmt 1 view .LVU677
 212:dsp/pvoc/stft.cpp ****         }
 2263              		.loc 1 212 44 is_stmt 0 view .LVU678
 2264 0758 05EB430E 		add	lr, r5, r3, lsl #1
 206:dsp/pvoc/stft.cpp **** 
 2265              		.loc 1 206 32 view .LVU679
 2266 075c 67EE877A 		vmul.f32	s15, s15, s14
 2267              	.LVL170:
 206:dsp/pvoc/stft.cpp **** 
 2268              		.loc 1 206 15 view .LVU680
 2269 0760 67EEA67A 		vmul.f32	s15, s15, s13
 2270              	.LVL171:
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2271              		.loc 1 208 17 view .LVU681
 2272 0764 FDEEE77A 		vcvt.s32.f32	s15, s15
 2273              	.LVL172:
 208:dsp/pvoc/stft.cpp ****         if(i < fft_size_ - hop_size_)
 2274              		.loc 1 208 17 view .LVU682
 2275 0768 17EE900A 		vmov	r0, s15	@ int
 2276              	.LVL173:
 209:dsp/pvoc/stft.cpp ****         {
 2277              		.loc 1 209 9 is_stmt 1 view .LVU683
 2278 076c 02D2     		bcs	.L93
 212:dsp/pvoc/stft.cpp ****         }
 2279              		.loc 1 212 44 is_stmt 0 view .LVU684
 2280 076e 35F913B0 		ldrsh	fp, [r5, r3, lsl #1]
 212:dsp/pvoc/stft.cpp ****         }
 2281              		.loc 1 212 15 view .LVU685
 2282 0772 5844     		add	r0, r0, fp
 2283              	.LVL174:
 2284              	.L93:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2285              		.loc 1 214 9 is_stmt 1 view .LVU686
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2286              		.loc 1 214 9 is_stmt 0 view .LVU687
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 89


 2287              	.LBE684:
 2288              	.LBE687:
 2289              		.loc 4 102 5 is_stmt 1 view .LVU688
 2290              	.LBB688:
 2291              	.LBB685:
 218:dsp/pvoc/stft.cpp ****         }
 2292              		.loc 1 218 13 view .LVU689
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2293              		.loc 1 215 9 is_stmt 0 view .LVU690
 2294 0774 0133     		adds	r3, r3, #1
 2295              	.LVL175:
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2296              		.loc 1 215 9 view .LVU691
 2297              	.LBE685:
 204:dsp/pvoc/stft.cpp ****     {
 2298              		.loc 1 204 5 view .LVU692
 2299 0776 0132     		adds	r2, r2, #1
 2300              	.LVL176:
 2301              	.LBB686:
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2302              		.loc 1 214 37 view .LVU693
 2303 0778 00F30F00 		ssat	r0, #16, r0
 2304              	.LVL177:
 2305              		.loc 1 220 11 view .LVU694
 2306 077c 3944     		add	r1, r1, r7
 2307              	.LVL178:
 216:dsp/pvoc/stft.cpp ****         {
 2308              		.loc 1 216 9 view .LVU695
 2309 077e 9E42     		cmp	r6, r3
 214:dsp/pvoc/stft.cpp ****         ++destination_ptr;
 2310              		.loc 1 214 37 view .LVU696
 2311 0780 AEF80000 		strh	r0, [lr]	@ movhi
 215:dsp/pvoc/stft.cpp ****         if(destination_ptr >= buffer_size_)
 2312              		.loc 1 215 9 is_stmt 1 view .LVU697
 2313              	.LVL179:
 216:dsp/pvoc/stft.cpp ****         {
 2314              		.loc 1 216 9 view .LVU698
 218:dsp/pvoc/stft.cpp ****         }
 2315              		.loc 1 218 29 is_stmt 0 view .LVU699
 2316 0784 98BF     		it	ls
 2317 0786 9B1B     		subls	r3, r3, r6
 2318              	.LVL180:
 2319              		.loc 1 220 9 is_stmt 1 view .LVU700
 2320              		.loc 1 220 9 is_stmt 0 view .LVU701
 2321              	.LBE686:
 204:dsp/pvoc/stft.cpp ****     {
 2322              		.loc 1 204 5 is_stmt 1 view .LVU702
 204:dsp/pvoc/stft.cpp ****     {
 2323              		.loc 1 204 25 view .LVU703
 2324 0788 5245     		cmp	r2, r10
 2325 078a E0D1     		bne	.L96
 2326              	.LVL181:
 2327              	.L95:
 204:dsp/pvoc/stft.cpp ****     {
 2328              		.loc 1 204 25 is_stmt 0 view .LVU704
 2329              	.LBE688:
 221:dsp/pvoc/stft.cpp ****     }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 90


 222:dsp/pvoc/stft.cpp **** 
 223:dsp/pvoc/stft.cpp ****     ++done_;
 2330              		.loc 1 223 5 is_stmt 1 view .LVU705
 2331 078c 0F99     		ldr	r1, [sp, #60]
 2332              	.LVL182:
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2333              		.loc 1 224 18 is_stmt 0 view .LVU706
 2334 078e 08EB0903 		add	r3, r8, r9
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2335              		.loc 1 223 5 view .LVU707
 2336 0792 4A6C     		ldr	r2, [r1, #68]
 225:dsp/pvoc/stft.cpp ****     if(process_ptr_ >= buffer_size_)
 2337              		.loc 1 225 5 view .LVU708
 2338 0794 B342     		cmp	r3, r6
 223:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2339              		.loc 1 223 5 view .LVU709
 2340 0796 02F10102 		add	r2, r2, #1
 2341 079a 4A64     		str	r2, [r1, #68]
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2342              		.loc 1 224 5 is_stmt 1 view .LVU710
 2343              		.loc 1 225 5 view .LVU711
 2344 079c 80F08181 		bcs	.L97
 224:dsp/pvoc/stft.cpp ****     process_ptr_ += hop_size_;
 2345              		.loc 1 224 18 is_stmt 0 view .LVU712
 2346 07a0 8B63     		str	r3, [r1, #56]
 2347              	.LVL183:
 2348              	.L39:
 226:dsp/pvoc/stft.cpp ****     {
 227:dsp/pvoc/stft.cpp ****         process_ptr_ -= buffer_size_;
 228:dsp/pvoc/stft.cpp ****     }
 229:dsp/pvoc/stft.cpp **** }
 2349              		.loc 1 229 1 view .LVU713
 2350 07a2 13B0     		add	sp, sp, #76
 2351              		.cfi_remember_state
 2352              		.cfi_def_cfa_offset 36
 2353              		@ sp needed
 2354 07a4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2355              	.LVL184:
 2356              	.L46:
 2357              		.cfi_restore_state
 161:dsp/pvoc/stft.cpp ****     }
 2358              		.loc 1 161 9 is_stmt 1 view .LVU714
 161:dsp/pvoc/stft.cpp ****     }
 2359              		.loc 1 161 21 is_stmt 0 view .LVU715
 2360 07a8 0F9B     		ldr	r3, [sp, #60]
 2361              	.LVL185:
 2362              	.LBB689:
 2363              	.LBB593:
 2364              	.LBB585:
 2365              	.LBB577:
 2366              	.LBB536:
 318:./shy_fft.h   ****         {
 2367              		.loc 3 318 20 view .LVU716
 2368 07aa 0D9E     		ldr	r6, [sp, #52]
 2369              	.LBE536:
 2370              	.LBE577:
 2371              	.LBE585:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 91


 2372              	.LBE593:
 2373              	.LBE689:
 161:dsp/pvoc/stft.cpp ****     }
 2374              		.loc 1 161 21 view .LVU717
 2375 07ac 9969     		ldr	r1, [r3, #24]
 161:dsp/pvoc/stft.cpp ****     }
 2376              		.loc 1 161 9 view .LVU718
 2377 07ae D3F80090 		ldr	r9, [r3]
 2378              	.LVL186:
 2379              	.LBB690:
 2380              	.LBI517:
 852:./shy_fft.h   ****     {
 2381              		.loc 3 852 10 is_stmt 1 view .LVU719
 2382              	.LBB594:
 2383              	.LBB586:
 2384              	.LBI519:
 310:./shy_fft.h   ****     {
 2385              		.loc 3 310 10 view .LVU720
 2386              	.LBB578:
 2387              	.LBB540:
 318:./shy_fft.h   ****         {
 2388              		.loc 3 318 29 view .LVU721
 2389              	.LBE540:
 2390              	.LBE578:
 2391              	.LBE586:
 2392              	.LBE594:
 2393              	.LBE690:
 161:dsp/pvoc/stft.cpp ****     }
 2394              		.loc 1 161 21 is_stmt 0 view .LVU722
 2395 07b2 0023     		movs	r3, #0
 2396 07b4 01F11000 		add	r0, r1, #16
 2397              	.LVL187:
 161:dsp/pvoc/stft.cpp ****     }
 2398              		.loc 1 161 21 view .LVU723
 2399 07b8 0B91     		str	r1, [sp, #44]
 2400              	.LBB691:
 2401              	.LBB595:
 2402              	.LBB587:
 2403              	.LBB579:
 2404              	.LBB541:
 318:./shy_fft.h   ****         {
 2405              		.loc 3 318 20 view .LVU724
 2406 07ba 1C46     		mov	r4, r3
 318:./shy_fft.h   ****         {
 2407              		.loc 3 318 20 view .LVU725
 2408              	.LBE541:
 2409              	.LBE579:
 2410              	.LBE587:
 2411              	.LBE595:
 2412              	.LBE691:
 161:dsp/pvoc/stft.cpp ****     }
 2413              		.loc 1 161 21 view .LVU726
 2414 07bc 1946     		mov	r1, r3
 2415              	.LVL188:
 161:dsp/pvoc/stft.cpp ****     }
 2416              		.loc 1 161 21 view .LVU727
 2417 07be 05E0     		b	.L62
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 92


 2418              	.L162:
 2419              		.align	2
 2420              	.L161:
 2421 07c0 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 2422              	.LVL189:
 2423              	.L155:
 2424              	.LBB692:
 2425              	.LBB596:
 2426              	.LBB588:
 2427              	.LBB580:
 2428              	.LBB542:
 2429              	.LBB537:
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2430              		.loc 3 323 49 view .LVU728
 2431 07c4 1EF80710 		ldrb	r1, [lr, r7]	@ zero_extendqisi2
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2432              		.loc 3 323 73 view .LVU729
 2433 07c8 1CF80730 		ldrb	r3, [ip, r7]	@ zero_extendqisi2
 2434              	.LVL190:
 2435              	.L62:
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2436              		.loc 3 323 57 view .LVU730
 2437 07cc 43EA0123 		orr	r3, r3, r1, lsl #8
 2438              	.LVL191:
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2439              		.loc 3 323 57 view .LVU731
 2440              	.LBE537:
 318:./shy_fft.h   ****         {
 2441              		.loc 3 318 29 view .LVU732
 2442 07d0 1030     		adds	r0, r0, #16
 2443              	.LVL192:
 318:./shy_fft.h   ****         {
 2444              		.loc 3 318 39 view .LVU733
 2445 07d2 0434     		adds	r4, r4, #4
 2446              	.LVL193:
 2447              	.LBB538:
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2448              		.loc 3 323 49 view .LVU734
 2449 07d4 B64F     		ldr	r7, .L163
 324:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 2450              		.loc 3 324 35 view .LVU735
 2451 07d6 1B11     		asrs	r3, r3, #4
 2452              	.LBE538:
 318:./shy_fft.h   ****         {
 2453              		.loc 3 318 29 view .LVU736
 2454 07d8 B4F5805F 		cmp	r4, #4096
 2455              	.LBB539:
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2456              		.loc 3 323 43 view .LVU737
 2457 07dc 5FFA84FE 		uxtb	lr, r4
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2458              		.loc 3 329 21 view .LVU738
 2459 07e0 4FEA8301 		lsl	r1, r3, #2
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2460              		.loc 3 329 21 view .LVU739
 2461 07e4 06EB8303 		add	r3, r6, r3, lsl #2
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 93


 2462              		.loc 3 329 29 view .LVU740
 2463 07e8 01F50058 		add	r8, r1, #8192
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2464              		.loc 3 330 21 view .LVU741
 2465 07ec 01F58055 		add	r5, r1, #4096
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2466              		.loc 3 329 26 view .LVU742
 2467 07f0 D3ED007A 		vldr.32	s15, [r3]
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2468              		.loc 3 330 29 view .LVU743
 2469 07f4 01F54051 		add	r1, r1, #12288
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2470              		.loc 3 329 29 view .LVU744
 2471 07f8 B044     		add	r8, r8, r6
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2472              		.loc 3 330 21 view .LVU745
 2473 07fa 3544     		add	r5, r5, r6
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2474              		.loc 3 330 29 view .LVU746
 2475 07fc 3144     		add	r1, r1, r6
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 2476              		.loc 3 323 69 view .LVU747
 2477 07fe 4FEA142C 		lsr	ip, r4, #8
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2478              		.loc 3 329 26 view .LVU748
 2479 0802 98ED007A 		vldr.32	s14, [r8]
 2480 0806 77EEC77A 		vsub.f32	s15, s15, s14
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 2481              		.loc 3 329 18 view .LVU749
 2482 080a 40ED077A 		vstr.32	s15, [r0, #-28]
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2483              		.loc 3 330 26 view .LVU750
 2484 080e 91ED007A 		vldr.32	s14, [r1]
 2485 0812 D5ED007A 		vldr.32	s15, [r5]
 2486 0816 77EEC77A 		vsub.f32	s15, s15, s14
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 2487              		.loc 3 330 18 view .LVU751
 2488 081a 40ED057A 		vstr.32	s15, [r0, #-20]
 332:./shy_fft.h   ****             d[0] = a + b;
 2489              		.loc 3 332 15 view .LVU752
 2490 081e D1ED006A 		vldr.32	s13, [r1]
 331:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 2491              		.loc 3 331 15 view .LVU753
 2492 0822 D3ED007A 		vldr.32	s15, [r3]
 2493 0826 98ED006A 		vldr.32	s12, [r8]
 332:./shy_fft.h   ****             d[0] = a + b;
 2494              		.loc 3 332 15 view .LVU754
 2495 082a 95ED007A 		vldr.32	s14, [r5]
 331:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 2496              		.loc 3 331 15 view .LVU755
 2497 082e 77EE867A 		vadd.f32	s15, s15, s12
 2498              	.LVL194:
 332:./shy_fft.h   ****             d[0] = a + b;
 2499              		.loc 3 332 15 view .LVU756
 2500 0832 37EE267A 		vadd.f32	s14, s14, s13
 2501              	.LVL195:
 333:./shy_fft.h   ****             d[2] = a - b;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 94


 2502              		.loc 3 333 22 view .LVU757
 2503 0836 77EE876A 		vadd.f32	s13, s15, s14
 334:./shy_fft.h   ****             d += 4;
 2504              		.loc 3 334 22 view .LVU758
 2505 083a 77EEC77A 		vsub.f32	s15, s15, s14
 2506              	.LVL196:
 333:./shy_fft.h   ****             d[2] = a - b;
 2507              		.loc 3 333 18 view .LVU759
 2508 083e 40ED086A 		vstr.32	s13, [r0, #-32]
 2509              	.LVL197:
 334:./shy_fft.h   ****             d += 4;
 2510              		.loc 3 334 18 view .LVU760
 2511 0842 40ED067A 		vstr.32	s15, [r0, #-24]
 2512              	.LVL198:
 334:./shy_fft.h   ****             d += 4;
 2513              		.loc 3 334 18 view .LVU761
 2514              	.LBE539:
 318:./shy_fft.h   ****         {
 2515              		.loc 3 318 9 is_stmt 1 view .LVU762
 318:./shy_fft.h   ****         {
 2516              		.loc 3 318 29 view .LVU763
 2517 0846 BDD1     		bne	.L155
 2518 0848 0B99     		ldr	r1, [sp, #44]
 2519 084a 0B46     		mov	r3, r1
 2520 084c 01F58040 		add	r0, r1, #16384
 2521              	.LVL199:
 2522              	.L63:
 318:./shy_fft.h   ****         {
 2523              		.loc 3 318 29 is_stmt 0 view .LVU764
 2524              	.LBE542:
 2525              	.LBB543:
 2526              	.LBB544:
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2527              		.loc 3 345 29 view .LVU765
 2528 0850 93ED007A 		vldr.32	s14, [r3]
 2529              	.LBE544:
 341:./shy_fft.h   ****         {
 2530              		.loc 3 341 29 view .LVU766
 2531 0854 2032     		adds	r2, r2, #32
 2532              	.LBB545:
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2533              		.loc 3 345 29 view .LVU767
 2534 0856 D3ED046A 		vldr.32	s13, [r3, #16]
 2535              	.LBE545:
 341:./shy_fft.h   ****         {
 2536              		.loc 3 341 29 view .LVU768
 2537 085a 2033     		adds	r3, r3, #32
 2538              	.LBB546:
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2539              		.loc 3 351 33 view .LVU769
 2540 085c DFED957A 		vldr.32	s15, .L163+4
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2541              		.loc 3 345 29 view .LVU770
 2542 0860 37EE267A 		vadd.f32	s14, s14, s13
 2543              	.LBE546:
 341:./shy_fft.h   ****         {
 2544              		.loc 3 341 29 view .LVU771
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 95


 2545 0864 9842     		cmp	r0, r3
 2546              	.LBB547:
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 2547              		.loc 3 345 22 view .LVU772
 2548 0866 02ED087A 		vstr.32	s14, [r2, #-32]
 346:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 2549              		.loc 3 346 29 view .LVU773
 2550 086a 53ED046A 		vldr.32	s13, [r3, #-16]
 2551 086e 13ED087A 		vldr.32	s14, [r3, #-32]
 2552 0872 37EE667A 		vsub.f32	s14, s14, s13
 346:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 2553              		.loc 3 346 22 view .LVU774
 2554 0876 02ED047A 		vstr.32	s14, [r2, #-16]
 347:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 2555              		.loc 3 347 25 view .LVU775
 2556 087a 53F8181C 		ldr	r1, [r3, #-24]	@ float
 347:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 2557              		.loc 3 347 22 view .LVU776
 2558 087e 42F8181C 		str	r1, [r2, #-24]	@ float
 348:./shy_fft.h   **** 
 2559              		.loc 3 348 25 view .LVU777
 2560 0882 53F8081C 		ldr	r1, [r3, #-8]	@ float
 348:./shy_fft.h   **** 
 2561              		.loc 3 348 22 view .LVU778
 2562 0886 42F8081C 		str	r1, [r2, #-8]	@ float
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 2563              		.loc 3 350 34 view .LVU779
 2564 088a 13ED016A 		vldr.32	s12, [r3, #-4]
 2565 088e 13ED037A 		vldr.32	s14, [r3, #-12]
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2566              		.loc 3 351 33 view .LVU780
 2567 0892 53ED076A 		vldr.32	s13, [r3, #-28]
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 2568              		.loc 3 350 34 view .LVU781
 2569 0896 37EE467A 		vsub.f32	s14, s14, s12
 2570              	.LVL200:
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 2571              		.loc 3 350 34 view .LVU782
 2572              	.LBE547:
 2573              	.LBE543:
 2574              	.LBE580:
 2575              	.LBE588:
 2576              	.LBE596:
 2577              	.LBE692:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2578              		.loc 3 138 41 is_stmt 1 view .LVU783
 2579              	.LBB693:
 2580              	.LBB597:
 2581              	.LBB589:
 2582              	.LBB581:
 2583              	.LBB550:
 2584              	.LBB548:
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2585              		.loc 3 351 33 is_stmt 0 view .LVU784
 2586 089a E7EE276A 		vfma.f32	s13, s14, s15
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 2587              		.loc 3 351 22 view .LVU785
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 96


 2588 089e 42ED076A 		vstr.32	s13, [r2, #-28]
 352:./shy_fft.h   **** 
 2589              		.loc 3 352 33 view .LVU786
 2590 08a2 53ED076A 		vldr.32	s13, [r3, #-28]
 2591 08a6 E7EE676A 		vfms.f32	s13, s14, s15
 352:./shy_fft.h   **** 
 2592              		.loc 3 352 22 view .LVU787
 2593 08aa 42ED056A 		vstr.32	s13, [r2, #-20]
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2594              		.loc 3 354 34 view .LVU788
 2595 08ae 13ED037A 		vldr.32	s14, [r3, #-12]
 2596              	.LVL201:
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2597              		.loc 3 354 34 view .LVU789
 2598 08b2 13ED016A 		vldr.32	s12, [r3, #-4]
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2599              		.loc 3 355 26 view .LVU790
 2600 08b6 53ED056A 		vldr.32	s13, [r3, #-20]
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2601              		.loc 3 354 34 view .LVU791
 2602 08ba 37EE067A 		vadd.f32	s14, s14, s12
 2603              	.LVL202:
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 2604              		.loc 3 354 34 view .LVU792
 2605              	.LBE548:
 2606              	.LBE550:
 2607              	.LBE581:
 2608              	.LBE589:
 2609              	.LBE597:
 2610              	.LBE693:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 2611              		.loc 3 138 41 is_stmt 1 view .LVU793
 2612              	.LBB694:
 2613              	.LBB598:
 2614              	.LBB590:
 2615              	.LBB582:
 2616              	.LBB551:
 2617              	.LBB549:
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2618              		.loc 3 355 26 is_stmt 0 view .LVU794
 2619 08be E7EE276A 		vfma.f32	s13, s14, s15
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 2620              		.loc 3 355 22 view .LVU795
 2621 08c2 42ED036A 		vstr.32	s13, [r2, #-12]
 356:./shy_fft.h   ****         }
 2622              		.loc 3 356 26 view .LVU796
 2623 08c6 53ED056A 		vldr.32	s13, [r3, #-20]
 2624 08ca D7EE276A 		vfnms.f32	s13, s14, s15
 356:./shy_fft.h   ****         }
 2625              		.loc 3 356 22 view .LVU797
 2626 08ce 42ED016A 		vstr.32	s13, [r2, #-4]
 2627              	.LBE549:
 341:./shy_fft.h   ****         {
 2628              		.loc 3 341 9 is_stmt 1 view .LVU798
 341:./shy_fft.h   ****         {
 2629              		.loc 3 341 29 view .LVU799
 2630 08d2 BDD1     		bne	.L63
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 97


 2631 08d4 09F10403 		add	r3, r9, #4
 2632 08d8 CDF81490 		str	r9, [sp, #20]
 2633 08dc 0693     		str	r3, [sp, #24]
 2634              	.LBE551:
 2635              	.LBE582:
 2636              	.LBE590:
 2637              	.LBE598:
 2638              	.LBE694:
 161:dsp/pvoc/stft.cpp ****     }
 2639              		.loc 1 161 21 is_stmt 0 view .LVU800
 2640 08de 0B9B     		ldr	r3, [sp, #44]
 2641 08e0 0C93     		str	r3, [sp, #48]
 2642              	.LBB695:
 2643              	.LBB599:
 2644              	.LBB591:
 2645              	.LBB583:
 2646              	.LBB552:
 360:./shy_fft.h   ****         {
 2647              		.loc 3 360 20 view .LVU801
 2648 08e2 0323     		movs	r3, #3
 2649 08e4 0A93     		str	r3, [sp, #40]
 2650              	.LVL203:
 2651              	.L66:
 360:./shy_fft.h   ****         {
 2652              		.loc 3 360 20 view .LVU802
 2653 08e6 0D98     		ldr	r0, [sp, #52]
 2654              	.LBB553:
 2655              	.LBB554:
 2656              	.LBB555:
 375:./shy_fft.h   ****                 T* dr  = d + i;
 2657              		.loc 3 375 30 view .LVU803
 2658 08e8 0423     		movs	r3, #4
 2659              	.LBE555:
 2660              	.LBE554:
 369:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2661              		.loc 3 369 28 view .LVU804
 2662 08ea 0A9A     		ldr	r2, [sp, #40]
 2663 08ec 4FF0010E 		mov	lr, #1
 2664 08f0 0C9C     		ldr	r4, [sp, #48]
 2665 08f2 00EB030A 		add	r10, r0, r3
 2666              	.LBB573:
 2667              	.LBB570:
 375:./shy_fft.h   ****                 T* dr  = d + i;
 2668              		.loc 3 375 30 view .LVU805
 2669 08f6 03FA02F1 		lsl	r1, r3, r2
 2670              	.LBE570:
 2671              	.LBE573:
 369:./shy_fft.h   ****             size_t n_2 = n >> 1;
 2672              		.loc 3 369 28 view .LVU806
 2673 08fa 0EFA02FE 		lsl	lr, lr, r2
 2674              	.LVL204:
 2675              	.LBB574:
 372:./shy_fft.h   ****             {
 2676              		.loc 3 372 33 is_stmt 1 view .LVU807
 2677 08fe E318     		adds	r3, r4, r3
 2678              	.LBE574:
 370:./shy_fft.h   **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 98


 2679              		.loc 3 370 20 is_stmt 0 view .LVU808
 2680 0900 4FEA5E02 		lsr	r2, lr, #1
 2681              	.LVL205:
 370:./shy_fft.h   **** 
 2682              		.loc 3 370 20 view .LVU809
 2683 0904 00EB010C 		add	ip, r0, r1
 2684 0908 0193     		str	r3, [sp, #4]
 2685 090a 4B00     		lsls	r3, r1, #1
 2686 090c 01F10408 		add	r8, r1, #4
 2687              	.LBB575:
 2688              	.LBB571:
 375:./shy_fft.h   ****                 T* dr  = d + i;
 2689              		.loc 3 375 30 view .LVU810
 2690 0910 0791     		str	r1, [sp, #28]
 2691 0912 043B     		subs	r3, r3, #4
 2692 0914 0993     		str	r3, [sp, #36]
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2693              		.loc 3 381 30 view .LVU811
 2694 0916 9300     		lsls	r3, r2, #2
 2695 0918 9C44     		add	ip, ip, r3
 2696 091a 0433     		adds	r3, r3, #4
 2697 091c 00EB030B 		add	fp, r0, r3
 2698 0920 08EB8203 		add	r3, r8, r2, lsl #2
 2699 0924 04EB8202 		add	r2, r4, r2, lsl #2
 2700              	.LVL206:
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2701              		.loc 3 381 30 view .LVU812
 2702 0928 8044     		add	r8, r8, r0
 2703 092a C318     		adds	r3, r0, r3
 2704 092c 0292     		str	r2, [sp, #8]
 2705 092e 0093     		str	r3, [sp]
 2706              	.LBE571:
 372:./shy_fft.h   ****             {
 2707              		.loc 3 372 49 view .LVU813
 2708 0930 4FEA4E03 		lsl	r3, lr, #1
 2709 0934 4FEACE0E 		lsl	lr, lr, #3
 2710              	.LVL207:
 372:./shy_fft.h   ****             {
 2711              		.loc 3 372 49 view .LVU814
 2712 0938 0893     		str	r3, [sp, #32]
 2713 093a 6318     		adds	r3, r4, r1
 2714 093c 0393     		str	r3, [sp, #12]
 372:./shy_fft.h   ****             {
 2715              		.loc 3 372 24 view .LVU815
 2716 093e 0023     		movs	r3, #0
 2717 0940 0493     		str	r3, [sp, #16]
 2718              	.LVL208:
 2719              	.L65:
 2720              	.LBB572:
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2721              		.loc 3 379 34 view .LVU816
 2722 0942 18ED017A 		vldr.32	s14, [r8, #-4]
 2723              	.LBB556:
 2724              	.LBB557:
 252:./shy_fft.h   ****     }
 2725              		.loc 3 252 14 view .LVU817
 2726 0946 5846     		mov	r0, fp
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 99


 2727              	.LBE557:
 2728              	.LBE556:
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2729              		.loc 3 379 34 view .LVU818
 2730 0948 5AED017A 		vldr.32	s15, [r10, #-4]
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2731              		.loc 3 379 25 view .LVU819
 2732 094c 0199     		ldr	r1, [sp, #4]
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2733              		.loc 3 379 34 view .LVU820
 2734 094e 77EE877A 		vadd.f32	s15, s15, s14
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2735              		.loc 3 380 25 view .LVU821
 2736 0952 039E     		ldr	r6, [sp, #12]
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2737              		.loc 3 381 25 view .LVU822
 2738 0954 029A     		ldr	r2, [sp, #8]
 2739              	.LBB560:
 2740              	.LBB558:
 252:./shy_fft.h   ****     }
 2741              		.loc 3 252 14 view .LVU823
 2742 0956 0D46     		mov	r5, r1
 2743              	.LBE558:
 2744              	.LBE560:
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2745              		.loc 3 380 25 view .LVU824
 2746 0958 3446     		mov	r4, r6
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 2747              		.loc 3 379 25 view .LVU825
 2748 095a 41ED017A 		vstr.32	s15, [r1, #-4]
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2749              		.loc 3 380 34 view .LVU826
 2750 095e 5AED017A 		vldr.32	s15, [r10, #-4]
 2751 0962 18ED017A 		vldr.32	s14, [r8, #-4]
 2752 0966 77EEC77A 		vsub.f32	s15, s15, s14
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 2753              		.loc 3 380 25 view .LVU827
 2754 096a E4EC017A 		vstmia.32	r4!, {s15}
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2755              		.loc 3 381 30 view .LVU828
 2756 096e 5BF8043C 		ldr	r3, [fp, #-4]	@ float
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 2757              		.loc 3 381 25 view .LVU829
 2758 0972 1360     		str	r3, [r2]	@ float
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2759              		.loc 3 382 25 view .LVU830
 2760 0974 079B     		ldr	r3, [sp, #28]
 2761 0976 D318     		adds	r3, r2, r3
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2762              		.loc 3 382 30 view .LVU831
 2763 0978 009A     		ldr	r2, [sp]
 2764 097a 52F8042C 		ldr	r2, [r2, #-4]	@ float
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 2765              		.loc 3 382 25 view .LVU832
 2766 097e 1A60     		str	r2, [r3]	@ float
 2767              	.LVL209:
 2768              	.LBB561:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 100


 2769              	.LBI556:
 248:./shy_fft.h   ****     {
 2770              		.loc 3 248 17 is_stmt 1 view .LVU833
 2771              	.LBB559:
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2772              		.loc 3 251 36 is_stmt 0 view .LVU834
 2773 0980 069B     		ldr	r3, [sp, #24]
 252:./shy_fft.h   ****     }
 2774              		.loc 3 252 14 view .LVU835
 2775 0982 009A     		ldr	r2, [sp]
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2776              		.loc 3 251 36 view .LVU836
 2777 0984 53ED017A 		vldr.32	s15, [r3, #-4]
 252:./shy_fft.h   ****     }
 2778              		.loc 3 252 36 view .LVU837
 2779 0988 059B     		ldr	r3, [sp, #20]
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2780              		.loc 3 251 22 view .LVU838
 2781 098a C9ED147A 		vstr.32	s15, [r9, #80]
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 2782              		.loc 3 251 14 view .LVU839
 2783 098e C9ED127A 		vstr.32	s15, [r9, #72]
 252:./shy_fft.h   ****     }
 2784              		.loc 3 252 36 view .LVU840
 2785 0992 D3ED016A 		vldr.32	s13, [r3, #4]
 2786 0996 099B     		ldr	r3, [sp, #36]
 252:./shy_fft.h   ****     }
 2787              		.loc 3 252 22 view .LVU841
 2788 0998 C9ED156A 		vstr.32	s13, [r9, #84]
 2789 099c 5F18     		adds	r7, r3, r1
 252:./shy_fft.h   ****     }
 2790              		.loc 3 252 14 view .LVU842
 2791 099e 5146     		mov	r1, r10
 2792 09a0 4346     		mov	r3, r8
 2793 09a2 C9ED136A 		vstr.32	s13, [r9, #76]
 2794              	.LVL210:
 252:./shy_fft.h   ****     }
 2795              		.loc 3 252 14 view .LVU843
 2796              	.LBE559:
 2797              	.LBE561:
 2798              	.LBB562:
 386:./shy_fft.h   ****                 {
 2799              		.loc 3 386 37 is_stmt 1 view .LVU844
 2800              	.L64:
 2801              	.LBB563:
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2802              		.loc 3 392 46 is_stmt 0 view .LVU845
 2803 09a6 92ED007A 		vldr.32	s14, [r2]
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2804              		.loc 3 392 33 view .LVU846
 2805 09aa D3ED005A 		vldr.32	s11, [r3]
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2806              		.loc 3 392 28 view .LVU847
 2807 09ae 26EEC77A 		vnmul.f32	s14, s13, s14
 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2808              		.loc 3 393 33 view .LVU848
 2809 09b2 91ED006A 		vldr.32	s12, [r1]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 101


 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 2810              		.loc 3 392 28 view .LVU849
 2811 09b6 A5EEA77A 		vfma.f32	s14, s11, s15
 2812              	.LVL211:
 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2813              		.loc 3 393 37 view .LVU850
 2814 09ba 37EE066A 		vadd.f32	s12, s14, s12
 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 2815              		.loc 3 393 28 view .LVU851
 2816 09be A5EC016A 		vstmia.32	r5!, {s12}
 2817              	.LVL212:
 394:./shy_fft.h   **** 
 2818              		.loc 3 394 37 view .LVU852
 2819 09c2 B1EC016A 		vldmia.32	r1!, {s12}
 2820 09c6 36EE477A 		vsub.f32	s14, s12, s14
 2821              	.LVL213:
 394:./shy_fft.h   **** 
 2822              		.loc 3 394 28 view .LVU853
 2823 09ca 26ED017A 		vstmdb.32	r6!, {s14}
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2824              		.loc 3 396 53 view .LVU854
 2825 09ce B2EC017A 		vldmia.32	r2!, {s14}
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2826              		.loc 3 396 31 view .LVU855
 2827 09d2 F3EC015A 		vldmia.32	r3!, {s11}
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2828              		.loc 3 396 53 view .LVU856
 2829 09d6 67EE877A 		vmul.f32	s15, s15, s14
 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2830              		.loc 3 397 40 view .LVU857
 2831 09da 90ED006A 		vldr.32	s12, [r0]
 2832              	.LBE563:
 386:./shy_fft.h   ****                 {
 2833              		.loc 3 386 37 view .LVU858
 2834 09de 9C45     		cmp	ip, r3
 2835              	.LBB568:
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 2836              		.loc 3 396 31 view .LVU859
 2837 09e0 E5EEA67A 		vfma.f32	s15, s11, s13
 2838              	.LVL214:
 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2839              		.loc 3 397 35 view .LVU860
 2840 09e4 37EE867A 		vadd.f32	s14, s15, s12
 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 2841              		.loc 3 397 31 view .LVU861
 2842 09e8 A4EC017A 		vstmia.32	r4!, {s14}
 398:./shy_fft.h   ****                     phasor->Rotate();
 2843              		.loc 3 398 35 view .LVU862
 2844 09ec B0EC017A 		vldmia.32	r0!, {s14}
 2845 09f0 77EEC77A 		vsub.f32	s15, s15, s14
 2846              	.LVL215:
 398:./shy_fft.h   ****                     phasor->Rotate();
 2847              		.loc 3 398 31 view .LVU863
 2848 09f4 67ED017A 		vstmdb.32	r7!, {s15}
 2849              	.LVL216:
 2850              	.LBB564:
 2851              	.LBI564:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 102


 255:./shy_fft.h   ****     {
 2852              		.loc 3 255 17 is_stmt 1 view .LVU864
 2853              	.LBB565:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2854              		.loc 3 257 33 is_stmt 0 view .LVU865
 2855 09f8 D9ED136A 		vldr.32	s13, [r9, #76]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2856              		.loc 3 257 25 view .LVU866
 2857 09fc D9ED145A 		vldr.32	s11, [r9, #80]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2858              		.loc 3 257 40 view .LVU867
 2859 0a00 99ED157A 		vldr.32	s14, [r9, #84]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2860              		.loc 3 257 18 view .LVU868
 2861 0a04 99ED126A 		vldr.32	s12, [r9, #72]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2862              		.loc 3 257 11 view .LVU869
 2863 0a08 67EE667A 		vnmul.f32	s15, s14, s13
 258:./shy_fft.h   ****         cos_   = temp;
 2864              		.loc 3 258 38 view .LVU870
 2865 0a0c 65EEA66A 		vmul.f32	s13, s11, s13
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 2866              		.loc 3 257 11 view .LVU871
 2867 0a10 E6EE257A 		vfma.f32	s15, s12, s11
 2868              	.LVL217:
 258:./shy_fft.h   ****         cos_   = temp;
 2869              		.loc 3 258 31 view .LVU872
 2870 0a14 E6EE076A 		vfma.f32	s13, s12, s14
 259:./shy_fft.h   ****     }
 2871              		.loc 3 259 16 view .LVU873
 2872 0a18 C9ED127A 		vstr.32	s15, [r9, #72]
 2873              	.LVL218:
 259:./shy_fft.h   ****     }
 2874              		.loc 3 259 16 view .LVU874
 2875              	.LBE565:
 2876              	.LBE564:
 2877              	.LBE568:
 386:./shy_fft.h   ****                 {
 2878              		.loc 3 386 17 is_stmt 1 view .LVU875
 386:./shy_fft.h   ****                 {
 2879              		.loc 3 386 37 view .LVU876
 2880              	.LBB569:
 2881              	.LBB567:
 2882              	.LBB566:
 258:./shy_fft.h   ****         cos_   = temp;
 2883              		.loc 3 258 16 is_stmt 0 view .LVU877
 2884 0a1c C9ED136A 		vstr.32	s13, [r9, #76]
 2885              	.LBE566:
 2886              	.LBE567:
 2887              	.LBE569:
 386:./shy_fft.h   ****                 {
 2888              		.loc 3 386 37 view .LVU878
 2889 0a20 C1D1     		bne	.L64
 2890              	.LBE562:
 2891              	.LBE572:
 372:./shy_fft.h   ****             {
 2892              		.loc 3 372 13 is_stmt 1 view .LVU879
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 103


 372:./shy_fft.h   ****             {
 2893              		.loc 3 372 43 is_stmt 0 view .LVU880
 2894 0a22 049B     		ldr	r3, [sp, #16]
 372:./shy_fft.h   ****             {
 2895              		.loc 3 372 33 view .LVU881
 2896 0a24 F044     		add	r8, r8, lr
 2897              	.LVL219:
 372:./shy_fft.h   ****             {
 2898              		.loc 3 372 43 view .LVU882
 2899 0a26 089A     		ldr	r2, [sp, #32]
 372:./shy_fft.h   ****             {
 2900              		.loc 3 372 33 view .LVU883
 2901 0a28 F244     		add	r10, r10, lr
 2902              	.LVL220:
 372:./shy_fft.h   ****             {
 2903              		.loc 3 372 33 view .LVU884
 2904 0a2a F344     		add	fp, fp, lr
 2905              	.LVL221:
 372:./shy_fft.h   ****             {
 2906              		.loc 3 372 33 view .LVU885
 2907 0a2c F444     		add	ip, ip, lr
 372:./shy_fft.h   ****             {
 2908              		.loc 3 372 43 view .LVU886
 2909 0a2e 1344     		add	r3, r3, r2
 372:./shy_fft.h   ****             {
 2910              		.loc 3 372 33 view .LVU887
 2911 0a30 039A     		ldr	r2, [sp, #12]
 2912 0a32 7244     		add	r2, r2, lr
 2913 0a34 B3F5805F 		cmp	r3, #4096
 372:./shy_fft.h   ****             {
 2914              		.loc 3 372 43 view .LVU888
 2915 0a38 0493     		str	r3, [sp, #16]
 2916              	.LVL222:
 372:./shy_fft.h   ****             {
 2917              		.loc 3 372 33 is_stmt 1 view .LVU889
 2918 0a3a 0392     		str	r2, [sp, #12]
 2919              	.LVL223:
 372:./shy_fft.h   ****             {
 2920              		.loc 3 372 33 is_stmt 0 view .LVU890
 2921 0a3c 029A     		ldr	r2, [sp, #8]
 2922 0a3e 7244     		add	r2, r2, lr
 2923 0a40 0292     		str	r2, [sp, #8]
 2924 0a42 009A     		ldr	r2, [sp]
 2925 0a44 7244     		add	r2, r2, lr
 2926 0a46 0092     		str	r2, [sp]
 2927 0a48 019A     		ldr	r2, [sp, #4]
 2928 0a4a 7244     		add	r2, r2, lr
 2929 0a4c 0192     		str	r2, [sp, #4]
 2930              	.LVL224:
 372:./shy_fft.h   ****             {
 2931              		.loc 3 372 33 view .LVU891
 2932 0a4e FFF478AF 		bcc	.L65
 2933              	.LBE575:
 2934              	.LBE553:
 360:./shy_fft.h   ****         {
 2935              		.loc 3 360 9 is_stmt 1 view .LVU892
 360:./shy_fft.h   ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 104


 2936              		.loc 3 360 35 is_stmt 0 view .LVU893
 2937 0a52 059A     		ldr	r2, [sp, #20]
 360:./shy_fft.h   ****         {
 2938              		.loc 3 360 9 view .LVU894
 2939 0a54 0A9B     		ldr	r3, [sp, #40]
 2940              	.LVL225:
 360:./shy_fft.h   ****         {
 2941              		.loc 3 360 35 view .LVU895
 2942 0a56 0832     		adds	r2, r2, #8
 360:./shy_fft.h   ****         {
 2943              		.loc 3 360 9 view .LVU896
 2944 0a58 0133     		adds	r3, r3, #1
 360:./shy_fft.h   ****         {
 2945              		.loc 3 360 35 view .LVU897
 2946 0a5a 0592     		str	r2, [sp, #20]
 2947 0a5c 069A     		ldr	r2, [sp, #24]
 2948 0a5e 0C2B     		cmp	r3, #12
 360:./shy_fft.h   ****         {
 2949              		.loc 3 360 9 view .LVU898
 2950 0a60 0A93     		str	r3, [sp, #40]
 2951              	.LVL226:
 360:./shy_fft.h   ****         {
 2952              		.loc 3 360 35 is_stmt 1 view .LVU899
 2953 0a62 02F10802 		add	r2, r2, #8
 2954 0a66 0692     		str	r2, [sp, #24]
 2955 0a68 00F09681 		beq	.L156
 2956 0a6c DDE90C23 		ldrd	r2, r3, [sp, #48]
 2957              	.LVL227:
 360:./shy_fft.h   ****         {
 2958              		.loc 3 360 35 is_stmt 0 view .LVU900
 2959 0a70 CDE90C32 		strd	r3, r2, [sp, #48]
 2960              	.LVL228:
 360:./shy_fft.h   ****         {
 2961              		.loc 3 360 35 view .LVU901
 2962 0a74 37E7     		b	.L66
 2963              	.LVL229:
 2964              	.L106:
 360:./shy_fft.h   ****         {
 2965              		.loc 3 360 35 view .LVU902
 2966              	.LBE552:
 2967              	.LBE583:
 2968              	.LBE591:
 2969              	.LBE599:
 2970              	.LBE695:
 2971              	.LBB696:
 2972              	.LBB675:
 2973              	.LBB669:
 2974              	.LBB663:
 2975              	.LBB645:
 2976              	.LBB628:
 719:./shy_fft.h   ****             }
 2977              		.loc 3 719 19 view .LVU903
 2978 0a76 DDE90D38 		ldrd	r3, r8, [sp, #52]
 2979 0a7a 0C93     		str	r3, [sp, #48]
 2980              	.LVL230:
 719:./shy_fft.h   ****             }
 2981              		.loc 3 719 19 view .LVU904
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 105


 2982 0a7c 94E5     		b	.L73
 2983              	.LVL231:
 2984              	.L68:
 719:./shy_fft.h   ****             }
 2985              		.loc 3 719 19 view .LVU905
 2986              	.LBE628:
 2987              	.LBE645:
 2988              	.LBE663:
 2989              	.LBE669:
 2990              	.LBE675:
 2991              	.LBE696:
 171:dsp/pvoc/stft.cpp ****     }
 2992              		.loc 1 171 9 is_stmt 1 view .LVU906
 171:dsp/pvoc/stft.cpp ****     }
 2993              		.loc 1 171 38 is_stmt 0 view .LVU907
 2994 0a7e 0F9B     		ldr	r3, [sp, #60]
 2995 0a80 5A68     		ldr	r2, [r3, #4]
 171:dsp/pvoc/stft.cpp ****     }
 2996              		.loc 1 171 51 view .LVU908
 2997 0a82 1B6A     		ldr	r3, [r3, #32]
 171:dsp/pvoc/stft.cpp ****     }
 2998              		.loc 1 171 38 view .LVU909
 2999 0a84 1092     		str	r2, [sp, #64]
 3000              	.LBB697:
 3001              	.LBB698:
 3002              	.LBB699:
 3003              	.LBB700:
 3004              	.LBB701:
 3005              	.LBB702:
 3006              	.LBB703:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 3007              		.loc 2 425 4 view .LVU910
 3008 0a86 9200     		lsls	r2, r2, #2
 3009              	.LBE703:
 3010              	.LBE702:
 3011              	.LBE701:
 3012              	.LBE700:
 3013              	.LBE699:
 3014              	.LBE698:
 3015              	.LBE697:
 171:dsp/pvoc/stft.cpp ****     }
 3016              		.loc 1 171 51 view .LVU911
 3017 0a88 0D93     		str	r3, [sp, #52]
 3018              	.LVL232:
 3019              	.LBB721:
 3020              	.LBI697:
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3021              		.loc 2 560 5 is_stmt 1 view .LVU912
 3022              	.LBB718:
 3023              	.LBI698:
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3024              		.loc 2 511 5 view .LVU913
 3025              	.LBB715:
 3026              	.LBI699:
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3027              		.loc 2 505 5 view .LVU914
 3028              	.LBB712:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 106


 3029              	.LBI700:
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3030              		.loc 2 463 5 view .LVU915
 3031              	.LBB709:
 3032              	.LBB706:
 3033              	.LBI702:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3034              		.loc 2 415 2 view .LVU916
 3035              	.LBB704:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 3036              		.loc 2 425 4 is_stmt 0 view .LVU917
 3037 0a8a 3FF4A3AC 		beq	.L69
 3038              	.LVL233:
 3039              	.L99:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3040              		.loc 2 426 23 view .LVU918
 3041 0a8e DDE90C10 		ldrd	r1, r0, [sp, #48]
 3042 0a92 FFF7FEFF 		bl	memmove
 3043              	.LVL234:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3044              		.loc 2 426 23 view .LVU919
 3045              	.LBE704:
 3046              	.LBE706:
 3047              	.LBE709:
 3048              	.LBE712:
 3049              	.LBE715:
 3050              	.LBE718:
 3051              	.LBE721:
 185:dsp/pvoc/stft.cpp ****     {
 3052              		.loc 1 185 8 view .LVU920
 3053 0a96 0F9B     		ldr	r3, [sp, #60]
 3054 0a98 5A68     		ldr	r2, [r3, #4]
 187:dsp/pvoc/stft.cpp ****     }
 3055              		.loc 1 187 22 view .LVU921
 3056 0a9a 1B6A     		ldr	r3, [r3, #32]
 185:dsp/pvoc/stft.cpp ****     {
 3057              		.loc 1 185 8 view .LVU922
 3058 0a9c 1092     		str	r2, [sp, #64]
 187:dsp/pvoc/stft.cpp ****     }
 3059              		.loc 1 187 22 view .LVU923
 3060 0a9e 0D93     		str	r3, [sp, #52]
 3061              	.LVL235:
 3062              	.LBB722:
 3063              	.LBB719:
 3064              	.LBB716:
 3065              	.LBB713:
 3066              	.LBB710:
 3067              	.LBB707:
 3068              	.LBB705:
 187:dsp/pvoc/stft.cpp ****     }
 3069              		.loc 1 187 22 view .LVU924
 3070 0aa0 98E4     		b	.L69
 3071              	.LVL236:
 3072              	.L97:
 187:dsp/pvoc/stft.cpp ****     }
 3073              		.loc 1 187 22 view .LVU925
 3074              	.LBE705:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 107


 3075              	.LBE707:
 3076              	.LBE710:
 3077              	.LBE713:
 3078              	.LBE716:
 3079              	.LBE719:
 3080              	.LBE722:
 227:dsp/pvoc/stft.cpp ****     }
 3081              		.loc 1 227 9 is_stmt 1 view .LVU926
 227:dsp/pvoc/stft.cpp ****     }
 3082              		.loc 1 227 22 is_stmt 0 view .LVU927
 3083 0aa2 9B1B     		subs	r3, r3, r6
 3084 0aa4 0F9A     		ldr	r2, [sp, #60]
 3085 0aa6 9363     		str	r3, [r2, #56]
 3086              		.loc 1 229 1 view .LVU928
 3087 0aa8 13B0     		add	sp, sp, #76
 3088              		.cfi_remember_state
 3089              		.cfi_def_cfa_offset 36
 3090              		@ sp needed
 3091 0aaa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3092              	.LVL237:
 3093              	.L164:
 3094              		.loc 1 229 1 view .LVU929
 3095 0aae 00BF     		.align	2
 3096              	.L163:
 3097 0ab0 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3098 0ab4 F304353F 		.word	1060439283
 3099              	.LVL238:
 3100              	.L70:
 3101              		.cfi_restore_state
 191:dsp/pvoc/stft.cpp ****     }
 3102              		.loc 1 191 9 is_stmt 1 view .LVU930
 191:dsp/pvoc/stft.cpp ****     }
 3103              		.loc 1 191 22 is_stmt 0 view .LVU931
 3104 0ab8 D3F81CA0 		ldr	r10, [r3, #28]
 3105              	.LVL239:
 3106              	.LBB723:
 3107              	.LBI723:
 861:./shy_fft.h   ****     {
 3108              		.loc 3 861 10 is_stmt 1 view .LVU932
 3109              	.LBB724:
 3110              	.LBB725:
 3111              	.LBI725:
 561:./shy_fft.h   ****     {
 3112              		.loc 3 561 10 view .LVU933
 3113              	.LBB726:
 3114              	.LBB727:
 568:./shy_fft.h   ****         {
 3115              		.loc 3 568 48 view .LVU934
 568:./shy_fft.h   ****         {
 3116              		.loc 3 568 20 is_stmt 0 view .LVU935
 3117 0abc 0B23     		movs	r3, #11
 3118              	.LVL240:
 568:./shy_fft.h   ****         {
 3119              		.loc 3 568 20 view .LVU936
 3120              	.LBE727:
 563:./shy_fft.h   ****         T*      d = output;
 3121              		.loc 3 563 17 view .LVU937
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 108


 3122 0abe DDF83480 		ldr	r8, [sp, #52]
 3123              	.LBB756:
 568:./shy_fft.h   ****         {
 3124              		.loc 3 568 20 view .LVU938
 3125 0ac2 0A93     		str	r3, [sp, #40]
 3126 0ac4 CDF810B0 		str	fp, [sp, #16]
 3127              	.LBE756:
 3128              	.LBE726:
 3129              	.LBE725:
 3130              	.LBE724:
 3131              	.LBE723:
 191:dsp/pvoc/stft.cpp ****     }
 3132              		.loc 1 191 22 view .LVU939
 3133 0ac8 CDF824A0 		str	r10, [sp, #36]
 3134 0acc CDF82CA0 		str	r10, [sp, #44]
 3135              	.LVL241:
 3136              	.L87:
 3137              	.LBB799:
 3138              	.LBB794:
 3139              	.LBB789:
 3140              	.LBB784:
 3141              	.LBB757:
 3142              	.LBB728:
 570:./shy_fft.h   ****             size_t n_2 = n >> 1;
 3143              		.loc 3 570 28 view .LVU940
 3144 0ad0 0A9A     		ldr	r2, [sp, #40]
 3145 0ad2 4FF0010E 		mov	lr, #1
 3146              	.LBB729:
 3147              	.LBB730:
 576:./shy_fft.h   ****                 T* d1r = d + i;
 3148              		.loc 3 576 29 view .LVU941
 3149 0ad6 0423     		movs	r3, #4
 3150 0ad8 0999     		ldr	r1, [sp, #36]
 3151              	.LBE730:
 3152              	.LBE729:
 570:./shy_fft.h   ****             size_t n_2 = n >> 1;
 3153              		.loc 3 570 28 view .LVU942
 3154 0ada 0EFA02FE 		lsl	lr, lr, r2
 3155              	.LVL242:
 3156              	.LBB753:
 573:./shy_fft.h   ****             {
 3157              		.loc 3 573 33 is_stmt 1 view .LVU943
 3158              	.LBB750:
 576:./shy_fft.h   ****                 T* d1r = d + i;
 3159              		.loc 3 576 29 is_stmt 0 view .LVU944
 3160 0ade 03FA02F0 		lsl	r0, r3, r2
 3161              	.LBE750:
 573:./shy_fft.h   ****             {
 3162              		.loc 3 573 49 view .LVU945
 3163 0ae2 4FEA4E03 		lsl	r3, lr, #1
 3164              	.LBE753:
 571:./shy_fft.h   **** 
 3165              		.loc 3 571 20 view .LVU946
 3166 0ae6 4FEA5E02 		lsr	r2, lr, #1
 3167              	.LVL243:
 3168              	.LBB754:
 3169              	.LBB751:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 109


 576:./shy_fft.h   ****                 T* d1r = d + i;
 3170              		.loc 3 576 29 view .LVU947
 3171 0aea 0690     		str	r0, [sp, #24]
 3172              	.LBE751:
 573:./shy_fft.h   ****             {
 3173              		.loc 3 573 49 view .LVU948
 3174 0aec 0793     		str	r3, [sp, #28]
 3175 0aee 031D     		adds	r3, r0, #4
 3176 0af0 08EB820A 		add	r10, r8, r2, lsl #2
 3177 0af4 01EB8204 		add	r4, r1, r2, lsl #2
 3178 0af8 08EB0309 		add	r9, r8, r3
 3179 0afc 03EB8202 		add	r2, r3, r2, lsl #2
 3180              	.LVL244:
 573:./shy_fft.h   ****             {
 3181              		.loc 3 573 49 view .LVU949
 3182 0b00 CB18     		adds	r3, r1, r3
 3183 0b02 4FEACE0E 		lsl	lr, lr, #3
 3184              	.LVL245:
 573:./shy_fft.h   ****             {
 3185              		.loc 3 573 49 view .LVU950
 3186 0b06 D446     		mov	ip, r10
 3187 0b08 8A18     		adds	r2, r1, r2
 3188 0b0a 0193     		str	r3, [sp, #4]
 3189 0b0c 4300     		lsls	r3, r0, #1
 3190 0b0e 0394     		str	r4, [sp, #12]
 3191 0b10 0092     		str	r2, [sp]
 3192 0b12 0A1D     		adds	r2, r1, #4
 3193 0b14 0893     		str	r3, [sp, #32]
 573:./shy_fft.h   ****             {
 3194              		.loc 3 573 24 view .LVU951
 3195 0b16 0023     		movs	r3, #0
 3196 0b18 0292     		str	r2, [sp, #8]
 3197 0b1a 0593     		str	r3, [sp, #20]
 3198              	.LVL246:
 3199              	.L85:
 3200              	.LBB752:
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3201              		.loc 3 580 34 view .LVU952
 3202 0b1c 19ED017A 		vldr.32	s14, [r9, #-4]
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3203              		.loc 3 581 34 view .LVU953
 3204 0b20 4346     		mov	r3, r8
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3205              		.loc 3 580 34 view .LVU954
 3206 0b22 D8ED007A 		vldr.32	s15, [r8]
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3207              		.loc 3 580 26 view .LVU955
 3208 0b26 029D     		ldr	r5, [sp, #8]
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3209              		.loc 3 580 34 view .LVU956
 3210 0b28 77EE877A 		vadd.f32	s15, s15, s14
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3211              		.loc 3 581 26 view .LVU957
 3212 0b2c 019E     		ldr	r6, [sp, #4]
 583:./shy_fft.h   **** 
 3213              		.loc 3 583 30 view .LVU958
 3214 0b2e 0699     		ldr	r1, [sp, #24]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 110


 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3215              		.loc 3 582 26 view .LVU959
 3216 0b30 039C     		ldr	r4, [sp, #12]
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 3217              		.loc 3 580 26 view .LVU960
 3218 0b32 45ED017A 		vstr.32	s15, [r5, #-4]
 583:./shy_fft.h   **** 
 3219              		.loc 3 583 30 view .LVU961
 3220 0b36 0AEB0102 		add	r2, r10, r1
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3221              		.loc 3 581 34 view .LVU962
 3222 0b3a 19ED017A 		vldr.32	s14, [r9, #-4]
 3223 0b3e 01EB0800 		add	r0, r1, r8
 3224              	.LVL247:
 3225              	.LBB731:
 3226              	.LBI731:
 248:./shy_fft.h   ****     {
 3227              		.loc 3 248 17 is_stmt 1 view .LVU963
 248:./shy_fft.h   ****     {
 3228              		.loc 3 248 17 is_stmt 0 view .LVU964
 3229              	.LBE731:
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3230              		.loc 3 581 34 view .LVU965
 3231 0b42 F3EC017A 		vldmia.32	r3!, {s15}
 583:./shy_fft.h   **** 
 3232              		.loc 3 583 26 view .LVU966
 3233 0b46 009F     		ldr	r7, [sp]
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3234              		.loc 3 581 34 view .LVU967
 3235 0b48 77EEC77A 		vsub.f32	s15, s15, s14
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 3236              		.loc 3 581 26 view .LVU968
 3237 0b4c 46ED017A 		vstr.32	s15, [r6, #-4]
 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3238              		.loc 3 582 36 view .LVU969
 3239 0b50 DAED007A 		vldr.32	s15, [r10]
 3240 0b54 77EEA77A 		vadd.f32	s15, s15, s15
 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 3241              		.loc 3 582 26 view .LVU970
 3242 0b58 E4EC017A 		vstmia.32	r4!, {s15}
 3243              	.LVL248:
 583:./shy_fft.h   **** 
 3244              		.loc 3 583 36 view .LVU971
 3245 0b5c D2ED007A 		vldr.32	s15, [r2]
 3246              	.LBB735:
 3247              	.LBB732:
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 3248              		.loc 3 251 36 view .LVU972
 3249 0b60 049A     		ldr	r2, [sp, #16]
 3250              	.LBE732:
 3251              	.LBE735:
 583:./shy_fft.h   **** 
 3252              		.loc 3 583 36 view .LVU973
 3253 0b62 77EEA77A 		vadd.f32	s15, s15, s15
 583:./shy_fft.h   **** 
 3254              		.loc 3 583 26 view .LVU974
 3255 0b66 47ED017A 		vstr.32	s15, [r7, #-4]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 111


 3256              	.LBB736:
 3257              	.LBB733:
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 3258              		.loc 3 251 36 view .LVU975
 3259 0b6a 126C     		ldr	r2, [r2, #64]	@ float
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 3260              		.loc 3 251 22 view .LVU976
 3261 0b6c CBF85020 		str	r2, [fp, #80]	@ float
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 3262              		.loc 3 251 14 view .LVU977
 3263 0b70 CBF84820 		str	r2, [fp, #72]	@ float
 252:./shy_fft.h   ****     }
 3264              		.loc 3 252 36 view .LVU978
 3265 0b74 049A     		ldr	r2, [sp, #16]
 3266 0b76 526C     		ldr	r2, [r2, #68]	@ float
 252:./shy_fft.h   ****     }
 3267              		.loc 3 252 22 view .LVU979
 3268 0b78 CBF85420 		str	r2, [fp, #84]	@ float
 252:./shy_fft.h   ****     }
 3269              		.loc 3 252 14 view .LVU980
 3270 0b7c CBF84C20 		str	r2, [fp, #76]	@ float
 3271              	.LVL249:
 252:./shy_fft.h   ****     }
 3272              		.loc 3 252 14 view .LVU981
 3273              	.LBE733:
 3274              	.LBE736:
 3275              	.LBB737:
 588:./shy_fft.h   ****                 {
 3276              		.loc 3 588 37 is_stmt 1 view .LVU982
 3277 0b80 089A     		ldr	r2, [sp, #32]
 3278 0b82 02EB0801 		add	r1, r2, r8
 3279              	.LBE737:
 3280              	.LBB748:
 3281              	.LBB734:
 252:./shy_fft.h   ****     }
 3282              		.loc 3 252 14 is_stmt 0 view .LVU983
 3283 0b86 4A46     		mov	r2, r9
 3284              	.LVL250:
 3285              	.L84:
 252:./shy_fft.h   ****     }
 3286              		.loc 3 252 14 view .LVU984
 3287              	.LBE734:
 3288              	.LBE748:
 3289              	.LBB749:
 3290              	.LBB738:
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3291              		.loc 3 590 32 view .LVU985
 3292 0b88 93ED007A 		vldr.32	s14, [r3]
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3293              		.loc 3 590 36 view .LVU986
 3294 0b8c 70ED017A 		vldmdb.32	r0!, {s15}
 3295 0b90 77EE877A 		vadd.f32	s15, s15, s14
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 3296              		.loc 3 590 28 view .LVU987
 3297 0b94 E5EC017A 		vstmia.32	r5!, {s15}
 591:./shy_fft.h   **** 
 3298              		.loc 3 591 36 view .LVU988
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 112


 3299 0b98 31ED017A 		vldmdb.32	r1!, {s14}
 591:./shy_fft.h   **** 
 3300              		.loc 3 591 32 view .LVU989
 3301 0b9c D2ED007A 		vldr.32	s15, [r2]
 591:./shy_fft.h   **** 
 3302              		.loc 3 591 36 view .LVU990
 3303 0ba0 77EEC77A 		vsub.f32	s15, s15, s14
 591:./shy_fft.h   **** 
 3304              		.loc 3 591 28 view .LVU991
 3305 0ba4 E4EC017A 		vstmia.32	r4!, {s15}
 3306              	.LVL251:
 3307              	.LBB739:
 3308              	.LBI739:
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 3309              		.loc 3 262 14 is_stmt 1 view .LVU992
 3310              	.LBE739:
 595:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 3311              		.loc 3 595 23 is_stmt 0 view .LVU993
 3312 0ba8 B3EC017A 		vldmia.32	r3!, {s14}
 3313 0bac D0ED005A 		vldr.32	s11, [r0]
 596:./shy_fft.h   **** 
 3314              		.loc 3 596 23 view .LVU994
 3315 0bb0 91ED006A 		vldr.32	s12, [r1]
 3316              	.LBE738:
 588:./shy_fft.h   ****                 {
 3317              		.loc 3 588 37 view .LVU995
 3318 0bb4 9C45     		cmp	ip, r3
 3319              	.LBB747:
 596:./shy_fft.h   **** 
 3320              		.loc 3 596 23 view .LVU996
 3321 0bb6 F2EC016A 		vldmia.32	r2!, {s13}
 595:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 3322              		.loc 3 595 23 view .LVU997
 3323 0bba 37EE657A 		vsub.f32	s14, s14, s11
 3324              	.LBB741:
 3325              	.LBB742:
 263:./shy_fft.h   **** 
 3326              		.loc 3 263 35 view .LVU998
 3327 0bbe DBED137A 		vldr.32	s15, [fp, #76]
 3328              	.LBE742:
 3329              	.LBE741:
 596:./shy_fft.h   **** 
 3330              		.loc 3 596 23 view .LVU999
 3331 0bc2 76EE866A 		vadd.f32	s13, s13, s12
 3332              	.LBB743:
 3333              	.LBB740:
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 3334              		.loc 3 262 35 view .LVU1000
 3335 0bc6 DBED125A 		vldr.32	s11, [fp, #72]
 3336              	.LVL252:
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 3337              		.loc 3 262 35 view .LVU1001
 3338              	.LBE740:
 3339              	.LBE743:
 3340              	.LBB744:
 3341              	.LBI741:
 263:./shy_fft.h   **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 113


 3342              		.loc 3 263 14 is_stmt 1 view .LVU1002
 263:./shy_fft.h   **** 
 3343              		.loc 3 263 14 is_stmt 0 view .LVU1003
 3344              	.LBE744:
 599:./shy_fft.h   ****                     phasor->Rotate();
 3345              		.loc 3 599 37 view .LVU1004
 3346 0bca 27EE676A 		vnmul.f32	s12, s14, s15
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3347              		.loc 3 598 42 view .LVU1005
 3348 0bce 67EEA67A 		vmul.f32	s15, s15, s13
 3349              	.LVL253:
 599:./shy_fft.h   ****                     phasor->Rotate();
 3350              		.loc 3 599 37 view .LVU1006
 3351 0bd2 A5EEA66A 		vfma.f32	s12, s11, s13
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3352              		.loc 3 598 37 view .LVU1007
 3353 0bd6 E5EE877A 		vfma.f32	s15, s11, s14
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 3354              		.loc 3 598 28 view .LVU1008
 3355 0bda E6EC017A 		vstmia.32	r6!, {s15}
 3356              	.LVL254:
 599:./shy_fft.h   ****                     phasor->Rotate();
 3357              		.loc 3 599 28 view .LVU1009
 3358 0bde A7EC016A 		vstmia.32	r7!, {s12}
 3359              	.LVL255:
 3360              	.LBB745:
 3361              	.LBI745:
 255:./shy_fft.h   ****     {
 3362              		.loc 3 255 17 is_stmt 1 view .LVU1010
 3363              	.LBB746:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3364              		.loc 3 257 33 is_stmt 0 view .LVU1011
 3365 0be2 DBED137A 		vldr.32	s15, [fp, #76]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3366              		.loc 3 257 25 view .LVU1012
 3367 0be6 DBED146A 		vldr.32	s13, [fp, #80]
 3368              	.LVL256:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3369              		.loc 3 257 40 view .LVU1013
 3370 0bea DBED155A 		vldr.32	s11, [fp, #84]
 3371              	.LVL257:
 258:./shy_fft.h   ****         cos_   = temp;
 3372              		.loc 3 258 38 view .LVU1014
 3373 0bee 26EEA77A 		vmul.f32	s14, s13, s15
 3374              	.LVL258:
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3375              		.loc 3 257 18 view .LVU1015
 3376 0bf2 9BED126A 		vldr.32	s12, [fp, #72]
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3377              		.loc 3 257 11 view .LVU1016
 3378 0bf6 65EEE77A 		vnmul.f32	s15, s11, s15
 258:./shy_fft.h   ****         cos_   = temp;
 3379              		.loc 3 258 31 view .LVU1017
 3380 0bfa A6EE257A 		vfma.f32	s14, s12, s11
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 3381              		.loc 3 257 11 view .LVU1018
 3382 0bfe E6EE267A 		vfma.f32	s15, s12, s13
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 114


 3383              	.LVL259:
 258:./shy_fft.h   ****         cos_   = temp;
 3384              		.loc 3 258 16 view .LVU1019
 3385 0c02 8BED137A 		vstr.32	s14, [fp, #76]
 259:./shy_fft.h   ****     }
 3386              		.loc 3 259 16 view .LVU1020
 3387 0c06 CBED127A 		vstr.32	s15, [fp, #72]
 3388              	.LVL260:
 259:./shy_fft.h   ****     }
 3389              		.loc 3 259 16 view .LVU1021
 3390              	.LBE746:
 3391              	.LBE745:
 3392              	.LBE747:
 588:./shy_fft.h   ****                 {
 3393              		.loc 3 588 17 is_stmt 1 view .LVU1022
 588:./shy_fft.h   ****                 {
 3394              		.loc 3 588 37 view .LVU1023
 3395 0c0a BDD1     		bne	.L84
 3396              	.LBE749:
 3397              	.LBE752:
 573:./shy_fft.h   ****             {
 3398              		.loc 3 573 13 view .LVU1024
 573:./shy_fft.h   ****             {
 3399              		.loc 3 573 43 is_stmt 0 view .LVU1025
 3400 0c0c 059B     		ldr	r3, [sp, #20]
 573:./shy_fft.h   ****             {
 3401              		.loc 3 573 33 view .LVU1026
 3402 0c0e F044     		add	r8, r8, lr
 3403              	.LVL261:
 573:./shy_fft.h   ****             {
 3404              		.loc 3 573 43 view .LVU1027
 3405 0c10 079A     		ldr	r2, [sp, #28]
 573:./shy_fft.h   ****             {
 3406              		.loc 3 573 33 view .LVU1028
 3407 0c12 F244     		add	r10, r10, lr
 3408 0c14 F144     		add	r9, r9, lr
 3409 0c16 F444     		add	ip, ip, lr
 573:./shy_fft.h   ****             {
 3410              		.loc 3 573 43 view .LVU1029
 3411 0c18 1344     		add	r3, r3, r2
 573:./shy_fft.h   ****             {
 3412              		.loc 3 573 33 view .LVU1030
 3413 0c1a 039A     		ldr	r2, [sp, #12]
 3414 0c1c 7244     		add	r2, r2, lr
 3415 0c1e B3F5805F 		cmp	r3, #4096
 573:./shy_fft.h   ****             {
 3416              		.loc 3 573 43 view .LVU1031
 3417 0c22 0593     		str	r3, [sp, #20]
 3418              	.LVL262:
 573:./shy_fft.h   ****             {
 3419              		.loc 3 573 33 is_stmt 1 view .LVU1032
 3420 0c24 0392     		str	r2, [sp, #12]
 3421              	.LVL263:
 573:./shy_fft.h   ****             {
 3422              		.loc 3 573 33 is_stmt 0 view .LVU1033
 3423 0c26 029A     		ldr	r2, [sp, #8]
 3424 0c28 7244     		add	r2, r2, lr
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 115


 3425 0c2a 0292     		str	r2, [sp, #8]
 3426              	.LVL264:
 573:./shy_fft.h   ****             {
 3427              		.loc 3 573 33 view .LVU1034
 3428 0c2c 019A     		ldr	r2, [sp, #4]
 3429 0c2e 7244     		add	r2, r2, lr
 3430 0c30 0192     		str	r2, [sp, #4]
 3431              	.LVL265:
 573:./shy_fft.h   ****             {
 3432              		.loc 3 573 33 view .LVU1035
 3433 0c32 009A     		ldr	r2, [sp]
 3434 0c34 7244     		add	r2, r2, lr
 3435 0c36 0092     		str	r2, [sp]
 3436 0c38 FFF470AF 		bcc	.L85
 3437              	.LBE754:
 605:./shy_fft.h   ****             {
 3438              		.loc 3 605 13 view .LVU1036
 3439 0c3c 0B9B     		ldr	r3, [sp, #44]
 3440              	.LVL266:
 605:./shy_fft.h   ****             {
 3441              		.loc 3 605 13 view .LVU1037
 3442 0c3e 099A     		ldr	r2, [sp, #36]
 3443 0c40 9342     		cmp	r3, r2
 3444 0c42 00F0A480 		beq	.L107
 612:./shy_fft.h   ****                 d = output;
 3445              		.loc 3 612 19 view .LVU1038
 3446 0c46 DDF83480 		ldr	r8, [sp, #52]
 605:./shy_fft.h   ****             {
 3447              		.loc 3 605 13 view .LVU1039
 3448 0c4a 0993     		str	r3, [sp, #36]
 3449              	.LVL267:
 3450              	.L86:
 605:./shy_fft.h   ****             {
 3451              		.loc 3 605 13 view .LVU1040
 3452              	.LBE728:
 568:./shy_fft.h   ****         {
 3453              		.loc 3 568 9 is_stmt 1 view .LVU1041
 3454 0c4c 0A9B     		ldr	r3, [sp, #40]
 568:./shy_fft.h   ****         {
 3455              		.loc 3 568 48 is_stmt 0 view .LVU1042
 3456 0c4e 049A     		ldr	r2, [sp, #16]
 568:./shy_fft.h   ****         {
 3457              		.loc 3 568 9 view .LVU1043
 3458 0c50 013B     		subs	r3, r3, #1
 568:./shy_fft.h   ****         {
 3459              		.loc 3 568 48 view .LVU1044
 3460 0c52 083A     		subs	r2, r2, #8
 3461 0c54 022B     		cmp	r3, #2
 568:./shy_fft.h   ****         {
 3462              		.loc 3 568 9 view .LVU1045
 3463 0c56 0A93     		str	r3, [sp, #40]
 3464              	.LVL268:
 568:./shy_fft.h   ****         {
 3465              		.loc 3 568 48 is_stmt 1 view .LVU1046
 3466 0c58 0492     		str	r2, [sp, #16]
 3467 0c5a 7FF439AF 		bne	.L87
 3468              	.LBE757:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 116


 618:./shy_fft.h   ****         {
 3469              		.loc 3 618 9 is_stmt 0 view .LVU1047
 3470 0c5e DDF82CA0 		ldr	r10, [sp, #44]
 3471 0c62 099B     		ldr	r3, [sp, #36]
 3472              	.LVL269:
 618:./shy_fft.h   ****         {
 3473              		.loc 3 618 9 view .LVU1048
 3474 0c64 9A45     		cmp	r10, r3
 3475 0c66 00F0C780 		beq	.L157
 3476              	.LVL270:
 3477              	.L88:
 618:./shy_fft.h   ****         {
 3478              		.loc 3 618 9 view .LVU1049
 3479 0c6a 5346     		mov	r3, r10
 3480 0c6c 0D9A     		ldr	r2, [sp, #52]
 3481 0c6e 0AF58041 		add	r1, r10, #16384
 3482              	.LVL271:
 3483              	.L89:
 3484              	.LBB758:
 3485              	.LBB759:
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3486              		.loc 3 628 29 view .LVU1050
 3487 0c72 93ED007A 		vldr.32	s14, [r3]
 3488              	.LBE759:
 625:./shy_fft.h   ****         {
 3489              		.loc 3 625 29 view .LVU1051
 3490 0c76 2032     		adds	r2, r2, #32
 3491              	.LBB760:
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3492              		.loc 3 628 29 view .LVU1052
 3493 0c78 D3ED047A 		vldr.32	s15, [r3, #16]
 3494              	.LBE760:
 625:./shy_fft.h   ****         {
 3495              		.loc 3 625 29 view .LVU1053
 3496 0c7c 2033     		adds	r3, r3, #32
 3497              	.LBB761:
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3498              		.loc 3 636 34 view .LVU1054
 3499 0c7e 1FED736A 		vldr.32	s12, .L163+4
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3500              		.loc 3 628 29 view .LVU1055
 3501 0c82 37EE277A 		vadd.f32	s14, s14, s15
 3502              	.LBE761:
 625:./shy_fft.h   ****         {
 3503              		.loc 3 625 29 view .LVU1056
 3504 0c86 9942     		cmp	r1, r3
 3505              	.LBB762:
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 3506              		.loc 3 628 22 view .LVU1057
 3507 0c88 02ED087A 		vstr.32	s14, [r2, #-32]
 629:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 3508              		.loc 3 629 29 view .LVU1058
 3509 0c8c 53ED047A 		vldr.32	s15, [r3, #-16]
 3510 0c90 13ED087A 		vldr.32	s14, [r3, #-32]
 3511 0c94 37EE677A 		vsub.f32	s14, s14, s15
 629:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 3512              		.loc 3 629 22 view .LVU1059
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 117


 3513 0c98 02ED047A 		vstr.32	s14, [r2, #-16]
 630:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 3514              		.loc 3 630 33 view .LVU1060
 3515 0c9c 13ED067A 		vldr.32	s14, [r3, #-24]
 3516 0ca0 37EE077A 		vadd.f32	s14, s14, s14
 630:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 3517              		.loc 3 630 22 view .LVU1061
 3518 0ca4 02ED067A 		vstr.32	s14, [r2, #-24]
 631:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 3519              		.loc 3 631 33 view .LVU1062
 3520 0ca8 13ED027A 		vldr.32	s14, [r3, #-8]
 3521 0cac 37EE077A 		vadd.f32	s14, s14, s14
 631:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 3522              		.loc 3 631 22 view .LVU1063
 3523 0cb0 02ED027A 		vstr.32	s14, [r2, #-8]
 632:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 3524              		.loc 3 632 33 view .LVU1064
 3525 0cb4 53ED057A 		vldr.32	s15, [r3, #-20]
 3526 0cb8 13ED077A 		vldr.32	s14, [r3, #-28]
 3527 0cbc 37EE277A 		vadd.f32	s14, s14, s15
 632:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 3528              		.loc 3 632 22 view .LVU1065
 3529 0cc0 02ED077A 		vstr.32	s14, [r2, #-28]
 633:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 3530              		.loc 3 633 33 view .LVU1066
 3531 0cc4 53ED017A 		vldr.32	s15, [r3, #-4]
 3532 0cc8 13ED037A 		vldr.32	s14, [r3, #-12]
 3533 0ccc 37EE677A 		vsub.f32	s14, s14, s15
 633:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 3534              		.loc 3 633 22 view .LVU1067
 3535 0cd0 02ED057A 		vstr.32	s14, [r2, #-20]
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3536              		.loc 3 634 22 view .LVU1068
 3537 0cd4 53ED077A 		vldr.32	s15, [r3, #-28]
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3538              		.loc 3 635 22 view .LVU1069
 3539 0cd8 13ED037A 		vldr.32	s14, [r3, #-12]
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3540              		.loc 3 634 22 view .LVU1070
 3541 0cdc 53ED056A 		vldr.32	s13, [r3, #-20]
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3542              		.loc 3 635 22 view .LVU1071
 3543 0ce0 53ED015A 		vldr.32	s11, [r3, #-4]
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 3544              		.loc 3 634 22 view .LVU1072
 3545 0ce4 77EEE66A 		vsub.f32	s13, s15, s13
 3546              	.LVL272:
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3547              		.loc 3 635 22 view .LVU1073
 3548 0ce8 77EE257A 		vadd.f32	s15, s14, s11
 3549              	.LVL273:
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 3550              		.loc 3 635 22 view .LVU1074
 3551              	.LBE762:
 3552              	.LBE758:
 3553              	.LBE784:
 3554              	.LBE789:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 118


 3555              	.LBE794:
 3556              	.LBE799:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 3557              		.loc 3 138 41 is_stmt 1 view .LVU1075
 3558              	.LBB800:
 3559              	.LBB795:
 3560              	.LBB790:
 3561              	.LBB785:
 3562              	.LBB765:
 3563              	.LBB763:
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3564              		.loc 3 636 28 is_stmt 0 view .LVU1076
 3565 0cec 36EEA77A 		vadd.f32	s14, s13, s15
 637:./shy_fft.h   ****         }
 3566              		.loc 3 637 28 view .LVU1077
 3567 0cf0 77EEE67A 		vsub.f32	s15, s15, s13
 3568              	.LVL274:
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3569              		.loc 3 636 34 view .LVU1078
 3570 0cf4 27EE067A 		vmul.f32	s14, s14, s12
 637:./shy_fft.h   ****         }
 3571              		.loc 3 637 34 view .LVU1079
 3572 0cf8 67EE867A 		vmul.f32	s15, s15, s12
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3573              		.loc 3 636 22 view .LVU1080
 3574 0cfc 02ED037A 		vstr.32	s14, [r2, #-12]
 3575              	.LVL275:
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 3576              		.loc 3 636 22 view .LVU1081
 3577              	.LBE763:
 3578              	.LBE765:
 3579              	.LBE785:
 3580              	.LBE790:
 3581              	.LBE795:
 3582              	.LBE800:
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 3583              		.loc 3 138 41 is_stmt 1 view .LVU1082
 3584              	.LBB801:
 3585              	.LBB796:
 3586              	.LBB791:
 3587              	.LBB786:
 3588              	.LBB766:
 3589              	.LBB764:
 637:./shy_fft.h   ****         }
 3590              		.loc 3 637 22 is_stmt 0 view .LVU1083
 3591 0d00 42ED017A 		vstr.32	s15, [r2, #-4]
 3592              	.LBE764:
 625:./shy_fft.h   ****         {
 3593              		.loc 3 625 9 is_stmt 1 view .LVU1084
 625:./shy_fft.h   ****         {
 3594              		.loc 3 625 29 view .LVU1085
 3595 0d04 B5D1     		bne	.L89
 3596 0d06 0023     		movs	r3, #0
 3597 0d08 0D99     		ldr	r1, [sp, #52]
 3598 0d0a 1C46     		mov	r4, r3
 3599 0d0c 1031     		adds	r1, r1, #16
 3600              	.LBE766:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 119


 3601              	.LBB767:
 643:./shy_fft.h   ****         {
 3602              		.loc 3 643 20 is_stmt 0 view .LVU1086
 3603 0d0e 1846     		mov	r0, r3
 3604 0d10 01E0     		b	.L90
 3605              	.LVL276:
 3606              	.L158:
 3607              	.LBB768:
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 3608              		.loc 3 647 49 view .LVU1087
 3609 0d12 A45C     		ldrb	r4, [r4, r2]	@ zero_extendqisi2
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 3610              		.loc 3 647 73 view .LVU1088
 3611 0d14 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3612              	.LVL277:
 3613              	.L90:
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3614              		.loc 3 653 29 view .LVU1089
 3615 0d16 11ED026A 		vldr.32	s12, [r1, #-8]
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3616              		.loc 3 658 25 view .LVU1090
 3617 0d1a F0EE006A 		vmov.f32	s13, #2.0e+0
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3618              		.loc 3 653 22 view .LVU1091
 3619 0d1e 51ED047A 		vldr.32	s15, [r1, #-16]
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 3620              		.loc 3 647 57 view .LVU1092
 3621 0d22 43EA0423 		orr	r3, r3, r4, lsl #8
 3622              	.LVL278:
 655:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 3623              		.loc 3 655 22 view .LVU1093
 3624 0d26 51ED035A 		vldr.32	s11, [r1, #-12]
 3625              	.LBE768:
 643:./shy_fft.h   ****         {
 3626              		.loc 3 643 39 view .LVU1094
 3627 0d2a 0430     		adds	r0, r0, #4
 3628              	.LVL279:
 3629              	.LBB769:
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 3630              		.loc 3 653 15 view .LVU1095
 3631 0d2c 37EE867A 		vadd.f32	s14, s15, s12
 3632              	.LVL280:
 648:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 3633              		.loc 3 648 35 view .LVU1096
 3634 0d30 1B11     		asrs	r3, r3, #4
 654:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 3635              		.loc 3 654 15 view .LVU1097
 3636 0d32 77EEC67A 		vsub.f32	s15, s15, s12
 3637              	.LVL281:
 656:./shy_fft.h   **** 
 3638              		.loc 3 656 22 view .LVU1098
 3639 0d36 11ED016A 		vldr.32	s12, [r1, #-4]
 3640              	.LVL282:
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3641              		.loc 3 658 14 view .LVU1099
 3642 0d3a 9A00     		lsls	r2, r3, #2
 3643              	.LBE769:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 120


 643:./shy_fft.h   ****         {
 3644              		.loc 3 643 29 view .LVU1100
 3645 0d3c B0F5805F 		cmp	r0, #4096
 3646              	.LBB770:
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3647              		.loc 3 658 25 view .LVU1101
 3648 0d40 B0EE475A 		vmov.f32	s10, s14
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3649              		.loc 3 658 14 view .LVU1102
 3650 0d44 0AEB8303 		add	r3, r10, r3, lsl #2
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3651              		.loc 3 659 25 view .LVU1103
 3652 0d48 A5EEE67A 		vfms.f32	s14, s11, s13
 3653              	.LVL283:
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3654              		.loc 3 659 14 view .LVU1104
 3655 0d4c 02F50055 		add	r5, r2, #8192
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3656              		.loc 3 660 14 view .LVU1105
 3657 0d50 02F58054 		add	r4, r2, #4096
 661:./shy_fft.h   ****             s += 4;
 3658              		.loc 3 661 14 view .LVU1106
 3659 0d54 02F54052 		add	r2, r2, #12288
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3660              		.loc 3 658 25 view .LVU1107
 3661 0d58 A5EEA65A 		vfma.f32	s10, s11, s13
 3662              	.LVL284:
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3663              		.loc 3 659 14 view .LVU1108
 3664 0d5c 5544     		add	r5, r5, r10
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3665              		.loc 3 660 25 view .LVU1109
 3666 0d5e F0EE675A 		vmov.f32	s11, s15
 3667              	.LVL285:
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3668              		.loc 3 660 14 view .LVU1110
 3669 0d62 5444     		add	r4, r4, r10
 661:./shy_fft.h   ****             s += 4;
 3670              		.loc 3 661 25 view .LVU1111
 3671 0d64 E6EE667A 		vfms.f32	s15, s12, s13
 3672              	.LVL286:
 661:./shy_fft.h   ****             s += 4;
 3673              		.loc 3 661 14 view .LVU1112
 3674 0d68 5244     		add	r2, r2, r10
 3675              	.LBE770:
 643:./shy_fft.h   ****         {
 3676              		.loc 3 643 29 view .LVU1113
 3677 0d6a 01F11001 		add	r1, r1, #16
 3678              	.LVL287:
 3679              	.LBB771:
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3680              		.loc 3 660 25 view .LVU1114
 3681 0d6e E6EE265A 		vfma.f32	s11, s12, s13
 3682              	.LVL288:
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 3683              		.loc 3 658 19 view .LVU1115
 3684 0d72 83ED005A 		vstr.32	s10, [r3]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 121


 3685              	.LVL289:
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 3686              		.loc 3 647 69 view .LVU1116
 3687 0d76 4FEA1023 		lsr	r3, r0, #8
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 3688              		.loc 3 659 19 view .LVU1117
 3689 0d7a 85ED007A 		vstr.32	s14, [r5]
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 3690              		.loc 3 660 19 view .LVU1118
 3691 0d7e C4ED005A 		vstr.32	s11, [r4]
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 3692              		.loc 3 647 43 view .LVU1119
 3693 0d82 C4B2     		uxtb	r4, r0
 661:./shy_fft.h   ****             s += 4;
 3694              		.loc 3 661 19 view .LVU1120
 3695 0d84 C2ED007A 		vstr.32	s15, [r2]
 3696              	.LVL290:
 661:./shy_fft.h   ****             s += 4;
 3697              		.loc 3 661 19 view .LVU1121
 3698              	.LBE771:
 643:./shy_fft.h   ****         {
 3699              		.loc 3 643 9 is_stmt 1 view .LVU1122
 643:./shy_fft.h   ****         {
 3700              		.loc 3 643 29 view .LVU1123
 3701              	.LBB772:
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 3702              		.loc 3 647 49 is_stmt 0 view .LVU1124
 3703 0d88 204A     		ldr	r2, .L165
 3704              	.LBE772:
 643:./shy_fft.h   ****         {
 3705              		.loc 3 643 29 view .LVU1125
 3706 0d8a C2D1     		bne	.L158
 3707 0d8c BEE4     		b	.L81
 3708              	.LVL291:
 3709              	.L107:
 643:./shy_fft.h   ****         {
 3710              		.loc 3 643 29 view .LVU1126
 3711              	.LBE767:
 3712              	.LBB773:
 3713              	.LBB755:
 608:./shy_fft.h   ****             }
 3714              		.loc 3 608 19 view .LVU1127
 3715 0d8e 0D9B     		ldr	r3, [sp, #52]
 3716 0d90 DDF82C80 		ldr	r8, [sp, #44]
 3717 0d94 0993     		str	r3, [sp, #36]
 3718              	.LVL292:
 608:./shy_fft.h   ****             }
 3719              		.loc 3 608 19 view .LVU1128
 3720 0d96 59E7     		b	.L86
 3721              	.LVL293:
 3722              	.L156:
 608:./shy_fft.h   ****             }
 3723              		.loc 3 608 19 view .LVU1129
 3724              	.LBE755:
 3725              	.LBE773:
 3726              	.LBE786:
 3727              	.LBE791:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 122


 3728              	.LBE796:
 3729              	.LBE801:
 3730              	.LBB802:
 3731              	.LBB600:
 3732              	.LBB592:
 3733              	.LBB584:
 405:./shy_fft.h   ****         {
 3734              		.loc 3 405 9 view .LVU1130
 3735 0d98 DDE90B32 		ldrd	r3, r2, [sp, #44]
 3736              	.LVL294:
 405:./shy_fft.h   ****         {
 3737              		.loc 3 405 9 view .LVU1131
 3738 0d9c 9342     		cmp	r3, r2
 3739 0d9e 09D0     		beq	.L67
 3740              	.LVL295:
 3741              	.LBB576:
 3742              	.LBI521:
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3743              		.loc 2 560 5 is_stmt 1 view .LVU1132
 3744              	.LBB535:
 3745              	.LBB534:
 3746              	.LBI523:
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3747              		.loc 2 511 5 view .LVU1133
 3748              	.LBB533:
 3749              	.LBI524:
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3750              		.loc 2 505 5 view .LVU1134
 3751              	.LBB532:
 3752              	.LBI525:
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3753              		.loc 2 463 5 view .LVU1135
 3754              	.LBB531:
 3755              	.LBB530:
 3756              	.LBI527:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3757              		.loc 2 415 2 view .LVU1136
 3758              	.LBB529:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3759              		.loc 2 426 23 is_stmt 0 view .LVU1137
 3760 0da0 1146     		mov	r1, r2
 3761 0da2 1846     		mov	r0, r3
 3762 0da4 4FF48042 		mov	r2, #16384
 3763              	.LVL296:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3764              		.loc 2 426 23 view .LVU1138
 3765 0da8 FFF7FDBA 		b	.L150
 3766              	.LVL297:
 3767              	.L103:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3768              		.loc 2 426 23 view .LVU1139
 3769              	.LBE529:
 3770              	.LBE530:
 3771              	.LBE531:
 3772              	.LBE532:
 3773              	.LBE533:
 3774              	.LBE534:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 123


 3775              	.LBE535:
 3776              	.LBE576:
 3777              	.LBE584:
 3778              	.LBE592:
 3779              	.LBE600:
 3780              	.LBE802:
 3781              	.LBB803:
 3782              	.LBB511:
 3783              	.LBB505:
 3784              	.LBB499:
 3785              	.LBB493:
 3786              	.LBB492:
 3787              	.LBB491:
 3788              	.LBB490:
 3789              	.LBB489:
 3790              	.LBB488:
 3791              	.LBB487:
 3792 0dac 119B     		ldr	r3, [sp, #68]
 3793 0dae 0C93     		str	r3, [sp, #48]
 3794 0db0 FFF7FEBA 		b	.L60
 3795              	.LVL298:
 3796              	.L67:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3797              		.loc 2 426 23 view .LVU1140
 3798              	.LBE487:
 3799              	.LBE488:
 3800              	.LBE489:
 3801              	.LBE490:
 3802              	.LBE491:
 3803              	.LBE492:
 3804              	.LBE493:
 3805              	.LBE499:
 3806              	.LBE505:
 3807              	.LBE511:
 3808              	.LBE803:
 165:dsp/pvoc/stft.cpp ****     {
 3809              		.loc 1 165 5 is_stmt 1 view .LVU1141
 165:dsp/pvoc/stft.cpp ****     {
 3810              		.loc 1 165 8 is_stmt 0 view .LVU1142
 3811 0db4 0F9B     		ldr	r3, [sp, #60]
 3812 0db6 D86C     		ldr	r0, [r3, #76]
 165:dsp/pvoc/stft.cpp ****     {
 3813              		.loc 1 165 5 view .LVU1143
 3814 0db8 0028     		cmp	r0, #0
 3815 0dba 7FF4FEAA 		bne	.L100
 171:dsp/pvoc/stft.cpp ****     }
 3816              		.loc 1 171 9 is_stmt 1 view .LVU1144
 171:dsp/pvoc/stft.cpp ****     }
 3817              		.loc 1 171 51 is_stmt 0 view .LVU1145
 3818 0dbe 0F9B     		ldr	r3, [sp, #60]
 171:dsp/pvoc/stft.cpp ****     }
 3819              		.loc 1 171 47 view .LVU1146
 3820 0dc0 4FF48042 		mov	r2, #16384
 171:dsp/pvoc/stft.cpp ****     }
 3821              		.loc 1 171 51 view .LVU1147
 3822 0dc4 1B6A     		ldr	r3, [r3, #32]
 3823 0dc6 0D93     		str	r3, [sp, #52]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 124


 3824              	.LVL299:
 3825              	.LBB804:
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3826              		.loc 2 560 5 is_stmt 1 view .LVU1148
 3827              	.LBB720:
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3828              		.loc 2 511 5 view .LVU1149
 3829              	.LBB717:
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3830              		.loc 2 505 5 view .LVU1150
 3831              	.LBB714:
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3832              		.loc 2 463 5 view .LVU1151
 3833              	.LBB711:
 3834              	.LBB708:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3835              		.loc 2 415 2 view .LVU1152
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3836              		.loc 2 415 2 is_stmt 0 view .LVU1153
 3837 0dc8 61E6     		b	.L99
 3838              	.LVL300:
 3839              	.L151:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3840              		.loc 2 415 2 view .LVU1154
 3841              	.LBE708:
 3842              	.LBE711:
 3843              	.LBE714:
 3844              	.LBE717:
 3845              	.LBE720:
 3846              	.LBE804:
 157:dsp/pvoc/stft.cpp ****     }
 3847              		.loc 1 157 21 view .LVU1155
 3848 0dca 4B69     		ldr	r3, [r1, #20]
 3849              	.LVL301:
 157:dsp/pvoc/stft.cpp ****     }
 3850              		.loc 1 157 21 view .LVU1156
 3851 0dcc 0D93     		str	r3, [sp, #52]
 3852 0dce FFF74AB9 		b	.L43
 3853              	.LVL302:
 3854              	.L91:
 225:dsp/pvoc/stft.cpp ****     {
 3855              		.loc 1 225 24 view .LVU1157
 3856 0dd2 0F9B     		ldr	r3, [sp, #60]
 3857 0dd4 1E69     		ldr	r6, [r3, #16]
 3858 0dd6 D9E4     		b	.L95
 3859              	.LVL303:
 3860              	.L105:
 3861              	.LBB805:
 3862              	.LBB676:
 3863              	.LBB670:
 3864              	.LBB664:
 672:./shy_fft.h   ****         T*      d = output;
 3865              		.loc 3 672 17 view .LVU1158
 3866 0dd8 DDF83480 		ldr	r8, [sp, #52]
 3867              	.LVL304:
 3868              	.L71:
 731:./shy_fft.h   ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 125


 3869              		.loc 3 731 32 view .LVU1159
 3870 0ddc 0422     		movs	r2, #4
 3871              	.LVL305:
 3872              	.LBB646:
 3873              	.LBI646:
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3874              		.loc 2 560 5 is_stmt 1 view .LVU1160
 3875              	.LBB647:
 3876              	.LBI647:
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3877              		.loc 2 511 5 view .LVU1161
 3878              	.LBB648:
 3879              	.LBI648:
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3880              		.loc 2 505 5 view .LVU1162
 3881              	.LBB649:
 3882              	.LBI649:
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3883              		.loc 2 463 5 view .LVU1163
 3884              	.LBB650:
 3885              	.LBB651:
 3886              	.LBI651:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3887              		.loc 2 415 2 view .LVU1164
 3888              	.LBB652:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 3889              		.loc 2 425 4 is_stmt 0 view .LVU1165
 3890 0dde 119B     		ldr	r3, [sp, #68]
 3891 0de0 9A40     		lsls	r2, r2, r3
 3892              	.LVL306:
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 3893              		.loc 2 425 4 view .LVU1166
 3894 0de2 3FF4EFAB 		beq	.L80
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3895              		.loc 2 426 23 view .LVU1167
 3896 0de6 4146     		mov	r1, r8
 3897 0de8 0E98     		ldr	r0, [sp, #56]
 3898 0dea FFF7FEFF 		bl	memmove
 3899              	.LVL307:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3900              		.loc 2 426 23 view .LVU1168
 3901              	.LBE652:
 3902              	.LBE651:
 3903              	.LBE650:
 3904              	.LBE649:
 3905              	.LBE648:
 3906              	.LBE647:
 3907              	.LBE646:
 3908              	.LBE664:
 3909              	.LBE670:
 3910              	.LBE676:
 3911              	.LBE805:
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3912              		.loc 1 200 24 view .LVU1169
 3913 0dee 0F9B     		ldr	r3, [sp, #60]
 3914 0df0 5B68     		ldr	r3, [r3, #4]
 3915 0df2 1093     		str	r3, [sp, #64]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 126


 3916              	.LBB806:
 3917              	.LBB677:
 3918              	.LBB671:
 3919              	.LBB665:
 3920              	.LBB659:
 3921              	.LBB658:
 3922              	.LBB657:
 3923              	.LBB656:
 3924              	.LBB655:
 3925              	.LBB654:
 3926              	.LBB653:
 3927 0df4 FFF7E6BB 		b	.L80
 3928              	.LVL308:
 3929              	.L157:
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3930              		.loc 1 200 24 view .LVU1170
 3931              	.LBE653:
 3932              	.LBE654:
 3933              	.LBE655:
 3934              	.LBE656:
 3935              	.LBE657:
 3936              	.LBE658:
 3937              	.LBE659:
 3938              	.LBE665:
 3939              	.LBE671:
 3940              	.LBE677:
 3941              	.LBE806:
 3942              	.LBB807:
 3943              	.LBB797:
 3944              	.LBB792:
 3945              	.LBB787:
 3946              	.LBB774:
 3947              	.LBI774:
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3948              		.loc 2 560 5 is_stmt 1 view .LVU1171
 3949              	.LBB775:
 3950              	.LBB776:
 3951              	.LBI776:
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3952              		.loc 2 511 5 view .LVU1172
 3953              	.LBB777:
 3954              	.LBI777:
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3955              		.loc 2 505 5 view .LVU1173
 3956              	.LBB778:
 3957              	.LBI778:
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 3958              		.loc 2 463 5 view .LVU1174
 3959              	.LBB779:
 3960              	.LBB780:
 3961              	.LBI780:
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 3962              		.loc 2 415 2 view .LVU1175
 3963              	.LBB781:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3964              		.loc 2 426 23 is_stmt 0 view .LVU1176
 3965 0df8 4FF48042 		mov	r2, #16384
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 127


 3966 0dfc 4146     		mov	r1, r8
 3967 0dfe 5046     		mov	r0, r10
 3968 0e00 FFF7FEFF 		bl	memmove
 3969              	.LVL309:
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 3970              		.loc 2 426 23 view .LVU1177
 3971              	.LBE781:
 3972              	.LBE780:
 3973              	.LBE779:
 3974              	.LBE778:
 3975              	.LBE777:
 3976              	.LBE776:
 3977              	.LBE775:
 3978              	.LBE774:
 3979              	.LBE787:
 3980              	.LBE792:
 3981              	.LBE797:
 3982              	.LBE807:
 200:dsp/pvoc/stft.cpp **** #endif // USE_ARM_FFT
 3983              		.loc 1 200 24 view .LVU1178
 3984 0e04 0F9B     		ldr	r3, [sp, #60]
 3985 0e06 5B68     		ldr	r3, [r3, #4]
 3986 0e08 1093     		str	r3, [sp, #64]
 3987              	.LBB808:
 3988              	.LBB798:
 3989              	.LBB793:
 3990              	.LBB788:
 3991              	.LBB783:
 3992              	.LBB782:
 569:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3993              		.loc 2 569 71 view .LVU1179
 3994 0e0a 2EE7     		b	.L88
 3995              	.L166:
 3996              		.align	2
 3997              	.L165:
 3998 0e0c 00000000 		.word	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 3999              	.LBE782:
 4000              	.LBE783:
 4001              	.LBE788:
 4002              	.LBE793:
 4003              	.LBE798:
 4004              	.LBE808:
 4005              		.cfi_endproc
 4006              	.LFE4868:
 4008              		.weak	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
 4009              		.section	.rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E,"aG",%progbits,_ZN6ShyFFT
 4010              		.align	2
 4013              	_ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:
 4014 0000 008040C0 		.ascii	"\000\200@\300 \240`\340\020\220P\3200\260p\360\010\210"
 4014      20A060E0 
 4014      109050D0 
 4014      30B070F0 
 4014      0888
 4015 0012 48C828A8 		.ascii	"H\310(\250h\350\030\230X\3308\270x\370\004\204D\304"
 4015      68E81898 
 4015      58D838B8 
 4015      78F80484 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 128


 4015      44C4
 4016 0024 24A464E4 		.ascii	"$\244d\344\024\224T\3244\264t\364\014\214L\314,\254"
 4016      149454D4 
 4016      34B474F4 
 4016      0C8C4CCC 
 4016      2CAC
 4017 0036 6CEC1C9C 		.ascii	"l\354\034\234\\\334<\274|\374\002\202B\302\"\242b\342"
 4017      5CDC3CBC 
 4017      7CFC0282 
 4017      42C222A2 
 4017      62E2
 4018 0048 129252D2 		.ascii	"\022\222R\3222\262r\362\012\212J\312*\252j\352\032\232"
 4018      32B272F2 
 4018      0A8A4ACA 
 4018      2AAA6AEA 
 4018      1A9A
 4019 005a 5ADA3ABA 		.ascii	"Z\332:\272z\372\006\206F\306&\246f\346\026\226V\326"
 4019      7AFA0686 
 4019      46C626A6 
 4019      66E61696 
 4019      56D6
 4020 006c 36B676F6 		.ascii	"6\266v\366\016\216N\316.\256n\356\036\236^\336>\276"
 4020      0E8E4ECE 
 4020      2EAE6EEE 
 4020      1E9E5EDE 
 4020      3EBE
 4021 007e 7EFE0181 		.ascii	"~\376\001\201A\301!\241a\341\021\221Q\3211\261q\361"
 4021      41C121A1 
 4021      61E11191 
 4021      51D131B1 
 4021      71F1
 4022 0090 098949C9 		.ascii	"\011\211I\311)\251i\351\031\231Y\3319\271y\371\005\205"
 4022      29A969E9 
 4022      199959D9 
 4022      39B979F9 
 4022      0585
 4023 00a2 45C525A5 		.ascii	"E\305%\245e\345\025\225U\3255\265u\365\015\215M\315"
 4023      65E51595 
 4023      55D535B5 
 4023      75F50D8D 
 4023      4DCD
 4024 00b4 2DAD6DED 		.ascii	"-\255m\355\035\235]\335=\275}\375\003\203C\303#\243"
 4024      1D9D5DDD 
 4024      3DBD7DFD 
 4024      038343C3 
 4024      23A3
 4025 00c6 63E31393 		.ascii	"c\343\023\223S\3233\263s\363\013\213K\313+\253k\353"
 4025      53D333B3 
 4025      73F30B8B 
 4025      4BCB2BAB 
 4025      6BEB
 4026 00d8 1B9B5BDB 		.ascii	"\033\233[\333;\273{\373\007\207G\307'\247g\347\027\227"
 4026      3BBB7BFB 
 4026      078747C7 
 4026      27A767E7 
 4026      1797
 4027 00ea 57D737B7 		.ascii	"W\3277\267w\367\017\217O\317/\257o\357\037\237_\337"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 129


 4027      77F70F8F 
 4027      4FCF2FAF 
 4027      6FEF1F9F 
 4027      5FDF
 4028 00fc 3FBF7FFF 		.ascii	"?\277\177\377"
 4029              		.text
 4030              	.Letext0:
 4031              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 4032              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 4033              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdint.h"
 4034              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/incl
 4035              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
 4036              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4037              		.file 11 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4038              		.file 12 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4039              		.file 13 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4040              		.file 14 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4041              		.file 15 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4042              		.file 16 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4043              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4044              		.file 18 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4045              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4046              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4047              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4048              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4049              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4050              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4051              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4052              		.file 26 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4053              		.file 27 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4054              		.file 28 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4055              		.file 29 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 4056              		.file 30 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 4057              		.file 31 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 4058              		.file 32 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 4059              		.file 33 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 4060              		.file 34 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4061              		.file 35 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4062              		.file 36 "../../libDaisy//src/daisy_core.h"
 4063              		.file 37 "../../libDaisy//src/util/wav_format.h"
 4064              		.file 38 "../../libDaisy//src/dev/max11300.h"
 4065              		.file 39 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 4066              		.file 40 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 4067              		.file 41 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
 4068              		.file 42 "../../DaisySP//Source/Control/adenv.h"
 4069              		.file 43 "../../DaisySP//Source/Utility/dsp.h"
 4070              		.file 44 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/wchar.h"
 4071              		.file 45 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/locale.h"
 4072              		.file 46 "./resources.h"
 4073              		.file 47 "../../libDaisy//src/dev/sr_595.h"
 4074              		.file 48 "dsp/pvoc/frame_transformation.h"
 4075              		.file 49 "dsp/pvoc/stft.h"
 4076              		.file 50 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s 			page 130


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stft.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:17     .text._ZN4STFT5ResetEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:26     .text._ZN4STFT5ResetEv:0000000000000000 _ZN4STFT5ResetEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:139    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:147    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:0000000000000000 _ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:437    .text._ZN4STFT4InitEP6ShyFFTIfLj4096E14RotationPhasorEjjPfS4_PKfPsP19FrameTransformation:00000000000000e4 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:444    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:452    .text._ZN4STFT7ProcessERK10ParametersPKfPfjj:0000000000000000 _ZN4STFT7ProcessERK10ParametersPKfPfjj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:662    .text._ZN4STFT6BufferEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:670    .text._ZN4STFT6BufferEv:0000000000000000 _ZN4STFT6BufferEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:1429   .text._ZN4STFT6BufferEv:0000000000000388 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:4013   .rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:0000000000000000 _ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:1436   .text._ZN4STFT6BufferEv:0000000000000390 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:2421   .text._ZN4STFT6BufferEv:00000000000007c0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:2431   .text._ZN4STFT6BufferEv:00000000000007c4 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:3097   .text._ZN4STFT6BufferEv:0000000000000ab0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:3104   .text._ZN4STFT6BufferEv:0000000000000ab8 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:3998   .text._ZN4STFT6BufferEv:0000000000000e0c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccTuF2qj.s:4010   .rodata._ZN6ShyFFTIfLj4096E14RotationPhasorE16bit_rev_256_lut_E:0000000000000000 $d

UNDEFINED SYMBOLS
memset
cosf
sinf
memmove
_ZN19FrameTransformation7ProcessERK10ParametersPfS3_
