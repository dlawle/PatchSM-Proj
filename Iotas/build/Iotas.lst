ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Iotas.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1606:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1606:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev,"axG",%progbits,_ZN5daisy8patch_sm12DaisyPatch
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev:
  52              	.LVL1:
  53              	.LFB2529:
  54              		.file 2 "../../libDaisy//src/daisy_patch_sm.h"
   1:../../libDaisy//src/daisy_patch_sm.h **** #pragma once
   2:../../libDaisy//src/daisy_patch_sm.h **** 
   3:../../libDaisy//src/daisy_patch_sm.h **** #include "daisy.h"
   4:../../libDaisy//src/daisy_patch_sm.h **** 
   5:../../libDaisy//src/daisy_patch_sm.h **** namespace daisy
   6:../../libDaisy//src/daisy_patch_sm.h **** {
   7:../../libDaisy//src/daisy_patch_sm.h **** namespace patch_sm
   8:../../libDaisy//src/daisy_patch_sm.h **** {
   9:../../libDaisy//src/daisy_patch_sm.h ****     /** Accessors for the Analog Controls. 
  10:../../libDaisy//src/daisy_patch_sm.h ****      *  These cover the 8x Bipolar CV inputs
  11:../../libDaisy//src/daisy_patch_sm.h ****      *  as well as the 4x 0-3V3 ADC inputs on
  12:../../libDaisy//src/daisy_patch_sm.h ****      *  the hardware 
  13:../../libDaisy//src/daisy_patch_sm.h ****      * 
  14:../../libDaisy//src/daisy_patch_sm.h ****      *  When reading a value with DaisyPatchSM::GetAdcValue()
  15:../../libDaisy//src/daisy_patch_sm.h ****      * 
  16:../../libDaisy//src/daisy_patch_sm.h ****      *  patch.GetAdcValue(patch_sm::CV_1);
  17:../../libDaisy//src/daisy_patch_sm.h ****      */
  18:../../libDaisy//src/daisy_patch_sm.h ****     enum
  19:../../libDaisy//src/daisy_patch_sm.h ****     {
  20:../../libDaisy//src/daisy_patch_sm.h ****         CV_1 = 0,
  21:../../libDaisy//src/daisy_patch_sm.h ****         CV_2,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 3


  22:../../libDaisy//src/daisy_patch_sm.h ****         CV_3,
  23:../../libDaisy//src/daisy_patch_sm.h ****         CV_4,
  24:../../libDaisy//src/daisy_patch_sm.h ****         CV_5,
  25:../../libDaisy//src/daisy_patch_sm.h ****         CV_6,
  26:../../libDaisy//src/daisy_patch_sm.h ****         CV_7,
  27:../../libDaisy//src/daisy_patch_sm.h ****         CV_8,
  28:../../libDaisy//src/daisy_patch_sm.h ****         ADC_9,
  29:../../libDaisy//src/daisy_patch_sm.h ****         ADC_10,
  30:../../libDaisy//src/daisy_patch_sm.h ****         ADC_11,
  31:../../libDaisy//src/daisy_patch_sm.h ****         ADC_12,
  32:../../libDaisy//src/daisy_patch_sm.h ****         ADC_LAST,
  33:../../libDaisy//src/daisy_patch_sm.h ****     };
  34:../../libDaisy//src/daisy_patch_sm.h **** 
  35:../../libDaisy//src/daisy_patch_sm.h ****     /** Enum for addressing the CV Outputs via the WriteCvOut function. */
  36:../../libDaisy//src/daisy_patch_sm.h ****     enum
  37:../../libDaisy//src/daisy_patch_sm.h ****     {
  38:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_BOTH = 0,
  39:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_1,
  40:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_2,
  41:../../libDaisy//src/daisy_patch_sm.h ****     };
  42:../../libDaisy//src/daisy_patch_sm.h **** 
  43:../../libDaisy//src/daisy_patch_sm.h **** 
  44:../../libDaisy//src/daisy_patch_sm.h ****     /** @brief Board support file for DaisyPatchSM hardware
  45:../../libDaisy//src/daisy_patch_sm.h ****      *  @author shensley
  46:../../libDaisy//src/daisy_patch_sm.h ****      *  @ingroup boards
  47:../../libDaisy//src/daisy_patch_sm.h ****      * 
  48:../../libDaisy//src/daisy_patch_sm.h ****      *  Daisy Patch SM is a complete Eurorack module DSP engine.
  49:../../libDaisy//src/daisy_patch_sm.h ****      *  Based on the Daisy Seed, with circuits added for 
  50:../../libDaisy//src/daisy_patch_sm.h ****      *  interfacing directly with eurorack modular synthesizers.
  51:../../libDaisy//src/daisy_patch_sm.h ****      */
  52:../../libDaisy//src/daisy_patch_sm.h ****     class DaisyPatchSM
  53:../../libDaisy//src/daisy_patch_sm.h ****     {
  54:../../libDaisy//src/daisy_patch_sm.h ****       public:
  55:../../libDaisy//src/daisy_patch_sm.h ****         /** Helper for mapping pins, and accessing them using the `GetPin` function */
  56:../../libDaisy//src/daisy_patch_sm.h ****         enum class PinBank
  57:../../libDaisy//src/daisy_patch_sm.h ****         {
  58:../../libDaisy//src/daisy_patch_sm.h ****             A,
  59:../../libDaisy//src/daisy_patch_sm.h ****             B,
  60:../../libDaisy//src/daisy_patch_sm.h ****             C,
  61:../../libDaisy//src/daisy_patch_sm.h ****             D
  62:../../libDaisy//src/daisy_patch_sm.h ****         };
  63:../../libDaisy//src/daisy_patch_sm.h **** 
  64:../../libDaisy//src/daisy_patch_sm.h ****         DaisyPatchSM() {}
  65:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
  55              		.loc 2 65 9 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB601:
  61              	.LBI601:
  62              		.file 3 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 4


   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn 
  18:../../libDaisy//src/hid/gatein.h ****     Constructor 
  19:../../libDaisy//src/hid/gatein.h ****     */
  20:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  21:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
  22:../../libDaisy//src/hid/gatein.h ****     Destructor 
  23:../../libDaisy//src/hid/gatein.h ****     */
  24:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
  63              		.loc 3 24 5 view .LVU3
  64              		.loc 3 24 5 is_stmt 0 view .LVU4
  65              	.LBE601:
  66              	.LBB602:
  67              	.LBI602:
  68              		.loc 3 24 5 is_stmt 1 view .LVU5
  69              		.loc 3 24 5 is_stmt 0 view .LVU6
  70              	.LBE602:
  71              	.LBB603:
  72              	.LBI603:
  73              		.file 4 "../../libDaisy//src/dev/codec_pcm3060.h"
   1:../../libDaisy//src/dev/codec_pcm3060.h **** #pragma once
   2:../../libDaisy//src/dev/codec_pcm3060.h **** #ifndef DSY_CODEC_PCM3060_H
   3:../../libDaisy//src/dev/codec_pcm3060.h **** #define DSY_CODEC_PCM3060_H
   4:../../libDaisy//src/dev/codec_pcm3060.h **** #include "per/i2c.h"
   5:../../libDaisy//src/dev/codec_pcm3060.h **** namespace daisy
   6:../../libDaisy//src/dev/codec_pcm3060.h **** {
   7:../../libDaisy//src/dev/codec_pcm3060.h **** /**
   8:../../libDaisy//src/dev/codec_pcm3060.h ****  * @brief Driver for the TI PCM3060 Audio Codec.
   9:../../libDaisy//src/dev/codec_pcm3060.h ****  * @addtogroup codec
  10:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  11:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now this is a limited interface that uses I2C to communicate with the PCM3060
  12:../../libDaisy//src/dev/codec_pcm3060.h ****  * The device can also be accessed with SPI, which is not yet supported.
  13:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  14:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now all registers are set to their defaults, and the Init function will 
  15:../../libDaisy//src/dev/codec_pcm3060.h ****  * perform a MRST and SRST before setting the format to 24bit LJ, and disabling 
  16:../../libDaisy//src/dev/codec_pcm3060.h ****  * power save for both the ADC and DAC.
  17:../../libDaisy//src/dev/codec_pcm3060.h ****  *
  18:../../libDaisy//src/dev/codec_pcm3060.h ****  */
  19:../../libDaisy//src/dev/codec_pcm3060.h **** class Pcm3060
  20:../../libDaisy//src/dev/codec_pcm3060.h **** {
  21:../../libDaisy//src/dev/codec_pcm3060.h ****   public:
  22:../../libDaisy//src/dev/codec_pcm3060.h ****     enum class Result
  23:../../libDaisy//src/dev/codec_pcm3060.h ****     {
  24:../../libDaisy//src/dev/codec_pcm3060.h ****         OK,
  25:../../libDaisy//src/dev/codec_pcm3060.h ****         ERR,
  26:../../libDaisy//src/dev/codec_pcm3060.h ****     };
  27:../../libDaisy//src/dev/codec_pcm3060.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 5


  28:../../libDaisy//src/dev/codec_pcm3060.h ****     Pcm3060() {}
  29:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
  74              		.loc 4 29 5 is_stmt 1 view .LVU7
  75              		.loc 4 29 5 is_stmt 0 view .LVU8
  76              	.LBE603:
  77              	.LBB604:
  78              	.LBI604:
  79              		.file 5 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  80              		.loc 5 42 5 is_stmt 1 view .LVU9
  81              		.loc 5 42 5 is_stmt 0 view .LVU10
  82              	.LBE604:
  83              	.LBB605:
  84              	.LBI605:
  85              		.file 6 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 6


   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 7


  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  86              		.loc 6 93 5 is_stmt 1 view .LVU11
  87              		.loc 6 93 5 is_stmt 0 view .LVU12
  88              	.LBE605:
  89              	.LBB606:
  90              	.LBI606:
  91              		.file 7 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 8


  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 9


  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  92              		.loc 7 96 5 is_stmt 1 view .LVU13
  93              		.loc 7 96 5 is_stmt 0 view .LVU14
  94              	.LBE606:
  95              	.LBB607:
  96              	.LBI607:
  97              		.file 8 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 10


  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
  98              		.loc 8 78 5 is_stmt 1 view .LVU15
  99              		.loc 8 78 5 is_stmt 0 view .LVU16
 100              	.LBE607:
 101              		.loc 2 65 26 view .LVU17
 102 0000 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE2529:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 11


 106              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 107              		.thumb_set _ZN5daisy8patch_sm12DaisyPatchSMD1Ev,_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
 108 0002 00BF     		.section	.text._ZN23GranularProcessorCloudsD2Ev,"axG",%progbits,_ZN23GranularProcessorCloudsD5Ev,c
 109              		.align	1
 110              		.p2align 2,,3
 111              		.weak	_ZN23GranularProcessorCloudsD2Ev
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-d16
 117              	_ZN23GranularProcessorCloudsD2Ev:
 118              	.LVL2:
 119              	.LFB5053:
 120              		.file 9 "dsp/granular_processor.h"
   1:dsp/granular_processor.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/granular_processor.h **** //
   3:dsp/granular_processor.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/granular_processor.h **** //
   5:dsp/granular_processor.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/granular_processor.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/granular_processor.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/granular_processor.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/granular_processor.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/granular_processor.h **** // furnished to do so, subject to the following conditions:
  11:dsp/granular_processor.h **** //
  12:dsp/granular_processor.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/granular_processor.h **** // all copies or substantial portions of the Software.
  14:dsp/granular_processor.h **** //
  15:dsp/granular_processor.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/granular_processor.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/granular_processor.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/granular_processor.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/granular_processor.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/granular_processor.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/granular_processor.h **** // THE SOFTWARE.
  22:dsp/granular_processor.h **** //
  23:dsp/granular_processor.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/granular_processor.h **** //
  25:dsp/granular_processor.h **** // -----------------------------------------------------------------------------
  26:dsp/granular_processor.h **** //
  27:dsp/granular_processor.h **** // Main processing class.
  28:dsp/granular_processor.h **** 
  29:dsp/granular_processor.h **** #ifndef CLOUDS_DSP_GRANULAR_PROCESSOR_H_
  30:dsp/granular_processor.h **** #define CLOUDS_DSP_GRANULAR_PROCESSOR_H_
  31:dsp/granular_processor.h **** 
  32:dsp/granular_processor.h **** #include "correlator.h"
  33:dsp/granular_processor.h **** #include "frame.h"
  34:dsp/granular_processor.h **** #include "fx/diffuser.h"
  35:dsp/granular_processor.h **** #include "pitch_shifter.h"
  36:dsp/granular_processor.h **** #include "reverb.h"
  37:dsp/granular_processor.h **** #include "granular_processor.h"
  38:dsp/granular_processor.h **** #include "granular_sample_player.h"
  39:dsp/granular_processor.h **** #include "looping_sample_player.h"
  40:dsp/granular_processor.h **** #include "pvoc/phase_vocoder.h"
  41:dsp/granular_processor.h **** #include "sample_rate_converter.h"
  42:dsp/granular_processor.h **** #include "wsola_sample_player.h"
  43:dsp/granular_processor.h **** #include "parameter_interpolator.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 12


  44:dsp/granular_processor.h **** 
  45:dsp/granular_processor.h **** using namespace daisysp;
  46:dsp/granular_processor.h **** 
  47:dsp/granular_processor.h **** const int32_t kDownsamplingFactor = 2;
  48:dsp/granular_processor.h **** 
  49:dsp/granular_processor.h **** enum PlaybackMode
  50:dsp/granular_processor.h **** {
  51:dsp/granular_processor.h ****     PLAYBACK_MODE_GRANULAR,
  52:dsp/granular_processor.h ****     PLAYBACK_MODE_STRETCH,
  53:dsp/granular_processor.h ****     PLAYBACK_MODE_LOOPING_DELAY,
  54:dsp/granular_processor.h ****     PLAYBACK_MODE_SPECTRAL,
  55:dsp/granular_processor.h ****     PLAYBACK_MODE_LAST
  56:dsp/granular_processor.h **** };
  57:dsp/granular_processor.h **** 
  58:dsp/granular_processor.h **** // State of the recording buffer as saved in one of the 4 sample memories.
  59:dsp/granular_processor.h **** struct PersistentState
  60:dsp/granular_processor.h **** {
  61:dsp/granular_processor.h ****     int32_t write_head[2];
  62:dsp/granular_processor.h ****     uint8_t quality;
  63:dsp/granular_processor.h ****     uint8_t spectral;
  64:dsp/granular_processor.h **** };
  65:dsp/granular_processor.h **** 
  66:dsp/granular_processor.h **** // Data block as saved in one of the 4 sample memories.
  67:dsp/granular_processor.h **** struct PersistentBlock
  68:dsp/granular_processor.h **** {
  69:dsp/granular_processor.h ****     uint32_t tag;
  70:dsp/granular_processor.h ****     uint32_t size;
  71:dsp/granular_processor.h ****     void*    data;
  72:dsp/granular_processor.h **** };
  73:dsp/granular_processor.h **** 
  74:dsp/granular_processor.h **** class GranularProcessorClouds
  75:dsp/granular_processor.h **** {
  76:dsp/granular_processor.h ****   public:
  77:dsp/granular_processor.h ****     GranularProcessorClouds() {}
  78:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 121              		.loc 9 78 5 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LBB608:
 127              	.LBI608:
 128              		.file 10 "dsp/sample_rate_converter.h"
   1:dsp/sample_rate_converter.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/sample_rate_converter.h **** //
   3:dsp/sample_rate_converter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/sample_rate_converter.h **** //
   5:dsp/sample_rate_converter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/sample_rate_converter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/sample_rate_converter.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/sample_rate_converter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/sample_rate_converter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/sample_rate_converter.h **** // furnished to do so, subject to the following conditions:
  11:dsp/sample_rate_converter.h **** //
  12:dsp/sample_rate_converter.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/sample_rate_converter.h **** // all copies or substantial portions of the Software.
  14:dsp/sample_rate_converter.h **** //
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 13


  15:dsp/sample_rate_converter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/sample_rate_converter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/sample_rate_converter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/sample_rate_converter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/sample_rate_converter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/sample_rate_converter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/sample_rate_converter.h **** // THE SOFTWARE.
  22:dsp/sample_rate_converter.h **** //
  23:dsp/sample_rate_converter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/sample_rate_converter.h **** //
  25:dsp/sample_rate_converter.h **** // -----------------------------------------------------------------------------
  26:dsp/sample_rate_converter.h **** //
  27:dsp/sample_rate_converter.h **** // Sample rate converter
  28:dsp/sample_rate_converter.h **** 
  29:dsp/sample_rate_converter.h **** #ifndef CLOUDS_DSP_SAMPLE_RATE_CONVERTER_H_
  30:dsp/sample_rate_converter.h **** #define CLOUDS_DSP_SAMPLE_RATE_CONVERTER_H_
  31:dsp/sample_rate_converter.h **** 
  32:dsp/sample_rate_converter.h **** #include "frame.h"
  33:dsp/sample_rate_converter.h **** 
  34:dsp/sample_rate_converter.h **** using namespace daisysp;
  35:dsp/sample_rate_converter.h **** 
  36:dsp/sample_rate_converter.h **** template <int32_t ratio, int32_t filter_size, const float* coefficients>
  37:dsp/sample_rate_converter.h **** class SampleRateConverter
  38:dsp/sample_rate_converter.h **** {
  39:dsp/sample_rate_converter.h ****   public:
  40:dsp/sample_rate_converter.h ****     SampleRateConverter() {}
  41:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 129              		.loc 10 41 5 view .LVU19
 130              		.loc 10 41 5 is_stmt 0 view .LVU20
 131              	.LBE608:
 132              	.LBB609:
 133              	.LBI609:
 134              		.loc 10 41 5 is_stmt 1 view .LVU21
 135              		.loc 10 41 5 is_stmt 0 view .LVU22
 136              	.LBE609:
 137              	.LBB610:
 138              	.LBI610:
 139              		.file 11 "dsp/fx/pitch_shifter.h"
   1:dsp/fx/pitch_shifter.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/pitch_shifter.h **** //
   3:dsp/fx/pitch_shifter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/pitch_shifter.h **** //
   5:dsp/fx/pitch_shifter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/pitch_shifter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/pitch_shifter.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/pitch_shifter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/pitch_shifter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/pitch_shifter.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/pitch_shifter.h **** //
  12:dsp/fx/pitch_shifter.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/pitch_shifter.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/pitch_shifter.h **** //
  15:dsp/fx/pitch_shifter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/pitch_shifter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/pitch_shifter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/pitch_shifter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/pitch_shifter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 14


  20:dsp/fx/pitch_shifter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/pitch_shifter.h **** // THE SOFTWARE.
  22:dsp/fx/pitch_shifter.h **** //
  23:dsp/fx/pitch_shifter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/pitch_shifter.h **** //
  25:dsp/fx/pitch_shifter.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/pitch_shifter.h **** //
  27:dsp/fx/pitch_shifter.h **** // Pitch shifter.
  28:dsp/fx/pitch_shifter.h **** 
  29:dsp/fx/pitch_shifter.h **** #ifndef CLOUDS_DSP_FX_PITCH_SHIFTER_H_
  30:dsp/fx/pitch_shifter.h **** #define CLOUDS_DSP_FX_PITCH_SHIFTER_H_
  31:dsp/fx/pitch_shifter.h **** 
  32:dsp/fx/pitch_shifter.h **** 
  33:dsp/fx/pitch_shifter.h **** #include "frame.h"
  34:dsp/fx/pitch_shifter.h **** #include "fx_engine.h"
  35:dsp/fx/pitch_shifter.h **** 
  36:dsp/fx/pitch_shifter.h **** using namespace daisysp;
  37:dsp/fx/pitch_shifter.h **** 
  38:dsp/fx/pitch_shifter.h **** class PitchShifterClouds
  39:dsp/fx/pitch_shifter.h **** {
  40:dsp/fx/pitch_shifter.h ****   public:
  41:dsp/fx/pitch_shifter.h ****     PitchShifterClouds() {}
  42:dsp/fx/pitch_shifter.h ****     ~PitchShifterClouds() {}
 140              		.loc 11 42 5 is_stmt 1 view .LVU23
 141              	.LBB611:
 142              	.LBI611:
 143              		.file 12 "dsp/fx/fx_engine.h"
   1:dsp/fx/fx_engine.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/fx_engine.h **** //
   3:dsp/fx/fx_engine.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/fx_engine.h **** //
   5:dsp/fx/fx_engine.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/fx_engine.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/fx_engine.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/fx_engine.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/fx_engine.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/fx_engine.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/fx_engine.h **** //
  12:dsp/fx/fx_engine.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/fx_engine.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/fx_engine.h **** //
  15:dsp/fx/fx_engine.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/fx_engine.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/fx_engine.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/fx_engine.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/fx_engine.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/fx_engine.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/fx_engine.h **** // THE SOFTWARE.
  22:dsp/fx/fx_engine.h **** //
  23:dsp/fx/fx_engine.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/fx_engine.h **** //
  25:dsp/fx/fx_engine.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/fx_engine.h **** //
  27:dsp/fx/fx_engine.h **** // Base class for building reverbs.
  28:dsp/fx/fx_engine.h **** 
  29:dsp/fx/fx_engine.h **** #ifndef CLOUDS_DSP_FX_FX_ENGINE_H_
  30:dsp/fx/fx_engine.h **** #define CLOUDS_DSP_FX_FX_ENGINE_H_
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 15


  31:dsp/fx/fx_engine.h **** 
  32:dsp/fx/fx_engine.h **** #include <algorithm>
  33:dsp/fx/fx_engine.h **** #include "stmtemp.h"
  34:dsp/fx/fx_engine.h **** 
  35:dsp/fx/fx_engine.h **** using namespace daisysp;
  36:dsp/fx/fx_engine.h **** 
  37:dsp/fx/fx_engine.h **** #define TAIL , -1
  38:dsp/fx/fx_engine.h **** 
  39:dsp/fx/fx_engine.h **** enum Format
  40:dsp/fx/fx_engine.h **** {
  41:dsp/fx/fx_engine.h ****     FORMAT_12_BIT,
  42:dsp/fx/fx_engine.h ****     FORMAT_16_BIT,
  43:dsp/fx/fx_engine.h ****     FORMAT_32_BIT
  44:dsp/fx/fx_engine.h **** };
  45:dsp/fx/fx_engine.h **** 
  46:dsp/fx/fx_engine.h **** enum LFOIndex
  47:dsp/fx/fx_engine.h **** {
  48:dsp/fx/fx_engine.h ****     LFO_1,
  49:dsp/fx/fx_engine.h ****     LFO_2
  50:dsp/fx/fx_engine.h **** };
  51:dsp/fx/fx_engine.h **** 
  52:dsp/fx/fx_engine.h **** template <Format format>
  53:dsp/fx/fx_engine.h **** struct DataType
  54:dsp/fx/fx_engine.h **** {
  55:dsp/fx/fx_engine.h **** };
  56:dsp/fx/fx_engine.h **** 
  57:dsp/fx/fx_engine.h **** template <>
  58:dsp/fx/fx_engine.h **** struct DataType<FORMAT_12_BIT>
  59:dsp/fx/fx_engine.h **** {
  60:dsp/fx/fx_engine.h ****     typedef uint16_t T;
  61:dsp/fx/fx_engine.h **** 
  62:dsp/fx/fx_engine.h ****     static inline float Decompress(T value)
  63:dsp/fx/fx_engine.h ****     {
  64:dsp/fx/fx_engine.h ****         return static_cast<float>(static_cast<int16_t>(value)) / 4096.0f;
  65:dsp/fx/fx_engine.h ****     }
  66:dsp/fx/fx_engine.h **** 
  67:dsp/fx/fx_engine.h ****     static inline T Compress(float value)
  68:dsp/fx/fx_engine.h ****     {
  69:dsp/fx/fx_engine.h ****         return static_cast<uint16_t>(
  70:dsp/fx/fx_engine.h ****             Clip16(static_cast<int32_t>(value * 4096.0f)));
  71:dsp/fx/fx_engine.h ****     }
  72:dsp/fx/fx_engine.h **** };
  73:dsp/fx/fx_engine.h **** 
  74:dsp/fx/fx_engine.h **** template <>
  75:dsp/fx/fx_engine.h **** struct DataType<FORMAT_16_BIT>
  76:dsp/fx/fx_engine.h **** {
  77:dsp/fx/fx_engine.h ****     typedef uint16_t T;
  78:dsp/fx/fx_engine.h **** 
  79:dsp/fx/fx_engine.h ****     static inline float Decompress(T value)
  80:dsp/fx/fx_engine.h ****     {
  81:dsp/fx/fx_engine.h ****         return static_cast<float>(static_cast<int16_t>(value)) / 32768.0f;
  82:dsp/fx/fx_engine.h ****     }
  83:dsp/fx/fx_engine.h **** 
  84:dsp/fx/fx_engine.h ****     static inline T Compress(float value)
  85:dsp/fx/fx_engine.h ****     {
  86:dsp/fx/fx_engine.h ****         return static_cast<uint16_t>(
  87:dsp/fx/fx_engine.h ****             Clip16(static_cast<int32_t>(value * 32768.0f)));
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 16


  88:dsp/fx/fx_engine.h ****     }
  89:dsp/fx/fx_engine.h **** };
  90:dsp/fx/fx_engine.h **** 
  91:dsp/fx/fx_engine.h **** template <>
  92:dsp/fx/fx_engine.h **** struct DataType<FORMAT_32_BIT>
  93:dsp/fx/fx_engine.h **** {
  94:dsp/fx/fx_engine.h ****     typedef float T;
  95:dsp/fx/fx_engine.h **** 
  96:dsp/fx/fx_engine.h ****     static inline float Decompress(T value)
  97:dsp/fx/fx_engine.h ****     {
  98:dsp/fx/fx_engine.h ****         return value;
  99:dsp/fx/fx_engine.h ****         ;
 100:dsp/fx/fx_engine.h ****     }
 101:dsp/fx/fx_engine.h **** 
 102:dsp/fx/fx_engine.h ****     static inline T Compress(float value) { return value; }
 103:dsp/fx/fx_engine.h **** };
 104:dsp/fx/fx_engine.h **** 
 105:dsp/fx/fx_engine.h **** template <size_t size, Format format = FORMAT_12_BIT>
 106:dsp/fx/fx_engine.h **** class FxEngine
 107:dsp/fx/fx_engine.h **** {
 108:dsp/fx/fx_engine.h ****   public:
 109:dsp/fx/fx_engine.h ****     typedef typename DataType<format>::T T;
 110:dsp/fx/fx_engine.h ****     FxEngine() {}
 111:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 144              		.loc 12 111 5 view .LVU24
 145              		.loc 12 111 5 is_stmt 0 view .LVU25
 146              	.LBE611:
 147              	.LBE610:
 148              	.LBB612:
 149              	.LBI612:
 150              		.file 13 "dsp/fx/reverb.h"
   1:dsp/fx/reverb.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/reverb.h **** //
   3:dsp/fx/reverb.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/reverb.h **** //
   5:dsp/fx/reverb.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/reverb.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/reverb.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/reverb.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/reverb.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/reverb.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/reverb.h **** //
  12:dsp/fx/reverb.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/reverb.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/reverb.h **** //
  15:dsp/fx/reverb.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/reverb.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/reverb.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/reverb.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/reverb.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/reverb.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/reverb.h **** // THE SOFTWARE.
  22:dsp/fx/reverb.h **** //
  23:dsp/fx/reverb.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/reverb.h **** //
  25:dsp/fx/reverb.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/reverb.h **** //
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 17


  27:dsp/fx/reverb.h **** // Reverb.
  28:dsp/fx/reverb.h **** 
  29:dsp/fx/reverb.h **** #ifndef CLOUDS_DSP_FX_REVERB_H_
  30:dsp/fx/reverb.h **** #define CLOUDS_DSP_FX_REVERB_H_
  31:dsp/fx/reverb.h **** 
  32:dsp/fx/reverb.h **** 
  33:dsp/fx/reverb.h **** #include "fx_engine.h"
  34:dsp/fx/reverb.h **** 
  35:dsp/fx/reverb.h **** using namespace daisysp;
  36:dsp/fx/reverb.h **** 
  37:dsp/fx/reverb.h **** class Reverb
  38:dsp/fx/reverb.h **** {
  39:dsp/fx/reverb.h ****   public:
  40:dsp/fx/reverb.h ****     Reverb() {}
  41:dsp/fx/reverb.h ****     ~Reverb() {}
 151              		.loc 13 41 5 is_stmt 1 view .LVU26
 152              	.LBB613:
 153              	.LBI613:
 154              		.loc 12 111 5 view .LVU27
 155              		.loc 12 111 5 is_stmt 0 view .LVU28
 156              	.LBE613:
 157              	.LBE612:
 158              	.LBB614:
 159              	.LBI614:
 160              		.file 14 "dsp/fx/diffuser.h"
   1:dsp/fx/diffuser.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/diffuser.h **** //
   3:dsp/fx/diffuser.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/diffuser.h **** //
   5:dsp/fx/diffuser.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/diffuser.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/diffuser.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/diffuser.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/diffuser.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/diffuser.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/diffuser.h **** //
  12:dsp/fx/diffuser.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/diffuser.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/diffuser.h **** //
  15:dsp/fx/diffuser.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/diffuser.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/diffuser.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/diffuser.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/diffuser.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/diffuser.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/diffuser.h **** // THE SOFTWARE.
  22:dsp/fx/diffuser.h **** //
  23:dsp/fx/diffuser.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/diffuser.h **** //
  25:dsp/fx/diffuser.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/diffuser.h **** //
  27:dsp/fx/diffuser.h **** // AP diffusion network.
  28:dsp/fx/diffuser.h **** 
  29:dsp/fx/diffuser.h **** #ifndef CLOUDS_DSP_FX_DIFFUSER_H_
  30:dsp/fx/diffuser.h **** #define CLOUDS_DSP_FX_DIFFUSER_H_
  31:dsp/fx/diffuser.h **** 
  32:dsp/fx/diffuser.h **** #include "fx_engine.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 18


  33:dsp/fx/diffuser.h **** 
  34:dsp/fx/diffuser.h **** using namespace daisysp;
  35:dsp/fx/diffuser.h **** 
  36:dsp/fx/diffuser.h **** class Diffuser
  37:dsp/fx/diffuser.h **** {
  38:dsp/fx/diffuser.h ****   public:
  39:dsp/fx/diffuser.h ****     Diffuser() {}
  40:dsp/fx/diffuser.h ****     ~Diffuser() {}
 161              		.loc 14 40 5 is_stmt 1 view .LVU29
 162              	.LBB615:
 163              	.LBI615:
 164              		.loc 12 111 5 view .LVU30
 165              		.loc 12 111 5 is_stmt 0 view .LVU31
 166              	.LBE615:
 167              	.LBE614:
 168              	.LBB616:
 169              	.LBI616:
 170              		.file 15 "dsp/pvoc/phase_vocoder.h"
   1:dsp/pvoc/phase_vocoder.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/phase_vocoder.h **** //
   3:dsp/pvoc/phase_vocoder.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/phase_vocoder.h **** //
   5:dsp/pvoc/phase_vocoder.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/phase_vocoder.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/phase_vocoder.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/phase_vocoder.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/phase_vocoder.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/phase_vocoder.h **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/phase_vocoder.h **** //
  12:dsp/pvoc/phase_vocoder.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/phase_vocoder.h **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/phase_vocoder.h **** //
  15:dsp/pvoc/phase_vocoder.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/phase_vocoder.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/phase_vocoder.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/phase_vocoder.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/phase_vocoder.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/pvoc/phase_vocoder.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/phase_vocoder.h **** // THE SOFTWARE.
  22:dsp/pvoc/phase_vocoder.h **** //
  23:dsp/pvoc/phase_vocoder.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/phase_vocoder.h **** //
  25:dsp/pvoc/phase_vocoder.h **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/phase_vocoder.h **** //
  27:dsp/pvoc/phase_vocoder.h **** // Naive phase vocoder.
  28:dsp/pvoc/phase_vocoder.h **** 
  29:dsp/pvoc/phase_vocoder.h **** #ifndef CLOUDS_DSP_PVOC_PHASE_VOCODER_H_
  30:dsp/pvoc/phase_vocoder.h **** #define CLOUDS_DSP_PVOC_PHASE_VOCODER_H_
  31:dsp/pvoc/phase_vocoder.h **** 
  32:dsp/pvoc/phase_vocoder.h **** #include "frame.h"
  33:dsp/pvoc/phase_vocoder.h **** #include "stft.h"
  34:dsp/pvoc/phase_vocoder.h **** #include "frame_transformation.h"
  35:dsp/pvoc/phase_vocoder.h **** 
  36:dsp/pvoc/phase_vocoder.h **** using namespace daisysp;
  37:dsp/pvoc/phase_vocoder.h **** 
  38:dsp/pvoc/phase_vocoder.h **** struct Parameters;
  39:dsp/pvoc/phase_vocoder.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 19


  40:dsp/pvoc/phase_vocoder.h **** class PhaseVocoder
  41:dsp/pvoc/phase_vocoder.h **** {
  42:dsp/pvoc/phase_vocoder.h ****   public:
  43:dsp/pvoc/phase_vocoder.h ****     PhaseVocoder() {}
  44:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 171              		.loc 15 44 5 is_stmt 1 view .LVU32
 172              	.LBB617:
 173              	.LBI617:
 174              		.file 16 "./shy_fft.h"
   1:./shy_fft.h   **** // Copyright 2014 Emilie Gillet.
   2:./shy_fft.h   **** //
   3:./shy_fft.h   **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./shy_fft.h   **** //
   5:./shy_fft.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./shy_fft.h   **** // of this software and associated documentation files (the "Software"), to deal
   7:./shy_fft.h   **** // in the Software without restriction, including without limitation the rights
   8:./shy_fft.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./shy_fft.h   **** // copies of the Software, and to permit persons to whom the Software is
  10:./shy_fft.h   **** // furnished to do so, subject to the following conditions:
  11:./shy_fft.h   **** //
  12:./shy_fft.h   **** // The above copyright notice and this permission notice shall be included in
  13:./shy_fft.h   **** // all copies or substantial portions of the Software.
  14:./shy_fft.h   **** //
  15:./shy_fft.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./shy_fft.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./shy_fft.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./shy_fft.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./shy_fft.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./shy_fft.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./shy_fft.h   **** // THE SOFTWARE.
  22:./shy_fft.h   **** //
  23:./shy_fft.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./shy_fft.h   **** //
  25:./shy_fft.h   **** // -----------------------------------------------------------------------------
  26:./shy_fft.h   **** //
  27:./shy_fft.h   **** // A modest implementation of real FFT for embedded audio applications,
  28:./shy_fft.h   **** // largely based on Laurent de Soras' FFTReal.
  29:./shy_fft.h   **** //
  30:./shy_fft.h   **** // Improvements:
  31:./shy_fft.h   **** // * No dynamic allocations.
  32:./shy_fft.h   **** // * No additional buffering (can use the input buffer as a workspace).
  33:./shy_fft.h   **** // * No big bitrev lookup table.
  34:./shy_fft.h   **** // * Keep the fixed size template signature, but also provide method for
  35:./shy_fft.h   **** //   variable size (up to the fixed size).
  36:./shy_fft.h   **** 
  37:./shy_fft.h   **** #ifndef STMLIB_FFT_SHY_FFT_H_
  38:./shy_fft.h   **** #define STMLIB_FFT_SHY_FFT_H_
  39:./shy_fft.h   **** 
  40:./shy_fft.h   **** #include <algorithm>
  41:./shy_fft.h   **** #include <cmath>
  42:./shy_fft.h   **** #include <stdint.h>
  43:./shy_fft.h   **** 
  44:./shy_fft.h   **** // Compile-time log 2
  45:./shy_fft.h   **** template <size_t x>
  46:./shy_fft.h   **** struct Log2
  47:./shy_fft.h   **** {
  48:./shy_fft.h   ****     enum
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 20


  49:./shy_fft.h   ****     {
  50:./shy_fft.h   ****         value = Log2<x / 2>::value + 1
  51:./shy_fft.h   ****     };
  52:./shy_fft.h   ****     typedef char CheckPowerOf2[((x & (x - 1)) == 0 ? 1 : -1)];
  53:./shy_fft.h   **** };
  54:./shy_fft.h   **** 
  55:./shy_fft.h   **** template <>
  56:./shy_fft.h   **** struct Log2<1>
  57:./shy_fft.h   **** {
  58:./shy_fft.h   ****     enum
  59:./shy_fft.h   ****     {
  60:./shy_fft.h   ****         value = 0
  61:./shy_fft.h   ****     };
  62:./shy_fft.h   **** };
  63:./shy_fft.h   **** 
  64:./shy_fft.h   **** 
  65:./shy_fft.h   **** // Bit reversal LUT size.
  66:./shy_fft.h   **** template <size_t>
  67:./shy_fft.h   **** struct BitReversalLut
  68:./shy_fft.h   **** {
  69:./shy_fft.h   ****     enum
  70:./shy_fft.h   ****     {
  71:./shy_fft.h   ****         size = 1
  72:./shy_fft.h   ****     };
  73:./shy_fft.h   **** };
  74:./shy_fft.h   **** template <>
  75:./shy_fft.h   **** struct BitReversalLut<3>
  76:./shy_fft.h   **** {
  77:./shy_fft.h   ****     enum
  78:./shy_fft.h   ****     {
  79:./shy_fft.h   ****         size = 2
  80:./shy_fft.h   ****     };
  81:./shy_fft.h   **** };
  82:./shy_fft.h   **** template <>
  83:./shy_fft.h   **** struct BitReversalLut<4>
  84:./shy_fft.h   **** {
  85:./shy_fft.h   ****     enum
  86:./shy_fft.h   ****     {
  87:./shy_fft.h   ****         size = 4
  88:./shy_fft.h   ****     };
  89:./shy_fft.h   **** };
  90:./shy_fft.h   **** template <>
  91:./shy_fft.h   **** struct BitReversalLut<5>
  92:./shy_fft.h   **** {
  93:./shy_fft.h   ****     enum
  94:./shy_fft.h   ****     {
  95:./shy_fft.h   ****         size = 8
  96:./shy_fft.h   ****     };
  97:./shy_fft.h   **** };
  98:./shy_fft.h   **** template <>
  99:./shy_fft.h   **** struct BitReversalLut<6>
 100:./shy_fft.h   **** {
 101:./shy_fft.h   ****     enum
 102:./shy_fft.h   ****     {
 103:./shy_fft.h   ****         size = 16
 104:./shy_fft.h   ****     };
 105:./shy_fft.h   **** };
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 21


 106:./shy_fft.h   **** template <>
 107:./shy_fft.h   **** struct BitReversalLut<7>
 108:./shy_fft.h   **** {
 109:./shy_fft.h   ****     enum
 110:./shy_fft.h   ****     {
 111:./shy_fft.h   ****         size = 32
 112:./shy_fft.h   ****     };
 113:./shy_fft.h   **** };
 114:./shy_fft.h   **** template <>
 115:./shy_fft.h   **** struct BitReversalLut<8>
 116:./shy_fft.h   **** {
 117:./shy_fft.h   ****     enum
 118:./shy_fft.h   ****     {
 119:./shy_fft.h   ****         size = 64
 120:./shy_fft.h   ****     };
 121:./shy_fft.h   **** };
 122:./shy_fft.h   **** 
 123:./shy_fft.h   **** 
 124:./shy_fft.h   **** // Typed math functions and constants.
 125:./shy_fft.h   **** template <typename T>
 126:./shy_fft.h   **** struct Math
 127:./shy_fft.h   **** {
 128:./shy_fft.h   ****     inline T pi() const;
 129:./shy_fft.h   ****     inline T sqrt_2_div_2() const;
 130:./shy_fft.h   ****     inline T cos(T x);
 131:./shy_fft.h   ****     inline T sin(T x);
 132:./shy_fft.h   **** };
 133:./shy_fft.h   **** 
 134:./shy_fft.h   **** template <>
 135:./shy_fft.h   **** struct Math<float>
 136:./shy_fft.h   **** {
 137:./shy_fft.h   ****     inline float pi() const { return 3.141592653589793f; }
 138:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 139:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 140:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 141:./shy_fft.h   **** };
 142:./shy_fft.h   **** 
 143:./shy_fft.h   **** template <>
 144:./shy_fft.h   **** struct Math<double>
 145:./shy_fft.h   **** {
 146:./shy_fft.h   ****     inline double pi() const { return 3.141592653589793; }
 147:./shy_fft.h   ****     inline float  sqrt_2_div_2() const { return 0.7071067811865476; }
 148:./shy_fft.h   ****     inline double cos(double x) { return cos(x); }
 149:./shy_fft.h   ****     inline double sin(double x) { return sin(x); }
 150:./shy_fft.h   **** };
 151:./shy_fft.h   **** 
 152:./shy_fft.h   **** 
 153:./shy_fft.h   **** // Look-up table for trigonometric data.
 154:./shy_fft.h   **** template <typename T, size_t num_passes>
 155:./shy_fft.h   **** class LutPhasor
 156:./shy_fft.h   **** {
 157:./shy_fft.h   ****   public:
 158:./shy_fft.h   ****     LutPhasor() {}
 159:./shy_fft.h   ****     ~LutPhasor() {}
 160:./shy_fft.h   **** 
 161:./shy_fft.h   ****     void Init()
 162:./shy_fft.h   ****     {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 22


 163:./shy_fft.h   ****         Math<T> math;
 164:./shy_fft.h   **** 
 165:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 166:./shy_fft.h   ****         {
 167:./shy_fft.h   ****             size_t pass_size = 1L << (pass - 1);
 168:./shy_fft.h   ****             T*     pass_ptr  = &trig_lut_[(1L << (pass - 1)) - 4];
 169:./shy_fft.h   ****             T      increment = math.pi() / (pass_size << 1);
 170:./shy_fft.h   ****             T      phase     = 0.0;
 171:./shy_fft.h   ****             for(size_t i = 0; i < pass_size; ++i)
 172:./shy_fft.h   ****             {
 173:./shy_fft.h   ****                 pass_ptr[i] = math.cos(phase);
 174:./shy_fft.h   ****                 phase += increment;
 175:./shy_fft.h   ****             }
 176:./shy_fft.h   ****         }
 177:./shy_fft.h   ****     }
 178:./shy_fft.h   **** 
 179:./shy_fft.h   ****     inline void Start(size_t pass)
 180:./shy_fft.h   ****     {
 181:./shy_fft.h   ****         size_t pass_size = 1 << (pass - 1);
 182:./shy_fft.h   ****         cos_ptr_         = &trig_lut_[pass_size - 4 + 1];
 183:./shy_fft.h   ****         sin_ptr_         = &trig_lut_[pass_size + pass_size - 4 - 1];
 184:./shy_fft.h   ****     }
 185:./shy_fft.h   **** 
 186:./shy_fft.h   ****     inline void Rotate()
 187:./shy_fft.h   ****     {
 188:./shy_fft.h   ****         ++cos_ptr_;
 189:./shy_fft.h   ****         --sin_ptr_;
 190:./shy_fft.h   ****     }
 191:./shy_fft.h   **** 
 192:./shy_fft.h   ****     inline T cos() const { return *cos_ptr_; }
 193:./shy_fft.h   ****     inline T sin() const { return *sin_ptr_; }
 194:./shy_fft.h   **** 
 195:./shy_fft.h   ****   private:
 196:./shy_fft.h   ****     T  trig_lut_[(1 << (num_passes - 1)) - 4];
 197:./shy_fft.h   ****     T* cos_ptr_;
 198:./shy_fft.h   ****     T* sin_ptr_;
 199:./shy_fft.h   **** };
 200:./shy_fft.h   **** 
 201:./shy_fft.h   **** template <typename T>
 202:./shy_fft.h   **** struct LutPhasor<T, 0>
 203:./shy_fft.h   **** {
 204:./shy_fft.h   ****     void Init(){};
 205:./shy_fft.h   **** };
 206:./shy_fft.h   **** template <typename T>
 207:./shy_fft.h   **** struct LutPhasor<T, 1>
 208:./shy_fft.h   **** {
 209:./shy_fft.h   ****     void Init(){};
 210:./shy_fft.h   **** };
 211:./shy_fft.h   **** template <typename T>
 212:./shy_fft.h   **** struct LutPhasor<T, 2>
 213:./shy_fft.h   **** {
 214:./shy_fft.h   ****     void Init(){};
 215:./shy_fft.h   **** };
 216:./shy_fft.h   **** 
 217:./shy_fft.h   **** template <typename T>
 218:./shy_fft.h   **** struct LutPhasor<T, 3>
 219:./shy_fft.h   **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 23


 220:./shy_fft.h   ****     void     Init(){};
 221:./shy_fft.h   ****     void     Start(size_t){};
 222:./shy_fft.h   ****     void     Rotate(){};
 223:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 224:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 225:./shy_fft.h   **** };
 226:./shy_fft.h   **** 
 227:./shy_fft.h   **** 
 228:./shy_fft.h   **** // Another way of generating roots of unity.
 229:./shy_fft.h   **** template <typename T, size_t num_passes>
 230:./shy_fft.h   **** class RotationPhasor
 231:./shy_fft.h   **** {
 232:./shy_fft.h   ****   public:
 233:./shy_fft.h   ****     RotationPhasor() {}
 234:./shy_fft.h   ****     ~RotationPhasor() {}
 235:./shy_fft.h   **** 
 236:./shy_fft.h   ****     void Init()
 237:./shy_fft.h   ****     {
 238:./shy_fft.h   ****         Math<T> math;
 239:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 240:./shy_fft.h   ****         {
 241:./shy_fft.h   ****             size_t index            = (pass - 3) << 1;
 242:./shy_fft.h   ****             T      angle            = math.pi() / (1 << pass);
 243:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 244:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 245:./shy_fft.h   ****         }
 246:./shy_fft.h   ****     }
 247:./shy_fft.h   **** 
 248:./shy_fft.h   ****     inline void Start(size_t pass)
 249:./shy_fft.h   ****     {
 250:./shy_fft.h   ****         size_t index = (pass - 3) << 1;
 251:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 252:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 253:./shy_fft.h   ****     }
 254:./shy_fft.h   **** 
 255:./shy_fft.h   ****     inline void Rotate()
 256:./shy_fft.h   ****     {
 257:./shy_fft.h   ****         T temp = cos_ * real_ - sin_ * imag_;
 258:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 259:./shy_fft.h   ****         cos_   = temp;
 260:./shy_fft.h   ****     }
 261:./shy_fft.h   **** 
 262:./shy_fft.h   ****     inline T cos() const { return cos_; }
 263:./shy_fft.h   ****     inline T sin() const { return sin_; }
 264:./shy_fft.h   **** 
 265:./shy_fft.h   ****   private:
 266:./shy_fft.h   ****     T sin_cos_lut_[(num_passes - 3) << 1];
 267:./shy_fft.h   ****     T cos_;
 268:./shy_fft.h   ****     T sin_;
 269:./shy_fft.h   ****     T real_;
 270:./shy_fft.h   ****     T imag_;
 271:./shy_fft.h   **** };
 272:./shy_fft.h   **** 
 273:./shy_fft.h   **** template <typename T>
 274:./shy_fft.h   **** struct RotationPhasor<T, 0>
 275:./shy_fft.h   **** {
 276:./shy_fft.h   ****     void Init(){};
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 24


 277:./shy_fft.h   **** };
 278:./shy_fft.h   **** template <typename T>
 279:./shy_fft.h   **** struct RotationPhasor<T, 1>
 280:./shy_fft.h   **** {
 281:./shy_fft.h   ****     void Init(){};
 282:./shy_fft.h   **** };
 283:./shy_fft.h   **** template <typename T>
 284:./shy_fft.h   **** struct RotationPhasor<T, 2>
 285:./shy_fft.h   **** {
 286:./shy_fft.h   ****     void Init(){};
 287:./shy_fft.h   **** };
 288:./shy_fft.h   **** 
 289:./shy_fft.h   **** template <typename T>
 290:./shy_fft.h   **** struct RotationPhasor<T, 3>
 291:./shy_fft.h   **** {
 292:./shy_fft.h   ****     void     Init(){};
 293:./shy_fft.h   ****     void     Start(size_t){};
 294:./shy_fft.h   ****     void     Rotate(){};
 295:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 296:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 297:./shy_fft.h   **** };
 298:./shy_fft.h   **** 
 299:./shy_fft.h   **** // Direct transform
 300:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 301:./shy_fft.h   **** struct DirectTransform
 302:./shy_fft.h   **** {
 303:./shy_fft.h   ****   private:
 304:./shy_fft.h   ****     enum
 305:./shy_fft.h   ****     {
 306:./shy_fft.h   ****         size = 1 << num_passes
 307:./shy_fft.h   ****     };
 308:./shy_fft.h   **** 
 309:./shy_fft.h   ****   public:
 310:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 311:./shy_fft.h   ****     {
 312:./shy_fft.h   ****         T*      s;
 313:./shy_fft.h   ****         T*      d;
 314:./shy_fft.h   ****         Math<T> math;
 315:./shy_fft.h   **** 
 316:./shy_fft.h   ****         // First and second pass.
 317:./shy_fft.h   ****         d = output;
 318:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 319:./shy_fft.h   ****         {
 320:./shy_fft.h   ****             const T* s  = input;
 321:./shy_fft.h   ****             size_t   r0 = num_passes <= 8
 322:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 323:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 324:./shy_fft.h   ****                                   >> (16 - num_passes);
 325:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 326:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 327:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 328:./shy_fft.h   **** 
 329:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 330:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 331:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 332:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 333:./shy_fft.h   ****             d[0] = a + b;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 25


 334:./shy_fft.h   ****             d[2] = a - b;
 335:./shy_fft.h   ****             d += 4;
 336:./shy_fft.h   ****         }
 337:./shy_fft.h   **** 
 338:./shy_fft.h   ****         // Third pass.
 339:./shy_fft.h   ****         s = output;
 340:./shy_fft.h   ****         d = input;
 341:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 342:./shy_fft.h   ****         {
 343:./shy_fft.h   ****             T v;
 344:./shy_fft.h   **** 
 345:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 346:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 347:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 348:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 349:./shy_fft.h   **** 
 350:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 351:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 352:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 353:./shy_fft.h   **** 
 354:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 355:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 356:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 357:./shy_fft.h   ****         }
 358:./shy_fft.h   **** 
 359:./shy_fft.h   ****         // Remaining passes.
 360:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 361:./shy_fft.h   ****         {
 362:./shy_fft.h   ****             // Flip source and destination pointers
 363:./shy_fft.h   ****             {
 364:./shy_fft.h   ****                 T* tmp = s;
 365:./shy_fft.h   ****                 s      = d;
 366:./shy_fft.h   ****                 d      = tmp;
 367:./shy_fft.h   ****             }
 368:./shy_fft.h   **** 
 369:./shy_fft.h   ****             size_t n   = 1 << pass;
 370:./shy_fft.h   ****             size_t n_2 = n >> 1;
 371:./shy_fft.h   **** 
 372:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 373:./shy_fft.h   ****             {
 374:./shy_fft.h   ****                 T* s1r = s + i;
 375:./shy_fft.h   ****                 T* s2r = s1r + n;
 376:./shy_fft.h   ****                 T* dr  = d + i;
 377:./shy_fft.h   ****                 T* di  = dr + n;
 378:./shy_fft.h   **** 
 379:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 380:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 381:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 382:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 383:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 384:./shy_fft.h   ****                 T* s2i  = s1i + n;
 385:./shy_fft.h   ****                 phasor->Start(pass);
 386:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 387:./shy_fft.h   ****                 {
 388:./shy_fft.h   ****                     T c = phasor->cos();
 389:./shy_fft.h   ****                     T s = phasor->sin();
 390:./shy_fft.h   ****                     T v;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 26


 391:./shy_fft.h   **** 
 392:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 393:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 394:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 395:./shy_fft.h   **** 
 396:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 397:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 398:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 399:./shy_fft.h   ****                     phasor->Rotate();
 400:./shy_fft.h   ****                 }
 401:./shy_fft.h   ****             }
 402:./shy_fft.h   ****         }
 403:./shy_fft.h   **** 
 404:./shy_fft.h   ****         // Annoying additional data copy step.
 405:./shy_fft.h   ****         if(d != output)
 406:./shy_fft.h   ****         {
 407:./shy_fft.h   ****             std::copy(&d[0], &d[size], &output[0]);
 408:./shy_fft.h   ****         }
 409:./shy_fft.h   ****     }
 410:./shy_fft.h   **** 
 411:./shy_fft.h   ****     // The exact same thing but with "num_passes" as a run-time argument.
 412:./shy_fft.h   ****     void operator()(T*             input,
 413:./shy_fft.h   ****                     T*             output,
 414:./shy_fft.h   ****                     const uint8_t* bit_rev,
 415:./shy_fft.h   ****                     Phasor*        phasor,
 416:./shy_fft.h   ****                     size_t         rt_num_passes)
 417:./shy_fft.h   ****     {
 418:./shy_fft.h   ****         T*      s;
 419:./shy_fft.h   ****         T*      d;
 420:./shy_fft.h   ****         Math<T> math;
 421:./shy_fft.h   ****         size_t  rt_size = 1 << rt_num_passes;
 422:./shy_fft.h   ****         // First and second pass.
 423:./shy_fft.h   ****         d = output;
 424:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 425:./shy_fft.h   ****         {
 426:./shy_fft.h   ****             const T* s  = input;
 427:./shy_fft.h   ****             size_t   r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 428:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 429:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 430:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 431:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 432:./shy_fft.h   **** 
 433:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 434:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 435:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 436:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 437:./shy_fft.h   ****             d[0] = a + b;
 438:./shy_fft.h   ****             d[2] = a - b;
 439:./shy_fft.h   ****             d += 4;
 440:./shy_fft.h   ****         }
 441:./shy_fft.h   **** 
 442:./shy_fft.h   ****         // Third pass.
 443:./shy_fft.h   ****         s = output;
 444:./shy_fft.h   ****         d = input;
 445:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 446:./shy_fft.h   ****         {
 447:./shy_fft.h   ****             T v;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 27


 448:./shy_fft.h   **** 
 449:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 450:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 451:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 452:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 453:./shy_fft.h   **** 
 454:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 455:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 456:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 457:./shy_fft.h   **** 
 458:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 459:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 460:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 461:./shy_fft.h   ****         }
 462:./shy_fft.h   **** 
 463:./shy_fft.h   ****         // Remaining passes.
 464:./shy_fft.h   ****         for(size_t pass = 3; pass < rt_num_passes; ++pass)
 465:./shy_fft.h   ****         {
 466:./shy_fft.h   ****             // Flip source and destination pointers
 467:./shy_fft.h   ****             {
 468:./shy_fft.h   ****                 T* tmp = s;
 469:./shy_fft.h   ****                 s      = d;
 470:./shy_fft.h   ****                 d      = tmp;
 471:./shy_fft.h   ****             }
 472:./shy_fft.h   **** 
 473:./shy_fft.h   ****             size_t n   = 1 << pass;
 474:./shy_fft.h   ****             size_t n_2 = n >> 1;
 475:./shy_fft.h   **** 
 476:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 477:./shy_fft.h   ****             {
 478:./shy_fft.h   ****                 T* s1r = s + i;
 479:./shy_fft.h   ****                 T* s2r = s1r + n;
 480:./shy_fft.h   ****                 T* dr  = d + i;
 481:./shy_fft.h   ****                 T* di  = dr + n;
 482:./shy_fft.h   **** 
 483:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 484:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 485:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 486:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 487:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 488:./shy_fft.h   ****                 T* s2i  = s1i + n;
 489:./shy_fft.h   ****                 phasor->Start(pass);
 490:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 491:./shy_fft.h   ****                 {
 492:./shy_fft.h   ****                     T c = phasor->cos();
 493:./shy_fft.h   ****                     T s = phasor->sin();
 494:./shy_fft.h   ****                     T v;
 495:./shy_fft.h   **** 
 496:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 497:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 498:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 499:./shy_fft.h   **** 
 500:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 501:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 502:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 503:./shy_fft.h   ****                     phasor->Rotate();
 504:./shy_fft.h   ****                 }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 28


 505:./shy_fft.h   ****             }
 506:./shy_fft.h   ****         }
 507:./shy_fft.h   **** 
 508:./shy_fft.h   ****         // Annoying additional data copy step.
 509:./shy_fft.h   ****         if(d != output)
 510:./shy_fft.h   ****         {
 511:./shy_fft.h   ****             std::copy(&d[0], &d[rt_size], &output[0]);
 512:./shy_fft.h   ****         }
 513:./shy_fft.h   ****     }
 514:./shy_fft.h   **** };
 515:./shy_fft.h   **** 
 516:./shy_fft.h   **** template <typename T, typename Phasor>
 517:./shy_fft.h   **** struct DirectTransform<T, 0, Phasor>
 518:./shy_fft.h   **** {
 519:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 520:./shy_fft.h   ****     {
 521:./shy_fft.h   ****         o[0] = i[0];
 522:./shy_fft.h   ****     }
 523:./shy_fft.h   **** };
 524:./shy_fft.h   **** 
 525:./shy_fft.h   **** template <typename T, typename Phasor>
 526:./shy_fft.h   **** struct DirectTransform<T, 1, Phasor>
 527:./shy_fft.h   **** {
 528:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 529:./shy_fft.h   ****     {
 530:./shy_fft.h   ****         o[0] = i[0] + i[1];
 531:./shy_fft.h   ****         o[1] = i[0] - i[1];
 532:./shy_fft.h   ****     }
 533:./shy_fft.h   **** };
 534:./shy_fft.h   **** 
 535:./shy_fft.h   **** template <typename T, typename Phasor>
 536:./shy_fft.h   **** struct DirectTransform<T, 2, Phasor>
 537:./shy_fft.h   **** {
 538:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 539:./shy_fft.h   ****     {
 540:./shy_fft.h   ****         o[1] = i[0] - i[2];
 541:./shy_fft.h   ****         o[3] = i[1] - i[3];
 542:./shy_fft.h   ****         T a  = i[0] + i[2];
 543:./shy_fft.h   ****         T b  = i[1] + i[3];
 544:./shy_fft.h   ****         o[0] = a + b;
 545:./shy_fft.h   ****         o[2] = a - b;
 546:./shy_fft.h   ****     }
 547:./shy_fft.h   **** };
 548:./shy_fft.h   **** 
 549:./shy_fft.h   **** 
 550:./shy_fft.h   **** // Inverse transform
 551:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 552:./shy_fft.h   **** struct InverseTransform
 553:./shy_fft.h   **** {
 554:./shy_fft.h   ****   private:
 555:./shy_fft.h   ****     enum
 556:./shy_fft.h   ****     {
 557:./shy_fft.h   ****         size = 1 << num_passes
 558:./shy_fft.h   ****     };
 559:./shy_fft.h   **** 
 560:./shy_fft.h   ****   public:
 561:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 29


 562:./shy_fft.h   ****     {
 563:./shy_fft.h   ****         T*      s = (T*)(input);
 564:./shy_fft.h   ****         T*      d = output;
 565:./shy_fft.h   ****         Math<T> math;
 566:./shy_fft.h   **** 
 567:./shy_fft.h   ****         // Remaining passes.
 568:./shy_fft.h   ****         for(size_t pass = num_passes - 1; pass >= 3; --pass)
 569:./shy_fft.h   ****         {
 570:./shy_fft.h   ****             size_t n   = 1 << pass;
 571:./shy_fft.h   ****             size_t n_2 = n >> 1;
 572:./shy_fft.h   **** 
 573:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 574:./shy_fft.h   ****             {
 575:./shy_fft.h   ****                 T* sr  = s + i;
 576:./shy_fft.h   ****                 T* si  = sr + n;
 577:./shy_fft.h   ****                 T* d1r = d + i;
 578:./shy_fft.h   ****                 T* d2r = d1r + n;
 579:./shy_fft.h   **** 
 580:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 581:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 582:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 583:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 584:./shy_fft.h   **** 
 585:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 586:./shy_fft.h   ****                 T* d2i = d1i + n;
 587:./shy_fft.h   ****                 phasor->Start(pass);
 588:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 589:./shy_fft.h   ****                 {
 590:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 591:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 592:./shy_fft.h   **** 
 593:./shy_fft.h   ****                     T c  = phasor->cos();
 594:./shy_fft.h   ****                     T s  = phasor->sin();
 595:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 596:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 597:./shy_fft.h   **** 
 598:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 599:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 600:./shy_fft.h   ****                     phasor->Rotate();
 601:./shy_fft.h   ****                 }
 602:./shy_fft.h   ****             }
 603:./shy_fft.h   **** 
 604:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 605:./shy_fft.h   ****             if(d == output)
 606:./shy_fft.h   ****             {
 607:./shy_fft.h   ****                 s = output;
 608:./shy_fft.h   ****                 d = input;
 609:./shy_fft.h   ****             }
 610:./shy_fft.h   ****             else
 611:./shy_fft.h   ****             {
 612:./shy_fft.h   ****                 s = input;
 613:./shy_fft.h   ****                 d = output;
 614:./shy_fft.h   ****             }
 615:./shy_fft.h   ****         }
 616:./shy_fft.h   **** 
 617:./shy_fft.h   ****         // Copy data if necessary.
 618:./shy_fft.h   ****         if(d == output)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 30


 619:./shy_fft.h   ****         {
 620:./shy_fft.h   ****             std::copy(&s[0], &s[size], &output[0]);
 621:./shy_fft.h   ****         }
 622:./shy_fft.h   **** 
 623:./shy_fft.h   ****         s = output;
 624:./shy_fft.h   ****         d = input;
 625:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 626:./shy_fft.h   ****         {
 627:./shy_fft.h   ****             T vr, vi;
 628:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 629:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 630:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 631:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 632:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 633:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 634:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 635:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 636:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 637:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 638:./shy_fft.h   ****         }
 639:./shy_fft.h   **** 
 640:./shy_fft.h   ****         // First and second pass.
 641:./shy_fft.h   ****         s = input;
 642:./shy_fft.h   ****         d = output;
 643:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 644:./shy_fft.h   ****         {
 645:./shy_fft.h   ****             size_t r0 = num_passes <= 8
 646:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 647:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 648:./shy_fft.h   ****                                   >> (16 - num_passes);
 649:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 650:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 651:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 652:./shy_fft.h   **** 
 653:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 654:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 655:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 656:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 657:./shy_fft.h   **** 
 658:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 659:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 660:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 661:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 662:./shy_fft.h   ****             s += 4;
 663:./shy_fft.h   ****         }
 664:./shy_fft.h   ****     }
 665:./shy_fft.h   **** 
 666:./shy_fft.h   ****     void operator()(T*             input,
 667:./shy_fft.h   ****                     T*             output,
 668:./shy_fft.h   ****                     const uint8_t* bit_rev,
 669:./shy_fft.h   ****                     Phasor*        phasor,
 670:./shy_fft.h   ****                     size_t         rt_num_passes)
 671:./shy_fft.h   ****     {
 672:./shy_fft.h   ****         T*      s = (T*)(input);
 673:./shy_fft.h   ****         T*      d = output;
 674:./shy_fft.h   ****         Math<T> math;
 675:./shy_fft.h   **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 31


 676:./shy_fft.h   ****         size_t rt_size = 1 << rt_num_passes;
 677:./shy_fft.h   **** 
 678:./shy_fft.h   ****         // Remaining passes.
 679:./shy_fft.h   ****         for(size_t pass = rt_num_passes - 1; pass >= 3; --pass)
 680:./shy_fft.h   ****         {
 681:./shy_fft.h   ****             size_t n   = 1 << pass;
 682:./shy_fft.h   ****             size_t n_2 = n >> 1;
 683:./shy_fft.h   **** 
 684:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 685:./shy_fft.h   ****             {
 686:./shy_fft.h   ****                 T* sr  = s + i;
 687:./shy_fft.h   ****                 T* si  = sr + n;
 688:./shy_fft.h   ****                 T* d1r = d + i;
 689:./shy_fft.h   ****                 T* d2r = d1r + n;
 690:./shy_fft.h   **** 
 691:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 692:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 693:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 694:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 695:./shy_fft.h   **** 
 696:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 697:./shy_fft.h   ****                 T* d2i = d1i + n;
 698:./shy_fft.h   ****                 phasor->Start(pass);
 699:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 700:./shy_fft.h   ****                 {
 701:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 702:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 703:./shy_fft.h   **** 
 704:./shy_fft.h   ****                     T c  = phasor->cos();
 705:./shy_fft.h   ****                     T s  = phasor->sin();
 706:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 707:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 708:./shy_fft.h   **** 
 709:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 710:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 711:./shy_fft.h   ****                     phasor->Rotate();
 712:./shy_fft.h   ****                 }
 713:./shy_fft.h   ****             }
 714:./shy_fft.h   **** 
 715:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 716:./shy_fft.h   ****             if(d == output)
 717:./shy_fft.h   ****             {
 718:./shy_fft.h   ****                 s = output;
 719:./shy_fft.h   ****                 d = input;
 720:./shy_fft.h   ****             }
 721:./shy_fft.h   ****             else
 722:./shy_fft.h   ****             {
 723:./shy_fft.h   ****                 s = input;
 724:./shy_fft.h   ****                 d = output;
 725:./shy_fft.h   ****             }
 726:./shy_fft.h   ****         }
 727:./shy_fft.h   **** 
 728:./shy_fft.h   ****         // Copy data if necessary.
 729:./shy_fft.h   ****         if(d == output)
 730:./shy_fft.h   ****         {
 731:./shy_fft.h   ****             std::copy(&s[0], &s[rt_size], &output[0]);
 732:./shy_fft.h   ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 32


 733:./shy_fft.h   **** 
 734:./shy_fft.h   ****         s = output;
 735:./shy_fft.h   ****         d = input;
 736:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 737:./shy_fft.h   ****         {
 738:./shy_fft.h   ****             T vr, vi;
 739:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 740:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 741:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 742:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 743:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 744:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 745:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 746:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 747:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 748:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 749:./shy_fft.h   ****         }
 750:./shy_fft.h   **** 
 751:./shy_fft.h   ****         // First and second pass.
 752:./shy_fft.h   ****         s = input;
 753:./shy_fft.h   ****         d = output;
 754:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 755:./shy_fft.h   ****         {
 756:./shy_fft.h   ****             size_t r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 757:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 758:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 759:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 760:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 761:./shy_fft.h   **** 
 762:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 763:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 764:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 765:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 766:./shy_fft.h   **** 
 767:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 768:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 769:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 770:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 771:./shy_fft.h   ****             s += 4;
 772:./shy_fft.h   ****         }
 773:./shy_fft.h   ****     }
 774:./shy_fft.h   **** };
 775:./shy_fft.h   **** 
 776:./shy_fft.h   **** template <typename T, typename Phasor>
 777:./shy_fft.h   **** struct InverseTransform<T, 0, Phasor>
 778:./shy_fft.h   **** {
 779:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 780:./shy_fft.h   ****     {
 781:./shy_fft.h   ****         o[0] = i[0];
 782:./shy_fft.h   ****     }
 783:./shy_fft.h   **** };
 784:./shy_fft.h   **** 
 785:./shy_fft.h   **** template <typename T, typename Phasor>
 786:./shy_fft.h   **** struct InverseTransform<T, 1, Phasor>
 787:./shy_fft.h   **** {
 788:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 789:./shy_fft.h   ****     {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 33


 790:./shy_fft.h   ****         o[0] = i[0] + i[1];
 791:./shy_fft.h   ****         o[1] = i[0] - i[1];
 792:./shy_fft.h   ****     }
 793:./shy_fft.h   **** };
 794:./shy_fft.h   **** 
 795:./shy_fft.h   **** template <typename T, typename Phasor>
 796:./shy_fft.h   **** struct InverseTransform<T, 2, Phasor>
 797:./shy_fft.h   **** {
 798:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 799:./shy_fft.h   ****     {
 800:./shy_fft.h   ****         T a = i[0] + i[2];
 801:./shy_fft.h   ****         T b = i[0] - i[2];
 802:./shy_fft.h   **** 
 803:./shy_fft.h   ****         o[0] = a + i[1] * T(2);
 804:./shy_fft.h   ****         o[2] = a - i[1] * T(2);
 805:./shy_fft.h   ****         o[1] = b + i[3] * T(2);
 806:./shy_fft.h   ****         o[3] = b - i[3] * T(2);
 807:./shy_fft.h   ****     }
 808:./shy_fft.h   **** };
 809:./shy_fft.h   **** 
 810:./shy_fft.h   **** 
 811:./shy_fft.h   **** template <typename T                               = float,
 812:./shy_fft.h   ****           size_t size                              = 16,
 813:./shy_fft.h   ****           template <typename, size_t> class Phasor = LutPhasor>
 814:./shy_fft.h   **** class ShyFFT
 815:./shy_fft.h   **** {
 816:./shy_fft.h   ****   public:
 817:./shy_fft.h   ****     enum
 818:./shy_fft.h   ****     {
 819:./shy_fft.h   ****         num_passes = Log2<size>::value,
 820:./shy_fft.h   ****         max_size   = size
 821:./shy_fft.h   ****     };
 822:./shy_fft.h   **** 
 823:./shy_fft.h   ****   private:
 824:./shy_fft.h   ****     typedef Phasor<T, num_passes> PhasorType;
 825:./shy_fft.h   **** 
 826:./shy_fft.h   ****   public:
 827:./shy_fft.h   ****     ShyFFT() {}
 828:./shy_fft.h   ****     ~ShyFFT() {}
 175              		.loc 16 828 5 view .LVU33
 176              	.LBB618:
 177              	.LBI618:
 234:./shy_fft.h   **** 
 178              		.loc 16 234 5 view .LVU34
 234:./shy_fft.h   **** 
 179              		.loc 16 234 5 is_stmt 0 view .LVU35
 180              	.LBE618:
 181              	.LBE617:
 182              	.LBE616:
 183              	.LBB619:
 184              	.LBI619:
 185              		.file 17 "dsp/looping_sample_player.h"
   1:dsp/looping_sample_player.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/looping_sample_player.h **** //
   3:dsp/looping_sample_player.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/looping_sample_player.h **** //
   5:dsp/looping_sample_player.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 34


   6:dsp/looping_sample_player.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/looping_sample_player.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/looping_sample_player.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/looping_sample_player.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/looping_sample_player.h **** // furnished to do so, subject to the following conditions:
  11:dsp/looping_sample_player.h **** //
  12:dsp/looping_sample_player.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/looping_sample_player.h **** // all copies or substantial portions of the Software.
  14:dsp/looping_sample_player.h **** //
  15:dsp/looping_sample_player.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/looping_sample_player.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/looping_sample_player.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/looping_sample_player.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/looping_sample_player.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/looping_sample_player.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/looping_sample_player.h **** // THE SOFTWARE.
  22:dsp/looping_sample_player.h **** //
  23:dsp/looping_sample_player.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/looping_sample_player.h **** //
  25:dsp/looping_sample_player.h **** // -----------------------------------------------------------------------------
  26:dsp/looping_sample_player.h **** //
  27:dsp/looping_sample_player.h **** // Naive playback of audio stored in a buffer.
  28:dsp/looping_sample_player.h **** 
  29:dsp/looping_sample_player.h **** #ifndef CLOUDS_DSP_LOOPING_SAMPLE_PLAYER_H_
  30:dsp/looping_sample_player.h **** #define CLOUDS_DSP_LOOPING_SAMPLE_PLAYER_H_
  31:dsp/looping_sample_player.h **** 
  32:dsp/looping_sample_player.h **** #include <algorithm>
  33:dsp/looping_sample_player.h **** 
  34:dsp/looping_sample_player.h **** #include "audio_buffer.h"
  35:dsp/looping_sample_player.h **** #include "frame.h"
  36:dsp/looping_sample_player.h **** #include "parameters.h"
  37:dsp/looping_sample_player.h **** 
  38:dsp/looping_sample_player.h **** using namespace daisysp;
  39:dsp/looping_sample_player.h **** 
  40:dsp/looping_sample_player.h **** const float kCrossfadeDuration = 64.0f;
  41:dsp/looping_sample_player.h **** 
  42:dsp/looping_sample_player.h **** using namespace daisy;
  43:dsp/looping_sample_player.h **** 
  44:dsp/looping_sample_player.h **** class LoopingSamplePlayer
  45:dsp/looping_sample_player.h **** {
  46:dsp/looping_sample_player.h ****   public:
  47:dsp/looping_sample_player.h ****     LoopingSamplePlayer() {}
  48:dsp/looping_sample_player.h ****     ~LoopingSamplePlayer() {}
 186              		.loc 17 48 5 is_stmt 1 view .LVU36
 187              		.loc 17 48 5 is_stmt 0 view .LVU37
 188              	.LBE619:
 189              	.LBB620:
 190              	.LBI620:
 191              		.file 18 "dsp/wsola_sample_player.h"
   1:dsp/wsola_sample_player.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/wsola_sample_player.h **** //
   3:dsp/wsola_sample_player.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/wsola_sample_player.h **** //
   5:dsp/wsola_sample_player.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/wsola_sample_player.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/wsola_sample_player.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/wsola_sample_player.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 35


   9:dsp/wsola_sample_player.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/wsola_sample_player.h **** // furnished to do so, subject to the following conditions:
  11:dsp/wsola_sample_player.h **** //
  12:dsp/wsola_sample_player.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/wsola_sample_player.h **** // all copies or substantial portions of the Software.
  14:dsp/wsola_sample_player.h **** //
  15:dsp/wsola_sample_player.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/wsola_sample_player.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/wsola_sample_player.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/wsola_sample_player.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/wsola_sample_player.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/wsola_sample_player.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/wsola_sample_player.h **** // THE SOFTWARE.
  22:dsp/wsola_sample_player.h **** //
  23:dsp/wsola_sample_player.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/wsola_sample_player.h **** //
  25:dsp/wsola_sample_player.h **** // -----------------------------------------------------------------------------
  26:dsp/wsola_sample_player.h **** //
  27:dsp/wsola_sample_player.h **** // WSOLA playback.
  28:dsp/wsola_sample_player.h **** 
  29:dsp/wsola_sample_player.h **** #ifndef CLOUDS_DSP_WSOLA_SAMPLE_PLAYER_H_
  30:dsp/wsola_sample_player.h **** #define CLOUDS_DSP_WSOLA_SAMPLE_PLAYER_H_
  31:dsp/wsola_sample_player.h **** 
  32:dsp/wsola_sample_player.h **** #include <algorithm>
  33:dsp/wsola_sample_player.h **** 
  34:dsp/wsola_sample_player.h **** #include <cmath>
  35:dsp/wsola_sample_player.h **** #include <cstdio>
  36:dsp/wsola_sample_player.h **** #include <cstdlib>
  37:dsp/wsola_sample_player.h **** 
  38:dsp/wsola_sample_player.h **** #include "audio_buffer.h"
  39:dsp/wsola_sample_player.h **** #include "correlator.h"
  40:dsp/wsola_sample_player.h **** #include "frame.h"
  41:dsp/wsola_sample_player.h **** #include "window.h"
  42:dsp/wsola_sample_player.h **** #include "parameters.h"
  43:dsp/wsola_sample_player.h **** 
  44:dsp/wsola_sample_player.h **** using namespace daisysp;
  45:dsp/wsola_sample_player.h **** 
  46:dsp/wsola_sample_player.h **** const int32_t kMaxWSOLASize = 4096;
  47:dsp/wsola_sample_player.h **** 
  48:dsp/wsola_sample_player.h **** using namespace daisy;
  49:dsp/wsola_sample_player.h **** 
  50:dsp/wsola_sample_player.h **** class WSOLASamplePlayer
  51:dsp/wsola_sample_player.h **** {
  52:dsp/wsola_sample_player.h ****   public:
  53:dsp/wsola_sample_player.h ****     WSOLASamplePlayer() {}
  54:dsp/wsola_sample_player.h ****     ~WSOLASamplePlayer() {}
 192              		.loc 18 54 5 is_stmt 1 view .LVU38
 193              		.loc 18 54 5 is_stmt 0 view .LVU39
 194              	.LBE620:
 195              	.LBB621:
 196              	.LBI621:
 197              		.file 19 "dsp/granular_sample_player.h"
   1:dsp/granular_sample_player.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/granular_sample_player.h **** //
   3:dsp/granular_sample_player.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/granular_sample_player.h **** //
   5:dsp/granular_sample_player.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 36


   6:dsp/granular_sample_player.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/granular_sample_player.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/granular_sample_player.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/granular_sample_player.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/granular_sample_player.h **** // furnished to do so, subject to the following conditions:
  11:dsp/granular_sample_player.h **** //
  12:dsp/granular_sample_player.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/granular_sample_player.h **** // all copies or substantial portions of the Software.
  14:dsp/granular_sample_player.h **** //
  15:dsp/granular_sample_player.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/granular_sample_player.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/granular_sample_player.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/granular_sample_player.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/granular_sample_player.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/granular_sample_player.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/granular_sample_player.h **** // THE SOFTWARE.
  22:dsp/granular_sample_player.h **** //
  23:dsp/granular_sample_player.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/granular_sample_player.h **** //
  25:dsp/granular_sample_player.h **** // -----------------------------------------------------------------------------
  26:dsp/granular_sample_player.h **** //
  27:dsp/granular_sample_player.h **** // Granular playback of audio stored in a buffer.
  28:dsp/granular_sample_player.h **** 
  29:dsp/granular_sample_player.h **** #ifndef CLOUDS_DSP_GRANULAR_SAMPLE_PLAYER_H_
  30:dsp/granular_sample_player.h **** #define CLOUDS_DSP_GRANULAR_SAMPLE_PLAYER_H_
  31:dsp/granular_sample_player.h **** 
  32:dsp/granular_sample_player.h **** #include "daisy.h"
  33:dsp/granular_sample_player.h **** 
  34:dsp/granular_sample_player.h **** #include <algorithm>
  35:dsp/granular_sample_player.h **** 
  36:dsp/granular_sample_player.h **** #include "audio_buffer.h"
  37:dsp/granular_sample_player.h **** #include "frame.h"
  38:dsp/granular_sample_player.h **** #include "grain.h"
  39:dsp/granular_sample_player.h **** #include "parameters.h"
  40:dsp/granular_sample_player.h **** 
  41:dsp/granular_sample_player.h **** #include <random>
  42:dsp/granular_sample_player.h **** 
  43:dsp/granular_sample_player.h **** using namespace daisysp;
  44:dsp/granular_sample_player.h **** 
  45:dsp/granular_sample_player.h **** const int32_t kMaxNumGrains = 64;
  46:dsp/granular_sample_player.h **** 
  47:dsp/granular_sample_player.h **** using namespace daisy;
  48:dsp/granular_sample_player.h **** 
  49:dsp/granular_sample_player.h **** class GranularSamplePlayer
  50:dsp/granular_sample_player.h **** {
  51:dsp/granular_sample_player.h ****   public:
  52:dsp/granular_sample_player.h ****     GranularSamplePlayer() {}
  53:dsp/granular_sample_player.h ****     ~GranularSamplePlayer() {}
 198              		.loc 19 53 5 is_stmt 1 view .LVU40
 199              		.loc 19 53 5 is_stmt 0 view .LVU41
 200              	.LBE621:
 201              	.LBB622:
 202              	.LBI622:
 203              		.file 20 "dsp/correlator.h"
   1:dsp/correlator.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/correlator.h **** //
   3:dsp/correlator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 37


   4:dsp/correlator.h **** //
   5:dsp/correlator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/correlator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/correlator.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/correlator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/correlator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/correlator.h **** // furnished to do so, subject to the following conditions:
  11:dsp/correlator.h **** //
  12:dsp/correlator.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/correlator.h **** // all copies or substantial portions of the Software.
  14:dsp/correlator.h **** //
  15:dsp/correlator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/correlator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/correlator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/correlator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/correlator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/correlator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/correlator.h **** // THE SOFTWARE.
  22:dsp/correlator.h **** //
  23:dsp/correlator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/correlator.h **** //
  25:dsp/correlator.h **** // -----------------------------------------------------------------------------
  26:dsp/correlator.h **** //
  27:dsp/correlator.h **** // Search for stretch/shift splicing points by maximizing correlation.
  28:dsp/correlator.h **** // Correlation is computed by XOR-ing the bit sign of samples - this allows
  29:dsp/correlator.h **** // 32 samples to be matched in one single XOR operation.
  30:dsp/correlator.h **** 
  31:dsp/correlator.h **** #ifndef CLOUDS_DSP_CORRELATOR_H_
  32:dsp/correlator.h **** #define CLOUDS_DSP_CORRELATOR_H_
  33:dsp/correlator.h **** 
  34:dsp/correlator.h **** #include "daisysp.h"
  35:dsp/correlator.h **** 
  36:dsp/correlator.h **** using namespace daisysp;
  37:dsp/correlator.h **** 
  38:dsp/correlator.h **** class Correlator
  39:dsp/correlator.h **** {
  40:dsp/correlator.h ****   public:
  41:dsp/correlator.h ****     Correlator() {}
  42:dsp/correlator.h ****     ~Correlator() {}
 204              		.loc 20 42 5 is_stmt 1 view .LVU42
 205              		.loc 20 42 5 is_stmt 0 view .LVU43
 206              	.LBE622:
 207              		.loc 9 78 33 view .LVU44
 208 0000 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE5053:
 212              		.weak	_ZN23GranularProcessorCloudsD1Ev
 213              		.thumb_set _ZN23GranularProcessorCloudsD1Ev,_ZN23GranularProcessorCloudsD2Ev
 214 0002 00BF     		.section	.text._ZN5daisy8patch_sm7InitBedEv,"ax",%progbits
 215              		.align	1
 216              		.p2align 2,,3
 217              		.global	_ZN5daisy8patch_sm7InitBedEv
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv5-d16
 223              	_ZN5daisy8patch_sm7InitBedEv:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 38


 224              	.LFB4793:
 225              		.file 21 "daisy_bed.h"
   1:daisy_bed.h   **** #pragma once
   2:daisy_bed.h   **** 
   3:daisy_bed.h   **** #include "daisy.h"
   4:daisy_bed.h   **** #include "per/gpio.h"
   5:daisy_bed.h   **** #include "daisy_patch_sm.h"
   6:daisy_bed.h   **** 
   7:daisy_bed.h   **** namespace daisy
   8:daisy_bed.h   **** {
   9:daisy_bed.h   **** namespace patch_sm
  10:daisy_bed.h   **** {
  11:daisy_bed.h   ****     // simple stupid led set up
  12:daisy_bed.h   ****     GPIO    gen_led1;
  13:daisy_bed.h   ****     GPIO    gen_led2;
  14:daisy_bed.h   ****     GPIO    cv_led1;
  15:daisy_bed.h   ****     GPIO    cv_led2;
  16:daisy_bed.h   ****     GPIO    gate_in_led1;
  17:daisy_bed.h   ****     GPIO    gate_in_led2;
  18:daisy_bed.h   ****     GPIO    gate_out_led1;
  19:daisy_bed.h   ****     GPIO    gate_out_led2;
  20:daisy_bed.h   **** 
  21:daisy_bed.h   **** 
  22:daisy_bed.h   ****     // generic leds
  23:daisy_bed.h   ****     dsy_gpio_pin oldPinD7 = DaisyPatchSM::D7;
  24:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
  25:daisy_bed.h   ****     dsy_gpio_pin oldPinA9 = DaisyPatchSM::A9;
  26:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
  27:daisy_bed.h   **** 
  28:daisy_bed.h   ****     // cv leds
  29:daisy_bed.h   ****     dsy_gpio_pin oldPinD2 = DaisyPatchSM::D2;
  30:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
  31:daisy_bed.h   ****     dsy_gpio_pin oldPinD1 = DaisyPatchSM::D1;
  32:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
  33:daisy_bed.h   ****     // ^^^ {DSY_GPIOB, 4},  /**< D1  - SPI2 CS */
  34:daisy_bed.h   **** 
  35:daisy_bed.h   ****     // gate leds
  36:daisy_bed.h   ****     dsy_gpio_pin oldPinD3 = DaisyPatchSM::D3;
  37:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
  38:daisy_bed.h   ****     dsy_gpio_pin oldPinD6 = DaisyPatchSM::D6;
  39:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
  40:daisy_bed.h   ****     dsy_gpio_pin oldPinD4 = DaisyPatchSM::D4;
  41:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
  42:daisy_bed.h   ****     dsy_gpio_pin oldPinD5 = DaisyPatchSM::D5;
  43:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
  44:daisy_bed.h   **** 
  45:daisy_bed.h   ****     // remap
  46:daisy_bed.h   ****      
  47:daisy_bed.h   ****     // map buttons
  48:daisy_bed.h   ****     Switch      b1,b2;
  49:daisy_bed.h   **** 
  50:daisy_bed.h   ****     void InitBed(){
 226              		.loc 21 50 19 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 0, uses_anonymous_args = 0
  51:daisy_bed.h   ****         // leds
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 39


  52:daisy_bed.h   ****         gen_led1.Init(newPinD7, GPIO::Mode::OUTPUT);
 230              		.loc 21 52 9 view .LVU46
  50:daisy_bed.h   ****         // leds
 231              		.loc 21 50 19 is_stmt 0 view .LVU47
 232 0000 10B5     		push	{r4, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236              		.loc 21 52 22 view .LVU48
 237 0002 2D49     		ldr	r1, .L7
  50:daisy_bed.h   ****         // leds
 238              		.loc 21 50 19 view .LVU49
 239 0004 84B0     		sub	sp, sp, #16
 240              		.cfi_def_cfa_offset 24
 241              		.loc 21 52 22 view .LVU50
 242 0006 0024     		movs	r4, #0
 243 0008 0122     		movs	r2, #1
 244 000a 0968     		ldr	r1, [r1]
 245 000c 2346     		mov	r3, r4
 246 000e 2B48     		ldr	r0, .L7+4
 247 0010 0094     		str	r4, [sp]
 248 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 249              	.LVL3:
  53:daisy_bed.h   ****         gen_led2.Init(newPinA9, GPIO::Mode::OUTPUT);
 250              		.loc 21 53 9 is_stmt 1 view .LVU51
 251              		.loc 21 53 22 is_stmt 0 view .LVU52
 252 0016 2A49     		ldr	r1, .L7+8
 253 0018 2346     		mov	r3, r4
 254 001a 0122     		movs	r2, #1
 255 001c 0968     		ldr	r1, [r1]
 256 001e 2948     		ldr	r0, .L7+12
 257 0020 0094     		str	r4, [sp]
 258 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 259              	.LVL4:
  54:daisy_bed.h   ****         cv_led1.Init(newPinD2, GPIO::Mode::OUTPUT);
 260              		.loc 21 54 9 is_stmt 1 view .LVU53
 261              		.loc 21 54 21 is_stmt 0 view .LVU54
 262 0026 2849     		ldr	r1, .L7+16
 263 0028 2346     		mov	r3, r4
 264 002a 0122     		movs	r2, #1
 265 002c 0968     		ldr	r1, [r1]
 266 002e 2748     		ldr	r0, .L7+20
 267 0030 0094     		str	r4, [sp]
 268 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 269              	.LVL5:
  55:daisy_bed.h   ****         cv_led2.Init(newPinD1, GPIO::Mode::OUTPUT);
 270              		.loc 21 55 9 is_stmt 1 view .LVU55
 271              		.loc 21 55 21 is_stmt 0 view .LVU56
 272 0036 2649     		ldr	r1, .L7+24
 273 0038 2346     		mov	r3, r4
 274 003a 0122     		movs	r2, #1
 275 003c 0968     		ldr	r1, [r1]
 276 003e 2548     		ldr	r0, .L7+28
 277 0040 0094     		str	r4, [sp]
 278 0042 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 279              	.LVL6:
  56:daisy_bed.h   ****         gate_in_led1.Init(newPinD3, GPIO::Mode::OUTPUT);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 40


 280              		.loc 21 56 9 is_stmt 1 view .LVU57
 281              		.loc 21 56 26 is_stmt 0 view .LVU58
 282 0046 2449     		ldr	r1, .L7+32
 283 0048 2346     		mov	r3, r4
 284 004a 0122     		movs	r2, #1
 285 004c 0968     		ldr	r1, [r1]
 286 004e 2348     		ldr	r0, .L7+36
 287 0050 0094     		str	r4, [sp]
 288 0052 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 289              	.LVL7:
  57:daisy_bed.h   ****         gate_in_led2.Init(newPinD5, GPIO::Mode::OUTPUT);
 290              		.loc 21 57 9 is_stmt 1 view .LVU59
 291              		.loc 21 57 26 is_stmt 0 view .LVU60
 292 0056 2249     		ldr	r1, .L7+40
 293 0058 2346     		mov	r3, r4
 294 005a 0122     		movs	r2, #1
 295 005c 0968     		ldr	r1, [r1]
 296 005e 2148     		ldr	r0, .L7+44
 297 0060 0094     		str	r4, [sp]
 298 0062 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 299              	.LVL8:
  58:daisy_bed.h   ****         gate_out_led1.Init(newPinD6, GPIO::Mode::OUTPUT);
 300              		.loc 21 58 9 is_stmt 1 view .LVU61
 301              		.loc 21 58 27 is_stmt 0 view .LVU62
 302 0066 2049     		ldr	r1, .L7+48
 303 0068 2346     		mov	r3, r4
 304 006a 0122     		movs	r2, #1
 305 006c 0968     		ldr	r1, [r1]
 306 006e 1F48     		ldr	r0, .L7+52
 307 0070 0094     		str	r4, [sp]
 308 0072 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 309              	.LVL9:
  59:daisy_bed.h   ****         gate_out_led2.Init(newPinD4, GPIO::Mode::OUTPUT);
 310              		.loc 21 59 9 is_stmt 1 view .LVU63
 311              		.loc 21 59 27 is_stmt 0 view .LVU64
 312 0076 1E49     		ldr	r1, .L7+56
 313 0078 2346     		mov	r3, r4
 314 007a 0122     		movs	r2, #1
 315 007c 0968     		ldr	r1, [r1]
 316 007e 1D48     		ldr	r0, .L7+60
 317 0080 0094     		str	r4, [sp]
 318 0082 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 319              	.LVL10:
  60:daisy_bed.h   **** 
  61:daisy_bed.h   ****         // buttons
  62:daisy_bed.h   ****         b1.Init(DaisyPatchSM::A8);
 320              		.loc 21 62 9 is_stmt 1 view .LVU65
 321              		.loc 21 62 16 is_stmt 0 view .LVU66
 322 0086 1C4B     		ldr	r3, .L7+64
 323 0088 9FED1C0A 		vldr.32	s0, .L7+68
 324 008c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 325 008e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 326 0090 1B48     		ldr	r0, .L7+72
 327 0092 42EA0121 		orr	r1, r2, r1, lsl #8
 328 0096 8DED030A 		vstr.32	s0, [sp, #12]	@ int
 329 009a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 330              	.LVL11:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 41


  63:daisy_bed.h   ****         b2.Init(DaisyPatchSM::D10);
 331              		.loc 21 63 9 is_stmt 1 view .LVU67
 332              		.loc 21 63 16 is_stmt 0 view .LVU68
 333 009e 194B     		ldr	r3, .L7+76
 334 00a0 9DED030A 		vldr.32	s0, [sp, #12]	@ int
 335 00a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 336 00a6 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 337 00a8 1748     		ldr	r0, .L7+80
 338 00aa 42EA0121 		orr	r1, r2, r1, lsl #8
  64:daisy_bed.h   ****     }
 339              		.loc 21 64 5 view .LVU69
 340 00ae 04B0     		add	sp, sp, #16
 341              		.cfi_def_cfa_offset 8
 342              		@ sp needed
 343 00b0 BDE81040 		pop	{r4, lr}
 344              		.cfi_restore 14
 345              		.cfi_restore 4
 346              		.cfi_def_cfa_offset 0
  63:daisy_bed.h   ****         b2.Init(DaisyPatchSM::D10);
 347              		.loc 21 63 16 view .LVU70
 348 00b4 FFF7FEBF 		b	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 349              	.LVL12:
 350              	.L8:
 351              		.align	2
 352              	.L7:
 353 00b8 00000000 		.word	.LANCHOR0
 354 00bc 00000000 		.word	.LANCHOR1
 355 00c0 00000000 		.word	.LANCHOR2
 356 00c4 00000000 		.word	.LANCHOR3
 357 00c8 00000000 		.word	.LANCHOR4
 358 00cc 00000000 		.word	.LANCHOR5
 359 00d0 00000000 		.word	.LANCHOR6
 360 00d4 00000000 		.word	.LANCHOR7
 361 00d8 00000000 		.word	.LANCHOR8
 362 00dc 00000000 		.word	.LANCHOR9
 363 00e0 00000000 		.word	.LANCHOR10
 364 00e4 00000000 		.word	.LANCHOR11
 365 00e8 00000000 		.word	.LANCHOR12
 366 00ec 00000000 		.word	.LANCHOR13
 367 00f0 00000000 		.word	.LANCHOR14
 368 00f4 00000000 		.word	.LANCHOR15
 369 00f8 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2A8E
 370 00fc 00000000 		.word	0
 371 0100 00000000 		.word	.LANCHOR16
 372 0104 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM3D10E
 373 0108 00000000 		.word	.LANCHOR17
 374              		.cfi_endproc
 375              	.LFE4793:
 377              		.section	.text._ZN5daisy8patch_sm6ledOffEv,"ax",%progbits
 378              		.align	1
 379              		.p2align 2,,3
 380              		.global	_ZN5daisy8patch_sm6ledOffEv
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv5-d16
 386              	_ZN5daisy8patch_sm6ledOffEv:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 42


 387              	.LFB4794:
  65:daisy_bed.h   **** 
  66:daisy_bed.h   ****     void ledOff(){
 388              		.loc 21 66 18 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
  67:daisy_bed.h   ****         gen_led1.Write(false);
 392              		.loc 21 67 9 view .LVU72
  66:daisy_bed.h   ****         gen_led1.Write(false);
 393              		.loc 21 66 18 is_stmt 0 view .LVU73
 394 0000 08B5     		push	{r3, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 3, -8
 397              		.cfi_offset 14, -4
 398              		.loc 21 67 23 view .LVU74
 399 0002 0021     		movs	r1, #0
 400 0004 0848     		ldr	r0, .L11
 401 0006 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 402              	.LVL13:
  68:daisy_bed.h   ****         gen_led2.Write(false);
 403              		.loc 21 68 9 is_stmt 1 view .LVU75
 404              		.loc 21 68 23 is_stmt 0 view .LVU76
 405 000a 0021     		movs	r1, #0
 406 000c 0748     		ldr	r0, .L11+4
 407 000e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 408              	.LVL14:
  69:daisy_bed.h   ****         cv_led1.Write(false);
 409              		.loc 21 69 9 is_stmt 1 view .LVU77
 410              		.loc 21 69 22 is_stmt 0 view .LVU78
 411 0012 0021     		movs	r1, #0
 412 0014 0648     		ldr	r0, .L11+8
 413 0016 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 414              	.LVL15:
  70:daisy_bed.h   ****         cv_led2.Write(false);
 415              		.loc 21 70 9 is_stmt 1 view .LVU79
 416              		.loc 21 70 22 is_stmt 0 view .LVU80
 417 001a 0021     		movs	r1, #0
 418 001c 0548     		ldr	r0, .L11+12
  71:daisy_bed.h   ****     }
 419              		.loc 21 71 5 view .LVU81
 420 001e BDE80840 		pop	{r3, lr}
 421              		.cfi_restore 14
 422              		.cfi_restore 3
 423              		.cfi_def_cfa_offset 0
  70:daisy_bed.h   ****         cv_led2.Write(false);
 424              		.loc 21 70 22 view .LVU82
 425 0022 FFF7FEBF 		b	_ZN5daisy4GPIO5WriteEb
 426              	.LVL16:
 427              	.L12:
 428 0026 00BF     		.align	2
 429              	.L11:
 430 0028 00000000 		.word	.LANCHOR1
 431 002c 00000000 		.word	.LANCHOR3
 432 0030 00000000 		.word	.LANCHOR5
 433 0034 00000000 		.word	.LANCHOR7
 434              		.cfi_endproc
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 43


 435              	.LFE4794:
 437              		.section	.text.startup.main,"ax",%progbits
 438              		.align	1
 439              		.p2align 2,,3
 440              		.global	main
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv5-d16
 446              	main:
 447              	.LFB5072:
 448              		.file 22 "Iotas.cpp"
   1:Iotas.cpp     **** #include "daisy_patch_sm.h"
   2:Iotas.cpp     **** #include "daisysp.h"
   3:Iotas.cpp     **** #include "daisy_bed.h"
   4:Iotas.cpp     **** #include "granular_processor.h"
   5:Iotas.cpp     **** 
   6:Iotas.cpp     **** using namespace daisy;
   7:Iotas.cpp     **** using namespace patch_sm;
   8:Iotas.cpp     **** using namespace daisysp;
   9:Iotas.cpp     **** 
  10:Iotas.cpp     **** DaisyPatchSM 			hw;
  11:Iotas.cpp     **** GranularProcessorClouds processor;
  12:Iotas.cpp     **** Parameters* 			parameters;
  13:Iotas.cpp     **** 
  14:Iotas.cpp     **** uint8_t butt_idx = 0;
  15:Iotas.cpp     **** 
  16:Iotas.cpp     **** // Pre-allocate big blocks in main memory and CCM. No malloc here.
  17:Iotas.cpp     **** uint8_t block_mem[118784];
  18:Iotas.cpp     **** uint8_t block_ccm[65536 - 128];
  19:Iotas.cpp     **** char qualityNames[4];
  20:Iotas.cpp     **** 
  21:Iotas.cpp     **** void Controls();
  22:Iotas.cpp     **** 
  23:Iotas.cpp     **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  24:Iotas.cpp     **** {
  25:Iotas.cpp     **** 	Controls();
  26:Iotas.cpp     **** 
  27:Iotas.cpp     **** 	FloatFrame input[size];
  28:Iotas.cpp     ****     FloatFrame output[size];
  29:Iotas.cpp     **** 
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
  31:Iotas.cpp     ****     {
  32:Iotas.cpp     ****         input[i].l  = in[0][i] * .5f;
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
  34:Iotas.cpp     ****         output[i].l = output[i].r = 0.f;
  35:Iotas.cpp     ****     }
  36:Iotas.cpp     **** 
  37:Iotas.cpp     **** 	processor.Process(input, output, size);
  38:Iotas.cpp     **** 
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
  40:Iotas.cpp     **** 	{
  41:Iotas.cpp     ****         OUT_L[i] = output[i].l;
  42:Iotas.cpp     ****         OUT_R[i] = output[i].r;
  43:Iotas.cpp     **** 	}
  44:Iotas.cpp     **** }
  45:Iotas.cpp     **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 44


  46:Iotas.cpp     **** int main(void)
  47:Iotas.cpp     **** {
 449              		.loc 22 47 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
  48:Iotas.cpp     **** 	hw.Init();
 453              		.loc 22 48 2 view .LVU84
  47:Iotas.cpp     **** 	hw.Init();
 454              		.loc 22 47 1 is_stmt 0 view .LVU85
 455 0000 10B5     		push	{r4, lr}
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 4, -8
 458              		.cfi_offset 14, -4
 459              		.loc 22 48 9 view .LVU86
 460 0002 2248     		ldr	r0, .L20
  49:Iotas.cpp     **** 	hw.SetAudioBlockSize(32); // number of samples handled per callback
  50:Iotas.cpp     **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
  51:Iotas.cpp     **** 	float sample_rate = hw.AudioSampleRate();
  52:Iotas.cpp     **** 
  53:Iotas.cpp     **** 	// init luts
  54:Iotas.cpp     **** 	InitResources(sample_rate);
  55:Iotas.cpp     **** 
  56:Iotas.cpp     **** 	InitBed();
  57:Iotas.cpp     **** 
  58:Iotas.cpp     **** 	// granular processor init 
  59:Iotas.cpp     **** 	processor.Init(sample_rate, block_mem, sizeof(block_mem), block_ccm, sizeof(block_ccm));
 461              		.loc 22 59 16 view .LVU87
 462 0004 224C     		ldr	r4, .L20+4
  47:Iotas.cpp     **** 	hw.Init();
 463              		.loc 22 47 1 view .LVU88
 464 0006 2DED028B 		vpush.64	{d8}
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 80, -16
 467              		.cfi_offset 81, -12
 468 000a 82B0     		sub	sp, sp, #8
 469              		.cfi_def_cfa_offset 24
  48:Iotas.cpp     **** 	hw.SetAudioBlockSize(32); // number of samples handled per callback
 470              		.loc 22 48 9 view .LVU89
 471 000c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
 472              	.LVL17:
  49:Iotas.cpp     **** 	hw.SetAudioBlockSize(32); // number of samples handled per callback
 473              		.loc 22 49 2 is_stmt 1 view .LVU90
  49:Iotas.cpp     **** 	hw.SetAudioBlockSize(32); // number of samples handled per callback
 474              		.loc 22 49 22 is_stmt 0 view .LVU91
 475 0010 2021     		movs	r1, #32
 476 0012 1E48     		ldr	r0, .L20
 477 0014 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
 478              	.LVL18:
  50:Iotas.cpp     **** 	float sample_rate = hw.AudioSampleRate();
 479              		.loc 22 50 2 is_stmt 1 view .LVU92
  50:Iotas.cpp     **** 	float sample_rate = hw.AudioSampleRate();
 480              		.loc 22 50 23 is_stmt 0 view .LVU93
 481 0018 0321     		movs	r1, #3
 482 001a 1C48     		ldr	r0, .L20
 483 001c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 484              	.LVL19:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 45


  51:Iotas.cpp     **** 
 485              		.loc 22 51 2 is_stmt 1 view .LVU94
  51:Iotas.cpp     **** 
 486              		.loc 22 51 40 is_stmt 0 view .LVU95
 487 0020 1A48     		ldr	r0, .L20
 488 0022 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 489              	.LVL20:
 490 0026 B0EE408A 		vmov.f32	s16, s0
 491              	.LVL21:
  54:Iotas.cpp     **** 
 492              		.loc 22 54 2 is_stmt 1 view .LVU96
  54:Iotas.cpp     **** 
 493              		.loc 22 54 15 is_stmt 0 view .LVU97
 494 002a FFF7FEFF 		bl	_Z13InitResourcesf
 495              	.LVL22:
  56:Iotas.cpp     **** 
 496              		.loc 22 56 2 is_stmt 1 view .LVU98
  56:Iotas.cpp     **** 
 497              		.loc 22 56 9 is_stmt 0 view .LVU99
 498 002e FFF7FEFF 		bl	_ZN5daisy8patch_sm7InitBedEv
 499              	.LVL23:
 500              		.loc 22 59 2 is_stmt 1 view .LVU100
 501              		.loc 22 59 16 is_stmt 0 view .LVU101
 502 0032 4FF68071 		movw	r1, #65408
 503 0036 174B     		ldr	r3, .L20+8
 504 0038 4FF4E832 		mov	r2, #118784
 505 003c 0091     		str	r1, [sp]
 506 003e B0EE480A 		vmov.f32	s0, s16
 507 0042 1549     		ldr	r1, .L20+12
 508 0044 2046     		mov	r0, r4
 509 0046 FFF7FEFF 		bl	_ZN23GranularProcessorClouds4InitEfPvjS0_j
 510              	.LVL24:
  60:Iotas.cpp     **** 	processor.set_playback_mode(PLAYBACK_MODE_GRANULAR);
 511              		.loc 22 60 2 is_stmt 1 view .LVU102
 512              	.LBB632:
 513              	.LBI632:
  79:dsp/granular_processor.h **** 
  80:dsp/granular_processor.h ****     void Init(float  sample_rate,
  81:dsp/granular_processor.h ****               void*  large_buffer,
  82:dsp/granular_processor.h ****               size_t large_buffer_size,
  83:dsp/granular_processor.h ****               void*  small_buffer,
  84:dsp/granular_processor.h ****               size_t small_buffer_size);
  85:dsp/granular_processor.h **** 
  86:dsp/granular_processor.h ****     void Process(FloatFrame* input, FloatFrame* output, size_t size);
  87:dsp/granular_processor.h ****     void Prepare();
  88:dsp/granular_processor.h **** 
  89:dsp/granular_processor.h ****     inline Parameters* mutable_parameters() { return &parameters_; }
  90:dsp/granular_processor.h **** 
  91:dsp/granular_processor.h ****     inline const Parameters& parameters() const { return parameters_; }
  92:dsp/granular_processor.h **** 
  93:dsp/granular_processor.h ****     inline void ToggleFreeze() { parameters_.freeze = !parameters_.freeze; }
  94:dsp/granular_processor.h **** 
  95:dsp/granular_processor.h ****     inline void set_freeze(bool freeze) { parameters_.freeze = freeze; }
  96:dsp/granular_processor.h **** 
  97:dsp/granular_processor.h ****     inline bool frozen() const { return parameters_.freeze; }
  98:dsp/granular_processor.h **** 
  99:dsp/granular_processor.h ****     inline void set_silence(bool silence) { silence_ = silence; }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 46


 100:dsp/granular_processor.h **** 
 101:dsp/granular_processor.h ****     inline void set_bypass(bool bypass) { bypass_ = bypass; }
 102:dsp/granular_processor.h **** 
 103:dsp/granular_processor.h ****     inline bool bypass() const { return bypass_; }
 104:dsp/granular_processor.h **** 
 105:dsp/granular_processor.h ****     inline void set_playback_mode(PlaybackMode playback_mode)
 514              		.loc 9 105 17 view .LVU103
 515              	.LBB633:
 106:dsp/granular_processor.h ****     {
 107:dsp/granular_processor.h ****         playback_mode_ = playback_mode;
 516              		.loc 9 107 9 view .LVU104
 517              		.loc 9 107 24 is_stmt 0 view .LVU105
 518 004a 0022     		movs	r2, #0
 519              	.LBE633:
 520              	.LBE632:
 521              	.LBB635:
 522              	.LBB636:
 523              	.LBB637:
 108:dsp/granular_processor.h ****     }
 109:dsp/granular_processor.h **** 
 110:dsp/granular_processor.h ****     inline PlaybackMode playback_mode() const { return playback_mode_; }
 111:dsp/granular_processor.h **** 
 112:dsp/granular_processor.h ****     inline void set_quality(int32_t quality)
 113:dsp/granular_processor.h ****     {
 114:dsp/granular_processor.h ****         set_num_channels(quality & 1 ? 1 : 2);
 115:dsp/granular_processor.h ****         set_low_fidelity(quality >> 1 ? true : false);
 116:dsp/granular_processor.h ****     }
 117:dsp/granular_processor.h **** 
 118:dsp/granular_processor.h ****     inline void set_num_channels(int32_t num_channels)
 119:dsp/granular_processor.h ****     {
 120:dsp/granular_processor.h ****         reset_buffers_ = reset_buffers_ || num_channels_ != num_channels;
 524              		.loc 9 120 41 view .LVU106
 525 004c A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 526              	.LBE637:
 527              	.LBE636:
 528              	.LBE635:
 529              	.LBB652:
 530              	.LBB634:
 107:dsp/granular_processor.h ****     }
 531              		.loc 9 107 24 view .LVU107
 532 004e 2270     		strb	r2, [r4]
 533              	.LVL25:
 107:dsp/granular_processor.h ****     }
 534              		.loc 9 107 24 view .LVU108
 535              	.LBE634:
 536              	.LBE652:
  61:Iotas.cpp     **** 	processor.set_quality(GRAIN_QUALITY_HIGH);
 537              		.loc 22 61 2 is_stmt 1 view .LVU109
 538              	.LBB653:
 539              	.LBI635:
 112:dsp/granular_processor.h ****     {
 540              		.loc 9 112 17 view .LVU110
 541              	.LBE653:
 114:dsp/granular_processor.h ****         set_low_fidelity(quality >> 1 ? true : false);
 542              		.loc 9 114 9 view .LVU111
 543              	.LBB654:
 544              	.LBB641:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 47


 545              	.LBI636:
 118:dsp/granular_processor.h ****     {
 546              		.loc 9 118 17 view .LVU112
 547              	.LBB638:
 548              		.loc 9 120 9 view .LVU113
 549              		.loc 9 120 41 is_stmt 0 view .LVU114
 550 0050 13B9     		cbnz	r3, .L16
 551 0052 6368     		ldr	r3, [r4, #4]
 552 0054 022B     		cmp	r3, #2
 553 0056 14D0     		beq	.L19
 554              	.L16:
 121:dsp/granular_processor.h ****         num_channels_  = num_channels;
 555              		.loc 9 121 9 is_stmt 1 view .LVU115
 556              		.loc 9 121 24 is_stmt 0 view .LVU116
 557 0058 0222     		movs	r2, #2
 558              	.LBE638:
 559              	.LBE641:
 560              	.LBB642:
 561              	.LBB643:
 122:dsp/granular_processor.h ****     }
 123:dsp/granular_processor.h **** 
 124:dsp/granular_processor.h ****     inline void set_low_fidelity(bool low_fidelity)
 125:dsp/granular_processor.h ****     {
 126:dsp/granular_processor.h ****         reset_buffers_ = reset_buffers_ || low_fidelity != low_fidelity_;
 562              		.loc 9 126 41 view .LVU117
 563 005a 0123     		movs	r3, #1
 564              	.LBE643:
 565              	.LBE642:
 566              	.LBB647:
 567              	.LBB639:
 121:dsp/granular_processor.h ****         num_channels_  = num_channels;
 568              		.loc 9 121 24 view .LVU118
 569 005c 6260     		str	r2, [r4, #4]
 570              	.LVL26:
 121:dsp/granular_processor.h ****         num_channels_  = num_channels;
 571              		.loc 9 121 24 view .LVU119
 572              	.LBE639:
 573              	.LBE647:
 574              	.LBE654:
 115:dsp/granular_processor.h ****     }
 575              		.loc 9 115 9 is_stmt 1 view .LVU120
 576              	.LBB655:
 577              	.LBB648:
 578              	.LBI642:
 124:dsp/granular_processor.h ****     {
 579              		.loc 9 124 17 view .LVU121
 580              	.LBB644:
 581              		.loc 9 126 9 view .LVU122
 582              	.L15:
 127:dsp/granular_processor.h ****         low_fidelity_  = low_fidelity;
 583              		.loc 9 127 24 is_stmt 0 view .LVU123
 584 005e 0122     		movs	r2, #1
 585              	.LBE644:
 586              	.LBE648:
 587              	.LBE655:
  62:Iotas.cpp     **** 	
  63:Iotas.cpp     **** 	// init luts
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 48


  64:Iotas.cpp     **** 	InitResources(sample_rate);
 588              		.loc 22 64 15 view .LVU124
 589 0060 B0EE480A 		vmov.f32	s0, s16
 590              	.LBB656:
 591              	.LBB649:
 592              	.LBB645:
 126:dsp/granular_processor.h ****         low_fidelity_  = low_fidelity;
 593              		.loc 9 126 24 view .LVU125
 594 0064 A374     		strb	r3, [r4, #18]
 595              		.loc 9 127 9 is_stmt 1 view .LVU126
 596              		.loc 9 127 24 is_stmt 0 view .LVU127
 597 0066 2272     		strb	r2, [r4, #8]
 598              	.LVL27:
 599              		.loc 9 127 24 view .LVU128
 600              	.LBE645:
 601              	.LBE649:
 602              	.LBE656:
 603              		.loc 22 64 2 is_stmt 1 view .LVU129
 604              		.loc 22 64 15 is_stmt 0 view .LVU130
 605 0068 FFF7FEFF 		bl	_Z13InitResourcesf
 606              	.LVL28:
  65:Iotas.cpp     **** 
  66:Iotas.cpp     **** 	parameters = processor.mutable_parameters();
 607              		.loc 22 66 2 is_stmt 1 view .LVU131
 608              	.LBB657:
 609              	.LBI657:
  89:dsp/granular_processor.h **** 
 610              		.loc 9 89 24 view .LVU132
 611              	.LBE657:
  89:dsp/granular_processor.h **** 
 612              		.loc 9 89 47 view .LVU133
 613              		.loc 22 66 13 is_stmt 0 view .LVU134
 614 006c 0B4B     		ldr	r3, .L20+16
 615 006e 0C4A     		ldr	r2, .L20+20
  67:Iotas.cpp     **** 
  68:Iotas.cpp     **** 	hw.StartAudio(AudioCallback);
 616              		.loc 22 68 15 view .LVU135
 617 0070 0C49     		ldr	r1, .L20+24
 618 0072 0648     		ldr	r0, .L20
  66:Iotas.cpp     **** 
 619              		.loc 22 66 13 view .LVU136
 620 0074 1A60     		str	r2, [r3]
 621              		.loc 22 68 2 is_stmt 1 view .LVU137
 622              		.loc 22 68 15 is_stmt 0 view .LVU138
 623 0076 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
 624              	.LVL29:
 625              	.L17:
  69:Iotas.cpp     **** 	while(1) {
 626              		.loc 22 69 2 is_stmt 1 discriminator 1 view .LVU139
  70:Iotas.cpp     **** 		// why does this go in while(1)? 
  71:Iotas.cpp     **** 		processor.Prepare();
 627              		.loc 22 71 3 discriminator 1 view .LVU140
 628              		.loc 22 71 20 is_stmt 0 discriminator 1 view .LVU141
 629 007a 0548     		ldr	r0, .L20+4
 630 007c FFF7FEFF 		bl	_ZN23GranularProcessorClouds7PrepareEv
 631              	.LVL30:
  69:Iotas.cpp     **** 	while(1) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 49


 632              		.loc 22 69 2 is_stmt 1 discriminator 1 view .LVU142
 633 0080 FBE7     		b	.L17
 634              	.LVL31:
 635              	.L19:
 636              	.LBB658:
 637              	.LBB650:
 638              	.LBB640:
 121:dsp/granular_processor.h ****     }
 639              		.loc 9 121 9 view .LVU143
 121:dsp/granular_processor.h ****     }
 640              		.loc 9 121 9 is_stmt 0 view .LVU144
 641              	.LBE640:
 642              	.LBE650:
 643              	.LBE658:
 115:dsp/granular_processor.h ****     }
 644              		.loc 9 115 9 is_stmt 1 view .LVU145
 645              	.LBB659:
 646              	.LBB651:
 124:dsp/granular_processor.h ****     {
 647              		.loc 9 124 17 view .LVU146
 648              	.LBB646:
 126:dsp/granular_processor.h ****         low_fidelity_  = low_fidelity;
 649              		.loc 9 126 9 view .LVU147
 126:dsp/granular_processor.h ****         low_fidelity_  = low_fidelity;
 650              		.loc 9 126 41 is_stmt 0 view .LVU148
 651 0082 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 652 0084 83F00103 		eor	r3, r3, #1
 653 0088 E9E7     		b	.L15
 654              	.L21:
 655 008a 00BF     		.align	2
 656              	.L20:
 657 008c 00000000 		.word	.LANCHOR18
 658 0090 00000000 		.word	processor
 659 0094 00000000 		.word	block_ccm
 660 0098 00000000 		.word	block_mem
 661 009c 00000000 		.word	.LANCHOR19
 662 00a0 DC1A0000 		.word	processor+6876
 663 00a4 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 664              	.LBE646:
 665              	.LBE651:
 666              	.LBE659:
 667              		.cfi_endproc
 668              	.LFE5072:
 670              		.section	.text._Z8Controlsv,"ax",%progbits
 671              		.align	1
 672              		.p2align 2,,3
 673              		.global	_Z8Controlsv
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv5-d16
 679              	_Z8Controlsv:
 680              	.LFB5073:
  72:Iotas.cpp     **** 	}
  73:Iotas.cpp     **** }
  74:Iotas.cpp     **** 
  75:Iotas.cpp     **** void Controls()
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 50


  76:Iotas.cpp     **** {
 681              		.loc 22 76 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
  77:Iotas.cpp     ****     hw.ProcessAllControls();
 685              		.loc 22 77 5 view .LVU150
 686              	.LVL32:
 687              	.LBB695:
 688              	.LBI695:
  66:../../libDaisy//src/daisy_patch_sm.h **** 
  67:../../libDaisy//src/daisy_patch_sm.h ****         /** Initializes the memories, and core peripherals for the Daisy Patch SM */
  68:../../libDaisy//src/daisy_patch_sm.h ****         void Init();
  69:../../libDaisy//src/daisy_patch_sm.h **** 
  70:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts a non-interleaving audio callback */
  71:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::AudioCallback cb);
  72:../../libDaisy//src/daisy_patch_sm.h **** 
  73:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts an interleaving audio callback */
  74:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  75:../../libDaisy//src/daisy_patch_sm.h **** 
  76:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  77:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  78:../../libDaisy//src/daisy_patch_sm.h ****          */
  79:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  80:../../libDaisy//src/daisy_patch_sm.h **** 
  81:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  82:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  83:../../libDaisy//src/daisy_patch_sm.h ****          */
  84:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  85:../../libDaisy//src/daisy_patch_sm.h **** 
  86:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the transmission of audio. */
  87:../../libDaisy//src/daisy_patch_sm.h ****         void StopAudio();
  88:../../libDaisy//src/daisy_patch_sm.h **** 
  89:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the number of samples processed in an audio callback. 
  90:../../libDaisy//src/daisy_patch_sm.h ****          *  This will only take effect on the next invocation of `StartAudio`
  91:../../libDaisy//src/daisy_patch_sm.h ****          */
  92:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioBlockSize(size_t size);
  93:../../libDaisy//src/daisy_patch_sm.h **** 
  94:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the samplerate for the audio engine 
  95:../../libDaisy//src/daisy_patch_sm.h ****          *  This will set it to the closest valid samplerate. Options being:
  96:../../libDaisy//src/daisy_patch_sm.h ****          *  8kHz, 16kHz, 32kHz, 48kHz, and 96kHz
  97:../../libDaisy//src/daisy_patch_sm.h ****          */
  98:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(float sr);
  99:../../libDaisy//src/daisy_patch_sm.h **** 
 100:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(SaiHandle::Config::SampleRate sample_rate);
 101:../../libDaisy//src/daisy_patch_sm.h **** 
 102:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the number of samples processed in an audio callback */
 103:../../libDaisy//src/daisy_patch_sm.h ****         size_t AudioBlockSize();
 104:../../libDaisy//src/daisy_patch_sm.h **** 
 105:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the audio engine's samplerate in Hz */
 106:../../libDaisy//src/daisy_patch_sm.h ****         float AudioSampleRate();
 107:../../libDaisy//src/daisy_patch_sm.h **** 
 108:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the rate at which the audio callback will be called in Hz */
 109:../../libDaisy//src/daisy_patch_sm.h ****         float AudioCallbackRate();
 110:../../libDaisy//src/daisy_patch_sm.h **** 
 111:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts the Control ADCs 
 112:../../libDaisy//src/daisy_patch_sm.h ****          * 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 51


 113:../../libDaisy//src/daisy_patch_sm.h ****          *  This is started automatically when Init() is called.
 114:../../libDaisy//src/daisy_patch_sm.h ****          */
 115:../../libDaisy//src/daisy_patch_sm.h ****         void StartAdc();
 116:../../libDaisy//src/daisy_patch_sm.h **** 
 117:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the Control ADCs */
 118:../../libDaisy//src/daisy_patch_sm.h ****         void StopAdc();
 119:../../libDaisy//src/daisy_patch_sm.h **** 
 120:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and filters all of the analog control inputs */
 121:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAnalogControls();
 122:../../libDaisy//src/daisy_patch_sm.h **** 
 123:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and debounces any of the digital control inputs 
 124:../../libDaisy//src/daisy_patch_sm.h ****          *  This does nothing on this board at this time.
 125:../../libDaisy//src/daisy_patch_sm.h ****          */
 126:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessDigitalControls();
 127:../../libDaisy//src/daisy_patch_sm.h **** 
 128:../../libDaisy//src/daisy_patch_sm.h ****         /** Does both of the above */
 129:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAllControls()
 689              		.loc 2 129 14 view .LVU151
 690              	.LBB696:
 130:../../libDaisy//src/daisy_patch_sm.h ****         {
 131:../../libDaisy//src/daisy_patch_sm.h ****             ProcessAnalogControls();
 691              		.loc 2 131 13 view .LVU152
 692              	.LBE696:
 693              	.LBE695:
  76:Iotas.cpp     ****     hw.ProcessAllControls();
 694              		.loc 22 76 1 is_stmt 0 view .LVU153
 695 0000 70B5     		push	{r4, r5, r6, lr}
 696              		.cfi_def_cfa_offset 16
 697              		.cfi_offset 4, -16
 698              		.cfi_offset 5, -12
 699              		.cfi_offset 6, -8
 700              		.cfi_offset 14, -4
 701              	.LBB699:
 702              	.LBB697:
 703              		.loc 2 131 34 view .LVU154
 704 0002 8648     		ldr	r0, .L41
 705              	.LBE697:
 706              	.LBE699:
  78:Iotas.cpp     **** 	b1.Debounce();
  79:Iotas.cpp     **** 	b2.Debounce();
  80:Iotas.cpp     **** 
  81:Iotas.cpp     **** 	// general parameters (knobs)
  82:Iotas.cpp     **** 	parameters->position =  hw.GetAdcValue(CV_1);
 707              		.loc 22 82 14 view .LVU155
 708 0004 864C     		ldr	r4, .L41+4
  76:Iotas.cpp     ****     hw.ProcessAllControls();
 709              		.loc 22 76 1 view .LVU156
 710 0006 2DED028B 		vpush.64	{d8}
 711              		.cfi_def_cfa_offset 24
 712              		.cfi_offset 80, -24
 713              		.cfi_offset 81, -20
 714              	.LBB700:
 715              	.LBB698:
 716              		.loc 2 131 34 view .LVU157
 717 000a FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 718              	.LVL33:
 132:../../libDaisy//src/daisy_patch_sm.h ****             ProcessDigitalControls();
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 52


 719              		.loc 2 132 13 is_stmt 1 view .LVU158
 720              		.loc 2 132 35 is_stmt 0 view .LVU159
 721 000e 8348     		ldr	r0, .L41
 722 0010 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 723              	.LVL34:
 724              		.loc 2 132 35 view .LVU160
 725              	.LBE698:
 726              	.LBE700:
  78:Iotas.cpp     **** 	b1.Debounce();
 727              		.loc 22 78 2 is_stmt 1 view .LVU161
  78:Iotas.cpp     **** 	b1.Debounce();
 728              		.loc 22 78 13 is_stmt 0 view .LVU162
 729 0014 8348     		ldr	r0, .L41+8
 730 0016 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 731              	.LVL35:
  79:Iotas.cpp     **** 
 732              		.loc 22 79 2 is_stmt 1 view .LVU163
  79:Iotas.cpp     **** 
 733              		.loc 22 79 13 is_stmt 0 view .LVU164
 734 001a 8348     		ldr	r0, .L41+12
 735 001c FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 736              	.LVL36:
 737              		.loc 22 82 2 is_stmt 1 view .LVU165
 738              		.loc 22 82 14 is_stmt 0 view .LVU166
 739 0020 2568     		ldr	r5, [r4]
 740              		.loc 22 82 40 view .LVU167
 741 0022 0021     		movs	r1, #0
 742 0024 7D48     		ldr	r0, .L41
 743 0026 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 744              	.LVL37:
  83:Iotas.cpp     **** 	parameters->size =      fmap(hw.GetAdcValue(CV_2), 0.f, 1.f); // needs top end adjusted
 745              		.loc 22 83 30 view .LVU168
 746 002a 0121     		movs	r1, #1
 747 002c 7B48     		ldr	r0, .L41
  84:Iotas.cpp     **** 						  //fmap(hw.GetAdcValue(CV_2), 0.f, 1.f);???
  85:Iotas.cpp     **** 	parameters->pitch =     powf(9.798f * (hw.GetAdcValue(CV_3) - .5f), 2.f);
 748              		.loc 22 85 62 view .LVU169
 749 002e F6EE008A 		vmov.f32	s17, #5.0e-1
  82:Iotas.cpp     **** 	parameters->size =      fmap(hw.GetAdcValue(CV_2), 0.f, 1.f); // needs top end adjusted
 750              		.loc 22 82 23 view .LVU170
 751 0032 85ED000A 		vstr.32	s0, [r5]
  83:Iotas.cpp     **** 	parameters->size =      fmap(hw.GetAdcValue(CV_2), 0.f, 1.f); // needs top end adjusted
 752              		.loc 22 83 2 is_stmt 1 view .LVU171
 753              	.LBB701:
 754              	.LBB702:
 755              	.LBB703:
 756              	.LBB704:
 757              	.LBB705:
 758              		.file 23 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP//Source/Utility/dsp.h **** */
   3:../../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP//Source/Utility/dsp.h **** #include <random>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 53


   9:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP//Source/Utility/dsp.h **** 
  11:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP//Source/Utility/dsp.h **** */
  13:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP//Source/Utility/dsp.h **** 
  21:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP//Source/Utility/dsp.h **** {
  23:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP//Source/Utility/dsp.h **** 
  26:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP//Source/Utility/dsp.h **** */
  32:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP//Source/Utility/dsp.h **** {
  34:../../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP//Source/Utility/dsp.h **** #else
  38:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../../DaisySP//Source/Utility/dsp.h **** }
  42:../../DaisySP//Source/Utility/dsp.h **** 
  43:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP//Source/Utility/dsp.h **** {
  45:../../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 759              		.loc 23 47 5 is_stmt 0 view .LVU172
 760 0036 B7EE008A 		vmov.f32	s16, #1.0e+0
 761              	.LBE705:
 762              	.LBE704:
 763              	.LBE703:
 764              	.LBE702:
 765              	.LBE701:
  83:Iotas.cpp     **** 						  //fmap(hw.GetAdcValue(CV_2), 0.f, 1.f);???
 766              		.loc 22 83 30 view .LVU173
 767 003a FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 768              	.LVL38:
 769              	.LBB719:
 770              	.LBI701:
  48:../../DaisySP//Source/Utility/dsp.h **** #else
  49:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../../DaisySP//Source/Utility/dsp.h **** }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 54


  53:../../DaisySP//Source/Utility/dsp.h **** 
  54:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP//Source/Utility/dsp.h **** */
  56:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP//Source/Utility/dsp.h **** {
  58:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP//Source/Utility/dsp.h **** }
  60:../../DaisySP//Source/Utility/dsp.h **** 
  61:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP//Source/Utility/dsp.h **** */
  65:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP//Source/Utility/dsp.h **** {
  67:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP//Source/Utility/dsp.h ****     return f;
  75:../../DaisySP//Source/Utility/dsp.h **** }
  76:../../DaisySP//Source/Utility/dsp.h **** 
  77:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP//Source/Utility/dsp.h **** {
  79:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../../DaisySP//Source/Utility/dsp.h **** }
  88:../../DaisySP//Source/Utility/dsp.h **** 
  89:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP//Source/Utility/dsp.h **** */
  92:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP//Source/Utility/dsp.h **** {
  94:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP//Source/Utility/dsp.h **** */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 55


 110:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP//Source/Utility/dsp.h **** }
 115:../../DaisySP//Source/Utility/dsp.h **** 
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP//Source/Utility/dsp.h **** }
 120:../../DaisySP//Source/Utility/dsp.h **** 
 121:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP//Source/Utility/dsp.h **** */
 123:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP//Source/Utility/dsp.h **** {
 125:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP//Source/Utility/dsp.h **** }
 127:../../DaisySP//Source/Utility/dsp.h **** 
 128:../../DaisySP//Source/Utility/dsp.h **** 
 129:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP//Source/Utility/dsp.h **** */
 135:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 136:../../DaisySP//Source/Utility/dsp.h **** {
 137:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 138:../../DaisySP//Source/Utility/dsp.h **** }
 139:../../DaisySP//Source/Utility/dsp.h **** 
 140:../../DaisySP//Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 141:../../DaisySP//Source/Utility/dsp.h **** enum class Mapping
 142:../../DaisySP//Source/Utility/dsp.h **** {
 143:../../DaisySP//Source/Utility/dsp.h ****     LINEAR,
 144:../../DaisySP//Source/Utility/dsp.h ****     EXP,
 145:../../DaisySP//Source/Utility/dsp.h ****     LOG,
 146:../../DaisySP//Source/Utility/dsp.h **** };
 147:../../DaisySP//Source/Utility/dsp.h **** 
 148:../../DaisySP//Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve. 
 149:../../DaisySP//Source/Utility/dsp.h ****  * 
 150:../../DaisySP//Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 151:../../DaisySP//Source/Utility/dsp.h ****  *  \param min the new minimum value
 152:../../DaisySP//Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 153:../../DaisySP//Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 154:../../DaisySP//Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
 155:../../DaisySP//Source/Utility/dsp.h ****  * 
 156:../../DaisySP//Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
 157:../../DaisySP//Source/Utility/dsp.h ****  * 
 158:../../DaisySP//Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 159:../../DaisySP//Source/Utility/dsp.h **** */
 160:../../DaisySP//Source/Utility/dsp.h **** inline float
 161:../../DaisySP//Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 771              		.loc 23 161 1 is_stmt 1 view .LVU174
 772              	.LBE719:
 162:../../DaisySP//Source/Utility/dsp.h **** {
 163:../../DaisySP//Source/Utility/dsp.h ****     switch(curve)
 773              		.loc 23 163 5 view .LVU175
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 56


 774              	.LBB720:
 775              	.LBB715:
 164:../../DaisySP//Source/Utility/dsp.h ****     {
 165:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::EXP:
 166:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
 167:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LOG:
 168:../../DaisySP//Source/Utility/dsp.h ****         {
 169:../../DaisySP//Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 170:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 171:../../DaisySP//Source/Utility/dsp.h ****         }
 172:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LINEAR:
 776              		.loc 23 172 9 view .LVU176
 173:../../DaisySP//Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 777              		.loc 23 173 9 view .LVU177
 778              		.loc 23 173 18 view .LVU178
 779              	.LBB712:
 780              	.LBI703:
  56:../../DaisySP//Source/Utility/dsp.h **** {
 781              		.loc 23 56 14 view .LVU179
 782              	.LBE712:
 783              	.LBE715:
 784              	.LBE720:
  58:../../DaisySP//Source/Utility/dsp.h **** }
 785              		.loc 23 58 5 view .LVU180
 786              	.LBB721:
 787              	.LBB716:
 788              	.LBB713:
 789              	.LBB707:
 790              	.LBI707:
  32:../../DaisySP//Source/Utility/dsp.h **** {
 791              		.loc 23 32 14 view .LVU181
 792              	.LBB708:
  34:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 793              		.loc 23 34 5 view .LVU182
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 794              		.loc 23 36 5 view .LVU183
 795              	.LBE708:
 796              	.LBE707:
 797              	.LBE713:
 798              		.loc 23 173 31 is_stmt 0 view .LVU184
 799 003e DFED7B7A 		vldr.32	s15, .L41+16
 800              	.LBE716:
 801              	.LBE721:
  83:Iotas.cpp     **** 						  //fmap(hw.GetAdcValue(CV_2), 0.f, 1.f);???
 802              		.loc 22 83 19 view .LVU185
 803 0042 2368     		ldr	r3, [r4]
 804              		.loc 22 85 55 view .LVU186
 805 0044 0221     		movs	r1, #2
 806              	.LBB722:
 807              	.LBB717:
 808              		.loc 23 173 31 view .LVU187
 809 0046 30EE270A 		vadd.f32	s0, s0, s15
 810              	.LVL39:
 811              		.loc 23 173 31 view .LVU188
 812              	.LBE717:
 813              	.LBE722:
 814              		.loc 22 85 55 view .LVU189
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 57


 815 004a 7448     		ldr	r0, .L41
 816              	.LBB723:
 817              	.LBB718:
 818              	.LBB714:
 819              	.LBB710:
 820              	.LBB709:
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 821              		.loc 23 36 5 view .LVU190
 822              		.syntax unified
 823              	@ 36 "../../DaisySP//Source/Utility/dsp.h" 1
 824 004c 80FE270A 		vmaxnm.f32 s0, s0, s15
 825              	@ 0 "" 2
 826              	.LVL40:
  40:../../DaisySP//Source/Utility/dsp.h **** }
 827              		.loc 23 40 5 is_stmt 1 view .LVU191
  40:../../DaisySP//Source/Utility/dsp.h **** }
 828              		.loc 23 40 5 is_stmt 0 view .LVU192
 829              		.thumb
 830              		.syntax unified
 831              	.LBE709:
 832              	.LBE710:
 833              	.LBB711:
 834              	.LBI704:
  43:../../DaisySP//Source/Utility/dsp.h **** {
 835              		.loc 23 43 14 is_stmt 1 view .LVU193
 836              	.LBB706:
  45:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 837              		.loc 23 45 5 view .LVU194
  47:../../DaisySP//Source/Utility/dsp.h **** #else
 838              		.loc 23 47 5 view .LVU195
 839              		.syntax unified
 840              	@ 47 "../../DaisySP//Source/Utility/dsp.h" 1
 841 0050 80FE480A 		vminnm.f32 s0, s0, s16
 842              	@ 0 "" 2
 843              	.LVL41:
  51:../../DaisySP//Source/Utility/dsp.h **** }
 844              		.loc 23 51 5 view .LVU196
  51:../../DaisySP//Source/Utility/dsp.h **** }
 845              		.loc 23 51 5 is_stmt 0 view .LVU197
 846              		.thumb
 847              		.syntax unified
 848              	.LBE706:
 849              	.LBE711:
 850              	.LBE714:
 851              	.LBE718:
 852              	.LBE723:
  83:Iotas.cpp     **** 						  //fmap(hw.GetAdcValue(CV_2), 0.f, 1.f);???
 853              		.loc 22 83 19 view .LVU198
 854 0054 83ED010A 		vstr.32	s0, [r3, #4]
 855              		.loc 22 85 2 is_stmt 1 view .LVU199
 856              		.loc 22 85 55 is_stmt 0 view .LVU200
 857 0058 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 858              	.LVL42:
 859              		.loc 22 85 62 view .LVU201
 860 005c 30EE680A 		vsub.f32	s0, s0, s17
 861              		.loc 22 85 30 view .LVU202
 862 0060 DFED737A 		vldr.32	s15, .L41+20
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 58


  86:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 863              		.loc 22 86 38 view .LVU203
 864 0064 0221     		movs	r1, #2
  85:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 865              		.loc 22 85 20 view .LVU204
 866 0066 2368     		ldr	r3, [r4]
  85:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 867              		.loc 22 85 30 view .LVU205
 868 0068 20EE270A 		vmul.f32	s0, s0, s15
 869              		.loc 22 86 38 view .LVU206
 870 006c 6B48     		ldr	r0, .L41
  85:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 871              		.loc 22 85 30 view .LVU207
 872 006e 20EE000A 		vmul.f32	s0, s0, s0
  85:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 873              		.loc 22 85 20 view .LVU208
 874 0072 83ED020A 		vstr.32	s0, [r3, #8]
 875              		.loc 22 86 2 is_stmt 1 view .LVU209
 876              		.loc 22 86 38 is_stmt 0 view .LVU210
 877 0076 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 878              	.LVL43:
 879              		.loc 22 86 51 view .LVU211
 880 007a B4EEE80A 		vcmpe.f32	s0, s17
 881 007e BFEE007A 		vmov.f32	s14, #-1.0e+0
 882              		.loc 22 86 20 view .LVU212
 883 0082 2568     		ldr	r5, [r4]
  87:Iotas.cpp     **** 	parameters->density =   hw.GetAdcValue(CV_4);
 884              		.loc 22 87 40 view .LVU213
 885 0084 0321     		movs	r1, #3
 886 0086 6548     		ldr	r0, .L41
  86:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 887              		.loc 22 86 51 view .LVU214
 888 0088 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  86:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 889              		.loc 22 86 20 view .LVU215
 890 008c D5ED027A 		vldr.32	s15, [r5, #8]
  86:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 891              		.loc 22 86 51 view .LVU216
 892 0090 58BF     		it	pl
 893 0092 B0EE487A 		vmovpl.f32	s14, s16
  86:Iotas.cpp     **** 	parameters->pitch *= 	hw.GetAdcValue(CV_3) < .5f ? -1.f : 1.f;
 894              		.loc 22 86 20 view .LVU217
 895 0096 67EE877A 		vmul.f32	s15, s15, s14
 896 009a C5ED027A 		vstr.32	s15, [r5, #8]
 897              		.loc 22 87 2 is_stmt 1 view .LVU218
 898              		.loc 22 87 40 is_stmt 0 view .LVU219
 899 009e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 900              	.LVL44:
 901              		.loc 22 87 22 view .LVU220
 902 00a2 85ED030A 		vstr.32	s0, [r5, #12]
  88:Iotas.cpp     **** 	parameters->texture =   hw.GetAdcValue(ADC_9);
 903              		.loc 22 88 2 is_stmt 1 view .LVU221
 904              		.loc 22 88 14 is_stmt 0 view .LVU222
 905 00a6 2568     		ldr	r5, [r4]
 906              		.loc 22 88 40 view .LVU223
 907 00a8 0821     		movs	r1, #8
 908 00aa 5C48     		ldr	r0, .L41
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 59


 909 00ac FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 910              	.LVL45:
 911              		.loc 22 88 22 view .LVU224
 912 00b0 85ED040A 		vstr.32	s0, [r5, #16]
  89:Iotas.cpp     **** 	parameters->dry_wet =   hw.GetAdcValue(ADC_10);
 913              		.loc 22 89 2 is_stmt 1 view .LVU225
 914              		.loc 22 89 14 is_stmt 0 view .LVU226
 915 00b4 2568     		ldr	r5, [r4]
 916              		.loc 22 89 40 view .LVU227
 917 00b6 0921     		movs	r1, #9
 918 00b8 5848     		ldr	r0, .L41
 919 00ba FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 920              	.LVL46:
 921              		.loc 22 89 22 view .LVU228
 922 00be 85ED050A 		vstr.32	s0, [r5, #20]
  90:Iotas.cpp     **** 	parameters->feedback =  hw.GetAdcValue(ADC_11);
 923              		.loc 22 90 2 is_stmt 1 view .LVU229
 924              		.loc 22 90 14 is_stmt 0 view .LVU230
 925 00c2 2568     		ldr	r5, [r4]
 926              		.loc 22 90 40 view .LVU231
 927 00c4 0A21     		movs	r1, #10
 928 00c6 5548     		ldr	r0, .L41
 929 00c8 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 930              	.LVL47:
  91:Iotas.cpp     **** 	parameters->reverb =    hw.GetAdcValue(ADC_12);
 931              		.loc 22 91 40 view .LVU232
 932 00cc 0B21     		movs	r1, #11
  90:Iotas.cpp     **** 	parameters->feedback =  hw.GetAdcValue(ADC_11);
 933              		.loc 22 90 23 view .LVU233
 934 00ce 85ED070A 		vstr.32	s0, [r5, #28]
 935              		.loc 22 91 2 is_stmt 1 view .LVU234
 936              		.loc 22 91 40 is_stmt 0 view .LVU235
 937 00d2 5248     		ldr	r0, .L41
 938              		.loc 22 91 14 view .LVU236
 939 00d4 2568     		ldr	r5, [r4]
 940              		.loc 22 91 40 view .LVU237
 941 00d6 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 942              	.LVL48:
 943              	.LBB724:
 944              	.LBB725:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 60


  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
 945              		.loc 1 75 16 view .LVU238
 946 00da 534B     		ldr	r3, .L41+12
 947              	.LBE725:
 948              	.LBE724:
 949              		.loc 22 91 21 view .LVU239
 950 00dc 85ED080A 		vstr.32	s0, [r5, #32]
  92:Iotas.cpp     **** 
  93:Iotas.cpp     **** 	if(b2.FallingEdge()){
 951              		.loc 22 93 2 is_stmt 1 view .LVU240
 952              	.LVL49:
 953              	.LBB727:
 954              	.LBI724:
  73:../../libDaisy//src/hid/switch.h ****     {
 955              		.loc 1 73 17 view .LVU241
 956              	.LBB726:
 957              		.loc 1 75 9 view .LVU242
 958              		.loc 1 75 25 is_stmt 0 view .LVU243
 959 00e0 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 960 00e2 12B1     		cbz	r2, .L26
 961              	.LVL50:
 962              		.loc 1 75 25 view .LVU244
 963              	.LBE726:
 964              	.LBE727:
 965              		.loc 22 93 2 view .LVU245
 966 00e4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 967 00e6 802B     		cmp	r3, #128
 968 00e8 4AD0     		beq	.L39
 969              	.L26:
  94:Iotas.cpp     **** 		butt_idx = (butt_idx + 1) % 4;
  95:Iotas.cpp     **** 	}
  96:Iotas.cpp     **** 
  97:Iotas.cpp     **** 	switch (butt_idx)
 970              		.loc 22 97 10 view .LVU246
 971 00ea 524B     		ldr	r3, .L41+24
 972 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973              		.loc 22 97 2 is_stmt 1 view .LVU247
 974 00ee 022B     		cmp	r3, #2
 975 00f0 4ED0     		beq	.L27
 976              	.L40:
 977 00f2 032B     		cmp	r3, #3
 978 00f4 7AD0     		beq	.L28
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 61


 979 00f6 012B     		cmp	r3, #1
 980 00f8 61D0     		beq	.L29
  98:Iotas.cpp     **** 	{
  99:Iotas.cpp     **** 	case 0:
 981              		.loc 22 99 2 view .LVU248
 100:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_GRANULAR);
 982              		.loc 22 100 3 view .LVU249
 983              	.LVL51:
 984              	.LBB728:
 985              	.LBI728:
 105:dsp/granular_processor.h ****     {
 986              		.loc 9 105 17 view .LVU250
 987              	.LBB729:
 107:dsp/granular_processor.h ****     }
 988              		.loc 9 107 9 view .LVU251
 107:dsp/granular_processor.h ****     }
 989              		.loc 9 107 24 is_stmt 0 view .LVU252
 990 00fa 0025     		movs	r5, #0
 991 00fc 4E4B     		ldr	r3, .L41+28
 992              	.LBE729:
 993              	.LBE728:
 994              	.LBB731:
 995              	.LBB732:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 996              		.loc 21 67 23 view .LVU253
 997 00fe 4F48     		ldr	r0, .L41+32
 998 0100 2946     		mov	r1, r5
 999              	.LBE732:
 1000              	.LBE731:
 1001              	.LBB734:
 1002              	.LBB730:
 107:dsp/granular_processor.h ****     }
 1003              		.loc 9 107 24 view .LVU254
 1004 0102 1D70     		strb	r5, [r3]
 1005              	.LVL52:
 107:dsp/granular_processor.h ****     }
 1006              		.loc 9 107 24 view .LVU255
 1007              	.LBE730:
 1008              	.LBE734:
 101:Iotas.cpp     **** 		ledOff();
 1009              		.loc 22 101 3 is_stmt 1 view .LVU256
 1010              	.LBB735:
 1011              	.LBI731:
  66:daisy_bed.h   ****         gen_led1.Write(false);
 1012              		.loc 21 66 10 view .LVU257
 1013              	.LBB733:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1014              		.loc 21 67 9 view .LVU258
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1015              		.loc 21 67 23 is_stmt 0 view .LVU259
 1016 0104 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1017              	.LVL53:
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1018              		.loc 21 68 9 is_stmt 1 view .LVU260
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1019              		.loc 21 68 23 is_stmt 0 view .LVU261
 1020 0108 2946     		mov	r1, r5
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 62


 1021 010a 4D48     		ldr	r0, .L41+36
 1022 010c FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1023              	.LVL54:
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1024              		.loc 21 69 9 is_stmt 1 view .LVU262
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1025              		.loc 21 69 22 is_stmt 0 view .LVU263
 1026 0110 2946     		mov	r1, r5
 1027 0112 4C48     		ldr	r0, .L41+40
 1028 0114 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1029              	.LVL55:
  70:daisy_bed.h   ****     }
 1030              		.loc 21 70 9 is_stmt 1 view .LVU264
  70:daisy_bed.h   ****     }
 1031              		.loc 21 70 22 is_stmt 0 view .LVU265
 1032 0118 4B48     		ldr	r0, .L41+44
 1033 011a 2946     		mov	r1, r5
 1034 011c FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1035              	.LVL56:
 1036              	.LBE733:
 1037              	.LBE735:
 102:Iotas.cpp     **** 		gen_led1.Toggle();
 1038              		.loc 22 102 3 is_stmt 1 view .LVU266
 1039              		.loc 22 102 18 is_stmt 0 view .LVU267
 1040 0120 4648     		ldr	r0, .L41+32
 1041 0122 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 1042              	.LVL57:
 103:Iotas.cpp     **** 		break;
 1043              		.loc 22 103 3 is_stmt 1 view .LVU268
 1044              	.L30:
 104:Iotas.cpp     **** 	
 105:Iotas.cpp     **** 	case 1:
 106:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_LOOPING_DELAY);
 107:Iotas.cpp     **** 		ledOff();
 108:Iotas.cpp     **** 		gen_led2.Toggle();
 109:Iotas.cpp     **** 		break;
 110:Iotas.cpp     **** 
 111:Iotas.cpp     **** 	case 2:
 112:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_SPECTRAL);
 113:Iotas.cpp     **** 		ledOff();
 114:Iotas.cpp     **** 		cv_led1.Toggle();
 115:Iotas.cpp     **** 		break;
 116:Iotas.cpp     **** 
 117:Iotas.cpp     **** 	case 3:
 118:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_STRETCH);
 119:Iotas.cpp     **** 		ledOff();
 120:Iotas.cpp     **** 		cv_led2.Toggle();
 121:Iotas.cpp     **** 		break;
 122:Iotas.cpp     **** 
 123:Iotas.cpp     **** 	default:
 124:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_GRANULAR);
 125:Iotas.cpp     **** 		ledOff();
 126:Iotas.cpp     **** 		gen_led1.Toggle();
 127:Iotas.cpp     **** 		break;
 128:Iotas.cpp     **** 	}
 129:Iotas.cpp     **** 
 130:Iotas.cpp     **** 	// testing parameters (CV)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 63


 131:Iotas.cpp     **** 	//				hw.GetAdcValue(CV_5);
 132:Iotas.cpp     **** 	//              hw.GetAdcValue(CV_6);
 133:Iotas.cpp     **** 	//             	hw.GetAdcValue(CV_7);
 134:Iotas.cpp     **** 	//    			hw.GetAdcValue(CV_8);
 135:Iotas.cpp     ****     // gate ins
 136:Iotas.cpp     ****     parameters->freeze  = b1.RisingEdge();
 1045              		.loc 22 136 5 view .LVU269
 1046              	.LBB736:
 1047              	.LBB737:
  70:../../libDaisy//src/hid/switch.h **** 
 1048              		.loc 1 70 45 is_stmt 0 view .LVU270
 1049 0126 3F4A     		ldr	r2, .L41+8
 1050              	.LBE737:
 1051              	.LBE736:
 1052              		.loc 22 136 17 view .LVU271
 1053 0128 2668     		ldr	r6, [r4]
 1054              	.LVL58:
 1055              	.LBB739:
 1056              	.LBI736:
  70:../../libDaisy//src/hid/switch.h **** 
 1057              		.loc 1 70 17 is_stmt 1 view .LVU272
 1058              	.LBB738:
  70:../../libDaisy//src/hid/switch.h **** 
 1059              		.loc 1 70 38 view .LVU273
  70:../../libDaisy//src/hid/switch.h **** 
 1060              		.loc 1 70 45 is_stmt 0 view .LVU274
 1061 012a 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
  70:../../libDaisy//src/hid/switch.h **** 
 1062              		.loc 1 70 54 view .LVU275
 1063 012c 2BB1     		cbz	r3, .L31
 1064 012e 937A     		ldrb	r3, [r2, #10]	@ zero_extendqisi2
 1065 0130 A3F17F03 		sub	r3, #127
 1066 0134 B3FA83F3 		clz	r3, r3
 1067 0138 5B09     		lsrs	r3, r3, #5
 1068              	.L31:
 1069              	.LVL59:
  70:../../libDaisy//src/hid/switch.h **** 
 1070              		.loc 1 70 54 view .LVU276
 1071              	.LBE738:
 1072              	.LBE739:
 137:Iotas.cpp     ****     parameters->trigger = hw.gate_in_1.Trig();
 1073              		.loc 22 137 44 view .LVU277
 1074 013a 384D     		ldr	r5, .L41
 136:Iotas.cpp     ****     parameters->trigger = hw.gate_in_1.Trig();
 1075              		.loc 22 136 25 view .LVU278
 1076 013c 86F82430 		strb	r3, [r6, #36]
 1077              		.loc 22 137 5 is_stmt 1 view .LVU279
 1078              		.loc 22 137 44 is_stmt 0 view .LVU280
 1079 0140 05F5D870 		add	r0, r5, #432
 1080 0144 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 1081              	.LVL60:
 1082              	.LBB740:
 1083              	.LBB741:
  25:../../libDaisy//src/hid/gatein.h **** 
  26:../../libDaisy//src/hid/gatein.h ****     /** @brief Initializes the gate input with specified hardware pin
  27:../../libDaisy//src/hid/gatein.h ****      *
  28:../../libDaisy//src/hid/gatein.h ****      *  @param pin_cfg pointer to pin to initialize
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 64


  29:../../libDaisy//src/hid/gatein.h ****      *  @param invert True if the pin state is HIGH when 0V is present
  30:../../libDaisy//src/hid/gatein.h ****      *         at the input. False if input signal matches the pin state.
  31:../../libDaisy//src/hid/gatein.h ****      *
  32:../../libDaisy//src/hid/gatein.h ****      *  @note the default for invert is true because it is typical to use
  33:../../libDaisy//src/hid/gatein.h ****      *  an inverting input circuit (e.g. a BJT circuit) for eurorack gate inputs.
  34:../../libDaisy//src/hid/gatein.h ****      */
  35:../../libDaisy//src/hid/gatein.h ****     void Init(dsy_gpio_pin *pin_cfg, bool invert = true);
  36:../../libDaisy//src/hid/gatein.h **** 
  37:../../libDaisy//src/hid/gatein.h ****     /** Trig
  38:../../libDaisy//src/hid/gatein.h ****     Checks current state of gate input.
  39:../../libDaisy//src/hid/gatein.h **** 
  40:../../libDaisy//src/hid/gatein.h ****     @return True if the GPIO just transitioned.
  41:../../libDaisy//src/hid/gatein.h ****     */
  42:../../libDaisy//src/hid/gatein.h ****     bool Trig();
  43:../../libDaisy//src/hid/gatein.h **** 
  44:../../libDaisy//src/hid/gatein.h ****     /** State
  45:../../libDaisy//src/hid/gatein.h ****     Checks current state of gate input (no state required)
  46:../../libDaisy//src/hid/gatein.h **** 
  47:../../libDaisy//src/hid/gatein.h ****     read function is inverted because of suggested BJT input circuit
  48:../../libDaisy//src/hid/gatein.h ****     */
  49:../../libDaisy//src/hid/gatein.h ****     inline bool State()
  50:../../libDaisy//src/hid/gatein.h ****     {
  51:../../libDaisy//src/hid/gatein.h ****         return invert_ ? !dsy_gpio_read(&pin_) : dsy_gpio_read(&pin_);
 1084              		.loc 3 51 24 view .LVU281
 1085 0148 95F8B631 		ldrb	r3, [r5, #438]	@ zero_extendqisi2
 1086              	.LBE741:
 1087              	.LBE740:
 138:Iotas.cpp     ****     parameters->gate    = hw.gate_in_1.State();
 1088              		.loc 22 138 17 view .LVU282
 1089 014c 2468     		ldr	r4, [r4]
 137:Iotas.cpp     ****     parameters->gate    = hw.gate_in_1.State();
 1090              		.loc 22 137 25 view .LVU283
 1091 014e 86F82500 		strb	r0, [r6, #37]
 1092              		.loc 22 138 5 is_stmt 1 view .LVU284
 1093              	.LVL61:
 1094              	.LBB746:
 1095              	.LBI740:
  49:../../libDaisy//src/hid/gatein.h ****     {
 1096              		.loc 3 49 17 view .LVU285
 1097              	.LBB742:
 1098              		.loc 3 51 9 view .LVU286
 1099              		.loc 3 51 40 is_stmt 0 view .LVU287
 1100 0152 05F5D870 		add	r0, r5, #432
 1101              		.loc 3 51 24 view .LVU288
 1102 0156 4BB1     		cbz	r3, .L32
 1103              		.loc 3 51 40 view .LVU289
 1104 0158 FFF7FEFF 		bl	dsy_gpio_read
 1105              	.LVL62:
 1106              		.loc 3 51 26 view .LVU290
 1107 015c B0FA80F0 		clz	r0, r0
 1108              	.LBE742:
 1109              	.LBE746:
 139:Iotas.cpp     **** }...
 1110              		.loc 22 139 1 view .LVU291
 1111 0160 BDEC028B 		vldm	sp!, {d8}
 1112              		.cfi_remember_state
 1113              		.cfi_restore 80
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 65


 1114              		.cfi_restore 81
 1115              		.cfi_def_cfa_offset 16
 1116              	.LBB747:
 1117              	.LBB743:
 1118              		.loc 3 51 26 view .LVU292
 1119 0164 4009     		lsrs	r0, r0, #5
 1120              	.LVL63:
 1121              		.loc 3 51 26 view .LVU293
 1122              	.LBE743:
 1123              	.LBE747:
 138:Iotas.cpp     ****     parameters->gate    = hw.gate_in_1.State();
 1124              		.loc 22 138 25 view .LVU294
 1125 0166 84F82600 		strb	r0, [r4, #38]
 1126              		.loc 22 139 1 view .LVU295
 1127 016a 70BD     		pop	{r4, r5, r6, pc}
 1128              	.LVL64:
 1129              	.L32:
 1130              		.cfi_restore_state
 1131              	.LBB748:
 1132              	.LBB744:
 1133              		.loc 3 51 63 view .LVU296
 1134 016c FFF7FEFF 		bl	dsy_gpio_read
 1135              	.LVL65:
 1136              		.loc 3 51 69 view .LVU297
 1137 0170 0038     		subs	r0, r0, #0
 1138              	.LBE744:
 1139              	.LBE748:
 1140              		.loc 22 139 1 view .LVU298
 1141 0172 BDEC028B 		vldm	sp!, {d8}
 1142              		.cfi_remember_state
 1143              		.cfi_restore 80
 1144              		.cfi_restore 81
 1145              		.cfi_def_cfa_offset 16
 1146              	.LBB749:
 1147              	.LBB745:
 1148              		.loc 3 51 69 view .LVU299
 1149 0176 18BF     		it	ne
 1150 0178 0120     		movne	r0, #1
 1151              	.LVL66:
 1152              		.loc 3 51 69 view .LVU300
 1153              	.LBE745:
 1154              	.LBE749:
 138:Iotas.cpp     ****     parameters->gate    = hw.gate_in_1.State();
 1155              		.loc 22 138 25 view .LVU301
 1156 017a 84F82600 		strb	r0, [r4, #38]
 1157              		.loc 22 139 1 view .LVU302
 1158 017e 70BD     		pop	{r4, r5, r6, pc}
 1159              	.L39:
 1160              		.cfi_restore_state
  94:Iotas.cpp     **** 		butt_idx = (butt_idx + 1) % 4;
 1161              		.loc 22 94 3 is_stmt 1 view .LVU303
  94:Iotas.cpp     **** 		butt_idx = (butt_idx + 1) % 4;
 1162              		.loc 22 94 15 is_stmt 0 view .LVU304
 1163 0180 2C4A     		ldr	r2, .L41+24
 1164 0182 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  94:Iotas.cpp     **** 		butt_idx = (butt_idx + 1) % 4;
 1165              		.loc 22 94 24 view .LVU305
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 66


 1166 0184 0133     		adds	r3, r3, #1
  94:Iotas.cpp     **** 		butt_idx = (butt_idx + 1) % 4;
 1167              		.loc 22 94 12 view .LVU306
 1168 0186 03F00303 		and	r3, r3, #3
  97:Iotas.cpp     **** 	switch (butt_idx)
 1169              		.loc 22 97 2 view .LVU307
 1170 018a 022B     		cmp	r3, #2
  94:Iotas.cpp     **** 		butt_idx = (butt_idx + 1) % 4;
 1171              		.loc 22 94 12 view .LVU308
 1172 018c 1370     		strb	r3, [r2]
  97:Iotas.cpp     **** 	switch (butt_idx)
 1173              		.loc 22 97 2 is_stmt 1 view .LVU309
 1174 018e B0D1     		bne	.L40
 1175              	.L27:
 111:Iotas.cpp     **** 	case 2:
 1176              		.loc 22 111 2 view .LVU310
 112:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_SPECTRAL);
 1177              		.loc 22 112 3 view .LVU311
 1178              	.LVL67:
 1179              	.LBB750:
 1180              	.LBI750:
 105:dsp/granular_processor.h ****     {
 1181              		.loc 9 105 17 view .LVU312
 1182              	.LBB751:
 107:dsp/granular_processor.h ****     }
 1183              		.loc 9 107 9 view .LVU313
 107:dsp/granular_processor.h ****     }
 1184              		.loc 9 107 24 is_stmt 0 view .LVU314
 1185 0190 294B     		ldr	r3, .L41+28
 1186 0192 0322     		movs	r2, #3
 1187              	.LBE751:
 1188              	.LBE750:
 1189              	.LBB753:
 1190              	.LBB754:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1191              		.loc 21 67 23 view .LVU315
 1192 0194 0021     		movs	r1, #0
 1193 0196 2948     		ldr	r0, .L41+32
 1194              	.LBE754:
 1195              	.LBE753:
 1196              	.LBB756:
 1197              	.LBB752:
 107:dsp/granular_processor.h ****     }
 1198              		.loc 9 107 24 view .LVU316
 1199 0198 1A70     		strb	r2, [r3]
 1200              	.LVL68:
 107:dsp/granular_processor.h ****     }
 1201              		.loc 9 107 24 view .LVU317
 1202              	.LBE752:
 1203              	.LBE756:
 113:Iotas.cpp     **** 		ledOff();
 1204              		.loc 22 113 3 is_stmt 1 view .LVU318
 1205              	.LBB757:
 1206              	.LBI753:
  66:daisy_bed.h   ****         gen_led1.Write(false);
 1207              		.loc 21 66 10 view .LVU319
 1208              	.LBB755:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 67


  67:daisy_bed.h   ****         gen_led2.Write(false);
 1209              		.loc 21 67 9 view .LVU320
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1210              		.loc 21 67 23 is_stmt 0 view .LVU321
 1211 019a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1212              	.LVL69:
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1213              		.loc 21 68 9 is_stmt 1 view .LVU322
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1214              		.loc 21 68 23 is_stmt 0 view .LVU323
 1215 019e 0021     		movs	r1, #0
 1216 01a0 2748     		ldr	r0, .L41+36
 1217 01a2 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1218              	.LVL70:
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1219              		.loc 21 69 9 is_stmt 1 view .LVU324
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1220              		.loc 21 69 22 is_stmt 0 view .LVU325
 1221 01a6 0021     		movs	r1, #0
 1222 01a8 2648     		ldr	r0, .L41+40
 1223 01aa FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1224              	.LVL71:
  70:daisy_bed.h   ****     }
 1225              		.loc 21 70 9 is_stmt 1 view .LVU326
  70:daisy_bed.h   ****     }
 1226              		.loc 21 70 22 is_stmt 0 view .LVU327
 1227 01ae 0021     		movs	r1, #0
 1228 01b0 2548     		ldr	r0, .L41+44
 1229 01b2 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1230              	.LVL72:
 1231              	.LBE755:
 1232              	.LBE757:
 114:Iotas.cpp     **** 		cv_led1.Toggle();
 1233              		.loc 22 114 3 is_stmt 1 view .LVU328
 114:Iotas.cpp     **** 		cv_led1.Toggle();
 1234              		.loc 22 114 17 is_stmt 0 view .LVU329
 1235 01b6 2348     		ldr	r0, .L41+40
 1236 01b8 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 1237              	.LVL73:
 115:Iotas.cpp     **** 		break;
 1238              		.loc 22 115 3 is_stmt 1 view .LVU330
 1239 01bc B3E7     		b	.L30
 1240              	.L29:
 105:Iotas.cpp     **** 	case 1:
 1241              		.loc 22 105 2 view .LVU331
 106:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_LOOPING_DELAY);
 1242              		.loc 22 106 3 view .LVU332
 1243              	.LVL74:
 1244              	.LBB758:
 1245              	.LBI758:
 105:dsp/granular_processor.h ****     {
 1246              		.loc 9 105 17 view .LVU333
 1247              	.LBB759:
 107:dsp/granular_processor.h ****     }
 1248              		.loc 9 107 9 view .LVU334
 107:dsp/granular_processor.h ****     }
 1249              		.loc 9 107 24 is_stmt 0 view .LVU335
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 68


 1250 01be 1E4B     		ldr	r3, .L41+28
 1251 01c0 0222     		movs	r2, #2
 1252              	.LBE759:
 1253              	.LBE758:
 1254              	.LBB761:
 1255              	.LBB762:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1256              		.loc 21 67 23 view .LVU336
 1257 01c2 0021     		movs	r1, #0
 1258 01c4 1D48     		ldr	r0, .L41+32
 1259              	.LBE762:
 1260              	.LBE761:
 1261              	.LBB764:
 1262              	.LBB760:
 107:dsp/granular_processor.h ****     }
 1263              		.loc 9 107 24 view .LVU337
 1264 01c6 1A70     		strb	r2, [r3]
 1265              	.LVL75:
 107:dsp/granular_processor.h ****     }
 1266              		.loc 9 107 24 view .LVU338
 1267              	.LBE760:
 1268              	.LBE764:
 107:Iotas.cpp     **** 		ledOff();
 1269              		.loc 22 107 3 is_stmt 1 view .LVU339
 1270              	.LBB765:
 1271              	.LBI761:
  66:daisy_bed.h   ****         gen_led1.Write(false);
 1272              		.loc 21 66 10 view .LVU340
 1273              	.LBB763:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1274              		.loc 21 67 9 view .LVU341
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1275              		.loc 21 67 23 is_stmt 0 view .LVU342
 1276 01c8 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1277              	.LVL76:
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1278              		.loc 21 68 9 is_stmt 1 view .LVU343
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1279              		.loc 21 68 23 is_stmt 0 view .LVU344
 1280 01cc 0021     		movs	r1, #0
 1281 01ce 1C48     		ldr	r0, .L41+36
 1282 01d0 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1283              	.LVL77:
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1284              		.loc 21 69 9 is_stmt 1 view .LVU345
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1285              		.loc 21 69 22 is_stmt 0 view .LVU346
 1286 01d4 0021     		movs	r1, #0
 1287 01d6 1B48     		ldr	r0, .L41+40
 1288 01d8 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1289              	.LVL78:
  70:daisy_bed.h   ****     }
 1290              		.loc 21 70 9 is_stmt 1 view .LVU347
  70:daisy_bed.h   ****     }
 1291              		.loc 21 70 22 is_stmt 0 view .LVU348
 1292 01dc 0021     		movs	r1, #0
 1293 01de 1A48     		ldr	r0, .L41+44
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 69


 1294 01e0 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1295              	.LVL79:
 1296              	.LBE763:
 1297              	.LBE765:
 108:Iotas.cpp     **** 		gen_led2.Toggle();
 1298              		.loc 22 108 3 is_stmt 1 view .LVU349
 108:Iotas.cpp     **** 		gen_led2.Toggle();
 1299              		.loc 22 108 18 is_stmt 0 view .LVU350
 1300 01e4 1648     		ldr	r0, .L41+36
 1301 01e6 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 1302              	.LVL80:
 109:Iotas.cpp     **** 		break;
 1303              		.loc 22 109 3 is_stmt 1 view .LVU351
 1304 01ea 9CE7     		b	.L30
 1305              	.L28:
 117:Iotas.cpp     **** 	case 3:
 1306              		.loc 22 117 2 view .LVU352
 118:Iotas.cpp     **** 		processor.set_playback_mode(PlaybackMode::PLAYBACK_MODE_STRETCH);
 1307              		.loc 22 118 3 view .LVU353
 1308              	.LVL81:
 1309              	.LBB766:
 1310              	.LBI766:
 105:dsp/granular_processor.h ****     {
 1311              		.loc 9 105 17 view .LVU354
 1312              	.LBB767:
 107:dsp/granular_processor.h ****     }
 1313              		.loc 9 107 9 view .LVU355
 107:dsp/granular_processor.h ****     }
 1314              		.loc 9 107 24 is_stmt 0 view .LVU356
 1315 01ec 124B     		ldr	r3, .L41+28
 1316 01ee 0122     		movs	r2, #1
 1317              	.LBE767:
 1318              	.LBE766:
 1319              	.LBB769:
 1320              	.LBB770:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1321              		.loc 21 67 23 view .LVU357
 1322 01f0 0021     		movs	r1, #0
 1323 01f2 1248     		ldr	r0, .L41+32
 1324              	.LBE770:
 1325              	.LBE769:
 1326              	.LBB772:
 1327              	.LBB768:
 107:dsp/granular_processor.h ****     }
 1328              		.loc 9 107 24 view .LVU358
 1329 01f4 1A70     		strb	r2, [r3]
 1330              	.LVL82:
 107:dsp/granular_processor.h ****     }
 1331              		.loc 9 107 24 view .LVU359
 1332              	.LBE768:
 1333              	.LBE772:
 119:Iotas.cpp     **** 		ledOff();
 1334              		.loc 22 119 3 is_stmt 1 view .LVU360
 1335              	.LBB773:
 1336              	.LBI769:
  66:daisy_bed.h   ****         gen_led1.Write(false);
 1337              		.loc 21 66 10 view .LVU361
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 70


 1338              	.LBB771:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1339              		.loc 21 67 9 view .LVU362
  67:daisy_bed.h   ****         gen_led2.Write(false);
 1340              		.loc 21 67 23 is_stmt 0 view .LVU363
 1341 01f6 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1342              	.LVL83:
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1343              		.loc 21 68 9 is_stmt 1 view .LVU364
  68:daisy_bed.h   ****         cv_led1.Write(false);
 1344              		.loc 21 68 23 is_stmt 0 view .LVU365
 1345 01fa 0021     		movs	r1, #0
 1346 01fc 1048     		ldr	r0, .L41+36
 1347 01fe FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1348              	.LVL84:
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1349              		.loc 21 69 9 is_stmt 1 view .LVU366
  69:daisy_bed.h   ****         cv_led2.Write(false);
 1350              		.loc 21 69 22 is_stmt 0 view .LVU367
 1351 0202 0021     		movs	r1, #0
 1352 0204 0F48     		ldr	r0, .L41+40
 1353 0206 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1354              	.LVL85:
  70:daisy_bed.h   ****     }
 1355              		.loc 21 70 9 is_stmt 1 view .LVU368
  70:daisy_bed.h   ****     }
 1356              		.loc 21 70 22 is_stmt 0 view .LVU369
 1357 020a 0F48     		ldr	r0, .L41+44
 1358 020c 0021     		movs	r1, #0
 1359 020e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1360              	.LVL86:
 1361              	.LBE771:
 1362              	.LBE773:
 120:Iotas.cpp     **** 		cv_led2.Toggle();
 1363              		.loc 22 120 3 is_stmt 1 view .LVU370
 120:Iotas.cpp     **** 		cv_led2.Toggle();
 1364              		.loc 22 120 17 is_stmt 0 view .LVU371
 1365 0212 0D48     		ldr	r0, .L41+44
 1366 0214 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 1367              	.LVL87:
 121:Iotas.cpp     **** 		break;
 1368              		.loc 22 121 3 is_stmt 1 view .LVU372
 1369 0218 85E7     		b	.L30
 1370              	.L42:
 1371 021a 00BF     		.align	2
 1372              	.L41:
 1373 021c 00000000 		.word	.LANCHOR18
 1374 0220 00000000 		.word	.LANCHOR19
 1375 0224 00000000 		.word	.LANCHOR16
 1376 0228 00000000 		.word	.LANCHOR17
 1377 022c 00000000 		.word	0
 1378 0230 9CC41C41 		.word	1092404380
 1379 0234 00000000 		.word	.LANCHOR20
 1380 0238 00000000 		.word	processor
 1381 023c 00000000 		.word	.LANCHOR1
 1382 0240 00000000 		.word	.LANCHOR3
 1383 0244 00000000 		.word	.LANCHOR5
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 71


 1384 0248 00000000 		.word	.LANCHOR7
 1385              		.cfi_endproc
 1386              	.LFE5073:
 1388              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 1389              		.align	1
 1390              		.p2align 2,,3
 1391              		.global	_Z13AudioCallbackPKPKfPPfj
 1392              		.syntax unified
 1393              		.thumb
 1394              		.thumb_func
 1395              		.fpu fpv5-d16
 1397              	_Z13AudioCallbackPKPKfPPfj:
 1398              	.LVL88:
 1399              	.LFB5071:
  24:Iotas.cpp     **** {
 1400              		.loc 22 24 1 view -0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
  25:Iotas.cpp     **** 	Controls();
 1404              		.loc 22 25 2 view .LVU374
  24:Iotas.cpp     **** {
 1405              		.loc 22 24 1 is_stmt 0 view .LVU375
 1406 0000 2DE9F04D 		push	{r4, r5, r6, r7, r8, r10, fp, lr}
 1407              		.cfi_def_cfa_offset 32
 1408              		.cfi_offset 4, -32
 1409              		.cfi_offset 5, -28
 1410              		.cfi_offset 6, -24
 1411              		.cfi_offset 7, -20
 1412              		.cfi_offset 8, -16
 1413              		.cfi_offset 10, -12
 1414              		.cfi_offset 11, -8
 1415              		.cfi_offset 14, -4
 1416 0004 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
  24:Iotas.cpp     **** {
 1418              		.loc 22 24 1 view .LVU376
 1419 0006 9346     		mov	fp, r2
 1420 0008 8846     		mov	r8, r1
 1421 000a 0446     		mov	r4, r0
  25:Iotas.cpp     **** 	Controls();
 1422              		.loc 22 25 10 view .LVU377
 1423 000c FFF7FEFF 		bl	_Z8Controlsv
 1424              	.LVL89:
  27:Iotas.cpp     **** 	FloatFrame input[size];
 1425              		.loc 22 27 2 is_stmt 1 view .LVU378
  27:Iotas.cpp     **** 	FloatFrame input[size];
 1426              		.loc 22 27 13 is_stmt 0 view .LVU379
 1427 0010 6B46     		mov	r3, sp
 1428 0012 A3EBCB03 		sub	r3, r3, fp, lsl #3
 1429 0016 9D46     		mov	sp, r3
  28:Iotas.cpp     ****     FloatFrame output[size];
 1430              		.loc 22 28 16 view .LVU380
 1431 0018 A3EBCB03 		sub	r3, r3, fp, lsl #3
  27:Iotas.cpp     **** 	FloatFrame input[size];
 1432              		.loc 22 27 13 view .LVU381
 1433 001c 6946     		mov	r1, sp
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 72


 1434              	.LVL90:
  28:Iotas.cpp     ****     FloatFrame output[size];
 1435              		.loc 22 28 5 is_stmt 1 view .LVU382
  28:Iotas.cpp     ****     FloatFrame output[size];
 1436              		.loc 22 28 16 is_stmt 0 view .LVU383
 1437 001e 9D46     		mov	sp, r3
 1438 0020 6A46     		mov	r2, sp
 1439              	.LVL91:
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
 1440              		.loc 22 30 2 is_stmt 1 view .LVU384
 1441              	.LBB774:
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
 1442              		.loc 22 30 22 view .LVU385
 1443 0022 BBF1000F 		cmp	fp, #0
 1444 0026 33D0     		beq	.L44
 1445 0028 0846     		mov	r0, r1
 1446 002a 4FEA8B06 		lsl	r6, fp, #2
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
 1447              		.loc 22 33 27 is_stmt 0 view .LVU386
 1448 002e 9446     		mov	ip, r2
 1449 0030 D4E90053 		ldrd	r5, r3, [r4]
 1450 0034 1446     		mov	r4, r2
 1451              	.LVL92:
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
 1452              		.loc 22 33 27 view .LVU387
 1453 0036 05EB8B0A 		add	r10, r5, fp, lsl #2
 1454              	.LVL93:
 1455              	.L46:
  32:Iotas.cpp     ****         input[i].l  = in[0][i] * .5f;
 1456              		.loc 22 32 9 is_stmt 1 discriminator 2 view .LVU388
  32:Iotas.cpp     ****         input[i].l  = in[0][i] * .5f;
 1457              		.loc 22 32 32 is_stmt 0 discriminator 2 view .LVU389
 1458 003a F6EE006A 		vmov.f32	s13, #5.0e-1
  32:Iotas.cpp     ****         input[i].l  = in[0][i] * .5f;
 1459              		.loc 22 32 30 discriminator 2 view .LVU390
 1460 003e B5EC017A 		vldmia.32	r5!, {s14}
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
 1461              		.loc 22 30 22 discriminator 2 view .LVU391
 1462 0042 0830     		adds	r0, r0, #8
  34:Iotas.cpp     ****         output[i].l = output[i].r = 0.f;
 1463              		.loc 22 34 35 discriminator 2 view .LVU392
 1464 0044 4FF0000E 		mov	lr, #0
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
 1465              		.loc 22 30 22 discriminator 2 view .LVU393
 1466 0048 5545     		cmp	r5, r10
  32:Iotas.cpp     ****         input[i].l  = in[0][i] * .5f;
 1467              		.loc 22 32 32 discriminator 2 view .LVU394
 1468 004a 27EE267A 		vmul.f32	s14, s14, s13
  32:Iotas.cpp     ****         input[i].l  = in[0][i] * .5f;
 1469              		.loc 22 32 21 discriminator 2 view .LVU395
 1470 004e 00ED027A 		vstr.32	s14, [r0, #-8]
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
 1471              		.loc 22 33 9 is_stmt 1 discriminator 2 view .LVU396
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
 1472              		.loc 22 33 30 is_stmt 0 discriminator 2 view .LVU397
 1473 0052 F3EC017A 		vldmia.32	r3!, {s15}
  34:Iotas.cpp     ****         output[i].l = output[i].r = 0.f;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 73


 1474              		.loc 22 34 35 discriminator 2 view .LVU398
 1475 0056 CCF804E0 		str	lr, [ip, #4]	@ float
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
 1476              		.loc 22 33 32 discriminator 2 view .LVU399
 1477 005a 67EEA67A 		vmul.f32	s15, s15, s13
  34:Iotas.cpp     ****         output[i].l = output[i].r = 0.f;
 1478              		.loc 22 34 21 discriminator 2 view .LVU400
 1479 005e 4CF808EB 		str	lr, [ip], #8	@ float
  33:Iotas.cpp     ****         input[i].r  = in[1][i] * .5f;
 1480              		.loc 22 33 21 discriminator 2 view .LVU401
 1481 0062 40ED017A 		vstr.32	s15, [r0, #-4]
  34:Iotas.cpp     ****         output[i].l = output[i].r = 0.f;
 1482              		.loc 22 34 9 is_stmt 1 discriminator 2 view .LVU402
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
 1483              		.loc 22 30 2 discriminator 2 view .LVU403
  30:Iotas.cpp     **** 	for(size_t i = 0; i < size; i++)
 1484              		.loc 22 30 22 discriminator 2 view .LVU404
 1485 0066 E8D1     		bne	.L46
 1486              	.LBE774:
  37:Iotas.cpp     **** 	processor.Process(input, output, size);
 1487              		.loc 22 37 2 view .LVU405
  37:Iotas.cpp     **** 	processor.Process(input, output, size);
 1488              		.loc 22 37 19 is_stmt 0 view .LVU406
 1489 0068 5B46     		mov	r3, fp
 1490 006a 0D48     		ldr	r0, .L52
 1491 006c FFF7FEFF 		bl	_ZN23GranularProcessorClouds7ProcessEP10FloatFrameS1_j
 1492              	.LVL94:
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1493              		.loc 22 39 2 is_stmt 1 view .LVU407
 1494              	.LBB775:
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1495              		.loc 22 39 23 view .LVU408
 1496 0070 D8E90032 		ldrd	r3, r2, [r8]
 1497 0074 1E44     		add	r6, r6, r3
 1498              	.LVL95:
 1499              	.L47:
  41:Iotas.cpp     ****         OUT_L[i] = output[i].l;
 1500              		.loc 22 41 9 discriminator 2 view .LVU409
  41:Iotas.cpp     ****         OUT_L[i] = output[i].l;
 1501              		.loc 22 41 30 is_stmt 0 discriminator 2 view .LVU410
 1502 0076 2168     		ldr	r1, [r4]	@ float
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1503              		.loc 22 39 23 discriminator 2 view .LVU411
 1504 0078 0834     		adds	r4, r4, #8
  41:Iotas.cpp     ****         OUT_L[i] = output[i].l;
 1505              		.loc 22 41 18 discriminator 2 view .LVU412
 1506 007a 43F8041B 		str	r1, [r3], #4	@ float
  42:Iotas.cpp     ****         OUT_R[i] = output[i].r;
 1507              		.loc 22 42 9 is_stmt 1 discriminator 2 view .LVU413
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1508              		.loc 22 39 23 is_stmt 0 discriminator 2 view .LVU414
 1509 007e B342     		cmp	r3, r6
  42:Iotas.cpp     ****         OUT_R[i] = output[i].r;
 1510              		.loc 22 42 30 discriminator 2 view .LVU415
 1511 0080 54F8041C 		ldr	r1, [r4, #-4]	@ float
  42:Iotas.cpp     ****         OUT_R[i] = output[i].r;
 1512              		.loc 22 42 18 discriminator 2 view .LVU416
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 74


 1513 0084 42F8041B 		str	r1, [r2], #4	@ float
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1514              		.loc 22 39 2 is_stmt 1 discriminator 2 view .LVU417
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1515              		.loc 22 39 23 discriminator 2 view .LVU418
 1516 0088 F5D1     		bne	.L47
 1517              	.LBE775:
  44:Iotas.cpp     **** }
 1518              		.loc 22 44 1 is_stmt 0 view .LVU419
 1519 008a BD46     		mov	sp, r7
 1520              		.cfi_remember_state
 1521              		.cfi_def_cfa_register 13
 1522              	.LVL96:
  44:Iotas.cpp     **** }
 1523              		.loc 22 44 1 view .LVU420
 1524              		@ sp needed
 1525 008c BDE8F08D 		pop	{r4, r5, r6, r7, r8, r10, fp, pc}
 1526              	.LVL97:
 1527              	.L44:
 1528              		.cfi_restore_state
  37:Iotas.cpp     **** 	processor.Process(input, output, size);
 1529              		.loc 22 37 2 is_stmt 1 view .LVU421
  37:Iotas.cpp     **** 	processor.Process(input, output, size);
 1530              		.loc 22 37 19 is_stmt 0 view .LVU422
 1531 0090 5B46     		mov	r3, fp
 1532 0092 0348     		ldr	r0, .L52
 1533 0094 FFF7FEFF 		bl	_ZN23GranularProcessorClouds7ProcessEP10FloatFrameS1_j
 1534              	.LVL98:
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1535              		.loc 22 39 2 is_stmt 1 view .LVU423
 1536              	.LBB776:
  39:Iotas.cpp     **** 	for (size_t i = 0; i < size; i++)
 1537              		.loc 22 39 23 view .LVU424
 1538              	.LBE776:
  44:Iotas.cpp     **** }
 1539              		.loc 22 44 1 is_stmt 0 view .LVU425
 1540 0098 BD46     		mov	sp, r7
 1541              		.cfi_def_cfa_register 13
 1542              	.LVL99:
  44:Iotas.cpp     **** }
 1543              		.loc 22 44 1 view .LVU426
 1544              		@ sp needed
 1545 009a BDE8F08D 		pop	{r4, r5, r6, r7, r8, r10, fp, pc}
 1546              	.LVL100:
 1547              	.L53:
  44:Iotas.cpp     **** }
 1548              		.loc 22 44 1 view .LVU427
 1549 009e 00BF     		.align	2
 1550              	.L52:
 1551 00a0 00000000 		.word	processor
 1552              		.cfi_endproc
 1553              	.LFE5071:
 1555              		.section	.text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E,"ax",%progbits
 1556              		.align	1
 1557              		.p2align 2,,3
 1558              		.syntax unified
 1559              		.thumb
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 75


 1560              		.thumb_func
 1561              		.fpu fpv5-d16
 1563              	_GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:
 1564              	.LFB5807:
 1565              		.loc 22 139 1 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              	.LBB950:
 1570              	.LBI950:
 1571              		.loc 22 139 1 view .LVU429
 1572              	.LVL101:
 1573              	.LBB951:
 1574              	.LBB952:
 1575              	.LBI952:
 1576              		.file 24 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 76


  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 1577              		.loc 24 74 5 view .LVU430
 1578              	.LBB953:
 1579              	.LBB954:
 1580              	.LBI954:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1581              		.loc 24 68 9 view .LVU431
 1582              	.LBB955:
 1583              	.LBB956:
 1584              	.LBB957:
 1585              	.LBI957:
 1586              		.file 25 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 77


  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 78


  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 79


 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 80


 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 81


 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 1587              		.loc 25 272 15 view .LVU432
 1588              		.loc 25 272 15 is_stmt 0 view .LVU433
 1589              	.LBE957:
 1590              	.LBE956:
 1591              	.LBE955:
 1592              	.LBE954:
 1593              	.LBE953:
 1594              	.LBE952:
 1595              	.LBE951:
 1596              	.LBE950:
 1597              		.loc 22 139 1 view .LVU434
 1598 0000 38B5     		push	{r3, r4, r5, lr}
 1599              		.cfi_def_cfa_offset 16
 1600              		.cfi_offset 3, -16
 1601              		.cfi_offset 4, -12
 1602              		.cfi_offset 5, -8
 1603              		.cfi_offset 14, -4
 1604              	.LBB1260:
 1605              	.LBB1245:
 1606              	.LBB970:
 1607              	.LBB971:
 1608              		.loc 24 74 12 view .LVU435
 1609 0002 4B4A     		ldr	r2, .L56
 1610              	.LBE971:
 1611              	.LBE970:
 1612              	.LBB981:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 82


 1613              	.LBB967:
 1614              	.LBB964:
 1615              	.LBB961:
 1616              	.LBB958:
  69:../../libDaisy//src/per/gpio.h ****         {
 1617              		.loc 24 69 73 view .LVU436
 1618 0004 0024     		movs	r4, #0
 1619              	.LBE958:
 1620              	.LBE961:
 1621              	.LBE964:
 1622              		.loc 24 74 12 view .LVU437
 1623 0006 4FF60B73 		movw	r3, #65291
 1624 000a 4A48     		ldr	r0, .L56+4
 1625              	.LBE967:
 1626              	.LBE981:
 1627              	.LBB982:
 1628              	.LBB983:
 1629 000c 4A49     		ldr	r1, .L56+8
 1630              	.LBE983:
 1631              	.LBE982:
 1632              	.LBB993:
 1633              	.LBB979:
 1634              	.LBB972:
 1635              	.LBB973:
 1636              	.LBB974:
  69:../../libDaisy//src/per/gpio.h ****         {
 1637              		.loc 24 69 73 view .LVU438
 1638 000e C2E90034 		strd	r3, r4, [r2]
 1639 0012 C2E90244 		strd	r4, r4, [r2, #8]
 1640              	.LBE974:
 1641              	.LBE973:
 1642              	.LBE972:
 1643              	.LBE979:
 1644              	.LBE993:
 1645              	.LBB994:
 1646              	.LBB995:
 1647              		.loc 24 74 12 view .LVU439
 1648 0016 494A     		ldr	r2, .L56+12
 1649              	.LBB996:
 1650              	.LBB997:
 1651              	.LBB998:
  69:../../libDaisy//src/per/gpio.h ****         {
 1652              		.loc 24 69 73 view .LVU440
 1653 0018 C2E90034 		strd	r3, r4, [r2]
 1654 001c C2E90244 		strd	r4, r4, [r2, #8]
 1655              	.LBE998:
 1656              	.LBE997:
 1657              	.LBE996:
 1658              	.LBE995:
 1659              	.LBE994:
 1660              	.LBB1004:
 1661              	.LBB1005:
 1662              		.loc 24 74 12 view .LVU441
 1663 0020 474A     		ldr	r2, .L56+16
 1664              	.LBE1005:
 1665              	.LBE1004:
 1666              	.LBB1019:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 83


 1667              	.LBB968:
 1668              	.LBB965:
 1669              	.LBB962:
 1670              	.LBB959:
  69:../../libDaisy//src/per/gpio.h ****         {
 1671              		.loc 24 69 73 view .LVU442
 1672 0022 C0E90034 		strd	r3, r4, [r0]
 1673              	.LBE959:
 1674              	.LBE962:
 1675              	.LBE965:
 1676              	.LBE968:
 1677              	.LBE1019:
 1678              	.LBB1020:
 1679              	.LBB1016:
 1680              	.LBB1006:
 1681              	.LBB1007:
 1682              	.LBB1008:
 1683 0026 C2E90034 		strd	r3, r4, [r2]
 1684              	.LBE1008:
 1685              	.LBE1007:
 1686              	.LBE1006:
 1687              	.LBE1016:
 1688              	.LBE1020:
 1689              	.LBB1021:
 1690              	.LBB991:
 1691              	.LBB984:
 1692              	.LBB985:
 1693              	.LBB986:
 1694 002a C1E90034 		strd	r3, r4, [r1]
 1695              	.LBE986:
 1696              	.LBE985:
 1697              	.LBE984:
 1698              	.LBE991:
 1699              	.LBE1021:
 1700              	.LBB1022:
 1701              	.LBB969:
 1702              	.LBB966:
 1703              	.LBB963:
 1704              	.LBB960:
 1705 002e C0E90244 		strd	r4, r4, [r0, #8]
 1706              	.LVL102:
  69:../../libDaisy//src/per/gpio.h ****         {
 1707              		.loc 24 69 73 view .LVU443
 1708              	.LBE960:
 1709              	.LBE963:
 1710              	.LBE966:
 1711              	.LBE969:
 1712              	.LBE1022:
 1713              	.LBB1023:
 1714              	.LBI970:
 1715              		.loc 24 74 5 is_stmt 1 view .LVU444
 1716              	.LBB980:
 1717              	.LBB978:
 1718              	.LBI972:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1719              		.loc 24 68 9 view .LVU445
 1720              	.LBB977:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 84


 1721              	.LBB976:
 1722              	.LBB975:
 1723              	.LBI975:
 1724              		.loc 25 272 15 view .LVU446
 1725              		.loc 25 272 15 is_stmt 0 view .LVU447
 1726              	.LBE975:
 1727              	.LBE976:
 1728              	.LBE977:
 1729              	.LBE978:
 1730              	.LBE980:
 1731              	.LBE1023:
 1732              	.LBB1024:
 1733              	.LBI982:
 1734              		.loc 24 74 5 is_stmt 1 view .LVU448
 1735              	.LBB992:
 1736              	.LBB990:
 1737              	.LBI984:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1738              		.loc 24 68 9 view .LVU449
 1739              	.LBB989:
 1740              	.LBB988:
 1741              	.LBB987:
 1742              	.LBI987:
 1743              		.loc 25 272 15 view .LVU450
 1744              		.loc 25 272 15 is_stmt 0 view .LVU451
 1745              	.LBE987:
  69:../../libDaisy//src/per/gpio.h ****         {
 1746              		.loc 24 69 73 view .LVU452
 1747 0032 C1E90244 		strd	r4, r4, [r1, #8]
 1748              	.LVL103:
  69:../../libDaisy//src/per/gpio.h ****         {
 1749              		.loc 24 69 73 view .LVU453
 1750              	.LBE988:
 1751              	.LBE989:
 1752              	.LBE990:
 1753              	.LBE992:
 1754              	.LBE1024:
 1755              	.LBB1025:
 1756              	.LBI994:
 1757              		.loc 24 74 5 is_stmt 1 view .LVU454
 1758              	.LBB1003:
 1759              	.LBB1002:
 1760              	.LBI996:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1761              		.loc 24 68 9 view .LVU455
 1762              	.LBB1001:
 1763              	.LBB1000:
 1764              	.LBB999:
 1765              	.LBI999:
 1766              		.loc 25 272 15 view .LVU456
 1767              		.loc 25 272 15 is_stmt 0 view .LVU457
 1768              	.LBE999:
 1769              	.LBE1000:
 1770              	.LBE1001:
 1771              	.LBE1002:
 1772              	.LBE1003:
 1773              	.LBE1025:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 85


 1774              	.LBB1026:
 1775              	.LBI1026:
 1776              		.loc 24 74 5 is_stmt 1 view .LVU458
 1777              	.LBB1027:
 1778              	.LBB1028:
 1779              	.LBI1028:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1780              		.loc 24 68 9 view .LVU459
 1781              	.LBB1029:
 1782              	.LBB1030:
 1783              	.LBB1031:
 1784              	.LBI1031:
 1785              		.loc 25 272 15 view .LVU460
 1786              		.loc 25 272 15 is_stmt 0 view .LVU461
 1787              	.LBE1031:
 1788              	.LBE1030:
 1789              	.LBE1029:
 1790              	.LBE1028:
 1791              	.LBE1027:
 1792              	.LBE1026:
 1793              	.LBB1041:
 1794              	.LBB1017:
 1795              	.LBB1014:
 1796              	.LBB1012:
 1797              	.LBB1010:
  69:../../libDaisy//src/per/gpio.h ****         {
 1798              		.loc 24 69 73 view .LVU462
 1799 0036 C2E90244 		strd	r4, r4, [r2, #8]
 1800              	.LBE1010:
 1801              	.LBE1012:
 1802              	.LBE1014:
 1803              	.LBE1017:
 1804              	.LBE1041:
 1805              	.LBB1042:
 1806              	.LBB1038:
 1807              		.loc 24 74 12 view .LVU463
 1808 003a 4248     		ldr	r0, .L56+20
 1809              	.LBE1038:
 1810              	.LBE1042:
 1811              	.LBB1043:
 1812              	.LBB1044:
 1813 003c 424A     		ldr	r2, .L56+24
 1814              	.LBE1044:
 1815              	.LBE1043:
 1816              	.LBB1055:
 1817              	.LBB1056:
 1818 003e 4349     		ldr	r1, .L56+28
 1819              	.LBE1056:
 1820              	.LBE1055:
 1821              	.LBB1066:
 1822              	.LBB1052:
 1823 0040 1360     		str	r3, [r2]
 1824              	.LBE1052:
 1825              	.LBE1066:
 1826              	.LBB1067:
 1827              	.LBB1039:
 1828              	.LBB1036:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 86


 1829              	.LBB1034:
 1830              	.LBB1032:
  69:../../libDaisy//src/per/gpio.h ****         {
 1831              		.loc 24 69 73 view .LVU464
 1832 0042 C0E90034 		strd	r3, r4, [r0]
 1833              	.LBE1032:
 1834              	.LBE1034:
 1835              	.LBE1036:
 1836              	.LBE1039:
 1837              	.LBE1067:
 1838              	.LBB1068:
 1839              	.LBB1064:
 1840              	.LBB1057:
 1841              	.LBB1058:
 1842              	.LBB1059:
 1843 0046 C1E90034 		strd	r3, r4, [r1]
 1844 004a C1E90244 		strd	r4, r4, [r1, #8]
 1845              	.LBE1059:
 1846              	.LBE1058:
 1847              	.LBE1057:
 1848              	.LBE1064:
 1849              	.LBE1068:
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1850              		.loc 21 23 18 view .LVU465
 1851 004e 404B     		ldr	r3, .L56+32
  25:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
 1852              		.loc 21 25 18 view .LVU466
 1853 0050 4049     		ldr	r1, .L56+36
 1854              	.LBB1069:
 1855              	.LBB1040:
 1856              	.LBB1037:
 1857              	.LBB1035:
 1858              	.LBB1033:
  69:../../libDaisy//src/per/gpio.h ****         {
 1859              		.loc 24 69 73 view .LVU467
 1860 0052 C0E90244 		strd	r4, r4, [r0, #8]
 1861              	.LVL104:
  69:../../libDaisy//src/per/gpio.h ****         {
 1862              		.loc 24 69 73 view .LVU468
 1863              	.LBE1033:
 1864              	.LBE1035:
 1865              	.LBE1037:
 1866              	.LBE1040:
 1867              	.LBE1069:
 1868              	.LBB1070:
 1869              	.LBI1004:
 1870              		.loc 24 74 5 is_stmt 1 view .LVU469
 1871              	.LBB1018:
 1872              	.LBB1015:
 1873              	.LBI1006:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1874              		.loc 24 68 9 view .LVU470
 1875              	.LBB1013:
 1876              	.LBB1011:
 1877              	.LBB1009:
 1878              	.LBI1009:
 1879              		.loc 25 272 15 view .LVU471
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 87


 1880              		.loc 25 272 15 is_stmt 0 view .LVU472
 1881              	.LBE1009:
 1882              	.LBE1011:
 1883              	.LBE1013:
 1884              	.LBE1015:
 1885              	.LBE1018:
 1886              	.LBE1070:
 1887              	.LBB1071:
 1888              	.LBI1055:
 1889              		.loc 24 74 5 is_stmt 1 view .LVU473
 1890              	.LBB1065:
 1891              	.LBB1063:
 1892              	.LBI1057:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1893              		.loc 24 68 9 view .LVU474
 1894              	.LBB1062:
 1895              	.LBB1061:
 1896              	.LBB1060:
 1897              	.LBI1060:
 1898              		.loc 25 272 15 view .LVU475
 1899              		.loc 25 272 15 is_stmt 0 view .LVU476
 1900              	.LBE1060:
 1901              	.LBE1061:
 1902              	.LBE1062:
 1903              	.LBE1063:
 1904              	.LBE1065:
 1905              	.LBE1071:
 1906              	.LBB1072:
 1907              	.LBI1043:
 1908              		.loc 24 74 5 is_stmt 1 view .LVU477
 1909              	.LBB1053:
 1910              	.LBB1045:
 1911              	.LBI1045:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1912              		.loc 24 68 9 view .LVU478
 1913              	.LBB1046:
 1914              	.LBB1047:
 1915              	.LBB1048:
 1916              	.LBI1048:
 1917              		.loc 25 272 15 view .LVU479
 1918              		.loc 25 272 15 is_stmt 0 view .LVU480
 1919              	.LBE1048:
  69:../../libDaisy//src/per/gpio.h ****         {
 1920              		.loc 24 69 73 view .LVU481
 1921 0056 C2E90144 		strd	r4, r4, [r2, #4]
 1922              	.LBE1047:
 1923              	.LBE1046:
 1924              	.LBE1045:
 1925              	.LBE1053:
 1926              	.LBE1072:
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1927              		.loc 21 23 18 view .LVU482
 1928 005a 3F48     		ldr	r0, .L56+40
 1929              	.LBB1073:
 1930              	.LBB1054:
 1931              	.LBB1051:
 1932              	.LBB1050:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 88


 1933              	.LBB1049:
  69:../../libDaisy//src/per/gpio.h ****         {
 1934              		.loc 24 69 73 view .LVU483
 1935 005c D460     		str	r4, [r2, #12]
 1936              	.LVL105:
  69:../../libDaisy//src/per/gpio.h ****         {
 1937              		.loc 24 69 73 view .LVU484
 1938              	.LBE1049:
 1939              	.LBE1050:
 1940              	.LBE1051:
 1941              	.LBE1054:
 1942              	.LBE1073:
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1943              		.loc 21 23 18 view .LVU485
 1944 005e 1D88     		ldrh	r5, [r3]	@ unaligned
  25:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
 1945              		.loc 21 25 18 view .LVU486
 1946 0060 0988     		ldrh	r1, [r1]	@ unaligned
 1947 0062 3E4B     		ldr	r3, .L56+44
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1948              		.loc 21 23 18 view .LVU487
 1949 0064 0580     		strh	r5, [r0]	@ unaligned
  25:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
 1950              		.loc 21 25 18 view .LVU488
 1951 0066 1980     		strh	r1, [r3]	@ unaligned
 1952              	.LBB1074:
 1953              	.LBB1075:
 1954              	.LBB1076:
 269:../../libDaisy//src/daisy_core.h **** 
 1955              		.loc 25 269 74 view .LVU489
 1956 0068 3D4A     		ldr	r2, .L56+48
 1957              	.LBE1076:
 1958              	.LBE1075:
 1959              	.LBE1074:
  24:daisy_bed.h   ****     dsy_gpio_pin oldPinA9 = DaisyPatchSM::A9;
 1960              		.loc 21 24 55 view .LVU490
 1961 006a 0188     		ldrh	r1, [r0]
 1962              	.LVL106:
 1963              	.LBB1079:
 1964              	.LBI1074:
 269:../../libDaisy//src/daisy_core.h **** 
 1965              		.loc 25 269 15 is_stmt 1 view .LVU491
 1966              	.LBE1079:
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 1967              		.loc 21 31 18 is_stmt 0 view .LVU492
 1968 006c 3D48     		ldr	r0, .L56+52
 1969              	.LBB1080:
 1970              	.LBB1078:
 1971              	.LBB1077:
 269:../../libDaisy//src/daisy_core.h **** 
 1972              		.loc 25 269 74 view .LVU493
 1973 006e 1180     		strh	r1, [r2]	@ movhi
 1974              	.LVL107:
 269:../../libDaisy//src/daisy_core.h **** 
 1975              		.loc 25 269 74 view .LVU494
 1976              	.LBE1077:
 1977              	.LBE1078:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 89


 1978              	.LBE1080:
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1979              		.loc 21 29 18 view .LVU495
 1980 0070 3D49     		ldr	r1, .L56+56
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 1981              		.loc 21 31 18 view .LVU496
 1982 0072 0088     		ldrh	r0, [r0]	@ unaligned
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1983              		.loc 21 29 18 view .LVU497
 1984 0074 0D88     		ldrh	r5, [r1]	@ unaligned
  26:daisy_bed.h   **** 
 1985              		.loc 21 26 55 view .LVU498
 1986 0076 1988     		ldrh	r1, [r3]
 1987              	.LVL108:
 1988              	.LBB1081:
 1989              	.LBI1081:
 269:../../libDaisy//src/daisy_core.h **** 
 1990              		.loc 25 269 15 is_stmt 1 view .LVU499
 1991              	.LBB1082:
 1992              	.LBB1083:
 269:../../libDaisy//src/daisy_core.h **** 
 1993              		.loc 25 269 74 is_stmt 0 view .LVU500
 1994 0078 3C4B     		ldr	r3, .L56+60
 1995              	.LBE1083:
 1996              	.LBE1082:
 1997              	.LBE1081:
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1998              		.loc 21 29 18 view .LVU501
 1999 007a 3D4A     		ldr	r2, .L56+64
 2000              	.LBB1086:
 2001              	.LBB1085:
 2002              	.LBB1084:
 269:../../libDaisy//src/daisy_core.h **** 
 2003              		.loc 25 269 74 view .LVU502
 2004 007c 1980     		strh	r1, [r3]	@ movhi
 2005              	.LVL109:
 269:../../libDaisy//src/daisy_core.h **** 
 2006              		.loc 25 269 74 view .LVU503
 2007              	.LBE1084:
 2008              	.LBE1085:
 2009              	.LBE1086:
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 2010              		.loc 21 31 18 view .LVU504
 2011 007e 3D4B     		ldr	r3, .L56+68
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 2012              		.loc 21 29 18 view .LVU505
 2013 0080 1580     		strh	r5, [r2]	@ unaligned
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 2014              		.loc 21 31 18 view .LVU506
 2015 0082 1880     		strh	r0, [r3]	@ unaligned
  30:daisy_bed.h   ****     dsy_gpio_pin oldPinD1 = DaisyPatchSM::D1;
 2016              		.loc 21 30 55 view .LVU507
 2017 0084 1288     		ldrh	r2, [r2]
 2018              	.LVL110:
 2019              	.LBB1087:
 2020              	.LBI1087:
 269:../../libDaisy//src/daisy_core.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 90


 2021              		.loc 25 269 15 is_stmt 1 view .LVU508
 2022              	.LBE1087:
  32:daisy_bed.h   ****     // ^^^ {DSY_GPIOB, 4},  /**< D1  - SPI2 CS */
 2023              		.loc 21 32 55 is_stmt 0 view .LVU509
 2024 0086 1D88     		ldrh	r5, [r3]
 2025              	.LBB1092:
 2026              	.LBB1088:
 2027              	.LBB1089:
 269:../../libDaisy//src/daisy_core.h **** 
 2028              		.loc 25 269 74 view .LVU510
 2029 0088 3B4B     		ldr	r3, .L56+72
 2030              	.LBE1089:
 2031              	.LBE1088:
 2032              	.LBE1092:
  36:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
 2033              		.loc 21 36 18 view .LVU511
 2034 008a 3C49     		ldr	r1, .L56+76
 2035              	.LBB1093:
 2036              	.LBB1091:
 2037              	.LBB1090:
 269:../../libDaisy//src/daisy_core.h **** 
 2038              		.loc 25 269 74 view .LVU512
 2039 008c 1A80     		strh	r2, [r3]	@ movhi
 2040              	.LVL111:
 269:../../libDaisy//src/daisy_core.h **** 
 2041              		.loc 25 269 74 view .LVU513
 2042              	.LBE1090:
 2043              	.LBE1091:
 2044              	.LBE1093:
 2045              	.LBB1094:
 2046              	.LBI1094:
 269:../../libDaisy//src/daisy_core.h **** 
 2047              		.loc 25 269 15 is_stmt 1 view .LVU514
 2048              	.LBE1094:
  38:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
 2049              		.loc 21 38 18 is_stmt 0 view .LVU515
 2050 008e 3C4B     		ldr	r3, .L56+80
  36:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
 2051              		.loc 21 36 18 view .LVU516
 2052 0090 B1F800E0 		ldrh	lr, [r1]	@ unaligned
  38:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
 2053              		.loc 21 38 18 view .LVU517
 2054 0094 B3F800C0 		ldrh	ip, [r3]	@ unaligned
  40:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
 2055              		.loc 21 40 18 view .LVU518
 2056 0098 3A4B     		ldr	r3, .L56+84
 2057              	.LBB1099:
 2058              	.LBB1100:
 2059              	.LBB1101:
 269:../../libDaisy//src/daisy_core.h **** 
 2060              		.loc 25 269 74 view .LVU519
 2061 009a 3B48     		ldr	r0, .L56+88
 2062              	.LBE1101:
 2063              	.LBE1100:
 2064              	.LBE1099:
  40:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
 2065              		.loc 21 40 18 view .LVU520
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 91


 2066 009c 1988     		ldrh	r1, [r3]	@ unaligned
  42:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
 2067              		.loc 21 42 18 view .LVU521
 2068 009e 3B4B     		ldr	r3, .L56+92
 2069 00a0 1A88     		ldrh	r2, [r3]	@ unaligned
  36:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
 2070              		.loc 21 36 18 view .LVU522
 2071 00a2 3B4B     		ldr	r3, .L56+96
 2072 00a4 A3F800E0 		strh	lr, [r3]	@ unaligned
  37:daisy_bed.h   ****     dsy_gpio_pin oldPinD6 = DaisyPatchSM::D6;
 2073              		.loc 21 37 55 view .LVU523
 2074 00a8 B3F800E0 		ldrh	lr, [r3]
  38:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
 2075              		.loc 21 38 18 view .LVU524
 2076 00ac 394B     		ldr	r3, .L56+100
 2077 00ae A3F800C0 		strh	ip, [r3]	@ unaligned
  39:daisy_bed.h   ****     dsy_gpio_pin oldPinD4 = DaisyPatchSM::D4;
 2078              		.loc 21 39 55 view .LVU525
 2079 00b2 1B88     		ldrh	r3, [r3]
 2080              	.LBB1104:
 2081              	.LBB1103:
 2082              	.LBB1102:
 269:../../libDaisy//src/daisy_core.h **** 
 2083              		.loc 25 269 74 view .LVU526
 2084 00b4 0380     		strh	r3, [r0]	@ movhi
 2085              	.LBE1102:
 2086              	.LBE1103:
 2087              	.LBE1104:
  40:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
 2088              		.loc 21 40 18 view .LVU527
 2089 00b6 384B     		ldr	r3, .L56+104
 2090 00b8 1980     		strh	r1, [r3]	@ unaligned
  41:daisy_bed.h   ****     dsy_gpio_pin oldPinD5 = DaisyPatchSM::D5;
 2091              		.loc 21 41 55 view .LVU528
 2092 00ba B3F800C0 		ldrh	ip, [r3]
  42:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
 2093              		.loc 21 42 18 view .LVU529
 2094 00be 374B     		ldr	r3, .L56+108
  48:daisy_bed.h   **** 
 2095              		.loc 21 48 17 view .LVU530
 2096 00c0 3749     		ldr	r1, .L56+112
  42:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
 2097              		.loc 21 42 18 view .LVU531
 2098 00c2 1A80     		strh	r2, [r3]	@ unaligned
  43:daisy_bed.h   **** 
 2099              		.loc 21 43 55 view .LVU532
 2100 00c4 1888     		ldrh	r0, [r3]
 2101              	.LBB1105:
 2102              	.LBB1095:
 2103              	.LBB1096:
 269:../../libDaisy//src/daisy_core.h **** 
 2104              		.loc 25 269 74 view .LVU533
 2105 00c6 374B     		ldr	r3, .L56+116
 2106              	.LBE1096:
 2107              	.LBE1095:
 2108              	.LBE1105:
  48:daisy_bed.h   **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 92


 2109              		.loc 21 48 17 view .LVU534
 2110 00c8 374A     		ldr	r2, .L56+120
 2111              	.LBB1106:
 2112              	.LBB1098:
 2113              	.LBB1097:
 269:../../libDaisy//src/daisy_core.h **** 
 2114              		.loc 25 269 74 view .LVU535
 2115 00ca 1D80     		strh	r5, [r3]	@ movhi
 2116              	.LVL112:
 269:../../libDaisy//src/daisy_core.h **** 
 2117              		.loc 25 269 74 view .LVU536
 2118              	.LBE1097:
 2119              	.LBE1098:
 2120              	.LBE1106:
 2121              	.LBB1107:
 2122              	.LBI1107:
 269:../../libDaisy//src/daisy_core.h **** 
 2123              		.loc 25 269 15 is_stmt 1 view .LVU537
 2124              	.LBB1108:
 2125              	.LBB1109:
 269:../../libDaisy//src/daisy_core.h **** 
 2126              		.loc 25 269 74 is_stmt 0 view .LVU538
 2127 00cc 374B     		ldr	r3, .L56+124
 2128 00ce A3F800E0 		strh	lr, [r3]	@ movhi
 2129              	.LVL113:
 269:../../libDaisy//src/daisy_core.h **** 
 2130              		.loc 25 269 74 view .LVU539
 2131              	.LBE1109:
 2132              	.LBE1108:
 2133              	.LBE1107:
 2134              	.LBB1110:
 2135              	.LBI1099:
 269:../../libDaisy//src/daisy_core.h **** 
 2136              		.loc 25 269 15 is_stmt 1 view .LVU540
 269:../../libDaisy//src/daisy_core.h **** 
 2137              		.loc 25 269 15 is_stmt 0 view .LVU541
 2138              	.LBE1110:
 2139              	.LBB1111:
 2140              	.LBI1111:
 269:../../libDaisy//src/daisy_core.h **** 
 2141              		.loc 25 269 15 is_stmt 1 view .LVU542
 2142              	.LBB1112:
 2143              	.LBB1113:
 269:../../libDaisy//src/daisy_core.h **** 
 2144              		.loc 25 269 74 is_stmt 0 view .LVU543
 2145 00d2 374B     		ldr	r3, .L56+128
 2146 00d4 A3F800C0 		strh	ip, [r3]	@ movhi
 2147              	.LVL114:
 269:../../libDaisy//src/daisy_core.h **** 
 2148              		.loc 25 269 74 view .LVU544
 2149              	.LBE1113:
 2150              	.LBE1112:
 2151              	.LBE1111:
 2152              	.LBB1114:
 2153              	.LBI1114:
 269:../../libDaisy//src/daisy_core.h **** 
 2154              		.loc 25 269 15 is_stmt 1 view .LVU545
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 93


 2155              	.LBB1115:
 2156              	.LBB1116:
 269:../../libDaisy//src/daisy_core.h **** 
 2157              		.loc 25 269 74 is_stmt 0 view .LVU546
 2158 00d8 364B     		ldr	r3, .L56+132
 2159 00da 1880     		strh	r0, [r3]	@ movhi
 2160              	.LVL115:
 269:../../libDaisy//src/daisy_core.h **** 
 2161              		.loc 25 269 74 view .LVU547
 2162              	.LBE1116:
 2163              	.LBE1115:
 2164              	.LBE1114:
 2165              	.LBB1117:
 2166              	.LBI1117:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2167              		.loc 1 41 5 is_stmt 1 view .LVU548
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2168              		.loc 1 41 5 is_stmt 0 view .LVU549
 2169              	.LBE1117:
  48:daisy_bed.h   **** 
 2170              		.loc 21 48 17 view .LVU550
 2171 00dc 3648     		ldr	r0, .L56+136
 2172 00de FFF7FEFF 		bl	__aeabi_atexit
 2173              	.LVL116:
 2174              	.LBB1118:
 2175              	.LBI1118:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2176              		.loc 1 41 5 is_stmt 1 view .LVU551
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2177              		.loc 1 41 5 is_stmt 0 view .LVU552
 2178              	.LBE1118:
  48:daisy_bed.h   **** 
 2179              		.loc 21 48 20 view .LVU553
 2180 00e2 314A     		ldr	r2, .L56+120
 2181 00e4 2E49     		ldr	r1, .L56+112
 2182 00e6 3548     		ldr	r0, .L56+140
 2183 00e8 FFF7FEFF 		bl	__aeabi_atexit
 2184              	.LVL117:
 2185              	.LBB1119:
 2186              	.LBI1119:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2187              		.loc 2 64 9 is_stmt 1 view .LVU554
 2188              	.LBB1120:
 2189              	.LBB1121:
 2190              	.LBI1121:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2191              		.loc 8 77 5 view .LVU555
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2192              		.loc 8 77 5 is_stmt 0 view .LVU556
 2193              	.LBE1121:
 2194              	.LBB1122:
 2195              	.LBI1122:
 2196              		.file 26 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 94


   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 95


  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 96


 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2197              		.loc 26 166 5 is_stmt 1 view .LVU557
 2198              	.LBB1123:
 2199              	.LBB1124:
 2200              		.loc 26 166 34 is_stmt 0 view .LVU558
 2201 00ec 3448     		ldr	r0, .L56+144
 2202              	.LBE1124:
 2203              	.LBE1123:
 2204              	.LBE1122:
 2205              	.LBE1120:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 97


 2206              	.LBE1119:
  10:Iotas.cpp     **** DaisyPatchSM 			hw;
 2207              		.loc 22 10 17 view .LVU559
 2208 00ee 2E4A     		ldr	r2, .L56+120
 2209 00f0 3449     		ldr	r1, .L56+148
 2210              	.LBB1146:
 2211              	.LBB1144:
 2212              	.LBB1125:
 2213              	.LBB1126:
 2214              	.LBB1127:
 2215              	.LBB1128:
 2216              	.LBB1129:
 2217              		.file 27 "../../libDaisy//src/per/i2c.h"
   1:../../libDaisy//src/per/i2c.h **** #pragma once
   2:../../libDaisy//src/per/i2c.h **** #include "daisy_core.h"
   3:../../libDaisy//src/per/i2c.h **** 
   4:../../libDaisy//src/per/i2c.h **** namespace daisy
   5:../../libDaisy//src/per/i2c.h **** {
   6:../../libDaisy//src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libDaisy//src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libDaisy//src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libDaisy//src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libDaisy//src/per/i2c.h ****  *  
  11:../../libDaisy//src/per/i2c.h ****  *      // setup the configuration
  12:../../libDaisy//src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libDaisy//src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libDaisy//src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libDaisy//src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libDaisy//src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libDaisy//src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libDaisy//src/per/i2c.h ****  */
  24:../../libDaisy//src/per/i2c.h **** class I2CHandle
  25:../../libDaisy//src/per/i2c.h **** {
  26:../../libDaisy//src/per/i2c.h ****   public:
  27:../../libDaisy//src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libDaisy//src/per/i2c.h ****     struct Config
  29:../../libDaisy//src/per/i2c.h ****     {
  30:../../libDaisy//src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libDaisy//src/per/i2c.h ****         enum class Mode
  32:../../libDaisy//src/per/i2c.h ****         {
  33:../../libDaisy//src/per/i2c.h ****             I2C_MASTER,
  34:../../libDaisy//src/per/i2c.h ****             I2C_SLAVE,
  35:../../libDaisy//src/per/i2c.h ****         };
  36:../../libDaisy//src/per/i2c.h **** 
  37:../../libDaisy//src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libDaisy//src/per/i2c.h ****         enum class Peripheral
  39:../../libDaisy//src/per/i2c.h ****         {
  40:../../libDaisy//src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libDaisy//src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libDaisy//src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libDaisy//src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libDaisy//src/per/i2c.h ****         };
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 98


  45:../../libDaisy//src/per/i2c.h **** 
  46:../../libDaisy//src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libDaisy//src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libDaisy//src/per/i2c.h ****          */
  49:../../libDaisy//src/per/i2c.h ****         enum class Speed
  50:../../libDaisy//src/per/i2c.h ****         {
  51:../../libDaisy//src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libDaisy//src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libDaisy//src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libDaisy//src/per/i2c.h ****         };
  55:../../libDaisy//src/per/i2c.h **** 
  56:../../libDaisy//src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libDaisy//src/per/i2c.h ****         struct
  58:../../libDaisy//src/per/i2c.h ****         {
  59:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libDaisy//src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libDaisy//src/per/i2c.h **** 
  63:../../libDaisy//src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libDaisy//src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libDaisy//src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libDaisy//src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libDaisy//src/per/i2c.h ****     };
  68:../../libDaisy//src/per/i2c.h **** 
  69:../../libDaisy//src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libDaisy//src/per/i2c.h ****     enum class Result
  71:../../libDaisy//src/per/i2c.h ****     {
  72:../../libDaisy//src/per/i2c.h ****         OK, /**< & */
  73:../../libDaisy//src/per/i2c.h ****         ERR /**< & */
  74:../../libDaisy//src/per/i2c.h ****     };
  75:../../libDaisy//src/per/i2c.h **** 
  76:../../libDaisy//src/per/i2c.h ****     enum class Direction
  77:../../libDaisy//src/per/i2c.h ****     {
  78:../../libDaisy//src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libDaisy//src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libDaisy//src/per/i2c.h ****     };
  81:../../libDaisy//src/per/i2c.h **** 
  82:../../libDaisy//src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 2218              		.loc 27 82 33 view .LVU560
 2219 00f2 0462     		str	r4, [r0, #32]
 2220              	.LBE1129:
 2221              	.LBE1128:
 2222              	.LBE1127:
 2223              	.LBE1126:
 2224              	.LBE1125:
 2225              	.LBB1132:
 2226              	.LBB1133:
 2227              	.LBB1134:
 2228              		.file 28 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 99


   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 100


  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2229              		.loc 28 84 33 view .LVU561
 2230 00f4 8462     		str	r4, [r0, #40]
 2231              	.LBE1134:
 2232              	.LBE1133:
 2233              	.LBE1132:
 2234              	.LBB1135:
 2235              	.LBB1136:
 2236              	.LBB1137:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2237              		.loc 7 95 35 view .LVU562
 2238 00f6 C0E90344 		strd	r4, r4, [r0, #12]
 2239              	.LVL118:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2240              		.loc 7 95 35 view .LVU563
 2241              	.LBE1137:
 2242              	.LBE1136:
 2243              	.LBE1135:
 2244              	.LBB1138:
 2245              	.LBI1138:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2246              		.loc 6 92 5 is_stmt 1 view .LVU564
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2247              		.loc 6 92 5 is_stmt 0 view .LVU565
 2248              	.LBE1138:
 2249              	.LBB1139:
 2250              	.LBI1139:
  40:../../libDaisy//src/hid/usb.h **** 
 2251              		.loc 5 40 5 is_stmt 1 view .LVU566
  40:../../libDaisy//src/hid/usb.h **** 
 2252              		.loc 5 40 5 is_stmt 0 view .LVU567
 2253              	.LBE1139:
 2254              	.LBB1140:
 2255              	.LBI1125:
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 2256              		.loc 4 28 5 is_stmt 1 view .LVU568
 2257              	.LBB1131:
 2258              	.LBB1130:
 2259              	.LBI1127:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 101


 2260              		.loc 27 82 5 view .LVU569
 2261              		.loc 27 82 5 is_stmt 0 view .LVU570
 2262              	.LBE1130:
 2263              	.LBE1131:
 2264              	.LBE1140:
 2265              	.LBB1141:
 2266              	.LBI1132:
 2267              		.loc 28 84 5 is_stmt 1 view .LVU571
 2268              		.loc 28 84 5 is_stmt 0 view .LVU572
 2269              	.LBE1141:
 2270              	.LBE1144:
 2271              	.LBE1146:
 2272              	.LBE1245:
 2273              	.LBE1260:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2274              		.loc 2 64 24 is_stmt 1 view .LVU573
 2275              	.LBB1261:
 2276              	.LBB1246:
 2277              	.LBB1147:
 2278              	.LBB1145:
 2279              	.LBB1142:
 2280              	.LBI1142:
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2281              		.loc 3 20 5 view .LVU574
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2282              		.loc 3 20 5 is_stmt 0 view .LVU575
 2283              	.LBE1142:
 2284              	.LBB1143:
 2285              	.LBI1143:
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2286              		.loc 3 20 5 is_stmt 1 view .LVU576
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2287              		.loc 3 20 5 is_stmt 0 view .LVU577
 2288              	.LBE1143:
 2289              	.LBE1145:
 2290              	.LBE1147:
  10:Iotas.cpp     **** DaisyPatchSM 			hw;
 2291              		.loc 22 10 17 view .LVU578
 2292 00fa FFF7FEFF 		bl	__aeabi_atexit
 2293              	.LVL119:
 2294              	.LBB1148:
 2295              	.LBI1148:
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 2296              		.loc 9 77 5 is_stmt 1 view .LVU579
 2297              	.LBB1149:
 2298              	.LBB1150:
 2299              	.LBI1150:
  41:dsp/correlator.h ****     ~Correlator() {}
 2300              		.loc 20 41 5 view .LVU580
  41:dsp/correlator.h ****     ~Correlator() {}
 2301              		.loc 20 41 5 is_stmt 0 view .LVU581
 2302              	.LBE1150:
 2303              	.LBB1151:
 2304              	.LBI1151:
  52:dsp/granular_sample_player.h ****     ~GranularSamplePlayer() {}
 2305              		.loc 19 52 5 is_stmt 1 view .LVU582
 2306              	.LBE1151:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 102


 2307              	.LBE1149:
 2308              	.LBE1148:
 2309              	.LBE1246:
 2310              	.LBE1261:
  52:dsp/granular_sample_player.h ****     ~GranularSamplePlayer() {}
 2311              		.loc 19 52 28 view .LVU583
 2312              	.LBB1262:
 2313              	.LBB1247:
 2314              	.LBB1232:
 2315              	.LBB1219:
 2316              	.LBB1152:
 2317              	.LBI1152:
  53:dsp/wsola_sample_player.h ****     ~WSOLASamplePlayer() {}
 2318              		.loc 18 53 5 view .LVU584
 2319              	.LBE1152:
 2320              	.LBE1219:
 2321              	.LBE1232:
 2322              	.LBE1247:
 2323              	.LBE1262:
  53:dsp/wsola_sample_player.h ****     ~WSOLASamplePlayer() {}
 2324              		.loc 18 53 25 view .LVU585
 2325              	.LBB1263:
 2326              	.LBB1248:
 2327              	.LBB1233:
 2328              	.LBB1220:
 2329              	.LBB1153:
 2330              	.LBI1153:
  47:dsp/looping_sample_player.h ****     ~LoopingSamplePlayer() {}
 2331              		.loc 17 47 5 view .LVU586
  47:dsp/looping_sample_player.h ****     ~LoopingSamplePlayer() {}
 2332              		.loc 17 47 5 is_stmt 0 view .LVU587
 2333              	.LBE1153:
 2334              	.LBB1154:
 2335              	.LBI1154:
  43:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 2336              		.loc 15 43 5 is_stmt 1 view .LVU588
 2337              	.LBB1155:
 2338              	.LBB1156:
 2339              	.LBI1156:
 827:./shy_fft.h   ****     ~ShyFFT() {}
 2340              		.loc 16 827 5 view .LVU589
 2341              	.LBB1157:
 2342              	.LBB1158:
 2343              	.LBI1158:
 233:./shy_fft.h   ****     ~RotationPhasor() {}
 2344              		.loc 16 233 5 view .LVU590
 233:./shy_fft.h   ****     ~RotationPhasor() {}
 2345              		.loc 16 233 5 is_stmt 0 view .LVU591
 2346              	.LBE1158:
 2347              	.LBE1157:
 2348              	.LBE1156:
 2349              	.LBE1155:
 2350              	.LBE1154:
 2351              	.LBE1220:
 2352              	.LBE1233:
 2353              	.LBE1248:
 2354              	.LBE1263:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 103


  43:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 2355              		.loc 15 43 20 is_stmt 1 view .LVU592
  43:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 2356              		.loc 15 43 20 view .LVU593
 2357              	.LBB1264:
 2358              	.LBB1249:
 2359              	.LBB1234:
 2360              	.LBB1221:
 2361              	.LBB1159:
 2362              	.LBI1159:
  39:dsp/fx/diffuser.h ****     ~Diffuser() {}
 2363              		.loc 14 39 5 view .LVU594
 2364              	.LBB1160:
 2365              	.LBB1161:
 2366              	.LBI1161:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2367              		.loc 12 110 5 view .LVU595
 2368              	.LBE1161:
 2369              	.LBE1160:
 2370              	.LBE1159:
 2371              	.LBE1221:
 2372              	.LBE1234:
 2373              	.LBE1249:
 2374              	.LBE1264:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2375              		.loc 12 110 16 view .LVU596
 2376              	.LBB1265:
 2377              	.LBB1250:
 2378              	.LBB1235:
 2379              	.LBB1222:
 2380              	.LBB1180:
 2381              	.LBB1177:
 2382              	.LBB1174:
 2383              	.LBB1162:
 2384              	.LBB1163:
 2385              	.LBI1163:
 2386              		.file 29 "./stmtemp.h"
   1:./stmtemp.h   **** #include "daisy.h"
   2:./stmtemp.h   **** #include "daisysp.h"
   3:./stmtemp.h   **** #include "resources.h"
   4:./stmtemp.h   **** 
   5:./stmtemp.h   **** using namespace daisy;
   6:./stmtemp.h   **** using namespace daisysp;
   7:./stmtemp.h   **** 
   8:./stmtemp.h   **** #define MAKE_INTEGRAL_FRACTIONAL(x)                   \
   9:./stmtemp.h   ****     int32_t x##_integral   = static_cast<int32_t>(x); \
  10:./stmtemp.h   ****     float   x##_fractional = x - static_cast<float>(x##_integral);
  11:./stmtemp.h   **** 
  12:./stmtemp.h   **** #define SLOPE(out, in, positive, negative)                \
  13:./stmtemp.h   ****     {                                                     \
  14:./stmtemp.h   ****         float error = (in)-out;                           \
  15:./stmtemp.h   ****         out += (error > 0 ? positive : negative) * error; \
  16:./stmtemp.h   ****     }
  17:./stmtemp.h   **** 
  18:./stmtemp.h   **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in)-out);
  19:./stmtemp.h   **** 
  20:./stmtemp.h   **** #define CONSTRAIN(var, min, max) \
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 104


  21:./stmtemp.h   ****     if(var < (min))              \
  22:./stmtemp.h   ****     {                            \
  23:./stmtemp.h   ****         var = (min);             \
  24:./stmtemp.h   ****     }                            \
  25:./stmtemp.h   ****     else if(var > (max))         \
  26:./stmtemp.h   ****     {                            \
  27:./stmtemp.h   ****         var = (max);             \
  28:./stmtemp.h   ****     }
  29:./stmtemp.h   **** 
  30:./stmtemp.h   **** #define JOIN(lhs, rhs) JOIN_1(lhs, rhs)
  31:./stmtemp.h   **** #define JOIN_1(lhs, rhs) JOIN_2(lhs, rhs)
  32:./stmtemp.h   **** #define JOIN_2(lhs, rhs) lhs##rhs
  33:./stmtemp.h   **** 
  34:./stmtemp.h   **** #define STATIC_ASSERT(expression, message)                                  \
  35:./stmtemp.h   ****     struct JOIN(__static_assertion_at_line_, __LINE__)                      \
  36:./stmtemp.h   ****     {                                                                       \
  37:./stmtemp.h   ****         impl::StaticAssertion<static_cast<bool>((expression))>              \
  38:./stmtemp.h   ****             JOIN(JOIN(JOIN(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), \
  39:./stmtemp.h   ****                  message);                                                  \
  40:./stmtemp.h   ****     };
  41:./stmtemp.h   **** 
  42:./stmtemp.h   **** namespace impl
  43:./stmtemp.h   **** {
  44:./stmtemp.h   **** template <bool>
  45:./stmtemp.h   **** struct StaticAssertion;
  46:./stmtemp.h   **** 
  47:./stmtemp.h   **** template <>
  48:./stmtemp.h   **** struct StaticAssertion<true>
  49:./stmtemp.h   **** {
  50:./stmtemp.h   **** }; // StaticAssertion<true>
  51:./stmtemp.h   **** 
  52:./stmtemp.h   **** template <int i>
  53:./stmtemp.h   **** struct StaticAssertionTest
  54:./stmtemp.h   **** {
  55:./stmtemp.h   **** }; // StaticAssertionTest<int>
  56:./stmtemp.h   **** 
  57:./stmtemp.h   **** } // namespace impl
  58:./stmtemp.h   **** 
  59:./stmtemp.h   **** template <uint32_t a, uint32_t b, uint32_t c, uint32_t d>
  60:./stmtemp.h   **** struct FourCC
  61:./stmtemp.h   **** {
  62:./stmtemp.h   ****     static const uint32_t value = (((((d << 8) | c) << 8) | b) << 8) | a;
  63:./stmtemp.h   **** };
  64:./stmtemp.h   **** 
  65:./stmtemp.h   **** class CosineOscillator
  66:./stmtemp.h   **** {
  67:./stmtemp.h   ****   public:
  68:./stmtemp.h   ****     CosineOscillator() {}
 2387              		.loc 29 68 5 view .LVU597
 2388              	.LBB1164:
 2389              	.LBB1165:
 2390              		.loc 29 68 24 is_stmt 0 view .LVU598
 2391 00fe 3248     		ldr	r0, .L56+152
 2392 0100 0023     		movs	r3, #0
 2393              	.LBE1165:
 2394              	.LBE1164:
 2395              	.LBE1163:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 105


 2396              	.LBE1162:
 2397              	.LBE1174:
 2398              	.LBE1177:
 2399              	.LBE1180:
 2400              	.LBE1222:
 2401              	.LBE1235:
  11:Iotas.cpp     **** GranularProcessorClouds processor;
 2402              		.loc 22 11 25 view .LVU599
 2403 0102 294A     		ldr	r2, .L56+120
 2404              	.LBB1236:
 2405              	.LBB1223:
 2406              	.LBB1181:
 2407              	.LBB1178:
 2408              	.LBB1175:
 2409              	.LBB1172:
 2410              	.LBB1170:
 2411              	.LBB1168:
 2412              	.LBB1166:
 2413              		.loc 29 68 24 view .LVU600
 2414 0104 00F58054 		add	r4, r0, #4096
 2415 0108 00F6F871 		addw	r1, r0, #4088
 2416 010c 2360     		str	r3, [r4]	@ float
 2417              	.LVL120:
 2418              		.loc 29 68 24 view .LVU601
 2419              	.LBE1166:
 2420              	.LBE1168:
 2421              	.LBE1170:
 2422              	.LBE1172:
 2423              	.LBE1175:
 2424              	.LBE1178:
 2425              	.LBE1181:
 2426              	.LBE1223:
 2427              	.LBE1236:
 2428              	.LBE1250:
 2429              	.LBE1265:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2430              		.loc 12 110 16 is_stmt 1 view .LVU602
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2431              		.loc 12 110 16 view .LVU603
 2432              	.LBB1266:
 2433              	.LBB1251:
 2434              	.LBB1237:
 2435              	.LBB1224:
 2436              	.LBB1182:
 2437              	.LBB1179:
 2438              	.LBB1176:
 2439              	.LBB1173:
 2440              	.LBB1171:
 2441              		.loc 29 68 5 view .LVU604
 2442              	.LBB1169:
 2443              	.LBB1167:
 2444              		.loc 29 68 24 is_stmt 0 view .LVU605
 2445 010e 0B60     		str	r3, [r1]	@ float
 2446 0110 A360     		str	r3, [r4, #8]	@ float
 2447 0112 2361     		str	r3, [r4, #16]	@ float
 2448              	.LVL121:
 2449              		.loc 29 68 24 view .LVU606
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 106


 2450              	.LBE1167:
 2451              	.LBE1169:
 2452              	.LBE1171:
 2453              	.LBE1173:
 2454              	.LBE1176:
 2455              	.LBE1179:
 2456              	.LBE1182:
 2457              	.LBE1224:
 2458              	.LBE1237:
 2459              	.LBE1251:
 2460              	.LBE1266:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2461              		.loc 12 110 16 is_stmt 1 view .LVU607
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2462              		.loc 12 110 16 view .LVU608
 2463              	.LBB1267:
 2464              	.LBB1252:
 2465              	.LBB1238:
 2466              	.LBB1225:
 2467              	.LBB1183:
 2468              	.LBI1183:
  40:dsp/fx/reverb.h ****     ~Reverb() {}
 2469              		.loc 13 40 5 view .LVU609
 2470              	.LBB1184:
 2471              	.LBB1185:
 2472              	.LBI1185:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2473              		.loc 12 110 5 view .LVU610
 2474              	.LBE1185:
 2475              	.LBE1184:
 2476              	.LBE1183:
 2477              	.LBE1225:
 2478              	.LBE1238:
 2479              	.LBE1252:
 2480              	.LBE1267:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2481              		.loc 12 110 16 view .LVU611
 2482              	.LBB1268:
 2483              	.LBB1253:
 2484              	.LBB1239:
 2485              	.LBB1226:
 2486              	.LBB1198:
 2487              	.LBB1196:
 2488              	.LBB1194:
 2489              	.LBB1186:
 2490              	.LBB1187:
 2491              	.LBI1187:
 2492              		.loc 29 68 5 view .LVU612
 2493              	.LBB1188:
 2494              	.LBB1189:
 2495              		.loc 29 68 24 is_stmt 0 view .LVU613
 2496 0114 6362     		str	r3, [r4, #36]	@ float
 2497 0116 E362     		str	r3, [r4, #44]	@ float
 2498              	.LVL122:
 2499              		.loc 29 68 24 view .LVU614
 2500              	.LBE1189:
 2501              	.LBE1188:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 107


 2502              	.LBE1187:
 2503              	.LBE1186:
 2504              	.LBE1194:
 2505              	.LBE1196:
 2506              	.LBE1198:
 2507              	.LBE1226:
 2508              	.LBE1239:
 2509              	.LBE1253:
 2510              	.LBE1268:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2511              		.loc 12 110 16 is_stmt 1 view .LVU615
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2512              		.loc 12 110 16 view .LVU616
 2513              	.LBB1269:
 2514              	.LBB1254:
 2515              	.LBB1240:
 2516              	.LBB1227:
 2517              	.LBB1199:
 2518              	.LBB1197:
 2519              	.LBB1195:
 2520              	.LBB1193:
 2521              	.LBB1192:
 2522              		.loc 29 68 5 view .LVU617
 2523              	.LBB1191:
 2524              	.LBB1190:
 2525              		.loc 29 68 24 is_stmt 0 view .LVU618
 2526 0118 6363     		str	r3, [r4, #52]	@ float
 2527 011a E363     		str	r3, [r4, #60]	@ float
 2528              	.LVL123:
 2529              		.loc 29 68 24 view .LVU619
 2530              	.LBE1190:
 2531              	.LBE1191:
 2532              	.LBE1192:
 2533              	.LBE1193:
 2534              	.LBE1195:
 2535              	.LBE1197:
 2536              	.LBE1199:
 2537              	.LBE1227:
 2538              	.LBE1240:
 2539              	.LBE1254:
 2540              	.LBE1269:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2541              		.loc 12 110 16 is_stmt 1 view .LVU620
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2542              		.loc 12 110 16 view .LVU621
 2543              	.LBB1270:
 2544              	.LBB1255:
 2545              	.LBB1241:
 2546              	.LBB1228:
 2547              	.LBB1200:
 2548              	.LBI1200:
  41:dsp/fx/pitch_shifter.h ****     ~PitchShifterClouds() {}
 2549              		.loc 11 41 5 view .LVU622
 2550              	.LBB1201:
 2551              	.LBB1202:
 2552              	.LBI1202:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 108


 2553              		.loc 12 110 5 view .LVU623
 2554              	.LBE1202:
 2555              	.LBE1201:
 2556              	.LBE1200:
 2557              	.LBE1228:
 2558              	.LBE1241:
 2559              	.LBE1255:
 2560              	.LBE1270:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2561              		.loc 12 110 16 view .LVU624
 2562              	.LBB1271:
 2563              	.LBB1256:
 2564              	.LBB1242:
 2565              	.LBB1229:
 2566              	.LBB1215:
 2567              	.LBB1213:
 2568              	.LBB1211:
 2569              	.LBB1203:
 2570              	.LBB1204:
 2571              	.LBI1204:
 2572              		.loc 29 68 5 view .LVU625
 2573              	.LBB1205:
 2574              	.LBB1206:
 2575              		.loc 29 68 24 is_stmt 0 view .LVU626
 2576 011c A366     		str	r3, [r4, #104]	@ float
 2577 011e 2367     		str	r3, [r4, #112]	@ float
 2578              	.LVL124:
 2579              		.loc 29 68 24 view .LVU627
 2580              	.LBE1206:
 2581              	.LBE1205:
 2582              	.LBE1204:
 2583              	.LBE1203:
 2584              	.LBE1211:
 2585              	.LBE1213:
 2586              	.LBE1215:
 2587              	.LBE1229:
 2588              	.LBE1242:
 2589              	.LBE1256:
 2590              	.LBE1271:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2591              		.loc 12 110 16 is_stmt 1 view .LVU628
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2592              		.loc 12 110 16 view .LVU629
 2593              	.LBB1272:
 2594              	.LBB1257:
 2595              	.LBB1243:
 2596              	.LBB1230:
 2597              	.LBB1216:
 2598              	.LBB1214:
 2599              	.LBB1212:
 2600              	.LBB1210:
 2601              	.LBB1209:
 2602              		.loc 29 68 5 view .LVU630
 2603              	.LBB1208:
 2604              	.LBB1207:
 2605              		.loc 29 68 24 is_stmt 0 view .LVU631
 2606 0120 A367     		str	r3, [r4, #120]	@ float
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 109


 2607 0122 C4F88030 		str	r3, [r4, #128]	@ float
 2608              	.LVL125:
 2609              		.loc 29 68 24 view .LVU632
 2610              	.LBE1207:
 2611              	.LBE1208:
 2612              	.LBE1209:
 2613              	.LBE1210:
 2614              	.LBE1212:
 2615              	.LBE1214:
 2616              	.LBE1216:
 2617              	.LBE1230:
 2618              	.LBE1243:
 2619              	.LBE1257:
 2620              	.LBE1272:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2621              		.loc 12 110 16 is_stmt 1 view .LVU633
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 2622              		.loc 12 110 16 view .LVU634
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 2623              		.loc 9 77 31 view .LVU635
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 2624              		.loc 9 77 31 view .LVU636
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 2625              		.loc 9 77 31 view .LVU637
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 2626              		.loc 9 77 31 view .LVU638
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 2627              		.loc 9 77 31 view .LVU639
 2628              	.LBB1273:
 2629              	.LBB1258:
 2630              	.LBB1244:
 2631              	.LBB1231:
 2632              	.LBB1217:
 2633              	.LBI1217:
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 2634              		.loc 10 40 5 view .LVU640
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 2635              		.loc 10 40 5 is_stmt 0 view .LVU641
 2636              	.LBE1217:
 2637              	.LBB1218:
 2638              	.LBI1218:
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 2639              		.loc 10 40 5 is_stmt 1 view .LVU642
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 2640              		.loc 10 40 5 is_stmt 0 view .LVU643
 2641              	.LBE1218:
 2642              	.LBE1231:
 2643              	.LBE1244:
  11:Iotas.cpp     **** GranularProcessorClouds processor;
 2644              		.loc 22 11 25 view .LVU644
 2645 0126 2949     		ldr	r1, .L56+156
 2646              	.LBE1258:
 2647              	.LBE1273:
 2648              		.loc 22 139 1 view .LVU645
 2649 0128 BDE83840 		pop	{r3, r4, r5, lr}
 2650              		.cfi_restore 14
 2651              		.cfi_restore 5
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 110


 2652              		.cfi_restore 4
 2653              		.cfi_restore 3
 2654              		.cfi_def_cfa_offset 0
 2655              	.LBB1274:
 2656              	.LBB1259:
  11:Iotas.cpp     **** GranularProcessorClouds processor;
 2657              		.loc 22 11 25 view .LVU646
 2658 012c FFF7FEBF 		b	__aeabi_atexit
 2659              	.LVL126:
 2660              	.L57:
 2661              		.align	2
 2662              	.L56:
 2663 0130 00000000 		.word	.LANCHOR3
 2664 0134 00000000 		.word	.LANCHOR1
 2665 0138 00000000 		.word	.LANCHOR5
 2666 013c 00000000 		.word	.LANCHOR7
 2667 0140 00000000 		.word	.LANCHOR11
 2668 0144 00000000 		.word	.LANCHOR9
 2669 0148 00000000 		.word	.LANCHOR15
 2670 014c 00000000 		.word	.LANCHOR13
 2671 0150 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D7E
 2672 0154 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2A9E
 2673 0158 00000000 		.word	.LANCHOR21
 2674 015c 00000000 		.word	.LANCHOR22
 2675 0160 00000000 		.word	.LANCHOR0
 2676 0164 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D1E
 2677 0168 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D2E
 2678 016c 00000000 		.word	.LANCHOR2
 2679 0170 00000000 		.word	.LANCHOR23
 2680 0174 00000000 		.word	.LANCHOR24
 2681 0178 00000000 		.word	.LANCHOR4
 2682 017c 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D3E
 2683 0180 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D6E
 2684 0184 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D4E
 2685 0188 00000000 		.word	.LANCHOR12
 2686 018c 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D5E
 2687 0190 00000000 		.word	.LANCHOR25
 2688 0194 00000000 		.word	.LANCHOR26
 2689 0198 00000000 		.word	.LANCHOR27
 2690 019c 00000000 		.word	.LANCHOR28
 2691 01a0 00000000 		.word	_ZN5daisy6SwitchD1Ev
 2692 01a4 00000000 		.word	.LANCHOR6
 2693 01a8 00000000 		.word	__dso_handle
 2694 01ac 00000000 		.word	.LANCHOR8
 2695 01b0 00000000 		.word	.LANCHOR14
 2696 01b4 00000000 		.word	.LANCHOR10
 2697 01b8 00000000 		.word	.LANCHOR16
 2698 01bc 00000000 		.word	.LANCHOR17
 2699 01c0 00000000 		.word	.LANCHOR18
 2700 01c4 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 2701 01c8 00000000 		.word	processor
 2702 01cc 00000000 		.word	_ZN23GranularProcessorCloudsD1Ev
 2703              	.LBE1259:
 2704              	.LBE1274:
 2705              		.cfi_endproc
 2706              	.LFE5807:
 2708              		.section	.init_array,"aw",%init_array
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 111


 2709              		.align	2
 2710 0000 00000000 		.word	_GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E(target1)
 2711              		.global	qualityNames
 2712              		.global	block_ccm
 2713              		.global	block_mem
 2714              		.global	butt_idx
 2715              		.global	parameters
 2716              		.global	processor
 2717              		.global	hw
 2718              		.global	_ZN5daisy8patch_sm2b2E
 2719              		.global	_ZN5daisy8patch_sm2b1E
 2720              		.global	_ZN5daisy8patch_sm8newPinD5E
 2721              		.global	_ZN5daisy8patch_sm8oldPinD5E
 2722              		.global	_ZN5daisy8patch_sm8newPinD4E
 2723              		.global	_ZN5daisy8patch_sm8oldPinD4E
 2724              		.global	_ZN5daisy8patch_sm8newPinD6E
 2725              		.global	_ZN5daisy8patch_sm8oldPinD6E
 2726              		.global	_ZN5daisy8patch_sm8newPinD3E
 2727              		.global	_ZN5daisy8patch_sm8oldPinD3E
 2728              		.global	_ZN5daisy8patch_sm8newPinD1E
 2729              		.global	_ZN5daisy8patch_sm8oldPinD1E
 2730              		.global	_ZN5daisy8patch_sm8newPinD2E
 2731              		.global	_ZN5daisy8patch_sm8oldPinD2E
 2732              		.global	_ZN5daisy8patch_sm8newPinA9E
 2733              		.global	_ZN5daisy8patch_sm8oldPinA9E
 2734              		.global	_ZN5daisy8patch_sm8newPinD7E
 2735              		.global	_ZN5daisy8patch_sm8oldPinD7E
 2736              		.global	_ZN5daisy8patch_sm13gate_out_led2E
 2737              		.global	_ZN5daisy8patch_sm13gate_out_led1E
 2738              		.global	_ZN5daisy8patch_sm12gate_in_led2E
 2739              		.global	_ZN5daisy8patch_sm12gate_in_led1E
 2740              		.global	_ZN5daisy8patch_sm7cv_led2E
 2741              		.global	_ZN5daisy8patch_sm7cv_led1E
 2742              		.global	_ZN5daisy8patch_sm8gen_led2E
 2743              		.global	_ZN5daisy8patch_sm8gen_led1E
 2744              		.section	.bss._ZN5daisy8patch_sm12gate_in_led1E,"aw",%nobits
 2745              		.align	2
 2746              		.set	.LANCHOR9,. + 0
 2749              	_ZN5daisy8patch_sm12gate_in_led1E:
 2750 0000 00000000 		.space	20
 2750      00000000 
 2750      00000000 
 2750      00000000 
 2750      00000000 
 2751              		.section	.bss._ZN5daisy8patch_sm12gate_in_led2E,"aw",%nobits
 2752              		.align	2
 2753              		.set	.LANCHOR11,. + 0
 2756              	_ZN5daisy8patch_sm12gate_in_led2E:
 2757 0000 00000000 		.space	20
 2757      00000000 
 2757      00000000 
 2757      00000000 
 2757      00000000 
 2758              		.section	.bss._ZN5daisy8patch_sm13gate_out_led1E,"aw",%nobits
 2759              		.align	2
 2760              		.set	.LANCHOR13,. + 0
 2763              	_ZN5daisy8patch_sm13gate_out_led1E:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 112


 2764 0000 00000000 		.space	20
 2764      00000000 
 2764      00000000 
 2764      00000000 
 2764      00000000 
 2765              		.section	.bss._ZN5daisy8patch_sm13gate_out_led2E,"aw",%nobits
 2766              		.align	2
 2767              		.set	.LANCHOR15,. + 0
 2770              	_ZN5daisy8patch_sm13gate_out_led2E:
 2771 0000 00000000 		.space	20
 2771      00000000 
 2771      00000000 
 2771      00000000 
 2771      00000000 
 2772              		.section	.bss._ZN5daisy8patch_sm2b1E,"aw",%nobits
 2773              		.align	2
 2774              		.set	.LANCHOR16,. + 0
 2777              	_ZN5daisy8patch_sm2b1E:
 2778 0000 00000000 		.space	16
 2778      00000000 
 2778      00000000 
 2778      00000000 
 2779              		.section	.bss._ZN5daisy8patch_sm2b2E,"aw",%nobits
 2780              		.align	2
 2781              		.set	.LANCHOR17,. + 0
 2784              	_ZN5daisy8patch_sm2b2E:
 2785 0000 00000000 		.space	16
 2785      00000000 
 2785      00000000 
 2785      00000000 
 2786              		.section	.bss._ZN5daisy8patch_sm7cv_led1E,"aw",%nobits
 2787              		.align	2
 2788              		.set	.LANCHOR5,. + 0
 2791              	_ZN5daisy8patch_sm7cv_led1E:
 2792 0000 00000000 		.space	20
 2792      00000000 
 2792      00000000 
 2792      00000000 
 2792      00000000 
 2793              		.section	.bss._ZN5daisy8patch_sm7cv_led2E,"aw",%nobits
 2794              		.align	2
 2795              		.set	.LANCHOR7,. + 0
 2798              	_ZN5daisy8patch_sm7cv_led2E:
 2799 0000 00000000 		.space	20
 2799      00000000 
 2799      00000000 
 2799      00000000 
 2799      00000000 
 2800              		.section	.bss._ZN5daisy8patch_sm8gen_led1E,"aw",%nobits
 2801              		.align	2
 2802              		.set	.LANCHOR1,. + 0
 2805              	_ZN5daisy8patch_sm8gen_led1E:
 2806 0000 00000000 		.space	20
 2806      00000000 
 2806      00000000 
 2806      00000000 
 2806      00000000 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 113


 2807              		.section	.bss._ZN5daisy8patch_sm8gen_led2E,"aw",%nobits
 2808              		.align	2
 2809              		.set	.LANCHOR3,. + 0
 2812              	_ZN5daisy8patch_sm8gen_led2E:
 2813 0000 00000000 		.space	20
 2813      00000000 
 2813      00000000 
 2813      00000000 
 2813      00000000 
 2814              		.section	.bss._ZN5daisy8patch_sm8newPinA9E,"aw",%nobits
 2815              		.align	2
 2816              		.set	.LANCHOR2,. + 0
 2819              	_ZN5daisy8patch_sm8newPinA9E:
 2820 0000 0000     		.space	2
 2821              		.section	.bss._ZN5daisy8patch_sm8newPinD1E,"aw",%nobits
 2822              		.align	2
 2823              		.set	.LANCHOR6,. + 0
 2826              	_ZN5daisy8patch_sm8newPinD1E:
 2827 0000 0000     		.space	2
 2828              		.section	.bss._ZN5daisy8patch_sm8newPinD2E,"aw",%nobits
 2829              		.align	2
 2830              		.set	.LANCHOR4,. + 0
 2833              	_ZN5daisy8patch_sm8newPinD2E:
 2834 0000 0000     		.space	2
 2835              		.section	.bss._ZN5daisy8patch_sm8newPinD3E,"aw",%nobits
 2836              		.align	2
 2837              		.set	.LANCHOR8,. + 0
 2840              	_ZN5daisy8patch_sm8newPinD3E:
 2841 0000 0000     		.space	2
 2842              		.section	.bss._ZN5daisy8patch_sm8newPinD4E,"aw",%nobits
 2843              		.align	2
 2844              		.set	.LANCHOR14,. + 0
 2847              	_ZN5daisy8patch_sm8newPinD4E:
 2848 0000 0000     		.space	2
 2849              		.section	.bss._ZN5daisy8patch_sm8newPinD5E,"aw",%nobits
 2850              		.align	2
 2851              		.set	.LANCHOR10,. + 0
 2854              	_ZN5daisy8patch_sm8newPinD5E:
 2855 0000 0000     		.space	2
 2856              		.section	.bss._ZN5daisy8patch_sm8newPinD6E,"aw",%nobits
 2857              		.align	2
 2858              		.set	.LANCHOR12,. + 0
 2861              	_ZN5daisy8patch_sm8newPinD6E:
 2862 0000 0000     		.space	2
 2863              		.section	.bss._ZN5daisy8patch_sm8newPinD7E,"aw",%nobits
 2864              		.align	2
 2865              		.set	.LANCHOR0,. + 0
 2868              	_ZN5daisy8patch_sm8newPinD7E:
 2869 0000 0000     		.space	2
 2870              		.section	.bss._ZN5daisy8patch_sm8oldPinA9E,"aw",%nobits
 2871              		.align	2
 2872              		.set	.LANCHOR22,. + 0
 2875              	_ZN5daisy8patch_sm8oldPinA9E:
 2876 0000 0000     		.space	2
 2877              		.section	.bss._ZN5daisy8patch_sm8oldPinD1E,"aw",%nobits
 2878              		.align	2
 2879              		.set	.LANCHOR24,. + 0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 114


 2882              	_ZN5daisy8patch_sm8oldPinD1E:
 2883 0000 0000     		.space	2
 2884              		.section	.bss._ZN5daisy8patch_sm8oldPinD2E,"aw",%nobits
 2885              		.align	2
 2886              		.set	.LANCHOR23,. + 0
 2889              	_ZN5daisy8patch_sm8oldPinD2E:
 2890 0000 0000     		.space	2
 2891              		.section	.bss._ZN5daisy8patch_sm8oldPinD3E,"aw",%nobits
 2892              		.align	2
 2893              		.set	.LANCHOR25,. + 0
 2896              	_ZN5daisy8patch_sm8oldPinD3E:
 2897 0000 0000     		.space	2
 2898              		.section	.bss._ZN5daisy8patch_sm8oldPinD4E,"aw",%nobits
 2899              		.align	2
 2900              		.set	.LANCHOR27,. + 0
 2903              	_ZN5daisy8patch_sm8oldPinD4E:
 2904 0000 0000     		.space	2
 2905              		.section	.bss._ZN5daisy8patch_sm8oldPinD5E,"aw",%nobits
 2906              		.align	2
 2907              		.set	.LANCHOR28,. + 0
 2910              	_ZN5daisy8patch_sm8oldPinD5E:
 2911 0000 0000     		.space	2
 2912              		.section	.bss._ZN5daisy8patch_sm8oldPinD6E,"aw",%nobits
 2913              		.align	2
 2914              		.set	.LANCHOR26,. + 0
 2917              	_ZN5daisy8patch_sm8oldPinD6E:
 2918 0000 0000     		.space	2
 2919              		.section	.bss._ZN5daisy8patch_sm8oldPinD7E,"aw",%nobits
 2920              		.align	2
 2921              		.set	.LANCHOR21,. + 0
 2924              	_ZN5daisy8patch_sm8oldPinD7E:
 2925 0000 0000     		.space	2
 2926              		.section	.bss.block_ccm,"aw",%nobits
 2927              		.align	2
 2930              	block_ccm:
 2931 0000 00000000 		.space	65408
 2931      00000000 
 2931      00000000 
 2931      00000000 
 2931      00000000 
 2932              		.section	.bss.block_mem,"aw",%nobits
 2933              		.align	2
 2936              	block_mem:
 2937 0000 00000000 		.space	118784
 2937      00000000 
 2937      00000000 
 2937      00000000 
 2937      00000000 
 2938              		.section	.bss.butt_idx,"aw",%nobits
 2939              		.set	.LANCHOR20,. + 0
 2942              	butt_idx:
 2943 0000 00       		.space	1
 2944              		.section	.bss.hw,"aw",%nobits
 2945              		.align	2
 2946              		.set	.LANCHOR18,. + 0
 2949              	hw:
 2950 0000 00000000 		.space	464
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 115


 2950      00000000 
 2950      00000000 
 2950      00000000 
 2950      00000000 
 2951              		.section	.bss.parameters,"aw",%nobits
 2952              		.align	2
 2953              		.set	.LANCHOR19,. + 0
 2956              	parameters:
 2957 0000 00000000 		.space	4
 2958              		.section	.bss.processor,"aw",%nobits
 2959              		.align	2
 2962              	processor:
 2963 0000 00000000 		.space	8768
 2963      00000000 
 2963      00000000 
 2963      00000000 
 2963      00000000 
 2964              		.section	.bss.qualityNames,"aw",%nobits
 2965              		.align	2
 2968              	qualityNames:
 2969 0000 00000000 		.space	4
 2970              		.text
 2971              	.Letext0:
 2972              		.file 30 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 2973              		.file 31 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 2974              		.file 32 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdint.h"
 2975              		.file 33 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 2976              		.file 34 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2977              		.file 35 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2978              		.file 36 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2979              		.file 37 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2980              		.file 38 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2981              		.file 39 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2982              		.file 40 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2983              		.file 41 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2984              		.file 42 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2985              		.file 43 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2986              		.file 44 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2987              		.file 45 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2988              		.file 46 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2989              		.file 47 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2990              		.file 48 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2991              		.file 49 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2992              		.file 50 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2993              		.file 51 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2994              		.file 52 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 2995              		.file 53 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 2996              		.file 54 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 2997              		.file 55 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 2998              		.file 56 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 2999              		.file 57 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3000              		.file 58 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 3001              		.file 59 "../../libDaisy//src/per/tim.h"
 3002              		.file 60 "../../libDaisy//src/per/sai.h"
 3003              		.file 61 "../../libDaisy//src/hid/ctrl.h"
 3004              		.file 62 "../../libDaisy//src/util/wav_format.h"
 3005              		.file 63 "../../libDaisy//src/dev/max11300.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 116


 3006              		.file 64 "../../libDaisy//src/dev/sdram.h"
 3007              		.file 65 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 3008              		.file 66 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 3009              		.file 67 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
 3010              		.file 68 "../../DaisySP//Source/Control/adenv.h"
 3011              		.file 69 "../../DaisySP//Source/Filters/svf.h"
 3012              		.file 70 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/wchar.h"
 3013              		.file 71 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/locale.h"
 3014              		.file 72 "../../libDaisy//src/dev/sr_595.h"
 3015              		.file 73 "dsp/frame.h"
 3016              		.file 74 "./resources.h"
 3017              		.file 75 "dsp/mu_law.h"
 3018              		.file 76 "dsp/audio_buffer.h"
 3019              		.file 77 "dsp/grain.h"
 3020              		.file 78 "dsp/parameters.h"
 3021              		.file 79 "dsp/pvoc/frame_transformation.h"
 3022              		.file 80 "dsp/pvoc/stft.h"
 3023              		.file 81 "dsp/window.h"
 3024              		.file 82 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 117


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Iotas.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:43     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:51     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:51     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:109    .text._ZN23GranularProcessorCloudsD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:117    .text._ZN23GranularProcessorCloudsD2Ev:0000000000000000 _ZN23GranularProcessorCloudsD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:117    .text._ZN23GranularProcessorCloudsD2Ev:0000000000000000 _ZN23GranularProcessorCloudsD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:215    .text._ZN5daisy8patch_sm7InitBedEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:223    .text._ZN5daisy8patch_sm7InitBedEv:0000000000000000 _ZN5daisy8patch_sm7InitBedEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:353    .text._ZN5daisy8patch_sm7InitBedEv:00000000000000b8 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:378    .text._ZN5daisy8patch_sm6ledOffEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:386    .text._ZN5daisy8patch_sm6ledOffEv:0000000000000000 _ZN5daisy8patch_sm6ledOffEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:430    .text._ZN5daisy8patch_sm6ledOffEv:0000000000000028 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:438    .text.startup.main:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:446    .text.startup.main:0000000000000000 main
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:657    .text.startup.main:000000000000008c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2962   .bss.processor:0000000000000000 processor
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2930   .bss.block_ccm:0000000000000000 block_ccm
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2936   .bss.block_mem:0000000000000000 block_mem
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:1397   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:671    .text._Z8Controlsv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:679    .text._Z8Controlsv:0000000000000000 _Z8Controlsv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:1373   .text._Z8Controlsv:000000000000021c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:1389   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:1551   .text._Z13AudioCallbackPKPKfPPfj:00000000000000a0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:1556   .text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:1563   .text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:0000000000000000 _GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2663   .text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:0000000000000130 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2709   .init_array:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2968   .bss.qualityNames:0000000000000000 qualityNames
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2942   .bss.butt_idx:0000000000000000 butt_idx
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2956   .bss.parameters:0000000000000000 parameters
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2949   .bss.hw:0000000000000000 hw
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2784   .bss._ZN5daisy8patch_sm2b2E:0000000000000000 _ZN5daisy8patch_sm2b2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2777   .bss._ZN5daisy8patch_sm2b1E:0000000000000000 _ZN5daisy8patch_sm2b1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2854   .bss._ZN5daisy8patch_sm8newPinD5E:0000000000000000 _ZN5daisy8patch_sm8newPinD5E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2910   .bss._ZN5daisy8patch_sm8oldPinD5E:0000000000000000 _ZN5daisy8patch_sm8oldPinD5E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2847   .bss._ZN5daisy8patch_sm8newPinD4E:0000000000000000 _ZN5daisy8patch_sm8newPinD4E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2903   .bss._ZN5daisy8patch_sm8oldPinD4E:0000000000000000 _ZN5daisy8patch_sm8oldPinD4E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2861   .bss._ZN5daisy8patch_sm8newPinD6E:0000000000000000 _ZN5daisy8patch_sm8newPinD6E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2917   .bss._ZN5daisy8patch_sm8oldPinD6E:0000000000000000 _ZN5daisy8patch_sm8oldPinD6E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2840   .bss._ZN5daisy8patch_sm8newPinD3E:0000000000000000 _ZN5daisy8patch_sm8newPinD3E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2896   .bss._ZN5daisy8patch_sm8oldPinD3E:0000000000000000 _ZN5daisy8patch_sm8oldPinD3E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2826   .bss._ZN5daisy8patch_sm8newPinD1E:0000000000000000 _ZN5daisy8patch_sm8newPinD1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2882   .bss._ZN5daisy8patch_sm8oldPinD1E:0000000000000000 _ZN5daisy8patch_sm8oldPinD1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2833   .bss._ZN5daisy8patch_sm8newPinD2E:0000000000000000 _ZN5daisy8patch_sm8newPinD2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2889   .bss._ZN5daisy8patch_sm8oldPinD2E:0000000000000000 _ZN5daisy8patch_sm8oldPinD2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2819   .bss._ZN5daisy8patch_sm8newPinA9E:0000000000000000 _ZN5daisy8patch_sm8newPinA9E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2875   .bss._ZN5daisy8patch_sm8oldPinA9E:0000000000000000 _ZN5daisy8patch_sm8oldPinA9E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2868   .bss._ZN5daisy8patch_sm8newPinD7E:0000000000000000 _ZN5daisy8patch_sm8newPinD7E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2924   .bss._ZN5daisy8patch_sm8oldPinD7E:0000000000000000 _ZN5daisy8patch_sm8oldPinD7E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2770   .bss._ZN5daisy8patch_sm13gate_out_led2E:0000000000000000 _ZN5daisy8patch_sm13gate_out_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2763   .bss._ZN5daisy8patch_sm13gate_out_led1E:0000000000000000 _ZN5daisy8patch_sm13gate_out_led1E
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 118


/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2756   .bss._ZN5daisy8patch_sm12gate_in_led2E:0000000000000000 _ZN5daisy8patch_sm12gate_in_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2749   .bss._ZN5daisy8patch_sm12gate_in_led1E:0000000000000000 _ZN5daisy8patch_sm12gate_in_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2798   .bss._ZN5daisy8patch_sm7cv_led2E:0000000000000000 _ZN5daisy8patch_sm7cv_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2791   .bss._ZN5daisy8patch_sm7cv_led1E:0000000000000000 _ZN5daisy8patch_sm7cv_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2812   .bss._ZN5daisy8patch_sm8gen_led2E:0000000000000000 _ZN5daisy8patch_sm8gen_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2805   .bss._ZN5daisy8patch_sm8gen_led1E:0000000000000000 _ZN5daisy8patch_sm8gen_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2745   .bss._ZN5daisy8patch_sm12gate_in_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2752   .bss._ZN5daisy8patch_sm12gate_in_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2759   .bss._ZN5daisy8patch_sm13gate_out_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2766   .bss._ZN5daisy8patch_sm13gate_out_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2773   .bss._ZN5daisy8patch_sm2b1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2780   .bss._ZN5daisy8patch_sm2b2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2787   .bss._ZN5daisy8patch_sm7cv_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2794   .bss._ZN5daisy8patch_sm7cv_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2801   .bss._ZN5daisy8patch_sm8gen_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2808   .bss._ZN5daisy8patch_sm8gen_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2815   .bss._ZN5daisy8patch_sm8newPinA9E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2822   .bss._ZN5daisy8patch_sm8newPinD1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2829   .bss._ZN5daisy8patch_sm8newPinD2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2836   .bss._ZN5daisy8patch_sm8newPinD3E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2843   .bss._ZN5daisy8patch_sm8newPinD4E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2850   .bss._ZN5daisy8patch_sm8newPinD5E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2857   .bss._ZN5daisy8patch_sm8newPinD6E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2864   .bss._ZN5daisy8patch_sm8newPinD7E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2871   .bss._ZN5daisy8patch_sm8oldPinA9E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2878   .bss._ZN5daisy8patch_sm8oldPinD1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2885   .bss._ZN5daisy8patch_sm8oldPinD2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2892   .bss._ZN5daisy8patch_sm8oldPinD3E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2899   .bss._ZN5daisy8patch_sm8oldPinD4E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2906   .bss._ZN5daisy8patch_sm8oldPinD5E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2913   .bss._ZN5daisy8patch_sm8oldPinD6E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2920   .bss._ZN5daisy8patch_sm8oldPinD7E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2927   .bss.block_ccm:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2933   .bss.block_mem:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2943   .bss.butt_idx:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2945   .bss.hw:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2952   .bss.parameters:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2959   .bss.processor:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s:2965   .bss.qualityNames:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD5Ev
                           .group:0000000000000000 _ZN23GranularProcessorCloudsD5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy8patch_sm12DaisyPatchSM2A8E
_ZN5daisy8patch_sm12DaisyPatchSM3D10E
_ZN5daisy4GPIO5WriteEb
_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
_Z13InitResourcesf
_ZN23GranularProcessorClouds4InitEfPvjS0_j
_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
_ZN23GranularProcessorClouds7PrepareEv
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccv66g5u.s 			page 119


_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
_ZN5daisy6Switch8DebounceEv
_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
_ZN5daisy4GPIO6ToggleEv
_ZN5daisy6GateIn4TrigEv
dsy_gpio_read
_ZN23GranularProcessorClouds7ProcessEP10FloatFrameS1_j
__aeabi_atexit
_ZN5daisy8patch_sm12DaisyPatchSM2D7E
_ZN5daisy8patch_sm12DaisyPatchSM2A9E
_ZN5daisy8patch_sm12DaisyPatchSM2D1E
_ZN5daisy8patch_sm12DaisyPatchSM2D2E
_ZN5daisy8patch_sm12DaisyPatchSM2D3E
_ZN5daisy8patch_sm12DaisyPatchSM2D6E
_ZN5daisy8patch_sm12DaisyPatchSM2D4E
_ZN5daisy8patch_sm12DaisyPatchSM2D5E
__dso_handle
