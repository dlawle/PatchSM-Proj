ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"processors.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE,"axG",%progb
  17              		.align	1
  18              		.weak	_ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE:
  26              	.LVL0:
  27              	.LFB1603:
  28              		.file 1 "processors.h"
   1:processors.h  **** // Copyright 2013 Emilie Gillet.
   2:processors.h  **** //
   3:processors.h  **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:processors.h  **** //
   5:processors.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:processors.h  **** // of this software and associated documentation files (the "Software"), to deal
   7:processors.h  **** // in the Software without restriction, including without limitation the rights
   8:processors.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:processors.h  **** // copies of the Software, and to permit persons to whom the Software is
  10:processors.h  **** // furnished to do so, subject to the following conditions:
  11:processors.h  **** // 
  12:processors.h  **** // The above copyright notice and this permission notice shall be included in
  13:processors.h  **** // all copies or substantial portions of the Software.
  14:processors.h  **** // 
  15:processors.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:processors.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:processors.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:processors.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:processors.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:processors.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:processors.h  **** // THE SOFTWARE.
  22:processors.h  **** // 
  23:processors.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:processors.h  **** //
  25:processors.h  **** // -----------------------------------------------------------------------------
  26:processors.h  **** //
  27:processors.h  **** // This is the common entry points for all types of modulation sources!
  28:processors.h  **** 
  29:processors.h  **** #ifndef PEAKS_PROCESSORS_H_
  30:processors.h  **** #define PEAKS_PROCESSORS_H_
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 2


  31:processors.h  **** 
  32:processors.h  **** #include "stmlib/stmlib.h"
  33:processors.h  **** 
  34:processors.h  **** #include <algorithm>
  35:processors.h  **** 
  36:processors.h  **** #include "drums/bass_drum.h"
  37:processors.h  **** #include "drums/fm_drum.h"
  38:processors.h  **** #include "drums/snare_drum.h"
  39:processors.h  **** #include "drums/high_hat.h"
  40:processors.h  **** #include "modulations/bouncing_ball.h"
  41:processors.h  **** #include "modulations/lfo.h"
  42:processors.h  **** #include "modulations/mini_sequencer.h"
  43:processors.h  **** #include "modulations/multistage_envelope.h"
  44:processors.h  **** #include "number_station/number_station.h"
  45:processors.h  **** #include "pulse_processor/pulse_shaper.h"
  46:processors.h  **** #include "pulse_processor/pulse_randomizer.h"
  47:processors.h  **** 
  48:processors.h  **** #include "gate_processor.h"
  49:processors.h  **** 
  50:processors.h  **** namespace peaks {
  51:processors.h  **** 
  52:processors.h  **** enum ProcessorFunction {
  53:processors.h  ****   PROCESSOR_FUNCTION_ENVELOPE,
  54:processors.h  ****   PROCESSOR_FUNCTION_LFO,
  55:processors.h  ****   PROCESSOR_FUNCTION_TAP_LFO,
  56:processors.h  ****   PROCESSOR_FUNCTION_BASS_DRUM,
  57:processors.h  ****   PROCESSOR_FUNCTION_SNARE_DRUM,
  58:processors.h  ****   PROCESSOR_FUNCTION_HIGH_HAT,
  59:processors.h  ****   PROCESSOR_FUNCTION_FM_DRUM,
  60:processors.h  ****   PROCESSOR_FUNCTION_PULSE_SHAPER,
  61:processors.h  ****   PROCESSOR_FUNCTION_PULSE_RANDOMIZER,
  62:processors.h  ****   PROCESSOR_FUNCTION_BOUNCING_BALL,
  63:processors.h  ****   PROCESSOR_FUNCTION_MINI_SEQUENCER,
  64:processors.h  ****   PROCESSOR_FUNCTION_NUMBER_STATION,
  65:processors.h  ****   PROCESSOR_FUNCTION_LAST
  66:processors.h  **** };
  67:processors.h  **** 
  68:processors.h  **** #define DECLARE_PROCESSOR(ClassName, variable) \
  69:processors.h  ****   void ClassName ## Init() { \
  70:processors.h  ****     variable.Init(); \
  71:processors.h  ****   } \
  72:processors.h  ****   void ClassName ## Process(const GateFlags* gate_flags, int16_t* out, size_t size) { \
  73:processors.h  ****     variable.Process(gate_flags, out, size); \
  74:processors.h  ****   } \
  75:processors.h  ****   void ClassName ## Configure(uint16_t* p, ControlMode control_mode) { \
  76:processors.h  ****     variable.Configure(p, control_mode); \
  77:processors.h  ****   } \
  78:processors.h  ****   ClassName variable;
  79:processors.h  **** 
  80:processors.h  **** class Processors {
  81:processors.h  ****  public:
  82:processors.h  ****   Processors() { }
  83:processors.h  ****   ~Processors() { }
  84:processors.h  ****   
  85:processors.h  ****   void Init(uint8_t index);
  86:processors.h  ****   
  87:processors.h  ****   typedef void (Processors::*InitFn)(); 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 3


  88:processors.h  ****   typedef void (Processors::*ProcessFn)(const GateFlags*, int16_t*, size_t); 
  89:processors.h  ****   typedef void (Processors::*ConfigureFn)(uint16_t*, ControlMode);
  90:processors.h  ****   
  91:processors.h  ****   struct ProcessorCallbacks {
  92:processors.h  ****     InitFn init_fn;
  93:processors.h  ****     ProcessFn process_fn;
  94:processors.h  ****     ConfigureFn configure_fn;
  95:processors.h  ****   };
  96:processors.h  ****   
  97:processors.h  ****   inline void set_control_mode(ControlMode control_mode) {
  98:processors.h  ****     control_mode_ = control_mode;
  99:processors.h  ****     Configure();
 100:processors.h  ****   }
 101:processors.h  ****   
 102:processors.h  ****   inline void set_parameter(uint8_t index, uint16_t parameter) {
 103:processors.h  ****     parameter_[index] = parameter;
 104:processors.h  ****     Configure();
 105:processors.h  ****   }
 106:processors.h  ****   
 107:processors.h  ****   inline void CopyParameters(uint16_t* parameters, uint16_t size) {
 108:processors.h  ****     std::copy(&parameters[0], &parameters[size], &parameter_[0]);
 109:processors.h  ****   }
 110:processors.h  ****   
 111:processors.h  ****   inline void set_function(ProcessorFunction function) {
 112:processors.h  ****     function_ = function;
 113:processors.h  ****     lfo_.set_sync(function == PROCESSOR_FUNCTION_TAP_LFO);
 114:processors.h  ****     callbacks_ = callbacks_table_[function];
 115:processors.h  ****     if (function != PROCESSOR_FUNCTION_TAP_LFO) {
 116:processors.h  ****       (this->*callbacks_.init_fn)();
 117:processors.h  ****     }
 118:processors.h  ****     Configure();
 119:processors.h  ****   }
 120:processors.h  ****   
 121:processors.h  ****   inline ProcessorFunction function() const { return function_; }
 122:processors.h  **** 
 123:processors.h  ****   inline void Process(const GateFlags* gate_flags, int16_t* output, size_t size) {
 124:processors.h  ****     (this->*callbacks_.process_fn)(gate_flags, output, size);
 125:processors.h  ****   }
 126:processors.h  ****   
 127:processors.h  ****   inline const NumberStation& number_station() const { return number_station_; }
 128:processors.h  ****   
 129:processors.h  ****  private:
 130:processors.h  ****   void Configure() {
 131:processors.h  ****     if (function_ == PROCESSOR_FUNCTION_SNARE_DRUM ||
 132:processors.h  ****         function_ == PROCESSOR_FUNCTION_HIGH_HAT) {
 133:processors.h  ****       uint16_t tone_parameter = control_mode_ == CONTROL_MODE_FULL
 134:processors.h  ****           ? parameter_[1] : parameter_[0];
 135:processors.h  ****       uint16_t snappy_parameter = control_mode_ == CONTROL_MODE_FULL
 136:processors.h  ****           ? parameter_[2] : parameter_[1];
 137:processors.h  ****       if (tone_parameter >= 65000 && snappy_parameter >= 65000) {
 138:processors.h  ****         if (function_ != PROCESSOR_FUNCTION_HIGH_HAT) {
 139:processors.h  ****           set_function(PROCESSOR_FUNCTION_HIGH_HAT);
 140:processors.h  ****         }
 141:processors.h  ****       } else if (tone_parameter <= 64500 || snappy_parameter <= 64500) {
 142:processors.h  ****         if (function_ != PROCESSOR_FUNCTION_SNARE_DRUM) {
 143:processors.h  ****           set_function(PROCESSOR_FUNCTION_SNARE_DRUM);
 144:processors.h  ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 4


 145:processors.h  ****       }
 146:processors.h  ****     }
 147:processors.h  ****     (this->*callbacks_.configure_fn)(&parameter_[0], control_mode_);
 148:processors.h  ****   }
 149:processors.h  ****   
 150:processors.h  ****   ControlMode control_mode_;
 151:processors.h  ****   ProcessorFunction function_;
 152:processors.h  ****   uint16_t parameter_[4];
 153:processors.h  ****   
 154:processors.h  ****   ProcessorCallbacks callbacks_;
 155:processors.h  ****   static const ProcessorCallbacks callbacks_table_[PROCESSOR_FUNCTION_LAST];
 156:processors.h  ****   
 157:processors.h  ****   DECLARE_PROCESSOR(MultistageEnvelope, envelope_);
  29              		.loc 1 157 3 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 157 3 view .LVU1
  34              	.LBB572:
  35              	.LBI572:
  36              		.file 2 "modulations/multistage_envelope.h"
   1:modulations/multistage_envelope.h **** // Copyright 2013 Emilie Gillet.
   2:modulations/multistage_envelope.h **** //
   3:modulations/multistage_envelope.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:modulations/multistage_envelope.h **** //
   5:modulations/multistage_envelope.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:modulations/multistage_envelope.h **** // of this software and associated documentation files (the "Software"), to deal
   7:modulations/multistage_envelope.h **** // in the Software without restriction, including without limitation the rights
   8:modulations/multistage_envelope.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:modulations/multistage_envelope.h **** // copies of the Software, and to permit persons to whom the Software is
  10:modulations/multistage_envelope.h **** // furnished to do so, subject to the following conditions:
  11:modulations/multistage_envelope.h **** // 
  12:modulations/multistage_envelope.h **** // The above copyright notice and this permission notice shall be included in
  13:modulations/multistage_envelope.h **** // all copies or substantial portions of the Software.
  14:modulations/multistage_envelope.h **** // 
  15:modulations/multistage_envelope.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:modulations/multistage_envelope.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:modulations/multistage_envelope.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:modulations/multistage_envelope.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:modulations/multistage_envelope.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:modulations/multistage_envelope.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:modulations/multistage_envelope.h **** // THE SOFTWARE.
  22:modulations/multistage_envelope.h **** // 
  23:modulations/multistage_envelope.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:modulations/multistage_envelope.h **** //
  25:modulations/multistage_envelope.h **** // -----------------------------------------------------------------------------
  26:modulations/multistage_envelope.h **** //
  27:modulations/multistage_envelope.h **** // Multistage envelope.
  28:modulations/multistage_envelope.h **** 
  29:modulations/multistage_envelope.h **** #ifndef PEAKS_MODULATIONS_MULTISTAGE_ENVELOPE_H_
  30:modulations/multistage_envelope.h **** #define PEAKS_MODULATIONS_MULTISTAGE_ENVELOPE_H_
  31:modulations/multistage_envelope.h **** 
  32:modulations/multistage_envelope.h **** #include "stmlib/stmlib.h"
  33:modulations/multistage_envelope.h **** #include "stmlib/utils/ring_buffer.h"
  34:modulations/multistage_envelope.h **** 
  35:modulations/multistage_envelope.h **** #include "gate_processor.h"
  36:modulations/multistage_envelope.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 5


  37:modulations/multistage_envelope.h **** namespace peaks {
  38:modulations/multistage_envelope.h **** 
  39:modulations/multistage_envelope.h **** enum EnvelopeShape {
  40:modulations/multistage_envelope.h ****   ENV_SHAPE_LINEAR,
  41:modulations/multistage_envelope.h ****   ENV_SHAPE_EXPONENTIAL,
  42:modulations/multistage_envelope.h ****   ENV_SHAPE_QUARTIC
  43:modulations/multistage_envelope.h **** };
  44:modulations/multistage_envelope.h **** 
  45:modulations/multistage_envelope.h **** const uint16_t kMaxNumSegments = 8;
  46:modulations/multistage_envelope.h **** 
  47:modulations/multistage_envelope.h **** class MultistageEnvelope {
  48:modulations/multistage_envelope.h ****  public:
  49:modulations/multistage_envelope.h ****   MultistageEnvelope() { }
  50:modulations/multistage_envelope.h ****   ~MultistageEnvelope() { }
  51:modulations/multistage_envelope.h ****   
  52:modulations/multistage_envelope.h ****   void Init();
  53:modulations/multistage_envelope.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  54:modulations/multistage_envelope.h ****   
  55:modulations/multistage_envelope.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
  37              		.loc 2 55 8 view .LVU2
  38              	.LBB573:
  56:modulations/multistage_envelope.h ****     if (control_mode == CONTROL_MODE_HALF) {
  39              		.loc 2 56 5 view .LVU3
  40 0000 012A     		cmp	r2, #1
  41 0002 194A     		ldr	r2, .L6
  42              	.LVL1:
  43              		.loc 2 56 5 is_stmt 0 view .LVU4
  44              	.LBE573:
  45              	.LBE572:
  46              		.loc 1 157 3 view .LVU5
  47 0004 30B5     		push	{r4, r5, lr}
  48              		.cfi_def_cfa_offset 12
  49              		.cfi_offset 4, -12
  50              		.cfi_offset 5, -8
  51              		.cfi_offset 14, -4
  52              	.LBB582:
  53              	.LBB580:
  57:modulations/multistage_envelope.h ****       set_ad(parameter[0], parameter[1]);
  54              		.loc 2 57 13 view .LVU6
  55 0006 0D88     		ldrh	r5, [r1]
  56 0008 4C88     		ldrh	r4, [r1, #2]
  56:modulations/multistage_envelope.h ****     if (control_mode == CONTROL_MODE_HALF) {
  57              		.loc 2 56 5 view .LVU7
  58 000a 18D1     		bne	.L2
  59              		.loc 2 57 7 is_stmt 1 view .LVU8
  60              	.LVL2:
  61              	.LBB574:
  62              	.LBI574:
  58:modulations/multistage_envelope.h ****     } else {
  59:modulations/multistage_envelope.h ****       set_adsr(parameter[0], parameter[1], parameter[2] >> 1, parameter[3]);
  60:modulations/multistage_envelope.h ****     }
  61:modulations/multistage_envelope.h ****     if (segment_ > num_segments_) {
  62:modulations/multistage_envelope.h ****       segment_ = 0;
  63:modulations/multistage_envelope.h ****       phase_ = 0;
  64:modulations/multistage_envelope.h ****       value_ = 0;
  65:modulations/multistage_envelope.h ****     }
  66:modulations/multistage_envelope.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 6


  67:modulations/multistage_envelope.h ****   
  68:modulations/multistage_envelope.h ****   inline void set_time(uint16_t segment, uint16_t time) {
  69:modulations/multistage_envelope.h ****     time_[segment] = time;
  70:modulations/multistage_envelope.h ****   }
  71:modulations/multistage_envelope.h ****   
  72:modulations/multistage_envelope.h ****   inline void set_level(uint16_t segment, int16_t level) {
  73:modulations/multistage_envelope.h ****     level_[segment] = level;
  74:modulations/multistage_envelope.h ****   }
  75:modulations/multistage_envelope.h ****   
  76:modulations/multistage_envelope.h ****   inline void set_num_segments(uint16_t num_segments) {
  77:modulations/multistage_envelope.h ****     num_segments_ = num_segments;
  78:modulations/multistage_envelope.h ****   }
  79:modulations/multistage_envelope.h ****   
  80:modulations/multistage_envelope.h ****   inline void set_sustain_point(uint16_t sustain_point) {
  81:modulations/multistage_envelope.h ****     sustain_point_ = sustain_point;
  82:modulations/multistage_envelope.h ****   }
  83:modulations/multistage_envelope.h ****   
  84:modulations/multistage_envelope.h ****   inline void set_adsr(
  85:modulations/multistage_envelope.h ****       uint16_t attack,
  86:modulations/multistage_envelope.h ****       uint16_t decay,
  87:modulations/multistage_envelope.h ****       uint16_t sustain,
  88:modulations/multistage_envelope.h ****       uint16_t release) {
  89:modulations/multistage_envelope.h ****     num_segments_ = 3;
  90:modulations/multistage_envelope.h ****     sustain_point_ = 2;
  91:modulations/multistage_envelope.h **** 
  92:modulations/multistage_envelope.h ****     level_[0] = 0;
  93:modulations/multistage_envelope.h ****     level_[1] = 32767;
  94:modulations/multistage_envelope.h ****     level_[2] = sustain;
  95:modulations/multistage_envelope.h ****     level_[3] = 0;
  96:modulations/multistage_envelope.h **** 
  97:modulations/multistage_envelope.h ****     time_[0] = attack;
  98:modulations/multistage_envelope.h ****     time_[1] = decay;
  99:modulations/multistage_envelope.h ****     time_[2] = release;
 100:modulations/multistage_envelope.h ****     
 101:modulations/multistage_envelope.h ****     shape_[0] = ENV_SHAPE_QUARTIC;
 102:modulations/multistage_envelope.h ****     shape_[1] = ENV_SHAPE_EXPONENTIAL;
 103:modulations/multistage_envelope.h ****     shape_[2] = ENV_SHAPE_EXPONENTIAL;
 104:modulations/multistage_envelope.h ****     
 105:modulations/multistage_envelope.h ****     loop_start_ = loop_end_ = 0;
 106:modulations/multistage_envelope.h ****   }
 107:modulations/multistage_envelope.h ****   
 108:modulations/multistage_envelope.h ****   inline void set_ad(uint16_t attack, uint16_t decay) {
  63              		.loc 2 108 15 view .LVU9
  64              	.LBB575:
 109:modulations/multistage_envelope.h ****     num_segments_ = 2;
  65              		.loc 2 109 5 view .LVU10
 110:modulations/multistage_envelope.h ****     sustain_point_ = 0;
  66              		.loc 2 110 5 view .LVU11
 111:modulations/multistage_envelope.h **** 
 112:modulations/multistage_envelope.h ****     level_[0] = 0;
  67              		.loc 2 112 5 view .LVU12
 113:modulations/multistage_envelope.h ****     level_[1] = 32767;
  68              		.loc 2 113 5 view .LVU13
 114:modulations/multistage_envelope.h ****     level_[2] = 0;
  69              		.loc 2 114 5 view .LVU14
 112:modulations/multistage_envelope.h ****     level_[1] = 32767;
  70              		.loc 2 112 15 is_stmt 0 view .LVU15
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 7


  71 000c 4262     		str	r2, [r0, #36]
  72              	.LVL3:
 115:modulations/multistage_envelope.h **** 
 116:modulations/multistage_envelope.h ****     time_[0] = attack;
 117:modulations/multistage_envelope.h ****     time_[1] = decay;
 118:modulations/multistage_envelope.h ****     
 119:modulations/multistage_envelope.h ****     shape_[0] = ENV_SHAPE_EXPONENTIAL;
  73              		.loc 2 119 15 view .LVU16
  74 000e 40F20112 		movw	r2, #257
 114:modulations/multistage_envelope.h **** 
  75              		.loc 2 114 15 view .LVU17
  76 0012 0023     		movs	r3, #0
 116:modulations/multistage_envelope.h ****     time_[1] = decay;
  77              		.loc 2 116 14 view .LVU18
  78 0014 8586     		strh	r5, [r0, #52]	@ movhi
  79              		.loc 2 119 15 view .LVU19
  80 0016 A0F84420 		strh	r2, [r0, #68]	@ movhi
 109:modulations/multistage_envelope.h ****     sustain_point_ = 0;
  81              		.loc 2 109 19 view .LVU20
  82 001a 0222     		movs	r2, #2
 114:modulations/multistage_envelope.h **** 
  83              		.loc 2 114 15 view .LVU21
  84 001c 0385     		strh	r3, [r0, #40]	@ movhi
 116:modulations/multistage_envelope.h ****     time_[1] = decay;
  85              		.loc 2 116 5 is_stmt 1 view .LVU22
 117:modulations/multistage_envelope.h ****     
  86              		.loc 2 117 5 view .LVU23
 117:modulations/multistage_envelope.h ****     
  87              		.loc 2 117 14 is_stmt 0 view .LVU24
  88 001e C486     		strh	r4, [r0, #54]	@ movhi
  89              		.loc 2 119 5 is_stmt 1 view .LVU25
 120:modulations/multistage_envelope.h ****     shape_[1] = ENV_SHAPE_EXPONENTIAL;
  90              		.loc 2 120 5 view .LVU26
 121:modulations/multistage_envelope.h ****     
 122:modulations/multistage_envelope.h ****     loop_start_ = loop_end_ = 0;
  91              		.loc 2 122 5 view .LVU27
  92              	.LVL4:
  93              	.L5:
  94              		.loc 2 122 5 is_stmt 0 view .LVU28
  95              	.LBE575:
  96              	.LBE574:
  97              	.LBB576:
  98              	.LBB577:
 105:modulations/multistage_envelope.h ****   }
  99              		.loc 2 105 17 view .LVU29
 100 0020 C0E91723 		strd	r2, r3, [r0, #92]
 101              	.LBE577:
 102              	.LBE576:
  61:modulations/multistage_envelope.h ****       segment_ = 0;
 103              		.loc 2 61 5 is_stmt 1 view .LVU30
  61:modulations/multistage_envelope.h ****       segment_ = 0;
 104              		.loc 2 61 9 is_stmt 0 view .LVU31
 105 0024 B0F94C20 		ldrsh	r2, [r0, #76]
  61:modulations/multistage_envelope.h ****       segment_ = 0;
 106              		.loc 2 61 20 view .LVU32
 107 0028 B0F85C30 		ldrh	r3, [r0, #92]
  61:modulations/multistage_envelope.h ****       segment_ = 0;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 8


 108              		.loc 2 61 5 view .LVU33
 109 002c 9A42     		cmp	r2, r3
  62:modulations/multistage_envelope.h ****       phase_ = 0;
 110              		.loc 2 62 7 is_stmt 1 view .LVU34
  62:modulations/multistage_envelope.h ****       phase_ = 0;
 111              		.loc 2 62 16 is_stmt 0 view .LVU35
 112 002e C1BF     		itttt	gt
 113 0030 0023     		movgt	r3, #0
 114 0032 A0F84C30 		strhgt	r3, [r0, #76]	@ movhi
  63:modulations/multistage_envelope.h ****       value_ = 0;
 115              		.loc 2 63 7 is_stmt 1 view .LVU36
  63:modulations/multistage_envelope.h ****       value_ = 0;
 116              		.loc 2 63 14 is_stmt 0 view .LVU37
 117 0036 4365     		strgt	r3, [r0, #84]
  64:modulations/multistage_envelope.h ****     }
 118              		.loc 2 64 7 is_stmt 1 view .LVU38
  64:modulations/multistage_envelope.h ****     }
 119              		.loc 2 64 14 is_stmt 0 view .LVU39
 120 0038 A0F85030 		strhgt	r3, [r0, #80]	@ movhi
 121              	.LVL5:
  64:modulations/multistage_envelope.h ****     }
 122              		.loc 2 64 14 view .LVU40
 123              	.LBE580:
 124              	.LBE582:
 125              		.loc 1 157 3 view .LVU41
 126 003c 30BD     		pop	{r4, r5, pc}
 127              	.LVL6:
 128              	.L2:
 129              	.LBB583:
 130              	.LBB581:
  59:modulations/multistage_envelope.h ****     }
 131              		.loc 2 59 7 is_stmt 1 view .LVU42
  59:modulations/multistage_envelope.h ****     }
 132              		.loc 2 59 15 is_stmt 0 view .LVU43
 133 003e 8B88     		ldrh	r3, [r1, #4]
 134 0040 C988     		ldrh	r1, [r1, #6]
 135              	.LVL7:
  59:modulations/multistage_envelope.h ****     }
 136              		.loc 2 59 15 view .LVU44
 137 0042 5B08     		lsrs	r3, r3, #1
 138              	.LVL8:
 139              	.LBB579:
 140              	.LBI576:
  84:modulations/multistage_envelope.h ****       uint16_t attack,
 141              		.loc 2 84 15 is_stmt 1 view .LVU45
 142              	.LBB578:
  89:modulations/multistage_envelope.h ****     sustain_point_ = 2;
 143              		.loc 2 89 5 view .LVU46
  90:modulations/multistage_envelope.h **** 
 144              		.loc 2 90 5 view .LVU47
  92:modulations/multistage_envelope.h ****     level_[1] = 32767;
 145              		.loc 2 92 5 view .LVU48
  93:modulations/multistage_envelope.h ****     level_[2] = sustain;
 146              		.loc 2 93 5 view .LVU49
  92:modulations/multistage_envelope.h ****     level_[1] = 32767;
 147              		.loc 2 92 15 is_stmt 0 view .LVU50
 148 0044 4262     		str	r2, [r0, #36]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 9


 149              	.LVL9:
  94:modulations/multistage_envelope.h ****     level_[3] = 0;
 150              		.loc 2 94 5 is_stmt 1 view .LVU51
 101:modulations/multistage_envelope.h ****     shape_[1] = ENV_SHAPE_EXPONENTIAL;
 151              		.loc 2 101 15 is_stmt 0 view .LVU52
 152 0046 4FF48172 		mov	r2, #258
  97:modulations/multistage_envelope.h ****     time_[1] = decay;
 153              		.loc 2 97 14 view .LVU53
 154 004a 8586     		strh	r5, [r0, #52]	@ movhi
  94:modulations/multistage_envelope.h ****     level_[3] = 0;
 155              		.loc 2 94 15 view .LVU54
 156 004c 0385     		strh	r3, [r0, #40]	@ movhi
  95:modulations/multistage_envelope.h **** 
 157              		.loc 2 95 5 is_stmt 1 view .LVU55
  95:modulations/multistage_envelope.h **** 
 158              		.loc 2 95 15 is_stmt 0 view .LVU56
 159 004e 0023     		movs	r3, #0
 160              	.LVL10:
 101:modulations/multistage_envelope.h ****     shape_[1] = ENV_SHAPE_EXPONENTIAL;
 161              		.loc 2 101 15 view .LVU57
 162 0050 A0F84420 		strh	r2, [r0, #68]	@ movhi
 103:modulations/multistage_envelope.h ****     
 163              		.loc 2 103 15 view .LVU58
 164 0054 0122     		movs	r2, #1
  95:modulations/multistage_envelope.h **** 
 165              		.loc 2 95 15 view .LVU59
 166 0056 4385     		strh	r3, [r0, #42]	@ movhi
  97:modulations/multistage_envelope.h ****     time_[1] = decay;
 167              		.loc 2 97 5 is_stmt 1 view .LVU60
  98:modulations/multistage_envelope.h ****     time_[2] = release;
 168              		.loc 2 98 5 view .LVU61
 103:modulations/multistage_envelope.h ****     
 169              		.loc 2 103 15 is_stmt 0 view .LVU62
 170 0058 80F84620 		strb	r2, [r0, #70]
  89:modulations/multistage_envelope.h ****     sustain_point_ = 2;
 171              		.loc 2 89 19 view .LVU63
 172 005c 02F10212 		add	r2, r2, #131074
  98:modulations/multistage_envelope.h ****     time_[2] = release;
 173              		.loc 2 98 14 view .LVU64
 174 0060 C486     		strh	r4, [r0, #54]	@ movhi
  99:modulations/multistage_envelope.h ****     
 175              		.loc 2 99 5 is_stmt 1 view .LVU65
  99:modulations/multistage_envelope.h ****     
 176              		.loc 2 99 14 is_stmt 0 view .LVU66
 177 0062 0187     		strh	r1, [r0, #56]	@ movhi
 101:modulations/multistage_envelope.h ****     shape_[1] = ENV_SHAPE_EXPONENTIAL;
 178              		.loc 2 101 5 is_stmt 1 view .LVU67
 102:modulations/multistage_envelope.h ****     shape_[2] = ENV_SHAPE_EXPONENTIAL;
 179              		.loc 2 102 5 view .LVU68
 103:modulations/multistage_envelope.h ****     
 180              		.loc 2 103 5 view .LVU69
 105:modulations/multistage_envelope.h ****   }
 181              		.loc 2 105 5 view .LVU70
 182 0064 DCE7     		b	.L5
 183              	.L7:
 184 0066 00BF     		.align	2
 185              	.L6:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 10


 186 0068 0000FF7F 		.word	2147418112
 187              	.LBE578:
 188              	.LBE579:
 189              	.LBE581:
 190              	.LBE583:
 191              		.cfi_endproc
 192              	.LFE1603:
 194              		.section	.text._ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE,"axG",%progbits,_ZN5pea
 195              		.align	1
 196              		.weak	_ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv5-d16
 202              	_ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE:
 203              	.LVL11:
 204              	.LFB1615:
 158:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 159:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 160:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 161:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 205              		.loc 1 161 3 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              		.loc 1 161 3 view .LVU72
 211 0000 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE1615:
 215              		.section	.text._ZN5peaks10Processors16BouncingBallInitEv,"axG",%progbits,_ZN5peaks10Processors16Bo
 216              		.align	1
 217              		.weak	_ZN5peaks10Processors16BouncingBallInitEv
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv5-d16
 223              	_ZN5peaks10Processors16BouncingBallInitEv:
 224              	.LVL12:
 225              	.LFB1625:
 162:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 163:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 164:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 165:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 226              		.loc 1 165 3 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              		.loc 1 165 3 view .LVU74
 232              	.LBB584:
 233              	.LBI584:
 234              		.file 3 "modulations/bouncing_ball.h"
   1:modulations/bouncing_ball.h **** // Copyright 2013 Emilie Gillet.
   2:modulations/bouncing_ball.h **** //
   3:modulations/bouncing_ball.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:modulations/bouncing_ball.h **** //
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 11


   5:modulations/bouncing_ball.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:modulations/bouncing_ball.h **** // of this software and associated documentation files (the "Software"), to deal
   7:modulations/bouncing_ball.h **** // in the Software without restriction, including without limitation the rights
   8:modulations/bouncing_ball.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:modulations/bouncing_ball.h **** // copies of the Software, and to permit persons to whom the Software is
  10:modulations/bouncing_ball.h **** // furnished to do so, subject to the following conditions:
  11:modulations/bouncing_ball.h **** // 
  12:modulations/bouncing_ball.h **** // The above copyright notice and this permission notice shall be included in
  13:modulations/bouncing_ball.h **** // all copies or substantial portions of the Software.
  14:modulations/bouncing_ball.h **** // 
  15:modulations/bouncing_ball.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:modulations/bouncing_ball.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:modulations/bouncing_ball.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:modulations/bouncing_ball.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:modulations/bouncing_ball.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:modulations/bouncing_ball.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:modulations/bouncing_ball.h **** // THE SOFTWARE.
  22:modulations/bouncing_ball.h **** // 
  23:modulations/bouncing_ball.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:modulations/bouncing_ball.h **** //
  25:modulations/bouncing_ball.h **** // -----------------------------------------------------------------------------
  26:modulations/bouncing_ball.h **** //
  27:modulations/bouncing_ball.h **** // Bouncing ball.
  28:modulations/bouncing_ball.h **** 
  29:modulations/bouncing_ball.h **** #ifndef PEAKS_MODULATIONS_BOUNCING_BALL_H_
  30:modulations/bouncing_ball.h **** #define PEAKS_MODULATIONS_BOUNCING_BALL_H_
  31:modulations/bouncing_ball.h **** 
  32:modulations/bouncing_ball.h **** #include "stmlib/stmlib.h"
  33:modulations/bouncing_ball.h **** 
  34:modulations/bouncing_ball.h **** #include <algorithm>
  35:modulations/bouncing_ball.h **** 
  36:modulations/bouncing_ball.h **** #include "stmlib/utils/dsp.h"
  37:modulations/bouncing_ball.h **** #include "resources.h"
  38:modulations/bouncing_ball.h **** 
  39:modulations/bouncing_ball.h **** #include "gate_processor.h"
  40:modulations/bouncing_ball.h **** 
  41:modulations/bouncing_ball.h **** namespace peaks {
  42:modulations/bouncing_ball.h **** 
  43:modulations/bouncing_ball.h **** class BouncingBall {
  44:modulations/bouncing_ball.h ****  public:
  45:modulations/bouncing_ball.h ****   BouncingBall() { }
  46:modulations/bouncing_ball.h ****   ~BouncingBall() { }
  47:modulations/bouncing_ball.h ****   
  48:modulations/bouncing_ball.h ****   void Init() {
 235              		.loc 3 48 8 view .LVU75
 236              	.LBB585:
  49:modulations/bouncing_ball.h ****     initial_amplitude_ = 65535L << 14;
 237              		.loc 3 49 5 view .LVU76
 238              		.loc 3 49 24 is_stmt 0 view .LVU77
 239 0000 064B     		ldr	r3, .L10
 240 0002 C0F88834 		str	r3, [r0, #1160]
  50:modulations/bouncing_ball.h ****     gravity_ = 40;
 241              		.loc 3 50 5 is_stmt 1 view .LVU78
 242              		.loc 3 50 14 is_stmt 0 view .LVU79
 243 0006 2823     		movs	r3, #40
 244 0008 C0F88034 		str	r3, [r0, #1152]
  51:modulations/bouncing_ball.h ****     bounce_loss_ = 4095;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 12


 245              		.loc 3 51 5 is_stmt 1 view .LVU80
 246              		.loc 3 51 18 is_stmt 0 view .LVU81
 247 000c 40F6FF73 		movw	r3, #4095
 248 0010 C0F88434 		str	r3, [r0, #1156]
  52:modulations/bouncing_ball.h ****     initial_velocity_ = 0;
 249              		.loc 3 52 5 is_stmt 1 view .LVU82
 250              		.loc 3 52 23 is_stmt 0 view .LVU83
 251 0014 0023     		movs	r3, #0
 252 0016 C0F88C34 		str	r3, [r0, #1164]
 253              	.LVL13:
 254              		.loc 3 52 23 view .LVU84
 255              	.LBE585:
 256              	.LBE584:
 257              		.loc 1 165 3 view .LVU85
 258 001a 7047     		bx	lr
 259              	.L11:
 260              		.align	2
 261              	.L10:
 262 001c 00C0FF3F 		.word	1073725440
 263              		.cfi_endproc
 264              	.LFE1625:
 266              		.section	.text._ZN5peaks10Processors19BouncingBallProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Proces
 267              		.align	1
 268              		.weak	_ZN5peaks10Processors19BouncingBallProcessEPKhPsj
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv5-d16
 274              	_ZN5peaks10Processors19BouncingBallProcessEPKhPsj:
 275              	.LVL14:
 276              	.LFB1626:
 277              		.loc 1 165 3 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		.loc 1 165 3 view .LVU87
 282              	.LBB589:
 283              	.LBI589:
  53:modulations/bouncing_ball.h ****   }
  54:modulations/bouncing_ball.h ****     
  55:modulations/bouncing_ball.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
  56:modulations/bouncing_ball.h ****     if (control_mode == CONTROL_MODE_HALF) {
  57:modulations/bouncing_ball.h ****       set_initial_amplitude(65535);
  58:modulations/bouncing_ball.h ****       set_initial_velocity(0);
  59:modulations/bouncing_ball.h ****       set_gravity(parameter[0]);
  60:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
  61:modulations/bouncing_ball.h ****     } else {
  62:modulations/bouncing_ball.h ****       set_gravity(parameter[0]);
  63:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
  64:modulations/bouncing_ball.h ****       set_initial_amplitude(parameter[2]);
  65:modulations/bouncing_ball.h ****       set_initial_velocity(parameter[3] - 32768);
  66:modulations/bouncing_ball.h ****     }
  67:modulations/bouncing_ball.h ****   }
  68:modulations/bouncing_ball.h ****   
  69:modulations/bouncing_ball.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size) {
 284              		.loc 3 69 8 view .LVU88
 285 0000 0B44     		add	r3, r3, r1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 13


 286              	.LVL15:
 287              		.loc 3 69 8 is_stmt 0 view .LVU89
 288              	.LBE589:
 289              		.loc 1 165 3 view .LVU90
 290 0002 70B5     		push	{r4, r5, r6, lr}
 291              		.cfi_def_cfa_offset 16
 292              		.cfi_offset 4, -16
 293              		.cfi_offset 5, -12
 294              		.cfi_offset 6, -8
 295              		.cfi_offset 14, -4
 296              	.LVL16:
 297              	.L18:
 298              	.LBB593:
 299              	.LBB590:
  70:modulations/bouncing_ball.h ****     while (size--) {
 300              		.loc 3 70 5 is_stmt 1 view .LVU91
 301              		.loc 3 70 16 view .LVU92
 302              		.loc 3 70 16 is_stmt 0 view .LVU93
 303 0004 9942     		cmp	r1, r3
 304 0006 2FD0     		beq	.L12
 305              	.LBB591:
  71:modulations/bouncing_ball.h ****       GateFlags gate_flag = *gate_flags++;
 306              		.loc 3 71 7 is_stmt 1 view .LVU94
 307              	.LVL17:
  72:modulations/bouncing_ball.h ****       if (gate_flag & GATE_FLAG_RISING) {
 308              		.loc 3 72 7 view .LVU95
 309 0008 11F8014B 		ldrb	r4, [r1], #1	@ zero_extendqisi2
 310              	.LVL18:
  73:modulations/bouncing_ball.h ****         velocity_ = initial_velocity_;
  74:modulations/bouncing_ball.h ****         position_ = initial_amplitude_;
  75:modulations/bouncing_ball.h ****       }
  76:modulations/bouncing_ball.h ****       velocity_ -= gravity_;
 311              		.loc 3 76 17 is_stmt 0 view .LVU96
 312 000c D0F88054 		ldr	r5, [r0, #1152]
  72:modulations/bouncing_ball.h ****       if (gate_flag & GATE_FLAG_RISING) {
 313              		.loc 3 72 7 view .LVU97
 314 0010 A407     		lsls	r4, r4, #30
  73:modulations/bouncing_ball.h ****         velocity_ = initial_velocity_;
 315              		.loc 3 73 9 is_stmt 1 view .LVU98
  73:modulations/bouncing_ball.h ****         velocity_ = initial_velocity_;
 316              		.loc 3 73 19 is_stmt 0 view .LVU99
 317 0012 41BF     		itttt	mi
 318 0014 D0F88C44 		ldrmi	r4, [r0, #1164]
 319 0018 C0F89044 		strmi	r4, [r0, #1168]
 320              	.LVL19:
  74:modulations/bouncing_ball.h ****       }
 321              		.loc 3 74 9 is_stmt 1 view .LVU100
  74:modulations/bouncing_ball.h ****       }
 322              		.loc 3 74 19 is_stmt 0 view .LVU101
 323 001c D0F88844 		ldrmi	r4, [r0, #1160]
 324 0020 C0F89444 		strmi	r4, [r0, #1172]
 325              		.loc 3 76 7 is_stmt 1 view .LVU102
 326              		.loc 3 76 17 is_stmt 0 view .LVU103
 327 0024 D0F89044 		ldr	r4, [r0, #1168]
 328 0028 641B     		subs	r4, r4, r5
  77:modulations/bouncing_ball.h ****       position_ += velocity_;
 329              		.loc 3 77 17 view .LVU104
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 14


 330 002a D0F89454 		ldr	r5, [r0, #1172]
  78:modulations/bouncing_ball.h ****       if (position_ < 0) {
 331              		.loc 3 78 7 view .LVU105
 332 002e 6519     		adds	r5, r4, r5
  76:modulations/bouncing_ball.h ****       position_ += velocity_;
 333              		.loc 3 76 17 view .LVU106
 334 0030 C0F89044 		str	r4, [r0, #1168]
  77:modulations/bouncing_ball.h ****       position_ += velocity_;
 335              		.loc 3 77 7 is_stmt 1 view .LVU107
 336              		.loc 3 78 7 view .LVU108
 337 0034 0AD5     		bpl	.L15
  79:modulations/bouncing_ball.h ****         position_ = 0;
 338              		.loc 3 79 9 view .LVU109
 339              		.loc 3 79 19 is_stmt 0 view .LVU110
 340 0036 0025     		movs	r5, #0
 341 0038 C0F89454 		str	r5, [r0, #1172]
  80:modulations/bouncing_ball.h ****         velocity_ = -(velocity_ >> 12) * bounce_loss_;
 342              		.loc 3 80 9 is_stmt 1 view .LVU111
 343              	.L23:
  81:modulations/bouncing_ball.h ****       }
  82:modulations/bouncing_ball.h ****       if (position_ > (32767L << 15)) {
  83:modulations/bouncing_ball.h ****         position_ = 32767L << 15;
  84:modulations/bouncing_ball.h ****         velocity_ = -(velocity_ >> 12) * bounce_loss_;
 344              		.loc 3 84 9 view .LVU112
 345              		.loc 3 84 33 is_stmt 0 view .LVU113
 346 003c 2413     		asrs	r4, r4, #12
 347              		.loc 3 84 40 view .LVU114
 348 003e D0F88454 		ldr	r5, [r0, #1156]
 349              		.loc 3 84 21 view .LVU115
 350 0042 6442     		rsbs	r4, r4, #0
 351              		.loc 3 84 40 view .LVU116
 352 0044 6C43     		muls	r4, r5, r4
 353              		.loc 3 84 19 view .LVU117
 354 0046 C0F89044 		str	r4, [r0, #1168]
 355 004a 04E0     		b	.L16
 356              	.L15:
  82:modulations/bouncing_ball.h ****         position_ = 32767L << 15;
 357              		.loc 3 82 7 is_stmt 1 view .LVU118
 358 004c 074E     		ldr	r6, .L24
 359 004e B542     		cmp	r5, r6
 360 0050 07DC     		bgt	.L17
  77:modulations/bouncing_ball.h ****       if (position_ < 0) {
 361              		.loc 3 77 17 is_stmt 0 view .LVU119
 362 0052 C0F89454 		str	r5, [r0, #1172]
 363              	.L16:
  85:modulations/bouncing_ball.h ****       }
  86:modulations/bouncing_ball.h ****       *out++ = position_ >> 15;
 364              		.loc 3 86 7 is_stmt 1 view .LVU120
 365              	.LVL20:
 366              		.loc 3 86 26 is_stmt 0 view .LVU121
 367 0056 D0F89444 		ldr	r4, [r0, #1172]
 368 005a E413     		asrs	r4, r4, #15
 369              		.loc 3 86 14 view .LVU122
 370 005c 22F8024B 		strh	r4, [r2], #2	@ movhi
 371              	.LVL21:
 372              		.loc 3 86 14 view .LVU123
 373              	.LBE591:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 15


  70:modulations/bouncing_ball.h ****       GateFlags gate_flag = *gate_flags++;
 374              		.loc 3 70 5 view .LVU124
 375 0060 D0E7     		b	.L18
 376              	.L17:
 377              	.LBB592:
  83:modulations/bouncing_ball.h ****         velocity_ = -(velocity_ >> 12) * bounce_loss_;
 378              		.loc 3 83 9 is_stmt 1 view .LVU125
  83:modulations/bouncing_ball.h ****         velocity_ = -(velocity_ >> 12) * bounce_loss_;
 379              		.loc 3 83 19 is_stmt 0 view .LVU126
 380 0062 C0F89464 		str	r6, [r0, #1172]
 381 0066 E9E7     		b	.L23
 382              	.L12:
  83:modulations/bouncing_ball.h ****         velocity_ = -(velocity_ >> 12) * bounce_loss_;
 383              		.loc 3 83 19 view .LVU127
 384              	.LBE592:
 385              	.LBE590:
 386              	.LBE593:
 387              		.loc 1 165 3 view .LVU128
 388 0068 70BD     		pop	{r4, r5, r6, pc}
 389              	.L25:
 390 006a 00BF     		.align	2
 391              	.L24:
 392 006c 0080FF3F 		.word	1073709056
 393              		.cfi_endproc
 394              	.LFE1626:
 396              		.section	.text._ZN5peaks10Processors20MiniSequencerProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Proce
 397              		.align	1
 398              		.weak	_ZN5peaks10Processors20MiniSequencerProcessEPKhPsj
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu fpv5-d16
 404              	_ZN5peaks10Processors20MiniSequencerProcessEPKhPsj:
 405              	.LVL22:
 406              	.LFB1629:
 166:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 407              		.loc 1 166 3 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		.loc 1 166 3 view .LVU130
 412              	.LBB597:
 413              	.LBI597:
 414              		.file 4 "modulations/mini_sequencer.h"
   1:modulations/mini_sequencer.h **** // Copyright 2013 Emilie Gillet.
   2:modulations/mini_sequencer.h **** //
   3:modulations/mini_sequencer.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:modulations/mini_sequencer.h **** //
   5:modulations/mini_sequencer.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:modulations/mini_sequencer.h **** // of this software and associated documentation files (the "Software"), to deal
   7:modulations/mini_sequencer.h **** // in the Software without restriction, including without limitation the rights
   8:modulations/mini_sequencer.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:modulations/mini_sequencer.h **** // copies of the Software, and to permit persons to whom the Software is
  10:modulations/mini_sequencer.h **** // furnished to do so, subject to the following conditions:
  11:modulations/mini_sequencer.h **** // 
  12:modulations/mini_sequencer.h **** // The above copyright notice and this permission notice shall be included in
  13:modulations/mini_sequencer.h **** // all copies or substantial portions of the Software.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 16


  14:modulations/mini_sequencer.h **** // 
  15:modulations/mini_sequencer.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:modulations/mini_sequencer.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:modulations/mini_sequencer.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:modulations/mini_sequencer.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:modulations/mini_sequencer.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:modulations/mini_sequencer.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:modulations/mini_sequencer.h **** // THE SOFTWARE.
  22:modulations/mini_sequencer.h **** // 
  23:modulations/mini_sequencer.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:modulations/mini_sequencer.h **** //
  25:modulations/mini_sequencer.h **** // -----------------------------------------------------------------------------
  26:modulations/mini_sequencer.h **** //
  27:modulations/mini_sequencer.h **** // Mini sequencer.
  28:modulations/mini_sequencer.h **** 
  29:modulations/mini_sequencer.h **** #ifndef PEAKS_MODULATIONS_MINI_SEQUENCER_H_
  30:modulations/mini_sequencer.h **** #define PEAKS_MODULATIONS_MINI_SEQUENCER_H_
  31:modulations/mini_sequencer.h **** 
  32:modulations/mini_sequencer.h **** #include "stmlib/stmlib.h"
  33:modulations/mini_sequencer.h **** 
  34:modulations/mini_sequencer.h **** #include <algorithm>
  35:modulations/mini_sequencer.h **** 
  36:modulations/mini_sequencer.h **** #include "gate_processor.h"
  37:modulations/mini_sequencer.h **** 
  38:modulations/mini_sequencer.h **** namespace peaks {
  39:modulations/mini_sequencer.h **** 
  40:modulations/mini_sequencer.h **** const uint8_t kMaxNumSteps = 4;
  41:modulations/mini_sequencer.h **** 
  42:modulations/mini_sequencer.h **** class MiniSequencer {
  43:modulations/mini_sequencer.h ****  public:
  44:modulations/mini_sequencer.h ****   MiniSequencer() { }
  45:modulations/mini_sequencer.h ****   ~MiniSequencer() { }
  46:modulations/mini_sequencer.h ****   
  47:modulations/mini_sequencer.h ****   void Init() {
  48:modulations/mini_sequencer.h ****     std::fill(&steps_[0], &steps_[kMaxNumSteps], 0);
  49:modulations/mini_sequencer.h ****     num_steps_ = 4;
  50:modulations/mini_sequencer.h ****     step_ = 0;
  51:modulations/mini_sequencer.h ****     reset_at_next_clock_ = false;
  52:modulations/mini_sequencer.h ****   }
  53:modulations/mini_sequencer.h ****   
  54:modulations/mini_sequencer.h ****   inline void set_step(uint8_t index, int16_t value) {
  55:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
  56:modulations/mini_sequencer.h ****     if (difference > 0) {
  57:modulations/mini_sequencer.h ****       steps_[index] = value;
  58:modulations/mini_sequencer.h ****     }
  59:modulations/mini_sequencer.h ****   }
  60:modulations/mini_sequencer.h ****   
  61:modulations/mini_sequencer.h ****   inline void set_num_steps(uint8_t num_steps) {
  62:modulations/mini_sequencer.h ****     num_steps_ = num_steps;
  63:modulations/mini_sequencer.h ****   }
  64:modulations/mini_sequencer.h ****   
  65:modulations/mini_sequencer.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
  66:modulations/mini_sequencer.h ****     if (control_mode == CONTROL_MODE_HALF) {
  67:modulations/mini_sequencer.h ****       set_step(0, parameter[0] - 32768);
  68:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
  69:modulations/mini_sequencer.h ****       set_num_steps(2);
  70:modulations/mini_sequencer.h ****     } else {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 17


  71:modulations/mini_sequencer.h ****       set_step(0, parameter[0] - 32768);
  72:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
  73:modulations/mini_sequencer.h ****       set_step(2, parameter[2] - 32768);
  74:modulations/mini_sequencer.h ****       set_step(3, parameter[3] - 32768);
  75:modulations/mini_sequencer.h ****       set_num_steps(4);
  76:modulations/mini_sequencer.h ****     }
  77:modulations/mini_sequencer.h ****   }
  78:modulations/mini_sequencer.h ****   
  79:modulations/mini_sequencer.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size) {
 415              		.loc 4 79 8 view .LVU131
 416 0000 0B44     		add	r3, r3, r1
 417              	.LVL23:
 418              		.loc 4 79 8 is_stmt 0 view .LVU132
 419              	.LBE597:
 420              		.loc 1 166 3 view .LVU133
 421 0002 30B5     		push	{r4, r5, lr}
 422              		.cfi_def_cfa_offset 12
 423              		.cfi_offset 4, -12
 424              		.cfi_offset 5, -8
 425              		.cfi_offset 14, -4
 426              	.LVL24:
 427              	.L33:
 428              	.LBB600:
 429              	.LBB598:
  80:modulations/mini_sequencer.h ****     while (size--) {
 430              		.loc 4 80 5 is_stmt 1 view .LVU134
 431              		.loc 4 80 16 view .LVU135
 432              		.loc 4 80 16 is_stmt 0 view .LVU136
 433 0004 9942     		cmp	r1, r3
 434 0006 2DD0     		beq	.L26
 435              	.LBB599:
  81:modulations/mini_sequencer.h ****       GateFlags gate_flag = *gate_flags++;
 436              		.loc 4 81 7 is_stmt 1 view .LVU137
 437              	.LVL25:
 438              		.loc 4 81 40 is_stmt 0 view .LVU138
 439 0008 11F8015B 		ldrb	r5, [r1], #1	@ zero_extendqisi2
 440              	.LVL26:
  82:modulations/mini_sequencer.h ****       if (gate_flag & GATE_FLAG_RISING) {
 441              		.loc 4 82 7 is_stmt 1 view .LVU139
 442 000c AC07     		lsls	r4, r5, #30
 443 000e 0CD5     		bpl	.L29
  83:modulations/mini_sequencer.h ****         ++step_;
 444              		.loc 4 83 9 view .LVU140
 445 0010 90F89944 		ldrb	r4, [r0, #1177]	@ zero_extendqisi2
 446 0014 0134     		adds	r4, r4, #1
 447 0016 80F89944 		strb	r4, [r0, #1177]
  84:modulations/mini_sequencer.h ****         if (reset_at_next_clock_) {
 448              		.loc 4 84 9 view .LVU141
 449 001a 90F8A244 		ldrb	r4, [r0, #1186]	@ zero_extendqisi2
 450 001e 24B1     		cbz	r4, .L29
  85:modulations/mini_sequencer.h ****           reset_at_next_clock_  = false;
 451              		.loc 4 85 11 view .LVU142
 452              		.loc 4 85 33 is_stmt 0 view .LVU143
 453 0020 0024     		movs	r4, #0
 454 0022 80F8A244 		strb	r4, [r0, #1186]
  86:modulations/mini_sequencer.h ****           step_ = 0;
 455              		.loc 4 86 11 is_stmt 1 view .LVU144
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 18


 456              		.loc 4 86 17 is_stmt 0 view .LVU145
 457 0026 80F89944 		strb	r4, [r0, #1177]
 458              	.L29:
  87:modulations/mini_sequencer.h ****         }
  88:modulations/mini_sequencer.h ****       }
  89:modulations/mini_sequencer.h ****       if (num_steps_ > 2 && gate_flag & GATE_FLAG_AUXILIARY_RISING) {
 459              		.loc 4 89 7 is_stmt 1 view .LVU146
 460              		.loc 4 89 11 is_stmt 0 view .LVU147
 461 002a 90F89844 		ldrb	r4, [r0, #1176]	@ zero_extendqisi2
 462              		.loc 4 89 7 view .LVU148
 463 002e 022C     		cmp	r4, #2
 464 0030 04D9     		bls	.L31
 465              		.loc 4 89 26 view .LVU149
 466 0032 AD06     		lsls	r5, r5, #26
 467              	.LVL27:
  90:modulations/mini_sequencer.h ****         reset_at_next_clock_ = true;
 468              		.loc 4 90 9 is_stmt 1 view .LVU150
 469              		.loc 4 90 30 is_stmt 0 view .LVU151
 470 0034 44BF     		itt	mi
 471 0036 0125     		movmi	r5, #1
 472 0038 80F8A254 		strbmi	r5, [r0, #1186]
 473              	.L31:
  91:modulations/mini_sequencer.h ****       }
  92:modulations/mini_sequencer.h ****       if (step_ >= num_steps_) {
 474              		.loc 4 92 7 is_stmt 1 view .LVU152
 475 003c 90F89954 		ldrb	r5, [r0, #1177]	@ zero_extendqisi2
 476 0040 A542     		cmp	r5, r4
  93:modulations/mini_sequencer.h ****         step_ = 0;
 477              		.loc 4 93 9 view .LVU153
  94:modulations/mini_sequencer.h ****       }
  95:modulations/mini_sequencer.h ****       *out++ = static_cast<int32_t>(steps_[step_]) * 40960 >> 16;
 478              		.loc 4 95 52 is_stmt 0 view .LVU154
 479 0042 4FF42045 		mov	r5, #40960
  93:modulations/mini_sequencer.h ****         step_ = 0;
 480              		.loc 4 93 15 view .LVU155
 481 0046 24BF     		itt	cs
 482 0048 0024     		movcs	r4, #0
 483 004a 80F89944 		strbcs	r4, [r0, #1177]
 484              		.loc 4 95 7 is_stmt 1 view .LVU156
 485              	.LVL28:
 486              		.loc 4 95 44 is_stmt 0 view .LVU157
 487 004e 90F89944 		ldrb	r4, [r0, #1177]	@ zero_extendqisi2
 488              		.loc 4 95 49 view .LVU158
 489 0052 00EB4404 		add	r4, r0, r4, lsl #1
 490              		.loc 4 95 16 view .LVU159
 491 0056 B4F99A44 		ldrsh	r4, [r4, #1178]
 492              		.loc 4 95 52 view .LVU160
 493 005a 6C43     		muls	r4, r5, r4
 494              		.loc 4 95 60 view .LVU161
 495 005c 2414     		asrs	r4, r4, #16
 496              		.loc 4 95 14 view .LVU162
 497 005e 22F8024B 		strh	r4, [r2], #2	@ movhi
 498              	.LVL29:
 499              		.loc 4 95 14 view .LVU163
 500              	.LBE599:
  80:modulations/mini_sequencer.h ****       GateFlags gate_flag = *gate_flags++;
 501              		.loc 4 80 5 view .LVU164
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 19


 502 0062 CFE7     		b	.L33
 503              	.L26:
  80:modulations/mini_sequencer.h ****       GateFlags gate_flag = *gate_flags++;
 504              		.loc 4 80 5 view .LVU165
 505              	.LBE598:
 506              	.LBE600:
 507              		.loc 1 166 3 view .LVU166
 508 0064 30BD     		pop	{r4, r5, pc}
 509              		.cfi_endproc
 510              	.LFE1629:
 512              		.section	.text.__tcf_0,"ax",%progbits
 513              		.align	1
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv5-d16
 519              	__tcf_0:
 520              	.LFB1663:
 521              		.file 5 "processors.cpp"
   1:processors.cpp **** // Copyright 2013 Emilie Gillet.
   2:processors.cpp **** //
   3:processors.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:processors.cpp **** //
   5:processors.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:processors.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:processors.cpp **** // in the Software without restriction, including without limitation the rights
   8:processors.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:processors.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:processors.cpp **** // furnished to do so, subject to the following conditions:
  11:processors.cpp **** // 
  12:processors.cpp **** // The above copyright notice and this permission notice shall be included in
  13:processors.cpp **** // all copies or substantial portions of the Software.
  14:processors.cpp **** // 
  15:processors.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:processors.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:processors.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:processors.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:processors.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:processors.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:processors.cpp **** // THE SOFTWARE.
  22:processors.cpp **** // 
  23:processors.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:processors.cpp **** //
  25:processors.cpp **** // -----------------------------------------------------------------------------
  26:processors.cpp **** //
  27:processors.cpp **** // LFO.
  28:processors.cpp **** 
  29:processors.cpp **** #include "processors.h"
  30:processors.cpp **** 
  31:processors.cpp **** #include <algorithm>
  32:processors.cpp **** 
  33:processors.cpp **** namespace peaks {
  34:processors.cpp **** 
  35:processors.cpp **** using namespace stmlib;
  36:processors.cpp **** using namespace std;
  37:processors.cpp **** 
  38:processors.cpp **** #define REGISTER_PROCESSOR(ClassName) \
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 20


  39:processors.cpp ****   { &Processors::ClassName ## Init, \
  40:processors.cpp ****     &Processors::ClassName ## Process, \
  41:processors.cpp ****     &Processors::ClassName ## Configure },
  42:processors.cpp **** 
  43:processors.cpp **** /* static */
  44:processors.cpp **** const Processors::ProcessorCallbacks 
  45:processors.cpp **** Processors::callbacks_table_[PROCESSOR_FUNCTION_LAST] = {
  46:processors.cpp ****   REGISTER_PROCESSOR(MultistageEnvelope)
  47:processors.cpp ****   REGISTER_PROCESSOR(Lfo)
  48:processors.cpp ****   REGISTER_PROCESSOR(Lfo)
  49:processors.cpp ****   REGISTER_PROCESSOR(BassDrum)
  50:processors.cpp ****   REGISTER_PROCESSOR(SnareDrum)
  51:processors.cpp ****   REGISTER_PROCESSOR(HighHat)
  52:processors.cpp ****   REGISTER_PROCESSOR(FmDrum)
  53:processors.cpp ****   REGISTER_PROCESSOR(PulseShaper)
  54:processors.cpp ****   REGISTER_PROCESSOR(PulseRandomizer)
  55:processors.cpp ****   REGISTER_PROCESSOR(BouncingBall)
  56:processors.cpp ****   REGISTER_PROCESSOR(MiniSequencer)
  57:processors.cpp ****   REGISTER_PROCESSOR(NumberStation)
  58:processors.cpp **** };
  59:processors.cpp **** 
  60:processors.cpp **** void Processors::Init(uint8_t index) {
  61:processors.cpp ****   for (uint16_t i = 0; i < PROCESSOR_FUNCTION_LAST; ++i) {
  62:processors.cpp ****     (this->*callbacks_table_[i].init_fn)();
  63:processors.cpp ****   }
  64:processors.cpp ****   
  65:processors.cpp ****   bass_drum_.Init();
  66:processors.cpp ****   snare_drum_.Init();
  67:processors.cpp ****   fm_drum_.Init();
  68:processors.cpp ****   fm_drum_.set_sd_range(index == 1);
  69:processors.cpp ****   high_hat_.Init();
  70:processors.cpp ****   bouncing_ball_.Init();
  71:processors.cpp ****   lfo_.Init();
  72:processors.cpp ****   envelope_.Init();
  73:processors.cpp ****   pulse_shaper_.Init();
  74:processors.cpp ****   pulse_randomizer_.Init();
  75:processors.cpp ****   mini_sequencer_.Init();
  76:processors.cpp ****   number_station_.Init();
  77:processors.cpp ****   number_station_.set_voice(index == 1);
  78:processors.cpp ****   
  79:processors.cpp ****   control_mode_ = CONTROL_MODE_FULL;
  80:processors.cpp ****   set_function(PROCESSOR_FUNCTION_ENVELOPE);
  81:processors.cpp ****   std::fill(&parameter_[0], &parameter_[4], 32768);
  82:processors.cpp **** }
  83:processors.cpp **** 
  84:processors.cpp **** /* extern */
  85:processors.cpp **** Processors processors[2];
 522              		.loc 5 85 12 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              		.loc 5 85 12 is_stmt 0 view .LVU168
 528 0000 7047     		bx	lr
 529              		.cfi_endproc
 530              	.LFE1663:
 532              		.section	.text._ZN5peaks10Processors20NumberStationProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Proce
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 21


 533              		.align	1
 534              		.weak	_ZN5peaks10Processors20NumberStationProcessEPKhPsj
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu fpv5-d16
 540              	_ZN5peaks10Processors20NumberStationProcessEPKhPsj:
 541              	.LVL30:
 542              	.LFB1632:
 167:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 543              		.loc 1 167 3 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              		.loc 1 167 3 view .LVU170
 549 0000 00F2A440 		addw	r0, r0, #1188
 550              	.LVL31:
 551              		.loc 1 167 3 is_stmt 0 view .LVU171
 552 0004 FFF7FEBF 		b	_ZN5peaks13NumberStation7ProcessEPKhPsj
 553              	.LVL32:
 554              		.loc 1 167 3 view .LVU172
 555              		.cfi_endproc
 556              	.LFE1632:
 558              		.section	.text._ZN5peaks10Processors17NumberStationInitEv,"axG",%progbits,_ZN5peaks10Processors17N
 559              		.align	1
 560              		.weak	_ZN5peaks10Processors17NumberStationInitEv
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv5-d16
 566              	_ZN5peaks10Processors17NumberStationInitEv:
 567              	.LVL33:
 568              	.LFB1631:
 569              		.loc 1 167 3 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574              		.loc 1 167 3 view .LVU174
 575 0000 00F2A440 		addw	r0, r0, #1188
 576              	.LVL34:
 577              		.loc 1 167 3 is_stmt 0 view .LVU175
 578 0004 FFF7FEBF 		b	_ZN5peaks13NumberStation4InitEv
 579              	.LVL35:
 580              		.loc 1 167 3 view .LVU176
 581              		.cfi_endproc
 582              	.LFE1631:
 584              		.section	.text._ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Pro
 585              		.align	1
 586              		.weak	_ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv5-d16
 592              	_ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj:
 593              	.LVL36:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 22


 594              	.LFB1623:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 595              		.loc 1 164 3 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 600              		.loc 1 164 3 view .LVU178
 601 0000 00F23440 		addw	r0, r0, #1076
 602              	.LVL37:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 603              		.loc 1 164 3 is_stmt 0 view .LVU179
 604 0004 FFF7FEBF 		b	_ZN5peaks15PulseRandomizer7ProcessEPKhPsj
 605              	.LVL38:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 606              		.loc 1 164 3 view .LVU180
 607              		.cfi_endproc
 608              	.LFE1623:
 610              		.section	.text._ZN5peaks10Processors19PulseRandomizerInitEv,"axG",%progbits,_ZN5peaks10Processors1
 611              		.align	1
 612              		.weak	_ZN5peaks10Processors19PulseRandomizerInitEv
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu fpv5-d16
 618              	_ZN5peaks10Processors19PulseRandomizerInitEv:
 619              	.LVL39:
 620              	.LFB1622:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 621              		.loc 1 164 3 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 626              		.loc 1 164 3 view .LVU182
 627 0000 00F23440 		addw	r0, r0, #1076
 628              	.LVL40:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 629              		.loc 1 164 3 is_stmt 0 view .LVU183
 630 0004 FFF7FEBF 		b	_ZN5peaks15PulseRandomizer4InitEv
 631              	.LVL41:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 632              		.loc 1 164 3 view .LVU184
 633              		.cfi_endproc
 634              	.LFE1622:
 636              		.section	.text._ZN5peaks10Processors18PulseShaperProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Process
 637              		.align	1
 638              		.weak	_ZN5peaks10Processors18PulseShaperProcessEPKhPsj
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu fpv5-d16
 644              	_ZN5peaks10Processors18PulseShaperProcessEPKhPsj:
 645              	.LVL42:
 646              	.LFB1620:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 23


 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 647              		.loc 1 163 3 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 652              		.loc 1 163 3 view .LVU186
 653 0000 00F54A70 		add	r0, r0, #808
 654              	.LVL43:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 655              		.loc 1 163 3 is_stmt 0 view .LVU187
 656 0004 FFF7FEBF 		b	_ZN5peaks11PulseShaper7ProcessEPKhPsj
 657              	.LVL44:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 658              		.loc 1 163 3 view .LVU188
 659              		.cfi_endproc
 660              	.LFE1620:
 662              		.section	.text._ZN5peaks10Processors15PulseShaperInitEv,"axG",%progbits,_ZN5peaks10Processors15Pul
 663              		.align	1
 664              		.weak	_ZN5peaks10Processors15PulseShaperInitEv
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv5-d16
 670              	_ZN5peaks10Processors15PulseShaperInitEv:
 671              	.LVL45:
 672              	.LFB1619:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 673              		.loc 1 163 3 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 678              		.loc 1 163 3 view .LVU190
 679 0000 00F54A70 		add	r0, r0, #808
 680              	.LVL46:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 681              		.loc 1 163 3 is_stmt 0 view .LVU191
 682 0004 FFF7FEBF 		b	_ZN5peaks11PulseShaper4InitEv
 683              	.LVL47:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 684              		.loc 1 163 3 view .LVU192
 685              		.cfi_endproc
 686              	.LFE1619:
 688              		.section	.text._ZN5peaks10Processors13FmDrumProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Processors13
 689              		.align	1
 690              		.weak	_ZN5peaks10Processors13FmDrumProcessEPKhPsj
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv5-d16
 696              	_ZN5peaks10Processors13FmDrumProcessEPKhPsj:
 697              	.LVL48:
 698              	.LFB1617:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 24


 699              		.loc 1 162 3 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 704              		.loc 1 162 3 view .LVU194
 705 0000 00F54070 		add	r0, r0, #768
 706              	.LVL49:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 707              		.loc 1 162 3 is_stmt 0 view .LVU195
 708 0004 FFF7FEBF 		b	_ZN5peaks6FmDrum7ProcessEPKhPsj
 709              	.LVL50:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 710              		.loc 1 162 3 view .LVU196
 711              		.cfi_endproc
 712              	.LFE1617:
 714              		.section	.text._ZN5peaks10Processors10FmDrumInitEv,"axG",%progbits,_ZN5peaks10Processors10FmDrumIn
 715              		.align	1
 716              		.weak	_ZN5peaks10Processors10FmDrumInitEv
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv5-d16
 722              	_ZN5peaks10Processors10FmDrumInitEv:
 723              	.LVL51:
 724              	.LFB1616:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 725              		.loc 1 162 3 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 730              		.loc 1 162 3 view .LVU198
 731 0000 00F54070 		add	r0, r0, #768
 732              	.LVL52:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 733              		.loc 1 162 3 is_stmt 0 view .LVU199
 734 0004 FFF7FEBF 		b	_ZN5peaks6FmDrum4InitEv
 735              	.LVL53:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 736              		.loc 1 162 3 view .LVU200
 737              		.cfi_endproc
 738              	.LFE1616:
 740              		.section	.text._ZN5peaks10Processors14HighHatProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Processors1
 741              		.align	1
 742              		.weak	_ZN5peaks10Processors14HighHatProcessEPKhPsj
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv5-d16
 748              	_ZN5peaks10Processors14HighHatProcessEPKhPsj:
 749              	.LVL54:
 750              	.LFB1614:
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 751              		.loc 1 161 3 is_stmt 1 view -0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 25


 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 756              		.loc 1 161 3 view .LVU202
 757 0000 00F52570 		add	r0, r0, #660
 758              	.LVL55:
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 759              		.loc 1 161 3 is_stmt 0 view .LVU203
 760 0004 FFF7FEBF 		b	_ZN5peaks7HighHat7ProcessEPKhPsj
 761              	.LVL56:
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 762              		.loc 1 161 3 view .LVU204
 763              		.cfi_endproc
 764              	.LFE1614:
 766              		.section	.text._ZN5peaks10Processors11HighHatInitEv,"axG",%progbits,_ZN5peaks10Processors11HighHat
 767              		.align	1
 768              		.weak	_ZN5peaks10Processors11HighHatInitEv
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv5-d16
 774              	_ZN5peaks10Processors11HighHatInitEv:
 775              	.LVL57:
 776              	.LFB1613:
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 777              		.loc 1 161 3 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 782              		.loc 1 161 3 view .LVU206
 783 0000 00F52570 		add	r0, r0, #660
 784              	.LVL58:
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 785              		.loc 1 161 3 is_stmt 0 view .LVU207
 786 0004 FFF7FEBF 		b	_ZN5peaks7HighHat4InitEv
 787              	.LVL59:
 161:processors.h  ****   DECLARE_PROCESSOR(FmDrum, fm_drum_);
 788              		.loc 1 161 3 view .LVU208
 789              		.cfi_endproc
 790              	.LFE1613:
 792              		.section	.text._ZN5peaks10Processors16SnareDrumProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Processor
 793              		.align	1
 794              		.weak	_ZN5peaks10Processors16SnareDrumProcessEPKhPsj
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv5-d16
 800              	_ZN5peaks10Processors16SnareDrumProcessEPKhPsj:
 801              	.LVL60:
 802              	.LFB1611:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 803              		.loc 1 160 3 is_stmt 1 view -0
 804              		.cfi_startproc
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 26


 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 808              		.loc 1 160 3 view .LVU210
 809 0000 00F5EC70 		add	r0, r0, #472
 810              	.LVL61:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 811              		.loc 1 160 3 is_stmt 0 view .LVU211
 812 0004 FFF7FEBF 		b	_ZN5peaks9SnareDrum7ProcessEPKhPsj
 813              	.LVL62:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 814              		.loc 1 160 3 view .LVU212
 815              		.cfi_endproc
 816              	.LFE1611:
 818              		.section	.text._ZN5peaks10Processors13SnareDrumInitEv,"axG",%progbits,_ZN5peaks10Processors13Snare
 819              		.align	1
 820              		.weak	_ZN5peaks10Processors13SnareDrumInitEv
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv5-d16
 826              	_ZN5peaks10Processors13SnareDrumInitEv:
 827              	.LVL63:
 828              	.LFB1610:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 829              		.loc 1 160 3 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 834              		.loc 1 160 3 view .LVU214
 835 0000 00F5EC70 		add	r0, r0, #472
 836              	.LVL64:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 837              		.loc 1 160 3 is_stmt 0 view .LVU215
 838 0004 FFF7FEBF 		b	_ZN5peaks9SnareDrum4InitEv
 839              	.LVL65:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 840              		.loc 1 160 3 view .LVU216
 841              		.cfi_endproc
 842              	.LFE1610:
 844              		.section	.text._ZN5peaks10Processors15BassDrumProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Processors
 845              		.align	1
 846              		.weak	_ZN5peaks10Processors15BassDrumProcessEPKhPsj
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv5-d16
 852              	_ZN5peaks10Processors15BassDrumProcessEPKhPsj:
 853              	.LVL66:
 854              	.LFB1608:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 855              		.loc 1 159 3 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 27


 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 860              		.loc 1 159 3 view .LVU218
 861 0000 00F5B870 		add	r0, r0, #368
 862              	.LVL67:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 863              		.loc 1 159 3 is_stmt 0 view .LVU219
 864 0004 FFF7FEBF 		b	_ZN5peaks8BassDrum7ProcessEPKhPsj
 865              	.LVL68:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 866              		.loc 1 159 3 view .LVU220
 867              		.cfi_endproc
 868              	.LFE1608:
 870              		.section	.text._ZN5peaks10Processors12BassDrumInitEv,"axG",%progbits,_ZN5peaks10Processors12BassDr
 871              		.align	1
 872              		.weak	_ZN5peaks10Processors12BassDrumInitEv
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv5-d16
 878              	_ZN5peaks10Processors12BassDrumInitEv:
 879              	.LVL69:
 880              	.LFB1607:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 881              		.loc 1 159 3 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 886              		.loc 1 159 3 view .LVU222
 887 0000 00F5B870 		add	r0, r0, #368
 888              	.LVL70:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 889              		.loc 1 159 3 is_stmt 0 view .LVU223
 890 0004 FFF7FEBF 		b	_ZN5peaks8BassDrum4InitEv
 891              	.LVL71:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 892              		.loc 1 159 3 view .LVU224
 893              		.cfi_endproc
 894              	.LFE1607:
 896              		.section	.text._ZN5peaks10Processors10LfoProcessEPKhPsj,"axG",%progbits,_ZN5peaks10Processors10Lfo
 897              		.align	1
 898              		.weak	_ZN5peaks10Processors10LfoProcessEPKhPsj
 899              		.syntax unified
 900              		.thumb
 901              		.thumb_func
 902              		.fpu fpv5-d16
 904              	_ZN5peaks10Processors10LfoProcessEPKhPsj:
 905              	.LVL72:
 906              	.LFB1605:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 907              		.loc 1 158 3 is_stmt 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 28


 911              		@ link register save eliminated.
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 912              		.loc 1 158 3 view .LVU226
 913 0000 6830     		adds	r0, r0, #104
 914              	.LVL73:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 915              		.loc 1 158 3 is_stmt 0 view .LVU227
 916 0002 FFF7FEBF 		b	_ZN5peaks3Lfo7ProcessEPKhPsj
 917              	.LVL74:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 918              		.loc 1 158 3 view .LVU228
 919              		.cfi_endproc
 920              	.LFE1605:
 922              		.section	.text._ZN5peaks10Processors7LfoInitEv,"axG",%progbits,_ZN5peaks10Processors7LfoInitEv,com
 923              		.align	1
 924              		.weak	_ZN5peaks10Processors7LfoInitEv
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv5-d16
 930              	_ZN5peaks10Processors7LfoInitEv:
 931              	.LVL75:
 932              	.LFB1604:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 933              		.loc 1 158 3 is_stmt 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 938              		.loc 1 158 3 view .LVU230
 939 0000 6830     		adds	r0, r0, #104
 940              	.LVL76:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 941              		.loc 1 158 3 is_stmt 0 view .LVU231
 942 0002 FFF7FEBF 		b	_ZN5peaks3Lfo4InitEv
 943              	.LVL77:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 944              		.loc 1 158 3 view .LVU232
 945              		.cfi_endproc
 946              	.LFE1604:
 948              		.section	.text._ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj,"axG",%progbits,_ZN5peaks10
 949              		.align	1
 950              		.weak	_ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu fpv5-d16
 956              	_ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj:
 957              	.LVL78:
 958              	.LFB1602:
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 959              		.loc 1 157 3 is_stmt 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 29


 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 964              		.loc 1 157 3 view .LVU234
 965 0000 2430     		adds	r0, r0, #36
 966              	.LVL79:
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 967              		.loc 1 157 3 is_stmt 0 view .LVU235
 968 0002 FFF7FEBF 		b	_ZN5peaks18MultistageEnvelope7ProcessEPKhPsj
 969              	.LVL80:
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 970              		.loc 1 157 3 view .LVU236
 971              		.cfi_endproc
 972              	.LFE1602:
 974              		.section	.text._ZN5peaks10Processors22MultistageEnvelopeInitEv,"axG",%progbits,_ZN5peaks10Processo
 975              		.align	1
 976              		.weak	_ZN5peaks10Processors22MultistageEnvelopeInitEv
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu fpv5-d16
 982              	_ZN5peaks10Processors22MultistageEnvelopeInitEv:
 983              	.LVL81:
 984              	.LFB1601:
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 985              		.loc 1 157 3 is_stmt 1 view -0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 990              		.loc 1 157 3 view .LVU238
 991 0000 2430     		adds	r0, r0, #36
 992              	.LVL82:
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 993              		.loc 1 157 3 is_stmt 0 view .LVU239
 994 0002 FFF7FEBF 		b	_ZN5peaks18MultistageEnvelope4InitEv
 995              	.LVL83:
 157:processors.h  ****   DECLARE_PROCESSOR(Lfo, lfo_);
 996              		.loc 1 157 3 view .LVU240
 997              		.cfi_endproc
 998              	.LFE1601:
 1000              		.section	.text._ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE,"axG",%progbits,_ZN5peak
 1001              		.align	1
 1002              		.weak	_ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE
 1003              		.syntax unified
 1004              		.thumb
 1005              		.thumb_func
 1006              		.fpu fpv5-d16
 1008              	_ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE:
 1009              	.LVL84:
 1010              	.LFB1618:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 1011              		.loc 1 162 3 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 30


 1016              		.loc 1 162 3 view .LVU242
 1017              	.LBB615:
 1018              	.LBI615:
 1019              		.file 6 "drums/fm_drum.h"
   1:drums/fm_drum.h **** // Copyright 2013 Emilie Gillet.
   2:drums/fm_drum.h **** //
   3:drums/fm_drum.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:drums/fm_drum.h **** //
   5:drums/fm_drum.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:drums/fm_drum.h **** // of this software and associated documentation files (the "Software"), to deal
   7:drums/fm_drum.h **** // in the Software without restriction, including without limitation the rights
   8:drums/fm_drum.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:drums/fm_drum.h **** // copies of the Software, and to permit persons to whom the Software is
  10:drums/fm_drum.h **** // furnished to do so, subject to the following conditions:
  11:drums/fm_drum.h **** // 
  12:drums/fm_drum.h **** // The above copyright notice and this permission notice shall be included in
  13:drums/fm_drum.h **** // all copies or substantial portions of the Software.
  14:drums/fm_drum.h **** // 
  15:drums/fm_drum.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:drums/fm_drum.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:drums/fm_drum.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:drums/fm_drum.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:drums/fm_drum.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:drums/fm_drum.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:drums/fm_drum.h **** // THE SOFTWARE.
  22:drums/fm_drum.h **** // 
  23:drums/fm_drum.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:drums/fm_drum.h **** //
  25:drums/fm_drum.h **** // -----------------------------------------------------------------------------
  26:drums/fm_drum.h **** //
  27:drums/fm_drum.h **** // Sine FM drum - similar to the BD/SD in Anushri.
  28:drums/fm_drum.h **** 
  29:drums/fm_drum.h **** #ifndef PEAKS_DRUMS_FM_DRUM_H_
  30:drums/fm_drum.h **** #define PEAKS_DRUMS_FM_DRUM_H_
  31:drums/fm_drum.h **** 
  32:drums/fm_drum.h **** #include "stmlib/stmlib.h"
  33:drums/fm_drum.h **** 
  34:drums/fm_drum.h **** #include "gate_processor.h"
  35:drums/fm_drum.h **** 
  36:drums/fm_drum.h **** namespace peaks {
  37:drums/fm_drum.h **** 
  38:drums/fm_drum.h **** class FmDrum {
  39:drums/fm_drum.h ****  public:
  40:drums/fm_drum.h ****   FmDrum() { }
  41:drums/fm_drum.h ****   ~FmDrum() { }
  42:drums/fm_drum.h ****   
  43:drums/fm_drum.h ****   void Init();
  44:drums/fm_drum.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  45:drums/fm_drum.h **** 
  46:drums/fm_drum.h ****   void Morph(uint16_t x, uint16_t y);
  47:drums/fm_drum.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
 1020              		.loc 6 47 8 view .LVU243
 1021              	.LBB616:
  48:drums/fm_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1022              		.loc 6 48 5 view .LVU244
 1023 0000 012A     		cmp	r2, #1
 1024              	.LBE616:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 31


 1025              	.LBE615:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 1026              		.loc 1 162 3 is_stmt 0 view .LVU245
 1027 0002 10B4     		push	{r4}
 1028              		.cfi_def_cfa_offset 4
 1029              		.cfi_offset 4, -4
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 1030              		.loc 1 162 3 view .LVU246
 1031 0004 0C46     		mov	r4, r1
 1032              	.LBB643:
 1033              	.LBB639:
 1034              	.LBB617:
 1035              	.LBB618:
  49:drums/fm_drum.h ****       Morph(parameter[0], parameter[1]);
 1036              		.loc 6 49 12 view .LVU247
 1037 0006 0988     		ldrh	r1, [r1]
 1038              	.LVL85:
 1039              		.loc 6 49 12 view .LVU248
 1040              	.LBE618:
 1041              	.LBE617:
  48:drums/fm_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1042              		.loc 6 48 5 view .LVU249
 1043 0008 06D1     		bne	.L61
 1044              	.LVL86:
 1045              	.LBB621:
 1046              	.LBI617:
  47:drums/fm_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1047              		.loc 6 47 8 is_stmt 1 view .LVU250
 1048              	.LBB619:
 1049              		.loc 6 49 7 view .LVU251
 1050              		.loc 6 49 12 is_stmt 0 view .LVU252
 1051 000a 6288     		ldrh	r2, [r4, #2]
 1052              	.LVL87:
 1053              		.loc 6 49 12 view .LVU253
 1054 000c 00F54070 		add	r0, r0, #768
 1055              	.LVL88:
 1056              		.loc 6 49 12 view .LVU254
 1057              	.LBE619:
 1058              	.LBE621:
 1059              	.LBE639:
 1060              	.LBE643:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 1061              		.loc 1 162 3 view .LVU255
 1062 0010 5DF8044B 		ldr	r4, [sp], #4
 1063              		.cfi_remember_state
 1064              		.cfi_restore 4
 1065              		.cfi_def_cfa_offset 0
 1066              	.LVL89:
 1067              	.LBB644:
 1068              	.LBB640:
 1069              	.LBB622:
 1070              	.LBB620:
 1071              		.loc 6 49 12 view .LVU256
 1072 0014 FFF7FEBF 		b	_ZN5peaks6FmDrum5MorphEtt
 1073              	.LVL90:
 1074              	.L61:
 1075              		.cfi_restore_state
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 32


 1076              		.loc 6 49 12 view .LVU257
 1077              	.LBE620:
 1078              	.LBE622:
  50:drums/fm_drum.h ****     } else {
  51:drums/fm_drum.h ****       set_frequency(parameter[0]);
 1079              		.loc 6 51 7 is_stmt 1 view .LVU258
 1080              	.LBB623:
 1081              	.LBI623:
  52:drums/fm_drum.h ****       set_fm_amount((parameter[1] >> 2) * 3);
  53:drums/fm_drum.h ****       set_decay(parameter[2]);
  54:drums/fm_drum.h ****       set_noise(parameter[3]);
  55:drums/fm_drum.h ****     }
  56:drums/fm_drum.h ****   }
  57:drums/fm_drum.h ****   
  58:drums/fm_drum.h ****   inline void set_sd_range(bool sd_range) {
  59:drums/fm_drum.h ****     sd_range_ = sd_range;
  60:drums/fm_drum.h ****   }
  61:drums/fm_drum.h **** 
  62:drums/fm_drum.h ****   inline void set_frequency(uint16_t frequency) {
 1082              		.loc 6 62 15 view .LVU259
 1083              	.LBB624:
  63:drums/fm_drum.h ****     if (frequency <= 16384) {
 1084              		.loc 6 63 5 view .LVU260
 1085 0018 B1F5804F 		cmp	r1, #16384
 1086 001c 3FD8     		bhi	.L62
  64:drums/fm_drum.h ****       aux_envelope_strength_ = 1024;
 1087              		.loc 6 64 7 view .LVU261
 1088              		.loc 6 64 30 is_stmt 0 view .LVU262
 1089 001e 4FF48063 		mov	r3, #1024
 1090              	.L69:
  65:drums/fm_drum.h ****     } else if (frequency <= 32768) {
  66:drums/fm_drum.h ****       aux_envelope_strength_ = 2048 - (frequency >> 4);
  67:drums/fm_drum.h ****     } else {
  68:drums/fm_drum.h ****       aux_envelope_strength_ = 0;
 1091              		.loc 6 68 30 view .LVU263
 1092 0022 A0F80233 		strh	r3, [r0, #770]	@ movhi
 1093              	.LVL91:
  69:drums/fm_drum.h ****     }
  70:drums/fm_drum.h ****     frequency_ = (24 << 7) + ((72 << 7) * frequency >> 16);
 1094              		.loc 6 70 5 is_stmt 1 view .LVU264
 1095              		.loc 6 70 41 is_stmt 0 view .LVU265
 1096 0026 4FF41053 		mov	r3, #9216
 1097 002a 4B43     		muls	r3, r1, r3
 1098              		.loc 6 70 53 view .LVU266
 1099 002c 1B14     		asrs	r3, r3, #16
 1100              		.loc 6 70 28 view .LVU267
 1101 002e 03F54063 		add	r3, r3, #3072
 1102              		.loc 6 70 16 view .LVU268
 1103 0032 A0F80433 		strh	r3, [r0, #772]	@ movhi
 1104              	.LVL92:
 1105              		.loc 6 70 16 view .LVU269
 1106              	.LBE624:
 1107              	.LBE623:
  52:drums/fm_drum.h ****       set_decay(parameter[2]);
 1108              		.loc 6 52 7 is_stmt 1 view .LVU270
 1109              	.LBB626:
 1110              	.LBI626:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 33


  71:drums/fm_drum.h ****   }
  72:drums/fm_drum.h ****   
  73:drums/fm_drum.h ****   inline void set_fm_amount(uint16_t fm_amount) {
 1111              		.loc 6 73 15 view .LVU271
 1112              	.LBB627:
  74:drums/fm_drum.h ****     fm_amount_ = fm_amount >> 2;
 1113              		.loc 6 74 5 view .LVU272
 1114              	.LBE627:
 1115              	.LBE626:
  52:drums/fm_drum.h ****       set_decay(parameter[2]);
 1116              		.loc 6 52 35 is_stmt 0 view .LVU273
 1117 0036 6388     		ldrh	r3, [r4, #2]
 1118 0038 9B08     		lsrs	r3, r3, #2
 1119              	.LBB629:
 1120              	.LBB628:
 1121              		.loc 6 74 28 view .LVU274
 1122 003a 03EB4303 		add	r3, r3, r3, lsl #1
 1123 003e 9B08     		lsrs	r3, r3, #2
 1124              		.loc 6 74 16 view .LVU275
 1125 0040 A0F80633 		strh	r3, [r0, #774]	@ movhi
 1126              	.LVL93:
 1127              		.loc 6 74 16 view .LVU276
 1128              	.LBE628:
 1129              	.LBE629:
  53:drums/fm_drum.h ****       set_noise(parameter[3]);
 1130              		.loc 6 53 7 is_stmt 1 view .LVU277
  53:drums/fm_drum.h ****       set_noise(parameter[3]);
 1131              		.loc 6 53 16 is_stmt 0 view .LVU278
 1132 0044 A388     		ldrh	r3, [r4, #4]
 1133              	.LVL94:
 1134              	.LBB630:
 1135              	.LBI630:
  75:drums/fm_drum.h ****   }
  76:drums/fm_drum.h **** 
  77:drums/fm_drum.h ****   inline void set_decay(uint16_t decay) {
 1136              		.loc 6 77 15 is_stmt 1 view .LVU279
 1137              	.LBB631:
  78:drums/fm_drum.h ****     am_decay_ = 16384 + (decay >> 1);
 1138              		.loc 6 78 5 view .LVU280
 1139              		.loc 6 78 32 is_stmt 0 view .LVU281
 1140 0046 5A08     		lsrs	r2, r3, #1
 1141              	.LVL95:
  79:drums/fm_drum.h ****     fm_decay_ = 8192 + (decay >> 2);
 1142              		.loc 6 79 31 view .LVU282
 1143 0048 9B08     		lsrs	r3, r3, #2
 1144              	.LVL96:
  78:drums/fm_drum.h ****     am_decay_ = 16384 + (decay >> 1);
 1145              		.loc 6 78 23 view .LVU283
 1146 004a 02F58042 		add	r2, r2, #16384
 1147              		.loc 6 79 22 view .LVU284
 1148 004e 03F50053 		add	r3, r3, #8192
  78:drums/fm_drum.h ****     am_decay_ = 16384 + (decay >> 1);
 1149              		.loc 6 78 15 view .LVU285
 1150 0052 A0F80823 		strh	r2, [r0, #776]	@ movhi
 1151              	.LVL97:
 1152              		.loc 6 79 5 is_stmt 1 view .LVU286
 1153              		.loc 6 79 15 is_stmt 0 view .LVU287
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 34


 1154 0056 A0F80A33 		strh	r3, [r0, #778]	@ movhi
 1155              	.LVL98:
 1156              		.loc 6 79 15 view .LVU288
 1157              	.LBE631:
 1158              	.LBE630:
  54:drums/fm_drum.h ****     }
 1159              		.loc 6 54 7 is_stmt 1 view .LVU289
 1160              	.LBB632:
 1161              	.LBB633:
  80:drums/fm_drum.h ****   }
  81:drums/fm_drum.h ****   
  82:drums/fm_drum.h ****   inline void set_noise(uint16_t noise) {
  83:drums/fm_drum.h ****     uint32_t n = noise;
  84:drums/fm_drum.h ****     noise_ = noise >= 32768 ? ((n - 32768) * (n - 32768) >> 15) : 0;
 1162              		.loc 6 84 20 is_stmt 0 view .LVU290
 1163 005a B4F90610 		ldrsh	r1, [r4, #6]
 1164              	.LBE633:
 1165              	.LBE632:
  54:drums/fm_drum.h ****     }
 1166              		.loc 6 54 16 view .LVU291
 1167 005e E388     		ldrh	r3, [r4, #6]
 1168              	.LVL99:
 1169              	.LBB636:
 1170              	.LBI632:
  82:drums/fm_drum.h ****     uint32_t n = noise;
 1171              		.loc 6 82 15 is_stmt 1 view .LVU292
 1172              	.LBB634:
  83:drums/fm_drum.h ****     noise_ = noise >= 32768 ? ((n - 32768) * (n - 32768) >> 15) : 0;
 1173              		.loc 6 83 5 view .LVU293
 1174              		.loc 6 84 5 view .LVU294
 1175              		.loc 6 84 12 is_stmt 0 view .LVU295
 1176 0060 0029     		cmp	r1, #0
 1177              	.LBE634:
 1178              	.LBE636:
 1179              	.LBE640:
 1180              	.LBE644:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 1181              		.loc 1 162 3 view .LVU296
 1182 0062 5DF8044B 		ldr	r4, [sp], #4
 1183              		.cfi_remember_state
 1184              		.cfi_restore 4
 1185              		.cfi_def_cfa_offset 0
 1186              	.LVL100:
 1187              	.LBB645:
 1188              	.LBB641:
 1189              	.LBB637:
 1190              	.LBB635:
 1191              		.loc 6 84 35 view .LVU297
 1192 0066 B7BF     		itett	lt
 1193 0068 A3F50042 		sublt	r2, r3, #32768
 1194              		.loc 6 84 12 view .LVU298
 1195 006c 0022     		movge	r2, #0
  85:drums/fm_drum.h ****     noise_ = (noise_ >> 2) * 5;
 1196              		.loc 6 85 5 is_stmt 1 view .LVU299
  84:drums/fm_drum.h ****     noise_ = (noise_ >> 2) * 5;
 1197              		.loc 6 84 44 is_stmt 0 view .LVU300
 1198 006e 5243     		mullt	r2, r2, r2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 35


  84:drums/fm_drum.h ****     noise_ = (noise_ >> 2) * 5;
 1199              		.loc 6 84 12 view .LVU301
 1200 0070 C2F3CF32 		ubfxlt	r2, r2, #15, #16
  86:drums/fm_drum.h ****     overdrive_ = noise <= 32767 ? ((32767 - n) * (32767 - n) >> 14) : 0;
 1201              		.loc 6 86 16 view .LVU302
 1202 0074 0029     		cmp	r1, #0
 1203              		.loc 6 86 43 view .LVU303
 1204 0076 A8BF     		it	ge
 1205 0078 C3F5FF43 		rsbge	r3, r3, #32640
 1206              	.LVL101:
  85:drums/fm_drum.h ****     noise_ = (noise_ >> 2) * 5;
 1207              		.loc 6 85 22 view .LVU304
 1208 007c 4FEA9202 		lsr	r2, r2, #2
 1209              		.loc 6 86 16 view .LVU305
 1210 0080 B4BF     		ite	lt
 1211 0082 0023     		movlt	r3, #0
 1212              		.loc 6 86 43 view .LVU306
 1213 0084 7F33     		addge	r3, r3, #127
  85:drums/fm_drum.h ****     noise_ = (noise_ >> 2) * 5;
 1214              		.loc 6 85 12 view .LVU307
 1215 0086 02EB8202 		add	r2, r2, r2, lsl #2
 1216              		.loc 6 86 48 view .LVU308
 1217 008a A8BF     		it	ge
 1218 008c 5B43     		mulge	r3, r3, r3
  85:drums/fm_drum.h ****     noise_ = (noise_ >> 2) * 5;
 1219              		.loc 6 85 12 view .LVU309
 1220 008e A0F80C23 		strh	r2, [r0, #780]	@ movhi
 1221              		.loc 6 86 5 is_stmt 1 view .LVU310
 1222              		.loc 6 86 16 is_stmt 0 view .LVU311
 1223 0092 A8BF     		it	ge
 1224 0094 C3F38F33 		ubfxge	r3, r3, #14, #16
 1225 0098 A0F80E33 		strh	r3, [r0, #782]	@ movhi
 1226              	.LVL102:
 1227              		.loc 6 86 16 view .LVU312
 1228              	.LBE635:
 1229              	.LBE637:
 1230              	.LBE641:
 1231              	.LBE645:
 162:processors.h  ****   DECLARE_PROCESSOR(PulseShaper, pulse_shaper_);
 1232              		.loc 1 162 3 view .LVU313
 1233 009c 7047     		bx	lr
 1234              	.LVL103:
 1235              	.L62:
 1236              		.cfi_restore_state
 1237              	.LBB646:
 1238              	.LBB642:
 1239              	.LBB638:
 1240              	.LBB625:
  65:drums/fm_drum.h ****       aux_envelope_strength_ = 2048 - (frequency >> 4);
 1241              		.loc 6 65 12 is_stmt 1 view .LVU314
 1242 009e B1F5004F 		cmp	r1, #32768
  66:drums/fm_drum.h ****     } else {
 1243              		.loc 6 66 7 view .LVU315
  66:drums/fm_drum.h ****     } else {
 1244              		.loc 6 66 50 is_stmt 0 view .LVU316
 1245 00a2 96BF     		itet	ls
 1246 00a4 0B09     		lsrls	r3, r1, #4
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 36


  68:drums/fm_drum.h ****     }
 1247              		.loc 6 68 30 view .LVU317
 1248 00a6 0023     		movhi	r3, #0
  66:drums/fm_drum.h ****     } else {
 1249              		.loc 6 66 37 view .LVU318
 1250 00a8 C3F50063 		rsbls	r3, r3, #2048
  68:drums/fm_drum.h ****     }
 1251              		.loc 6 68 7 is_stmt 1 view .LVU319
 1252 00ac B9E7     		b	.L69
 1253              	.LBE625:
 1254              	.LBE638:
 1255              	.LBE642:
 1256              	.LBE646:
 1257              		.cfi_endproc
 1258              	.LFE1618:
 1260              		.section	.text._ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE,"axG",%progbits,_ZN5peaks10
 1261              		.align	1
 1262              		.weak	_ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE
 1263              		.syntax unified
 1264              		.thumb
 1265              		.thumb_func
 1266              		.fpu fpv5-d16
 1268              	_ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE:
 1269              	.LVL104:
 1270              	.LFB1606:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 1271              		.loc 1 158 3 view -0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              	.LBB699:
 1276              	.LBB700:
 1277              		.file 7 "modulations/lfo.h"
   1:modulations/lfo.h **** // Copyright 2013 Emilie Gillet.
   2:modulations/lfo.h **** //
   3:modulations/lfo.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:modulations/lfo.h **** //
   5:modulations/lfo.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:modulations/lfo.h **** // of this software and associated documentation files (the "Software"), to deal
   7:modulations/lfo.h **** // in the Software without restriction, including without limitation the rights
   8:modulations/lfo.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:modulations/lfo.h **** // copies of the Software, and to permit persons to whom the Software is
  10:modulations/lfo.h **** // furnished to do so, subject to the following conditions:
  11:modulations/lfo.h **** // 
  12:modulations/lfo.h **** // The above copyright notice and this permission notice shall be included in
  13:modulations/lfo.h **** // all copies or substantial portions of the Software.
  14:modulations/lfo.h **** // 
  15:modulations/lfo.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:modulations/lfo.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:modulations/lfo.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:modulations/lfo.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:modulations/lfo.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:modulations/lfo.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:modulations/lfo.h **** // THE SOFTWARE.
  22:modulations/lfo.h **** // 
  23:modulations/lfo.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:modulations/lfo.h **** //
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 37


  25:modulations/lfo.h **** // -----------------------------------------------------------------------------
  26:modulations/lfo.h **** //
  27:modulations/lfo.h **** // LFO.
  28:modulations/lfo.h **** 
  29:modulations/lfo.h **** #ifndef PEAKS_MODULATIONS_LFO_H_
  30:modulations/lfo.h **** #define PEAKS_MODULATIONS_LFO_H_
  31:modulations/lfo.h **** 
  32:modulations/lfo.h **** #include "stmlib/stmlib.h"
  33:modulations/lfo.h **** #include "stmlib/algorithms/pattern_predictor.h"
  34:modulations/lfo.h **** 
  35:modulations/lfo.h **** #include "gate_processor.h"
  36:modulations/lfo.h **** 
  37:modulations/lfo.h **** namespace peaks {
  38:modulations/lfo.h **** 
  39:modulations/lfo.h **** enum LfoShape {
  40:modulations/lfo.h ****   LFO_SHAPE_SINE,
  41:modulations/lfo.h ****   LFO_SHAPE_TRIANGLE,
  42:modulations/lfo.h ****   LFO_SHAPE_SQUARE,
  43:modulations/lfo.h ****   LFO_SHAPE_STEPS,
  44:modulations/lfo.h ****   LFO_SHAPE_NOISE,
  45:modulations/lfo.h ****   LFO_SHAPE_LAST
  46:modulations/lfo.h **** };
  47:modulations/lfo.h **** 
  48:modulations/lfo.h **** class Lfo {
  49:modulations/lfo.h ****  public:
  50:modulations/lfo.h ****   typedef int16_t (Lfo::*ComputeSampleFn)();
  51:modulations/lfo.h ****    
  52:modulations/lfo.h ****   Lfo() { }
  53:modulations/lfo.h ****   ~Lfo() { }
  54:modulations/lfo.h ****   
  55:modulations/lfo.h ****   void Init();
  56:modulations/lfo.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  57:modulations/lfo.h ****   
  58:modulations/lfo.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
  59:modulations/lfo.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1278              		.loc 7 59 5 is_stmt 0 view .LVU321
 1279 0000 012A     		cmp	r2, #1
  60:modulations/lfo.h ****       if (sync_) {
  61:modulations/lfo.h ****         set_shape_integer(parameter[0]);
 1280              		.loc 7 61 26 view .LVU322
 1281 0002 0B88     		ldrh	r3, [r1]
 1282              	.LBE700:
 1283              	.LBE699:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 1284              		.loc 1 158 3 view .LVU323
 1285 0004 10B5     		push	{r4, lr}
 1286              		.cfi_def_cfa_offset 8
 1287              		.cfi_offset 4, -8
 1288              		.cfi_offset 14, -4
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 1289              		.loc 1 158 3 view .LVU324
 1290 0006 0446     		mov	r4, r0
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 1291              		.loc 1 158 3 is_stmt 1 view .LVU325
 1292              	.LVL105:
 1293              	.LBB740:
 1294              	.LBI699:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 38


  58:modulations/lfo.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1295              		.loc 7 58 8 view .LVU326
 1296              	.LBB737:
  59:modulations/lfo.h ****       if (sync_) {
 1297              		.loc 7 59 5 view .LVU327
  60:modulations/lfo.h ****         set_shape_integer(parameter[0]);
 1298              		.loc 7 60 11 is_stmt 0 view .LVU328
 1299 0008 90F87800 		ldrb	r0, [r0, #120]	@ zero_extendqisi2
 1300              	.LVL106:
  59:modulations/lfo.h ****       if (sync_) {
 1301              		.loc 7 59 5 view .LVU329
 1302 000c 17D1     		bne	.L71
  60:modulations/lfo.h ****         set_shape_integer(parameter[0]);
 1303              		.loc 7 60 7 is_stmt 1 view .LVU330
 1304 000e 78B1     		cbz	r0, .L72
 1305              		.loc 7 61 9 view .LVU331
 1306              	.LVL107:
 1307              	.LBB701:
 1308              	.LBI701:
  62:modulations/lfo.h ****         set_parameter(parameter[1] - 32768);
  63:modulations/lfo.h ****       } else {
  64:modulations/lfo.h ****         set_rate(parameter[0]);
  65:modulations/lfo.h ****         set_shape_parameter_preset(parameter[1]);
  66:modulations/lfo.h ****       }
  67:modulations/lfo.h ****       set_reset_phase(0);
  68:modulations/lfo.h ****       set_level(40960);
  69:modulations/lfo.h ****     } else {
  70:modulations/lfo.h ****       if (sync_) {
  71:modulations/lfo.h ****         set_level(parameter[0]);
  72:modulations/lfo.h ****         set_shape_integer(parameter[1]);
  73:modulations/lfo.h ****         set_parameter(parameter[2] - 32768);
  74:modulations/lfo.h ****         set_reset_phase(parameter[3] - 32768);
  75:modulations/lfo.h ****       } else {
  76:modulations/lfo.h ****         set_level(40960);
  77:modulations/lfo.h ****         set_rate(parameter[0]);
  78:modulations/lfo.h ****         set_shape_integer(parameter[1]);
  79:modulations/lfo.h ****         set_parameter(parameter[2] - 32768);
  80:modulations/lfo.h ****         set_reset_phase(parameter[3] - 32768);
  81:modulations/lfo.h ****       }
  82:modulations/lfo.h ****     }
  83:modulations/lfo.h ****   }
  84:modulations/lfo.h ****   
  85:modulations/lfo.h ****   inline void set_rate(uint16_t rate) {
  86:modulations/lfo.h ****     rate_ = rate;
  87:modulations/lfo.h ****   }
  88:modulations/lfo.h ****   
  89:modulations/lfo.h ****   inline void set_shape(LfoShape shape) {
  90:modulations/lfo.h ****     shape_ = shape;
  91:modulations/lfo.h ****   }
  92:modulations/lfo.h **** 
  93:modulations/lfo.h ****   inline void set_shape_integer(uint16_t value) {
 1309              		.loc 7 93 15 view .LVU332
 1310              	.LBB702:
  94:modulations/lfo.h ****     shape_ = static_cast<LfoShape>(value * LFO_SHAPE_LAST >> 16);
 1311              		.loc 7 94 5 view .LVU333
 1312              		.loc 7 94 42 is_stmt 0 view .LVU334
 1313 0010 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 39


 1314              		.loc 7 94 59 view .LVU335
 1315 0014 1B14     		asrs	r3, r3, #16
 1316              		.loc 7 94 14 view .LVU336
 1317 0016 84F86A30 		strb	r3, [r4, #106]
 1318              	.LVL108:
 1319              		.loc 7 94 14 view .LVU337
 1320              	.LBE702:
 1321              	.LBE701:
  62:modulations/lfo.h ****         set_parameter(parameter[1] - 32768);
 1322              		.loc 7 62 9 is_stmt 1 view .LVU338
 1323              	.LBB703:
 1324              	.LBI703:
  95:modulations/lfo.h ****   }
  96:modulations/lfo.h ****   
  97:modulations/lfo.h ****   void set_shape_parameter_preset(uint16_t value);
  98:modulations/lfo.h ****   
  99:modulations/lfo.h ****   inline void set_parameter(int16_t parameter) {
 1325              		.loc 7 99 15 view .LVU339
 1326              	.LBB704:
 100:modulations/lfo.h ****     parameter_ = parameter;
 1327              		.loc 7 100 5 view .LVU340
 1328              	.LBE704:
 1329              	.LBE703:
  62:modulations/lfo.h ****       } else {
 1330              		.loc 7 62 36 is_stmt 0 view .LVU341
 1331 001a 4B88     		ldrh	r3, [r1, #2]
 1332 001c A3F50043 		sub	r3, r3, #32768
 1333              	.LBB706:
 1334              	.LBB705:
 1335              		.loc 7 100 16 view .LVU342
 1336 0020 A4F86C30 		strh	r3, [r4, #108]	@ movhi
 1337              	.LVL109:
 1338              	.L73:
 1339              		.loc 7 100 16 view .LVU343
 1340              	.LBE705:
 1341              	.LBE706:
  67:modulations/lfo.h ****       set_level(40960);
 1342              		.loc 7 67 7 is_stmt 1 view .LVU344
 1343              	.LBB707:
 1344              	.LBI707:
 101:modulations/lfo.h ****   }
 102:modulations/lfo.h ****   
 103:modulations/lfo.h ****   inline void set_reset_phase(int16_t reset_phase) {
 1345              		.loc 7 103 15 view .LVU345
 1346              	.LBB708:
 104:modulations/lfo.h ****     reset_phase_ = static_cast<int32_t>(reset_phase) << 16;
 1347              		.loc 7 104 5 view .LVU346
 1348              	.LBE708:
 1349              	.LBE707:
 1350              	.LBB709:
 1351              	.LBB710:
 105:modulations/lfo.h ****   }
 106:modulations/lfo.h ****   
 107:modulations/lfo.h ****   inline void set_sync(bool sync) {
 108:modulations/lfo.h ****     if (!sync_ && sync) {
 109:modulations/lfo.h ****       pattern_predictor_.Init();
 110:modulations/lfo.h ****     }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 40


 111:modulations/lfo.h ****     sync_ = sync;
 112:modulations/lfo.h ****   }
 113:modulations/lfo.h ****   
 114:modulations/lfo.h ****   inline void set_level(uint16_t level) {
 115:modulations/lfo.h ****     level_ = level >> 1;
 1352              		.loc 7 115 12 is_stmt 0 view .LVU347
 1353 0024 0022     		movs	r2, #0
 1354 0026 4FF4A043 		mov	r3, #20480
 1355 002a C4E91C23 		strd	r2, r3, [r4, #112]
 1356              	.LVL110:
 1357              	.L70:
 1358              		.loc 7 115 12 view .LVU348
 1359              	.LBE710:
 1360              	.LBE709:
 1361              	.LBE737:
 1362              	.LBE740:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 1363              		.loc 1 158 3 view .LVU349
 1364 002e 10BD     		pop	{r4, pc}
 1365              	.LVL111:
 1366              	.L72:
 1367              	.LBB741:
 1368              	.LBB738:
  64:modulations/lfo.h ****         set_shape_parameter_preset(parameter[1]);
 1369              		.loc 7 64 9 is_stmt 1 view .LVU350
 1370              	.LBB711:
 1371              	.LBI711:
  85:modulations/lfo.h ****     rate_ = rate;
 1372              		.loc 7 85 15 view .LVU351
 1373              	.LBB712:
  86:modulations/lfo.h ****   }
 1374              		.loc 7 86 5 view .LVU352
  86:modulations/lfo.h ****   }
 1375              		.loc 7 86 11 is_stmt 0 view .LVU353
 1376 0030 2046     		mov	r0, r4
 1377 0032 20F8683F 		strh	r3, [r0, #104]!	@ movhi
 1378              	.LVL112:
  86:modulations/lfo.h ****   }
 1379              		.loc 7 86 11 view .LVU354
 1380              	.LBE712:
 1381              	.LBE711:
  65:modulations/lfo.h ****       }
 1382              		.loc 7 65 9 is_stmt 1 view .LVU355
  65:modulations/lfo.h ****       }
 1383              		.loc 7 65 35 is_stmt 0 view .LVU356
 1384 0036 4988     		ldrh	r1, [r1, #2]
 1385              	.LVL113:
  65:modulations/lfo.h ****       }
 1386              		.loc 7 65 35 view .LVU357
 1387 0038 FFF7FEFF 		bl	_ZN5peaks3Lfo26set_shape_parameter_presetEt
 1388              	.LVL114:
  65:modulations/lfo.h ****       }
 1389              		.loc 7 65 35 view .LVU358
 1390 003c F2E7     		b	.L73
 1391              	.LVL115:
 1392              	.L71:
  70:modulations/lfo.h ****         set_level(parameter[0]);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 41


 1393              		.loc 7 70 7 is_stmt 1 view .LVU359
 1394 003e 90B1     		cbz	r0, .L75
 1395              	.LVL116:
 1396              	.LBB713:
 1397              	.LBI713:
  58:modulations/lfo.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1398              		.loc 7 58 8 view .LVU360
 1399              	.LBB714:
  71:modulations/lfo.h ****         set_shape_integer(parameter[1]);
 1400              		.loc 7 71 9 view .LVU361
 1401              	.LBB715:
 1402              	.LBI715:
 114:modulations/lfo.h ****     level_ = level >> 1;
 1403              		.loc 7 114 15 view .LVU362
 1404              	.LBB716:
 1405              		.loc 7 115 5 view .LVU363
 1406              		.loc 7 115 20 is_stmt 0 view .LVU364
 1407 0040 5B08     		lsrs	r3, r3, #1
 1408 0042 6367     		str	r3, [r4, #116]
 1409              	.LVL117:
 1410              		.loc 7 115 20 view .LVU365
 1411              	.LBE716:
 1412              	.LBE715:
  72:modulations/lfo.h ****         set_parameter(parameter[2] - 32768);
 1413              		.loc 7 72 9 is_stmt 1 view .LVU366
 1414              	.LBB717:
 1415              	.LBI717:
  93:modulations/lfo.h ****     shape_ = static_cast<LfoShape>(value * LFO_SHAPE_LAST >> 16);
 1416              		.loc 7 93 15 view .LVU367
 1417              	.LBB718:
  94:modulations/lfo.h ****   }
 1418              		.loc 7 94 5 view .LVU368
 1419              	.L76:
  94:modulations/lfo.h ****   }
 1420              		.loc 7 94 5 is_stmt 0 view .LVU369
 1421              	.LBE718:
 1422              	.LBE717:
 1423              	.LBE714:
 1424              	.LBE713:
  78:modulations/lfo.h ****         set_parameter(parameter[2] - 32768);
 1425              		.loc 7 78 9 is_stmt 1 view .LVU370
 1426              	.LBB719:
 1427              	.LBI719:
  93:modulations/lfo.h ****     shape_ = static_cast<LfoShape>(value * LFO_SHAPE_LAST >> 16);
 1428              		.loc 7 93 15 view .LVU371
 1429              	.LBB720:
  94:modulations/lfo.h ****   }
 1430              		.loc 7 94 5 view .LVU372
  94:modulations/lfo.h ****   }
 1431              		.loc 7 94 36 is_stmt 0 view .LVU373
 1432 0044 4B88     		ldrh	r3, [r1, #2]
  94:modulations/lfo.h ****   }
 1433              		.loc 7 94 42 view .LVU374
 1434 0046 03EB8303 		add	r3, r3, r3, lsl #2
  94:modulations/lfo.h ****   }
 1435              		.loc 7 94 59 view .LVU375
 1436 004a 1B14     		asrs	r3, r3, #16
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 42


  94:modulations/lfo.h ****   }
 1437              		.loc 7 94 14 view .LVU376
 1438 004c 84F86A30 		strb	r3, [r4, #106]
 1439              	.LVL118:
  94:modulations/lfo.h ****   }
 1440              		.loc 7 94 14 view .LVU377
 1441              	.LBE720:
 1442              	.LBE719:
  79:modulations/lfo.h ****         set_reset_phase(parameter[3] - 32768);
 1443              		.loc 7 79 9 is_stmt 1 view .LVU378
 1444              	.LBB721:
 1445              	.LBI721:
  99:modulations/lfo.h ****     parameter_ = parameter;
 1446              		.loc 7 99 15 view .LVU379
 1447              	.LBB722:
 100:modulations/lfo.h ****   }
 1448              		.loc 7 100 5 view .LVU380
 1449              	.LBE722:
 1450              	.LBE721:
  79:modulations/lfo.h ****         set_reset_phase(parameter[3] - 32768);
 1451              		.loc 7 79 36 is_stmt 0 view .LVU381
 1452 0050 8B88     		ldrh	r3, [r1, #4]
 1453 0052 A3F50043 		sub	r3, r3, #32768
 1454              	.LBB724:
 1455              	.LBB723:
 100:modulations/lfo.h ****   }
 1456              		.loc 7 100 16 view .LVU382
 1457 0056 A4F86C30 		strh	r3, [r4, #108]	@ movhi
 1458              	.LVL119:
 100:modulations/lfo.h ****   }
 1459              		.loc 7 100 16 view .LVU383
 1460              	.LBE723:
 1461              	.LBE724:
  80:modulations/lfo.h ****       }
 1462              		.loc 7 80 9 is_stmt 1 view .LVU384
 1463              	.LBB725:
 1464              	.LBI725:
 103:modulations/lfo.h ****     reset_phase_ = static_cast<int32_t>(reset_phase) << 16;
 1465              		.loc 7 103 15 view .LVU385
 1466              	.LBB726:
 104:modulations/lfo.h ****   }
 1467              		.loc 7 104 5 view .LVU386
 1468              	.LBE726:
 1469              	.LBE725:
  80:modulations/lfo.h ****       }
 1470              		.loc 7 80 38 is_stmt 0 view .LVU387
 1471 005a CB88     		ldrh	r3, [r1, #6]
 1472 005c A3F50043 		sub	r3, r3, #32768
 1473              	.LBB728:
 1474              	.LBB727:
 104:modulations/lfo.h ****   }
 1475              		.loc 7 104 54 view .LVU388
 1476 0060 1B04     		lsls	r3, r3, #16
 104:modulations/lfo.h ****   }
 1477              		.loc 7 104 18 view .LVU389
 1478 0062 2367     		str	r3, [r4, #112]
 1479              	.LVL120:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 43


 104:modulations/lfo.h ****   }
 1480              		.loc 7 104 18 view .LVU390
 1481              	.LBE727:
 1482              	.LBE728:
 1483              	.LBE738:
 1484              	.LBE741:
 158:processors.h  ****   DECLARE_PROCESSOR(BassDrum, bass_drum_);
 1485              		.loc 1 158 3 view .LVU391
 1486 0064 E3E7     		b	.L70
 1487              	.LVL121:
 1488              	.L75:
 1489              	.LBB742:
 1490              	.LBB739:
  76:modulations/lfo.h ****         set_rate(parameter[0]);
 1491              		.loc 7 76 9 is_stmt 1 view .LVU392
 1492              	.LBB729:
 1493              	.LBI729:
 114:modulations/lfo.h ****     level_ = level >> 1;
 1494              		.loc 7 114 15 view .LVU393
 1495              	.LBB730:
 1496              		.loc 7 115 5 view .LVU394
 1497              		.loc 7 115 12 is_stmt 0 view .LVU395
 1498 0066 4FF4A042 		mov	r2, #20480
 1499              	.LVL122:
 1500              		.loc 7 115 12 view .LVU396
 1501              	.LBE730:
 1502              	.LBE729:
 1503              	.LBB732:
 1504              	.LBB733:
  86:modulations/lfo.h ****   }
 1505              		.loc 7 86 11 view .LVU397
 1506 006a A4F86830 		strh	r3, [r4, #104]	@ movhi
 1507              	.LBE733:
 1508              	.LBE732:
 1509              	.LBB735:
 1510              	.LBB731:
 1511              		.loc 7 115 12 view .LVU398
 1512 006e 6267     		str	r2, [r4, #116]
 1513              	.LVL123:
 1514              		.loc 7 115 12 view .LVU399
 1515              	.LBE731:
 1516              	.LBE735:
  77:modulations/lfo.h ****         set_shape_integer(parameter[1]);
 1517              		.loc 7 77 9 is_stmt 1 view .LVU400
 1518              	.LBB736:
 1519              	.LBI732:
  85:modulations/lfo.h ****     rate_ = rate;
 1520              		.loc 7 85 15 view .LVU401
 1521              	.LBB734:
  86:modulations/lfo.h ****   }
 1522              		.loc 7 86 5 view .LVU402
 1523 0070 E8E7     		b	.L76
 1524              	.LBE734:
 1525              	.LBE736:
 1526              	.LBE739:
 1527              	.LBE742:
 1528              		.cfi_endproc
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 44


 1529              	.LFE1606:
 1531              		.section	.text._ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE,"axG",%progbits,_ZN
 1532              		.align	1
 1533              		.weak	_ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1537              		.fpu fpv5-d16
 1539              	_ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE:
 1540              	.LVL124:
 1541              	.LFB1621:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 1542              		.loc 1 163 3 view -0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546              		@ link register save eliminated.
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 1547              		.loc 1 163 3 view .LVU404
 1548              	.LBB771:
 1549              	.LBI771:
 1550              		.file 8 "pulse_processor/pulse_shaper.h"
   1:pulse_processor/pulse_shaper.h **** // Copyright 2013 Emilie Gillet.
   2:pulse_processor/pulse_shaper.h **** //
   3:pulse_processor/pulse_shaper.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:pulse_processor/pulse_shaper.h **** //
   5:pulse_processor/pulse_shaper.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:pulse_processor/pulse_shaper.h **** // of this software and associated documentation files (the "Software"), to deal
   7:pulse_processor/pulse_shaper.h **** // in the Software without restriction, including without limitation the rights
   8:pulse_processor/pulse_shaper.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:pulse_processor/pulse_shaper.h **** // copies of the Software, and to permit persons to whom the Software is
  10:pulse_processor/pulse_shaper.h **** // furnished to do so, subject to the following conditions:
  11:pulse_processor/pulse_shaper.h **** // 
  12:pulse_processor/pulse_shaper.h **** // The above copyright notice and this permission notice shall be included in
  13:pulse_processor/pulse_shaper.h **** // all copies or substantial portions of the Software.
  14:pulse_processor/pulse_shaper.h **** // 
  15:pulse_processor/pulse_shaper.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:pulse_processor/pulse_shaper.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:pulse_processor/pulse_shaper.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:pulse_processor/pulse_shaper.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:pulse_processor/pulse_shaper.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:pulse_processor/pulse_shaper.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:pulse_processor/pulse_shaper.h **** // THE SOFTWARE.
  22:pulse_processor/pulse_shaper.h **** // 
  23:pulse_processor/pulse_shaper.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:pulse_processor/pulse_shaper.h **** //
  25:pulse_processor/pulse_shaper.h **** // -----------------------------------------------------------------------------
  26:pulse_processor/pulse_shaper.h **** //
  27:pulse_processor/pulse_shaper.h **** // Trigger to gate converter with pre-delay, duration, and repetitions.
  28:pulse_processor/pulse_shaper.h **** 
  29:pulse_processor/pulse_shaper.h **** #ifndef PEAKS_PULSE_PROCESSOR_PULSE_SHAPER_H_
  30:pulse_processor/pulse_shaper.h **** #define PEAKS_PULSE_PROCESSOR_PULSE_SHAPER_H_
  31:pulse_processor/pulse_shaper.h **** 
  32:pulse_processor/pulse_shaper.h **** #include "stmlib/stmlib.h"
  33:pulse_processor/pulse_shaper.h **** #include "stmlib/utils/ring_buffer.h"
  34:pulse_processor/pulse_shaper.h **** 
  35:pulse_processor/pulse_shaper.h **** #include "gate_processor.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 45


  36:pulse_processor/pulse_shaper.h **** 
  37:pulse_processor/pulse_shaper.h **** namespace peaks {
  38:pulse_processor/pulse_shaper.h **** 
  39:pulse_processor/pulse_shaper.h **** struct Pulse {
  40:pulse_processor/pulse_shaper.h ****   uint16_t initial_delay_counter;
  41:pulse_processor/pulse_shaper.h ****   uint16_t duration_counter;
  42:pulse_processor/pulse_shaper.h ****   uint16_t delay_counter;
  43:pulse_processor/pulse_shaper.h ****   uint16_t repetition_counter;
  44:pulse_processor/pulse_shaper.h **** };
  45:pulse_processor/pulse_shaper.h **** 
  46:pulse_processor/pulse_shaper.h **** static const uint8_t kPulseBufferSize = 32;
  47:pulse_processor/pulse_shaper.h **** 
  48:pulse_processor/pulse_shaper.h **** class PulseShaper {
  49:pulse_processor/pulse_shaper.h ****  public:
  50:pulse_processor/pulse_shaper.h ****   PulseShaper() { }
  51:pulse_processor/pulse_shaper.h ****   ~PulseShaper() { }
  52:pulse_processor/pulse_shaper.h ****   
  53:pulse_processor/pulse_shaper.h ****   void Init();
  54:pulse_processor/pulse_shaper.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  55:pulse_processor/pulse_shaper.h ****   
  56:pulse_processor/pulse_shaper.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
 1551              		.loc 8 56 8 view .LVU405
 1552              	.LBB772:
  57:pulse_processor/pulse_shaper.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1553              		.loc 8 57 5 view .LVU406
 1554 0000 012A     		cmp	r2, #1
 1555 0002 11D1     		bne	.L78
 1556              	.LVL125:
 1557              	.LBB773:
 1558              	.LBI773:
  56:pulse_processor/pulse_shaper.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1559              		.loc 8 56 8 view .LVU407
 1560              	.LBB774:
  58:pulse_processor/pulse_shaper.h ****       set_initial_delay(0);
 1561              		.loc 8 58 7 view .LVU408
 1562              	.LBB775:
 1563              	.LBI775:
  59:pulse_processor/pulse_shaper.h ****       set_duration(parameter[0] >> 1);
  60:pulse_processor/pulse_shaper.h ****       set_delay((parameter[0] >> 1) + 2048);
  61:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[1]);
  62:pulse_processor/pulse_shaper.h ****     } else {
  63:pulse_processor/pulse_shaper.h ****       set_initial_delay(parameter[0]);
  64:pulse_processor/pulse_shaper.h ****       set_duration(parameter[1] >> 1);
  65:pulse_processor/pulse_shaper.h ****       set_delay(parameter[2] >> 1);
  66:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[3]);
  67:pulse_processor/pulse_shaper.h ****     }
  68:pulse_processor/pulse_shaper.h ****   }
  69:pulse_processor/pulse_shaper.h **** 
  70:pulse_processor/pulse_shaper.h ****   inline void set_initial_delay(uint16_t initial_delay) {
 1564              		.loc 8 70 15 view .LVU409
 1565              	.LBB776:
  71:pulse_processor/pulse_shaper.h ****     initial_delay_ = initial_delay;
 1566              		.loc 8 71 5 view .LVU410
 1567              		.loc 8 71 20 is_stmt 0 view .LVU411
 1568 0004 0023     		movs	r3, #0
 1569 0006 A0F82833 		strh	r3, [r0, #808]	@ movhi
 1570              	.LVL126:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 46


 1571              		.loc 8 71 20 view .LVU412
 1572              	.LBE776:
 1573              	.LBE775:
  59:pulse_processor/pulse_shaper.h ****       set_duration(parameter[0] >> 1);
 1574              		.loc 8 59 7 is_stmt 1 view .LVU413
 1575              	.LBB777:
 1576              	.LBI777:
  72:pulse_processor/pulse_shaper.h ****   }
  73:pulse_processor/pulse_shaper.h ****   
  74:pulse_processor/pulse_shaper.h ****   inline void set_duration(uint16_t duration) {
 1577              		.loc 8 74 15 view .LVU414
 1578              	.LBB778:
  75:pulse_processor/pulse_shaper.h ****     duration_ = duration;
 1579              		.loc 8 75 5 view .LVU415
 1580              	.LBE778:
 1581              	.LBE777:
  59:pulse_processor/pulse_shaper.h ****       set_delay((parameter[0] >> 1) + 2048);
 1582              		.loc 8 59 19 is_stmt 0 view .LVU416
 1583 000a 0B88     		ldrh	r3, [r1]
 1584 000c 5B08     		lsrs	r3, r3, #1
 1585              	.LBB780:
 1586              	.LBB779:
 1587              		.loc 8 75 15 view .LVU417
 1588 000e A0F82A33 		strh	r3, [r0, #810]	@ movhi
 1589              	.LVL127:
 1590              		.loc 8 75 15 view .LVU418
 1591              	.LBE779:
 1592              	.LBE780:
  60:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[1]);
 1593              		.loc 8 60 7 is_stmt 1 view .LVU419
 1594              	.LBB781:
 1595              	.LBI781:
  76:pulse_processor/pulse_shaper.h ****   }
  77:pulse_processor/pulse_shaper.h ****   
  78:pulse_processor/pulse_shaper.h ****   inline void set_delay(uint16_t delay) {
 1596              		.loc 8 78 15 view .LVU420
 1597              	.LBB782:
  79:pulse_processor/pulse_shaper.h ****     delay_ = delay;
 1598              		.loc 8 79 5 view .LVU421
 1599              	.LBE782:
 1600              	.LBE781:
  60:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[1]);
 1601              		.loc 8 60 31 is_stmt 0 view .LVU422
 1602 0012 0B88     		ldrh	r3, [r1]
 1603 0014 5B08     		lsrs	r3, r3, #1
  60:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[1]);
 1604              		.loc 8 60 16 view .LVU423
 1605 0016 03F50063 		add	r3, r3, #2048
 1606              	.LBB784:
 1607              	.LBB783:
 1608              		.loc 8 79 12 view .LVU424
 1609 001a A0F82C33 		strh	r3, [r0, #812]	@ movhi
 1610              	.LVL128:
 1611              		.loc 8 79 12 view .LVU425
 1612              	.LBE783:
 1613              	.LBE784:
  61:pulse_processor/pulse_shaper.h ****     } else {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 47


 1614              		.loc 8 61 7 is_stmt 1 view .LVU426
 1615              	.LBB785:
 1616              	.LBI785:
  80:pulse_processor/pulse_shaper.h ****   }
  81:pulse_processor/pulse_shaper.h ****   
  82:pulse_processor/pulse_shaper.h ****   inline void set_num_repetitions(uint16_t num_repetitions) {
 1617              		.loc 8 82 15 view .LVU427
 1618              	.LBB786:
  83:pulse_processor/pulse_shaper.h ****     num_repetitions_ = num_repetitions >> 13;
 1619              		.loc 8 83 5 view .LVU428
 1620              		.loc 8 83 40 is_stmt 0 view .LVU429
 1621 001e 4B88     		ldrh	r3, [r1, #2]
 1622              	.LVL129:
 1623              	.L80:
 1624              		.loc 8 83 40 view .LVU430
 1625              	.LBE786:
 1626              	.LBE785:
 1627              	.LBE774:
 1628              	.LBE773:
 1629              	.LBB787:
 1630              	.LBB788:
 1631 0020 5B0B     		lsrs	r3, r3, #13
 1632              		.loc 8 83 22 view .LVU431
 1633 0022 A0F82E33 		strh	r3, [r0, #814]	@ movhi
 1634              	.LVL130:
 1635              		.loc 8 83 22 view .LVU432
 1636              	.LBE788:
 1637              	.LBE787:
 1638              	.LBE772:
 1639              	.LBE771:
 163:processors.h  ****   DECLARE_PROCESSOR(PulseRandomizer, pulse_randomizer_);
 1640              		.loc 1 163 3 view .LVU433
 1641 0026 7047     		bx	lr
 1642              	.LVL131:
 1643              	.L78:
 1644              	.LBB802:
 1645              	.LBB801:
  63:pulse_processor/pulse_shaper.h ****       set_duration(parameter[1] >> 1);
 1646              		.loc 8 63 7 is_stmt 1 view .LVU434
  63:pulse_processor/pulse_shaper.h ****       set_duration(parameter[1] >> 1);
 1647              		.loc 8 63 24 is_stmt 0 view .LVU435
 1648 0028 0B88     		ldrh	r3, [r1]
 1649              	.LVL132:
 1650              	.LBB790:
 1651              	.LBI790:
  70:pulse_processor/pulse_shaper.h ****     initial_delay_ = initial_delay;
 1652              		.loc 8 70 15 is_stmt 1 view .LVU436
 1653              	.LBB791:
  71:pulse_processor/pulse_shaper.h ****   }
 1654              		.loc 8 71 5 view .LVU437
  71:pulse_processor/pulse_shaper.h ****   }
 1655              		.loc 8 71 20 is_stmt 0 view .LVU438
 1656 002a A0F82833 		strh	r3, [r0, #808]	@ movhi
 1657              	.LVL133:
  71:pulse_processor/pulse_shaper.h ****   }
 1658              		.loc 8 71 20 view .LVU439
 1659              	.LBE791:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 48


 1660              	.LBE790:
  64:pulse_processor/pulse_shaper.h ****       set_delay(parameter[2] >> 1);
 1661              		.loc 8 64 7 is_stmt 1 view .LVU440
 1662              	.LBB792:
 1663              	.LBI792:
  74:pulse_processor/pulse_shaper.h ****     duration_ = duration;
 1664              		.loc 8 74 15 view .LVU441
 1665              	.LBB793:
  75:pulse_processor/pulse_shaper.h ****   }
 1666              		.loc 8 75 5 view .LVU442
 1667              	.LBE793:
 1668              	.LBE792:
  64:pulse_processor/pulse_shaper.h ****       set_delay(parameter[2] >> 1);
 1669              		.loc 8 64 19 is_stmt 0 view .LVU443
 1670 002e 4B88     		ldrh	r3, [r1, #2]
 1671 0030 5B08     		lsrs	r3, r3, #1
 1672              	.LBB795:
 1673              	.LBB794:
  75:pulse_processor/pulse_shaper.h ****   }
 1674              		.loc 8 75 15 view .LVU444
 1675 0032 A0F82A33 		strh	r3, [r0, #810]	@ movhi
 1676              	.LVL134:
  75:pulse_processor/pulse_shaper.h ****   }
 1677              		.loc 8 75 15 view .LVU445
 1678              	.LBE794:
 1679              	.LBE795:
  65:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[3]);
 1680              		.loc 8 65 7 is_stmt 1 view .LVU446
 1681              	.LBB796:
 1682              	.LBI796:
  78:pulse_processor/pulse_shaper.h ****     delay_ = delay;
 1683              		.loc 8 78 15 view .LVU447
 1684              	.LBB797:
  79:pulse_processor/pulse_shaper.h ****   }
 1685              		.loc 8 79 5 view .LVU448
 1686              	.LBE797:
 1687              	.LBE796:
  65:pulse_processor/pulse_shaper.h ****       set_num_repetitions(parameter[3]);
 1688              		.loc 8 65 16 is_stmt 0 view .LVU449
 1689 0036 8B88     		ldrh	r3, [r1, #4]
 1690 0038 5B08     		lsrs	r3, r3, #1
 1691              	.LBB799:
 1692              	.LBB798:
  79:pulse_processor/pulse_shaper.h ****   }
 1693              		.loc 8 79 12 view .LVU450
 1694 003a A0F82C33 		strh	r3, [r0, #812]	@ movhi
 1695              	.LVL135:
  79:pulse_processor/pulse_shaper.h ****   }
 1696              		.loc 8 79 12 view .LVU451
 1697              	.LBE798:
 1698              	.LBE799:
  66:pulse_processor/pulse_shaper.h ****     }
 1699              		.loc 8 66 7 is_stmt 1 view .LVU452
 1700              	.LBB800:
 1701              	.LBI787:
  82:pulse_processor/pulse_shaper.h ****     num_repetitions_ = num_repetitions >> 13;
 1702              		.loc 8 82 15 view .LVU453
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 49


 1703              	.LBB789:
 1704              		.loc 8 83 5 view .LVU454
 1705              		.loc 8 83 40 is_stmt 0 view .LVU455
 1706 003e CB88     		ldrh	r3, [r1, #6]
 1707 0040 EEE7     		b	.L80
 1708              	.LBE789:
 1709              	.LBE800:
 1710              	.LBE801:
 1711              	.LBE802:
 1712              		.cfi_endproc
 1713              	.LFE1621:
 1715              		.section	.text._ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE,"axG",%progbits
 1716              		.align	1
 1717              		.weak	_ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1721              		.fpu fpv5-d16
 1723              	_ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE:
 1724              	.LVL136:
 1725              	.LFB1624:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 1726              		.loc 1 164 3 is_stmt 1 view -0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 0
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 1730              		@ link register save eliminated.
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 1731              		.loc 1 164 3 view .LVU457
 1732              	.LBB831:
 1733              	.LBI831:
 1734              		.file 9 "pulse_processor/pulse_randomizer.h"
   1:pulse_processor/pulse_randomizer.h **** // Copyright 2013 Emilie Gillet.
   2:pulse_processor/pulse_randomizer.h **** //
   3:pulse_processor/pulse_randomizer.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:pulse_processor/pulse_randomizer.h **** //
   5:pulse_processor/pulse_randomizer.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:pulse_processor/pulse_randomizer.h **** // of this software and associated documentation files (the "Software"), to deal
   7:pulse_processor/pulse_randomizer.h **** // in the Software without restriction, including without limitation the rights
   8:pulse_processor/pulse_randomizer.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:pulse_processor/pulse_randomizer.h **** // copies of the Software, and to permit persons to whom the Software is
  10:pulse_processor/pulse_randomizer.h **** // furnished to do so, subject to the following conditions:
  11:pulse_processor/pulse_randomizer.h **** // 
  12:pulse_processor/pulse_randomizer.h **** // The above copyright notice and this permission notice shall be included in
  13:pulse_processor/pulse_randomizer.h **** // all copies or substantial portions of the Software.
  14:pulse_processor/pulse_randomizer.h **** // 
  15:pulse_processor/pulse_randomizer.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:pulse_processor/pulse_randomizer.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:pulse_processor/pulse_randomizer.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:pulse_processor/pulse_randomizer.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:pulse_processor/pulse_randomizer.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:pulse_processor/pulse_randomizer.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:pulse_processor/pulse_randomizer.h **** // THE SOFTWARE.
  22:pulse_processor/pulse_randomizer.h **** // 
  23:pulse_processor/pulse_randomizer.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:pulse_processor/pulse_randomizer.h **** //
  25:pulse_processor/pulse_randomizer.h **** // -----------------------------------------------------------------------------
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 50


  26:pulse_processor/pulse_randomizer.h **** //
  27:pulse_processor/pulse_randomizer.h **** // Create random repetitions of a pulse.
  28:pulse_processor/pulse_randomizer.h **** 
  29:pulse_processor/pulse_randomizer.h **** #ifndef PEAKS_PULSE_PROCESSOR_PULSE_RANDOMIZER_H_
  30:pulse_processor/pulse_randomizer.h **** #define PEAKS_PULSE_PROCESSOR_PULSE_RANDOMIZER_H_
  31:pulse_processor/pulse_randomizer.h **** 
  32:pulse_processor/pulse_randomizer.h **** #include "stmlib/stmlib.h"
  33:pulse_processor/pulse_randomizer.h **** #include "stmlib/utils/ring_buffer.h"
  34:pulse_processor/pulse_randomizer.h **** 
  35:pulse_processor/pulse_randomizer.h **** #include "gate_processor.h"
  36:pulse_processor/pulse_randomizer.h **** 
  37:pulse_processor/pulse_randomizer.h **** namespace peaks {
  38:pulse_processor/pulse_randomizer.h **** 
  39:pulse_processor/pulse_randomizer.h **** struct TriggerPulse {
  40:pulse_processor/pulse_randomizer.h ****   uint32_t delay_counter;
  41:pulse_processor/pulse_randomizer.h **** };
  42:pulse_processor/pulse_randomizer.h **** 
  43:pulse_processor/pulse_randomizer.h **** static const uint8_t kTriggerPulseBufferSize = 32;
  44:pulse_processor/pulse_randomizer.h **** 
  45:pulse_processor/pulse_randomizer.h **** class PulseRandomizer {
  46:pulse_processor/pulse_randomizer.h ****  public:
  47:pulse_processor/pulse_randomizer.h ****   PulseRandomizer() { }
  48:pulse_processor/pulse_randomizer.h ****   ~PulseRandomizer() { }
  49:pulse_processor/pulse_randomizer.h ****   
  50:pulse_processor/pulse_randomizer.h ****   void Init();
  51:pulse_processor/pulse_randomizer.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  52:pulse_processor/pulse_randomizer.h ****   
  53:pulse_processor/pulse_randomizer.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
 1735              		.loc 9 53 8 view .LVU458
 1736              	.LBB832:
  54:pulse_processor/pulse_randomizer.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1737              		.loc 9 54 5 view .LVU459
 1738 0000 012A     		cmp	r2, #1
 1739 0002 0ED1     		bne	.L82
 1740              	.LVL137:
 1741              	.LBB833:
 1742              	.LBI833:
  53:pulse_processor/pulse_randomizer.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1743              		.loc 9 53 8 view .LVU460
 1744              	.LBB834:
  55:pulse_processor/pulse_randomizer.h ****       set_acceptance_probability(65535);
 1745              		.loc 9 55 7 view .LVU461
 1746              	.LBB835:
 1747              	.LBI835:
  56:pulse_processor/pulse_randomizer.h ****       set_repetition_probability(parameter[0]);
  57:pulse_processor/pulse_randomizer.h ****       set_delay_average(parameter[1]);
  58:pulse_processor/pulse_randomizer.h ****       set_delay_randomness(0);
  59:pulse_processor/pulse_randomizer.h ****     } else {
  60:pulse_processor/pulse_randomizer.h ****       set_acceptance_probability(parameter[0]);
  61:pulse_processor/pulse_randomizer.h ****       set_repetition_probability(parameter[1]);
  62:pulse_processor/pulse_randomizer.h ****       set_delay_average(parameter[2]);
  63:pulse_processor/pulse_randomizer.h ****       set_delay_randomness(parameter[3]);
  64:pulse_processor/pulse_randomizer.h ****     }
  65:pulse_processor/pulse_randomizer.h ****   }
  66:pulse_processor/pulse_randomizer.h **** 
  67:pulse_processor/pulse_randomizer.h ****   inline void set_repetition_probability(uint16_t repetition_probability) {
  68:pulse_processor/pulse_randomizer.h ****     repetition_probability_ = repetition_probability;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 51


  69:pulse_processor/pulse_randomizer.h ****   }
  70:pulse_processor/pulse_randomizer.h ****   
  71:pulse_processor/pulse_randomizer.h ****   inline void set_acceptance_probability(uint16_t acceptance_probability) {
 1748              		.loc 9 71 15 view .LVU462
 1749              	.LBB836:
  72:pulse_processor/pulse_randomizer.h ****     acceptance_probability_ = acceptance_probability;
 1750              		.loc 9 72 5 view .LVU463
 1751              		.loc 9 72 29 is_stmt 0 view .LVU464
 1752 0004 4FF6FF73 		movw	r3, #65535
 1753 0008 A0F83634 		strh	r3, [r0, #1078]	@ movhi
 1754              	.LVL138:
 1755              		.loc 9 72 29 view .LVU465
 1756              	.LBE836:
 1757              	.LBE835:
  56:pulse_processor/pulse_randomizer.h ****       set_repetition_probability(parameter[0]);
 1758              		.loc 9 56 7 is_stmt 1 view .LVU466
  56:pulse_processor/pulse_randomizer.h ****       set_repetition_probability(parameter[0]);
 1759              		.loc 9 56 33 is_stmt 0 view .LVU467
 1760 000c 0B88     		ldrh	r3, [r1]
 1761              	.LVL139:
 1762              	.LBB837:
 1763              	.LBI837:
  67:pulse_processor/pulse_randomizer.h ****     repetition_probability_ = repetition_probability;
 1764              		.loc 9 67 15 is_stmt 1 view .LVU468
 1765              	.LBB838:
  68:pulse_processor/pulse_randomizer.h ****   }
 1766              		.loc 9 68 5 view .LVU469
  68:pulse_processor/pulse_randomizer.h ****   }
 1767              		.loc 9 68 29 is_stmt 0 view .LVU470
 1768 000e A0F83434 		strh	r3, [r0, #1076]	@ movhi
 1769              	.LVL140:
  68:pulse_processor/pulse_randomizer.h ****   }
 1770              		.loc 9 68 29 view .LVU471
 1771              	.LBE838:
 1772              	.LBE837:
  57:pulse_processor/pulse_randomizer.h ****       set_delay_randomness(0);
 1773              		.loc 9 57 7 is_stmt 1 view .LVU472
 1774              	.LBB839:
 1775              	.LBI839:
  73:pulse_processor/pulse_randomizer.h ****   }
  74:pulse_processor/pulse_randomizer.h ****   
  75:pulse_processor/pulse_randomizer.h ****   inline void set_delay_average(uint16_t delay_average) {
 1776              		.loc 9 75 15 view .LVU473
 1777              	.LBB840:
  76:pulse_processor/pulse_randomizer.h ****     delay_average_ = delay_average >> 1;
 1778              		.loc 9 76 5 view .LVU474
 1779              		.loc 9 76 36 is_stmt 0 view .LVU475
 1780 0012 4B88     		ldrh	r3, [r1, #2]
 1781 0014 5B08     		lsrs	r3, r3, #1
 1782              		.loc 9 76 20 view .LVU476
 1783 0016 A0F83834 		strh	r3, [r0, #1080]	@ movhi
 1784              	.LVL141:
 1785              		.loc 9 76 20 view .LVU477
 1786              	.LBE840:
 1787              	.LBE839:
  58:pulse_processor/pulse_randomizer.h ****     } else {
 1788              		.loc 9 58 7 is_stmt 1 view .LVU478
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 52


 1789              	.LBB841:
 1790              	.LBI841:
  77:pulse_processor/pulse_randomizer.h ****   }
  78:pulse_processor/pulse_randomizer.h ****   
  79:pulse_processor/pulse_randomizer.h ****   inline void set_delay_randomness(uint16_t delay_randomness) {
 1791              		.loc 9 79 15 view .LVU479
 1792              	.LBB842:
  80:pulse_processor/pulse_randomizer.h ****     delay_randomness_ = delay_randomness;
 1793              		.loc 9 80 5 view .LVU480
 1794              		.loc 9 80 23 is_stmt 0 view .LVU481
 1795 001a 0023     		movs	r3, #0
 1796              	.LVL142:
 1797              	.L84:
 1798              		.loc 9 80 23 view .LVU482
 1799              	.LBE842:
 1800              	.LBE841:
 1801              	.LBE834:
 1802              	.LBE833:
 1803              	.LBB843:
 1804              	.LBI843:
  79:pulse_processor/pulse_randomizer.h ****     delay_randomness_ = delay_randomness;
 1805              		.loc 9 79 15 is_stmt 1 view .LVU483
 1806              	.LBB844:
 1807              		.loc 9 80 5 view .LVU484
 1808              		.loc 9 80 23 is_stmt 0 view .LVU485
 1809 001c A0F83A34 		strh	r3, [r0, #1082]	@ movhi
 1810              	.LVL143:
 1811              		.loc 9 80 23 view .LVU486
 1812              	.LBE844:
 1813              	.LBE843:
 1814              	.LBE832:
 1815              	.LBE831:
 164:processors.h  ****   DECLARE_PROCESSOR(BouncingBall, bouncing_ball_);
 1816              		.loc 1 164 3 view .LVU487
 1817 0020 7047     		bx	lr
 1818              	.LVL144:
 1819              	.L82:
 1820              	.LBB852:
 1821              	.LBB851:
  60:pulse_processor/pulse_randomizer.h ****       set_repetition_probability(parameter[1]);
 1822              		.loc 9 60 7 is_stmt 1 view .LVU488
  60:pulse_processor/pulse_randomizer.h ****       set_repetition_probability(parameter[1]);
 1823              		.loc 9 60 33 is_stmt 0 view .LVU489
 1824 0022 0B88     		ldrh	r3, [r1]
 1825              	.LVL145:
 1826              	.LBB845:
 1827              	.LBI845:
  71:pulse_processor/pulse_randomizer.h ****     acceptance_probability_ = acceptance_probability;
 1828              		.loc 9 71 15 is_stmt 1 view .LVU490
 1829              	.LBB846:
  72:pulse_processor/pulse_randomizer.h ****   }
 1830              		.loc 9 72 5 view .LVU491
  72:pulse_processor/pulse_randomizer.h ****   }
 1831              		.loc 9 72 29 is_stmt 0 view .LVU492
 1832 0024 A0F83634 		strh	r3, [r0, #1078]	@ movhi
 1833              	.LVL146:
  72:pulse_processor/pulse_randomizer.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 53


 1834              		.loc 9 72 29 view .LVU493
 1835              	.LBE846:
 1836              	.LBE845:
  61:pulse_processor/pulse_randomizer.h ****       set_delay_average(parameter[2]);
 1837              		.loc 9 61 7 is_stmt 1 view .LVU494
  61:pulse_processor/pulse_randomizer.h ****       set_delay_average(parameter[2]);
 1838              		.loc 9 61 33 is_stmt 0 view .LVU495
 1839 0028 4B88     		ldrh	r3, [r1, #2]
 1840              	.LVL147:
 1841              	.LBB847:
 1842              	.LBI847:
  67:pulse_processor/pulse_randomizer.h ****     repetition_probability_ = repetition_probability;
 1843              		.loc 9 67 15 is_stmt 1 view .LVU496
 1844              	.LBB848:
  68:pulse_processor/pulse_randomizer.h ****   }
 1845              		.loc 9 68 5 view .LVU497
  68:pulse_processor/pulse_randomizer.h ****   }
 1846              		.loc 9 68 29 is_stmt 0 view .LVU498
 1847 002a A0F83434 		strh	r3, [r0, #1076]	@ movhi
 1848              	.LVL148:
  68:pulse_processor/pulse_randomizer.h ****   }
 1849              		.loc 9 68 29 view .LVU499
 1850              	.LBE848:
 1851              	.LBE847:
  62:pulse_processor/pulse_randomizer.h ****       set_delay_randomness(parameter[3]);
 1852              		.loc 9 62 7 is_stmt 1 view .LVU500
 1853              	.LBB849:
 1854              	.LBI849:
  75:pulse_processor/pulse_randomizer.h ****     delay_average_ = delay_average >> 1;
 1855              		.loc 9 75 15 view .LVU501
 1856              	.LBB850:
  76:pulse_processor/pulse_randomizer.h ****   }
 1857              		.loc 9 76 5 view .LVU502
  76:pulse_processor/pulse_randomizer.h ****   }
 1858              		.loc 9 76 36 is_stmt 0 view .LVU503
 1859 002e 8B88     		ldrh	r3, [r1, #4]
 1860 0030 5B08     		lsrs	r3, r3, #1
  76:pulse_processor/pulse_randomizer.h ****   }
 1861              		.loc 9 76 20 view .LVU504
 1862 0032 A0F83834 		strh	r3, [r0, #1080]	@ movhi
 1863              	.LVL149:
  76:pulse_processor/pulse_randomizer.h ****   }
 1864              		.loc 9 76 20 view .LVU505
 1865              	.LBE850:
 1866              	.LBE849:
  63:pulse_processor/pulse_randomizer.h ****     }
 1867              		.loc 9 63 7 is_stmt 1 view .LVU506
  63:pulse_processor/pulse_randomizer.h ****     }
 1868              		.loc 9 63 27 is_stmt 0 view .LVU507
 1869 0036 CB88     		ldrh	r3, [r1, #6]
 1870 0038 F0E7     		b	.L84
 1871              	.LBE851:
 1872              	.LBE852:
 1873              		.cfi_endproc
 1874              	.LFE1624:
 1876              		.section	.text._ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE,"axG",%progbits,_
 1877              		.align	1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 54


 1878              		.weak	_ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE
 1879              		.syntax unified
 1880              		.thumb
 1881              		.thumb_func
 1882              		.fpu fpv5-d16
 1884              	_ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE:
 1885              	.LVL150:
 1886              	.LFB1633:
 1887              		.loc 1 167 3 is_stmt 1 view -0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
 1891              		.loc 1 167 3 view .LVU509
 1892              	.LBB877:
 1893              	.LBI877:
 1894              		.file 10 "number_station/number_station.h"
   1:number_station/number_station.h **** // Copyright 2013 Emilie Gillet.
   2:number_station/number_station.h **** //
   3:number_station/number_station.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:number_station/number_station.h **** //
   5:number_station/number_station.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:number_station/number_station.h **** // of this software and associated documentation files (the "Software"), to deal
   7:number_station/number_station.h **** // in the Software without restriction, including without limitation the rights
   8:number_station/number_station.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:number_station/number_station.h **** // copies of the Software, and to permit persons to whom the Software is
  10:number_station/number_station.h **** // furnished to do so, subject to the following conditions:
  11:number_station/number_station.h **** // 
  12:number_station/number_station.h **** // The above copyright notice and this permission notice shall be included in
  13:number_station/number_station.h **** // all copies or substantial portions of the Software.
  14:number_station/number_station.h **** // 
  15:number_station/number_station.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:number_station/number_station.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:number_station/number_station.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:number_station/number_station.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:number_station/number_station.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:number_station/number_station.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:number_station/number_station.h **** // THE SOFTWARE.
  22:number_station/number_station.h **** // 
  23:number_station/number_station.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:number_station/number_station.h **** //
  25:number_station/number_station.h **** // -----------------------------------------------------------------------------
  26:number_station/number_station.h **** //
  27:number_station/number_station.h **** // Number station.
  28:number_station/number_station.h **** 
  29:number_station/number_station.h **** #ifndef PEAKS_NUMBER_STATION_NUMBER_STATION_H_
  30:number_station/number_station.h **** #define PEAKS_NUMBER_STATION_NUMBER_STATION_H_
  31:number_station/number_station.h **** 
  32:number_station/number_station.h **** #include "stmlib/stmlib.h"
  33:number_station/number_station.h **** 
  34:number_station/number_station.h **** #include "drums/svf.h"
  35:number_station/number_station.h **** #include "gate_processor.h"
  36:number_station/number_station.h **** 
  37:number_station/number_station.h **** namespace peaks {
  38:number_station/number_station.h **** 
  39:number_station/number_station.h **** class NumberStation {
  40:number_station/number_station.h ****  public:
  41:number_station/number_station.h ****   NumberStation() { }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 55


  42:number_station/number_station.h ****   ~NumberStation() { }
  43:number_station/number_station.h ****   
  44:number_station/number_station.h ****   void Init();
  45:number_station/number_station.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  46:number_station/number_station.h ****   
  47:number_station/number_station.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
 1895              		.loc 10 47 8 view .LVU510
 1896              	.LBB878:
  48:number_station/number_station.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1897              		.loc 10 48 5 view .LVU511
 1898              	.LBB879:
 1899              	.LBB880:
  49:number_station/number_station.h ****       set_tone(parameter[0]);
 1900              		.loc 10 49 15 is_stmt 0 view .LVU512
 1901 0000 0B88     		ldrh	r3, [r1]
 1902              	.LBE880:
 1903              	.LBE879:
  48:number_station/number_station.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1904              		.loc 10 48 5 view .LVU513
 1905 0002 012A     		cmp	r2, #1
 1906              	.LBE878:
 1907              	.LBE877:
 1908              		.loc 1 167 3 view .LVU514
 1909 0004 70B5     		push	{r4, r5, r6, lr}
 1910              		.cfi_def_cfa_offset 16
 1911              		.cfi_offset 4, -16
 1912              		.cfi_offset 5, -12
 1913              		.cfi_offset 6, -8
 1914              		.cfi_offset 14, -4
 1915              	.LBB911:
 1916              	.LBB909:
 1917              	.LBB893:
 1918              	.LBB891:
 1919              	.LBB881:
 1920              	.LBB882:
  50:number_station/number_station.h ****       set_transition_probability(parameter[1]);
  51:number_station/number_station.h ****       set_noise(32768);
  52:number_station/number_station.h ****       set_distortion(32768);
  53:number_station/number_station.h ****     } else {
  54:number_station/number_station.h ****       set_tone(parameter[0]);
  55:number_station/number_station.h ****       set_transition_probability(parameter[1]);
  56:number_station/number_station.h ****       set_noise(parameter[2]);
  57:number_station/number_station.h ****       set_distortion(parameter[3]);
  58:number_station/number_station.h ****     }
  59:number_station/number_station.h ****   }
  60:number_station/number_station.h ****   
  61:number_station/number_station.h ****   inline void set_tone(uint16_t tone) {
  62:number_station/number_station.h ****     tone_ = (tone >> 2) + 32768 + 8192;
 1921              		.loc 10 62 19 view .LVU515
 1922 0006 4FEA9305 		lsr	r5, r3, #2
  63:number_station/number_station.h ****     pitch_shift_ = (tone < 32768) ? (24576 + (tone >> 2)) : 16384 + (tone >> 1);
 1923              		.loc 10 63 26 view .LVU516
 1924 000a 1EB2     		sxth	r6, r3
  62:number_station/number_station.h ****     pitch_shift_ = (tone < 32768) ? (24576 + (tone >> 2)) : 16384 + (tone >> 1);
 1925              		.loc 10 62 33 view .LVU517
 1926 000c A5F5C044 		sub	r4, r5, #24576
 1927 0010 A4B2     		uxth	r4, r4
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 56


  62:number_station/number_station.h ****     pitch_shift_ = (tone < 32768) ? (24576 + (tone >> 2)) : 16384 + (tone >> 1);
 1928              		.loc 10 62 11 view .LVU518
 1929 0012 A0F8A444 		strh	r4, [r0, #1188]	@ movhi
 1930              	.LBE882:
 1931              	.LBE881:
 1932              	.LBE891:
 1933              	.LBE893:
  48:number_station/number_station.h ****       set_tone(parameter[0]);
 1934              		.loc 10 48 5 view .LVU519
 1935 0016 14D1     		bne	.L86
 1936              	.LVL151:
 1937              	.LBB894:
 1938              	.LBI879:
  47:number_station/number_station.h ****     if (control_mode == CONTROL_MODE_HALF) {
 1939              		.loc 10 47 8 is_stmt 1 view .LVU520
 1940              	.LBB892:
  49:number_station/number_station.h ****       set_transition_probability(parameter[1]);
 1941              		.loc 10 49 7 view .LVU521
 1942              	.LBB884:
 1943              	.LBI881:
  61:number_station/number_station.h ****     tone_ = (tone >> 2) + 32768 + 8192;
 1944              		.loc 10 61 15 view .LVU522
 1945              	.LBB883:
  62:number_station/number_station.h ****     pitch_shift_ = (tone < 32768) ? (24576 + (tone >> 2)) : 16384 + (tone >> 1);
 1946              		.loc 10 62 5 view .LVU523
 1947              		.loc 10 63 5 view .LVU524
 1948              		.loc 10 63 18 is_stmt 0 view .LVU525
 1949 0018 002E     		cmp	r6, #0
 1950              		.loc 10 63 75 view .LVU526
 1951 001a B6BF     		itet	lt
 1952 001c 5B08     		lsrlt	r3, r3, #1
 1953              		.loc 10 63 18 view .LVU527
 1954 001e 05F5C043 		addge	r3, r5, #24576
 1955 0022 03F58043 		addlt	r3, r3, #16384
 1956 0026 A0F8A634 		strh	r3, [r0, #1190]	@ movhi
 1957              	.LVL152:
 1958              		.loc 10 63 18 view .LVU528
 1959              	.LBE883:
 1960              	.LBE884:
  50:number_station/number_station.h ****       set_noise(32768);
 1961              		.loc 10 50 7 is_stmt 1 view .LVU529
  50:number_station/number_station.h ****       set_noise(32768);
 1962              		.loc 10 50 33 is_stmt 0 view .LVU530
 1963 002a 4B88     		ldrh	r3, [r1, #2]
 1964              	.LVL153:
 1965              	.LBB885:
 1966              	.LBI885:
  64:number_station/number_station.h ****   }
  65:number_station/number_station.h ****   
  66:number_station/number_station.h ****   inline void set_transition_probability(uint16_t transition_probability) {
 1967              		.loc 10 66 15 is_stmt 1 view .LVU531
 1968              	.LBB886:
  67:number_station/number_station.h ****     transition_probability_ = transition_probability;
 1969              		.loc 10 67 5 view .LVU532
 1970              		.loc 10 67 29 is_stmt 0 view .LVU533
 1971 002c A0F8A834 		strh	r3, [r0, #1192]	@ movhi
 1972              	.LVL154:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 57


 1973              		.loc 10 67 29 view .LVU534
 1974              	.LBE886:
 1975              	.LBE885:
  51:number_station/number_station.h ****       set_distortion(32768);
 1976              		.loc 10 51 7 is_stmt 1 view .LVU535
 1977              	.LBB887:
 1978              	.LBI887:
  68:number_station/number_station.h ****   }
  69:number_station/number_station.h **** 
  70:number_station/number_station.h ****   inline void set_distortion(uint16_t distortion) {
  71:number_station/number_station.h ****     distortion_ = 8192;
  72:number_station/number_station.h ****     distortion_ += ((32767 - 8192) * static_cast<uint32_t>(distortion) >> 16);
  73:number_station/number_station.h ****   }
  74:number_station/number_station.h ****   
  75:number_station/number_station.h ****   inline void set_noise(uint16_t noise) {
 1979              		.loc 10 75 15 view .LVU536
 1980              	.LBB888:
  76:number_station/number_station.h ****     noise_ = 256 + (noise >> 3);
 1981              		.loc 10 76 5 view .LVU537
 1982              		.loc 10 76 12 is_stmt 0 view .LVU538
 1983 0030 4FF48853 		mov	r3, #4352
 1984 0034 C0F8B034 		str	r3, [r0, #1200]
 1985              	.LVL155:
 1986              		.loc 10 76 12 view .LVU539
 1987              	.LBE888:
 1988              	.LBE887:
  52:number_station/number_station.h ****     } else {
 1989              		.loc 10 52 7 is_stmt 1 view .LVU540
 1990              	.LBB889:
 1991              	.LBI889:
  70:number_station/number_station.h ****     distortion_ = 8192;
 1992              		.loc 10 70 15 view .LVU541
 1993              	.LBB890:
  71:number_station/number_station.h ****     distortion_ += ((32767 - 8192) * static_cast<uint32_t>(distortion) >> 16);
 1994              		.loc 10 71 5 view .LVU542
  72:number_station/number_station.h ****   }
 1995              		.loc 10 72 5 view .LVU543
  72:number_station/number_station.h ****   }
 1996              		.loc 10 72 17 is_stmt 0 view .LVU544
 1997 0038 44F6FF73 		movw	r3, #20479
 1998              	.LVL156:
 1999              	.L92:
  72:number_station/number_station.h ****   }
 2000              		.loc 10 72 17 view .LVU545
 2001              	.LBE890:
 2002              	.LBE889:
 2003              	.LBE892:
 2004              	.LBE894:
 2005              	.LBB895:
 2006              	.LBB896:
 2007 003c C0F8AC34 		str	r3, [r0, #1196]
 2008              	.LVL157:
  72:number_station/number_station.h ****   }
 2009              		.loc 10 72 17 view .LVU546
 2010              	.LBE896:
 2011              	.LBE895:
 2012              	.LBE909:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 58


 2013              	.LBE911:
 2014              		.loc 1 167 3 view .LVU547
 2015 0040 70BD     		pop	{r4, r5, r6, pc}
 2016              	.LVL158:
 2017              	.L86:
 2018              	.LBB912:
 2019              	.LBB910:
  54:number_station/number_station.h ****       set_transition_probability(parameter[1]);
 2020              		.loc 10 54 7 is_stmt 1 view .LVU548
 2021              	.LBB899:
 2022              	.LBI899:
  61:number_station/number_station.h ****     tone_ = (tone >> 2) + 32768 + 8192;
 2023              		.loc 10 61 15 view .LVU549
 2024              	.LBB900:
  62:number_station/number_station.h ****     pitch_shift_ = (tone < 32768) ? (24576 + (tone >> 2)) : 16384 + (tone >> 1);
 2025              		.loc 10 62 5 view .LVU550
  63:number_station/number_station.h ****   }
 2026              		.loc 10 63 5 view .LVU551
  63:number_station/number_station.h ****   }
 2027              		.loc 10 63 18 is_stmt 0 view .LVU552
 2028 0042 002E     		cmp	r6, #0
 2029              	.LBE900:
 2030              	.LBE899:
 2031              	.LBB902:
 2032              	.LBB897:
  72:number_station/number_station.h ****   }
 2033              		.loc 10 72 36 view .LVU553
 2034 0044 45F6FF72 		movw	r2, #24575
 2035              	.LVL159:
  72:number_station/number_station.h ****   }
 2036              		.loc 10 72 36 view .LVU554
 2037              	.LBE897:
 2038              	.LBE902:
 2039              	.LBB903:
 2040              	.LBB901:
  63:number_station/number_station.h ****   }
 2041              		.loc 10 63 75 view .LVU555
 2042 0048 B6BF     		itet	lt
 2043 004a 5B08     		lsrlt	r3, r3, #1
  63:number_station/number_station.h ****   }
 2044              		.loc 10 63 18 view .LVU556
 2045 004c 05F5C043 		addge	r3, r5, #24576
 2046 0050 03F58043 		addlt	r3, r3, #16384
 2047 0054 A0F8A634 		strh	r3, [r0, #1190]	@ movhi
 2048              	.LVL160:
  63:number_station/number_station.h ****   }
 2049              		.loc 10 63 18 view .LVU557
 2050              	.LBE901:
 2051              	.LBE903:
  55:number_station/number_station.h ****       set_noise(parameter[2]);
 2052              		.loc 10 55 7 is_stmt 1 view .LVU558
  55:number_station/number_station.h ****       set_noise(parameter[2]);
 2053              		.loc 10 55 33 is_stmt 0 view .LVU559
 2054 0058 4B88     		ldrh	r3, [r1, #2]
 2055              	.LVL161:
 2056              	.LBB904:
 2057              	.LBI904:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 59


  66:number_station/number_station.h ****     transition_probability_ = transition_probability;
 2058              		.loc 10 66 15 is_stmt 1 view .LVU560
 2059              	.LBB905:
  67:number_station/number_station.h ****   }
 2060              		.loc 10 67 5 view .LVU561
  67:number_station/number_station.h ****   }
 2061              		.loc 10 67 29 is_stmt 0 view .LVU562
 2062 005a A0F8A834 		strh	r3, [r0, #1192]	@ movhi
 2063              	.LVL162:
  67:number_station/number_station.h ****   }
 2064              		.loc 10 67 29 view .LVU563
 2065              	.LBE905:
 2066              	.LBE904:
  56:number_station/number_station.h ****       set_distortion(parameter[3]);
 2067              		.loc 10 56 7 is_stmt 1 view .LVU564
 2068              	.LBB906:
 2069              	.LBI906:
  75:number_station/number_station.h ****     noise_ = 256 + (noise >> 3);
 2070              		.loc 10 75 15 view .LVU565
 2071              	.LBB907:
 2072              		.loc 10 76 5 view .LVU566
 2073              		.loc 10 76 27 is_stmt 0 view .LVU567
 2074 005e 8B88     		ldrh	r3, [r1, #4]
 2075 0060 DB08     		lsrs	r3, r3, #3
 2076              		.loc 10 76 18 view .LVU568
 2077 0062 03F58073 		add	r3, r3, #256
 2078 0066 C0F8B034 		str	r3, [r0, #1200]
 2079              	.LVL163:
 2080              		.loc 10 76 18 view .LVU569
 2081              	.LBE907:
 2082              	.LBE906:
  57:number_station/number_station.h ****     }
 2083              		.loc 10 57 7 is_stmt 1 view .LVU570
 2084              	.LBB908:
 2085              	.LBI895:
  70:number_station/number_station.h ****     distortion_ = 8192;
 2086              		.loc 10 70 15 view .LVU571
 2087              	.LBB898:
  71:number_station/number_station.h ****     distortion_ += ((32767 - 8192) * static_cast<uint32_t>(distortion) >> 16);
 2088              		.loc 10 71 5 view .LVU572
  72:number_station/number_station.h ****   }
 2089              		.loc 10 72 5 view .LVU573
  72:number_station/number_station.h ****   }
 2090              		.loc 10 72 38 is_stmt 0 view .LVU574
 2091 006a CB88     		ldrh	r3, [r1, #6]
  72:number_station/number_station.h ****   }
 2092              		.loc 10 72 36 view .LVU575
 2093 006c 5343     		muls	r3, r2, r3
  72:number_station/number_station.h ****   }
 2094              		.loc 10 72 72 view .LVU576
 2095 006e 1B0C     		lsrs	r3, r3, #16
  72:number_station/number_station.h ****   }
 2096              		.loc 10 72 17 view .LVU577
 2097 0070 03F50053 		add	r3, r3, #8192
 2098 0074 E2E7     		b	.L92
 2099              	.LBE898:
 2100              	.LBE908:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 60


 2101              	.LBE910:
 2102              	.LBE912:
 2103              		.cfi_endproc
 2104              	.LFE1633:
 2106              		.section	.text._ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE,"axG",%progbits,_
 2107              		.align	1
 2108              		.weak	_ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE
 2109              		.syntax unified
 2110              		.thumb
 2111              		.thumb_func
 2112              		.fpu fpv5-d16
 2114              	_ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE:
 2115              	.LVL164:
 2116              	.LFB1630:
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 2117              		.loc 1 166 3 is_stmt 1 view -0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 2121              		.loc 1 166 3 view .LVU579
 2122              	.LBB947:
 2123              	.LBI947:
  65:modulations/mini_sequencer.h ****     if (control_mode == CONTROL_MODE_HALF) {
 2124              		.loc 4 65 8 view .LVU580
 2125              	.LBB948:
  66:modulations/mini_sequencer.h ****       set_step(0, parameter[0] - 32768);
 2126              		.loc 4 66 5 view .LVU581
 2127              	.LBB949:
 2128              	.LBB950:
  67:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
 2129              		.loc 4 67 32 is_stmt 0 view .LVU582
 2130 0000 0B88     		ldrh	r3, [r1]
 2131              	.LBE950:
 2132              	.LBE949:
  66:modulations/mini_sequencer.h ****       set_step(0, parameter[0] - 32768);
 2133              		.loc 4 66 5 view .LVU583
 2134 0002 012A     		cmp	r2, #1
 2135 0004 B0F99C24 		ldrsh	r2, [r0, #1180]
 2136              	.LVL165:
 2137              	.LBB968:
 2138              	.LBB963:
  67:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
 2139              		.loc 4 67 32 view .LVU584
 2140 0008 A3F50043 		sub	r3, r3, #32768
 2141              	.LBE963:
 2142              	.LBE968:
 2143              	.LBE948:
 2144              	.LBE947:
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 2145              		.loc 1 166 3 view .LVU585
 2146 000c 10B5     		push	{r4, lr}
 2147              		.cfi_def_cfa_offset 8
 2148              		.cfi_offset 4, -8
 2149              		.cfi_offset 14, -4
 2150              	.LBB1009:
 2151              	.LBB1001:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 61


 2152              	.LBB969:
 2153              	.LBB964:
  67:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
 2154              		.loc 4 67 15 view .LVU586
 2155 000e 1BB2     		sxth	r3, r3
 2156              	.LBB951:
 2157              	.LBB952:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2158              		.loc 4 55 50 view .LVU587
 2159 0010 B0F99A44 		ldrsh	r4, [r0, #1178]
 2160              	.LBE952:
 2161              	.LBE951:
 2162              	.LBE964:
 2163              	.LBE969:
  66:modulations/mini_sequencer.h ****       set_step(0, parameter[0] - 32768);
 2164              		.loc 4 66 5 view .LVU588
 2165 0014 0FD1     		bne	.L94
 2166              	.LVL166:
 2167              	.LBB970:
 2168              	.LBI949:
  65:modulations/mini_sequencer.h ****     if (control_mode == CONTROL_MODE_HALF) {
 2169              		.loc 4 65 8 is_stmt 1 view .LVU589
 2170              	.LBB965:
  67:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
 2171              		.loc 4 67 7 view .LVU590
 2172              	.LBB955:
 2173              	.LBI951:
  54:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
 2174              		.loc 4 54 15 view .LVU591
 2175              	.LBB953:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2176              		.loc 4 55 5 view .LVU592
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2177              		.loc 4 55 5 is_stmt 0 view .LVU593
 2178              	.LBE953:
 2179              	.LBE955:
 2180              	.LBE965:
 2181              	.LBE970:
 2182              	.LBE1001:
 2183              	.LBE1009:
 2184              		.file 11 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 62


  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****  */
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #pragma GCC system_header
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** # include_next <math.h>
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #endif
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #undef abs
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** extern "C++"
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** {
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** {
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   using ::abs;
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** 
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   inline long
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
 2185              		.loc 11 56 19 is_stmt 1 view .LVU594
 2186              	.LBB1010:
 2187              	.LBB1002:
 2188              	.LBB971:
 2189              	.LBB966:
 2190              	.LBB956:
 2191              	.LBB954:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2192              		.loc 4 56 5 view .LVU595
 2193 0016 A342     		cmp	r3, r4
  57:modulations/mini_sequencer.h ****     }
 2194              		.loc 4 57 7 view .LVU596
  57:modulations/mini_sequencer.h ****     }
 2195              		.loc 4 57 21 is_stmt 0 view .LVU597
 2196 0018 18BF     		it	ne
 2197 001a A0F89A34 		strhne	r3, [r0, #1178]	@ movhi
 2198              	.LVL167:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 63


  57:modulations/mini_sequencer.h ****     }
 2199              		.loc 4 57 21 view .LVU598
 2200              	.LBE954:
 2201              	.LBE956:
  68:modulations/mini_sequencer.h ****       set_num_steps(2);
 2202              		.loc 4 68 7 is_stmt 1 view .LVU599
  68:modulations/mini_sequencer.h ****       set_num_steps(2);
 2203              		.loc 4 68 32 is_stmt 0 view .LVU600
 2204 001e 4B88     		ldrh	r3, [r1, #2]
 2205 0020 A3F50043 		sub	r3, r3, #32768
  68:modulations/mini_sequencer.h ****       set_num_steps(2);
 2206              		.loc 4 68 15 view .LVU601
 2207 0024 1BB2     		sxth	r3, r3
 2208              	.LVL168:
 2209              	.LBB957:
 2210              	.LBI957:
  54:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
 2211              		.loc 4 54 15 is_stmt 1 view .LVU602
 2212              	.LBB958:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2213              		.loc 4 55 5 view .LVU603
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2214              		.loc 4 55 5 is_stmt 0 view .LVU604
 2215              	.LBE958:
 2216              	.LBE957:
 2217              	.LBE966:
 2218              	.LBE971:
 2219              	.LBE1002:
 2220              	.LBE1010:
 2221              		.loc 11 56 19 is_stmt 1 view .LVU605
 2222              	.LBB1011:
 2223              	.LBB1003:
 2224              	.LBB972:
 2225              	.LBB967:
 2226              	.LBB960:
 2227              	.LBB959:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2228              		.loc 4 56 5 view .LVU606
 2229 0026 9A42     		cmp	r2, r3
  57:modulations/mini_sequencer.h ****     }
 2230              		.loc 4 57 7 view .LVU607
  57:modulations/mini_sequencer.h ****     }
 2231              		.loc 4 57 21 is_stmt 0 view .LVU608
 2232 0028 18BF     		it	ne
 2233 002a A0F89C34 		strhne	r3, [r0, #1180]	@ movhi
 2234              	.LVL169:
  57:modulations/mini_sequencer.h ****     }
 2235              		.loc 4 57 21 view .LVU609
 2236              	.LBE959:
 2237              	.LBE960:
  69:modulations/mini_sequencer.h ****     } else {
 2238              		.loc 4 69 7 is_stmt 1 view .LVU610
 2239              	.LBB961:
 2240              	.LBI961:
  61:modulations/mini_sequencer.h ****     num_steps_ = num_steps;
 2241              		.loc 4 61 15 view .LVU611
 2242              	.LBB962:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 64


  62:modulations/mini_sequencer.h ****   }
 2243              		.loc 4 62 5 view .LVU612
  62:modulations/mini_sequencer.h ****   }
 2244              		.loc 4 62 16 is_stmt 0 view .LVU613
 2245 002e 0223     		movs	r3, #2
 2246              	.LVL170:
 2247              	.L102:
  62:modulations/mini_sequencer.h ****   }
 2248              		.loc 4 62 16 view .LVU614
 2249              	.LBE962:
 2250              	.LBE961:
 2251              	.LBE967:
 2252              	.LBE972:
 2253              	.LBB973:
 2254              	.LBB974:
 2255 0030 80F89834 		strb	r3, [r0, #1176]
 2256              	.LVL171:
  62:modulations/mini_sequencer.h ****   }
 2257              		.loc 4 62 16 view .LVU615
 2258              	.LBE974:
 2259              	.LBE973:
 2260              	.LBE1003:
 2261              	.LBE1011:
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 2262              		.loc 1 166 3 view .LVU616
 2263 0034 10BD     		pop	{r4, pc}
 2264              	.LVL172:
 2265              	.L94:
 2266              	.LBB1012:
 2267              	.LBB1004:
  71:modulations/mini_sequencer.h ****       set_step(1, parameter[1] - 32768);
 2268              		.loc 4 71 7 is_stmt 1 view .LVU617
 2269              	.LBB976:
 2270              	.LBI976:
  54:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
 2271              		.loc 4 54 15 view .LVU618
 2272              	.LBB977:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2273              		.loc 4 55 5 view .LVU619
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2274              		.loc 4 55 5 is_stmt 0 view .LVU620
 2275              	.LBE977:
 2276              	.LBE976:
 2277              	.LBE1004:
 2278              	.LBE1012:
 2279              		.loc 11 56 19 is_stmt 1 view .LVU621
 2280              	.LBB1013:
 2281              	.LBB1005:
 2282              	.LBB979:
 2283              	.LBB978:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2284              		.loc 4 56 5 view .LVU622
 2285 0036 A342     		cmp	r3, r4
  57:modulations/mini_sequencer.h ****     }
 2286              		.loc 4 57 7 view .LVU623
  57:modulations/mini_sequencer.h ****     }
 2287              		.loc 4 57 21 is_stmt 0 view .LVU624
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 65


 2288 0038 18BF     		it	ne
 2289 003a A0F89A34 		strhne	r3, [r0, #1178]	@ movhi
 2290              	.LVL173:
  57:modulations/mini_sequencer.h ****     }
 2291              		.loc 4 57 21 view .LVU625
 2292              	.LBE978:
 2293              	.LBE979:
  72:modulations/mini_sequencer.h ****       set_step(2, parameter[2] - 32768);
 2294              		.loc 4 72 7 is_stmt 1 view .LVU626
  72:modulations/mini_sequencer.h ****       set_step(2, parameter[2] - 32768);
 2295              		.loc 4 72 32 is_stmt 0 view .LVU627
 2296 003e 4B88     		ldrh	r3, [r1, #2]
 2297 0040 A3F50043 		sub	r3, r3, #32768
  72:modulations/mini_sequencer.h ****       set_step(2, parameter[2] - 32768);
 2298              		.loc 4 72 15 view .LVU628
 2299 0044 1BB2     		sxth	r3, r3
 2300              	.LVL174:
 2301              	.LBB980:
 2302              	.LBI980:
  54:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
 2303              		.loc 4 54 15 is_stmt 1 view .LVU629
 2304              	.LBB981:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2305              		.loc 4 55 5 view .LVU630
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2306              		.loc 4 55 5 is_stmt 0 view .LVU631
 2307              	.LBE981:
 2308              	.LBE980:
 2309              	.LBE1005:
 2310              	.LBE1013:
 2311              		.loc 11 56 19 is_stmt 1 view .LVU632
 2312              	.LBB1014:
 2313              	.LBB1006:
 2314              	.LBB984:
 2315              	.LBB982:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2316              		.loc 4 56 5 view .LVU633
 2317 0046 9A42     		cmp	r2, r3
  57:modulations/mini_sequencer.h ****     }
 2318              		.loc 4 57 7 view .LVU634
 2319              	.LBE982:
 2320              	.LBE984:
 2321              	.LBB985:
 2322              	.LBB986:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2323              		.loc 4 56 5 is_stmt 0 view .LVU635
 2324 0048 B0F99E24 		ldrsh	r2, [r0, #1182]
 2325              	.LBE986:
 2326              	.LBE985:
 2327              	.LBB990:
 2328              	.LBB983:
  57:modulations/mini_sequencer.h ****     }
 2329              		.loc 4 57 21 view .LVU636
 2330 004c 18BF     		it	ne
 2331 004e A0F89C34 		strhne	r3, [r0, #1180]	@ movhi
 2332              	.LVL175:
  57:modulations/mini_sequencer.h ****     }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 66


 2333              		.loc 4 57 21 view .LVU637
 2334              	.LBE983:
 2335              	.LBE990:
  73:modulations/mini_sequencer.h ****       set_step(3, parameter[3] - 32768);
 2336              		.loc 4 73 7 is_stmt 1 view .LVU638
  73:modulations/mini_sequencer.h ****       set_step(3, parameter[3] - 32768);
 2337              		.loc 4 73 32 is_stmt 0 view .LVU639
 2338 0052 8B88     		ldrh	r3, [r1, #4]
 2339 0054 A3F50043 		sub	r3, r3, #32768
  73:modulations/mini_sequencer.h ****       set_step(3, parameter[3] - 32768);
 2340              		.loc 4 73 15 view .LVU640
 2341 0058 1BB2     		sxth	r3, r3
 2342              	.LVL176:
 2343              	.LBB991:
 2344              	.LBI985:
  54:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
 2345              		.loc 4 54 15 is_stmt 1 view .LVU641
 2346              	.LBB987:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2347              		.loc 4 55 5 view .LVU642
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2348              		.loc 4 55 5 is_stmt 0 view .LVU643
 2349              	.LBE987:
 2350              	.LBE991:
 2351              	.LBE1006:
 2352              	.LBE1014:
 2353              		.loc 11 56 19 is_stmt 1 view .LVU644
 2354              	.LBB1015:
 2355              	.LBB1007:
 2356              	.LBB992:
 2357              	.LBB988:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2358              		.loc 4 56 5 view .LVU645
 2359 005a 9A42     		cmp	r2, r3
  57:modulations/mini_sequencer.h ****     }
 2360              		.loc 4 57 7 view .LVU646
 2361              	.LBE988:
 2362              	.LBE992:
 2363              	.LBB993:
 2364              	.LBB994:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2365              		.loc 4 56 5 is_stmt 0 view .LVU647
 2366 005c B0F9A024 		ldrsh	r2, [r0, #1184]
 2367              	.LVL177:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2368              		.loc 4 56 5 view .LVU648
 2369              	.LBE994:
 2370              	.LBE993:
 2371              	.LBB997:
 2372              	.LBB989:
  57:modulations/mini_sequencer.h ****     }
 2373              		.loc 4 57 21 view .LVU649
 2374 0060 18BF     		it	ne
 2375 0062 A0F89E34 		strhne	r3, [r0, #1182]	@ movhi
 2376              	.LVL178:
  57:modulations/mini_sequencer.h ****     }
 2377              		.loc 4 57 21 view .LVU650
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 67


 2378              	.LBE989:
 2379              	.LBE997:
  74:modulations/mini_sequencer.h ****       set_num_steps(4);
 2380              		.loc 4 74 7 is_stmt 1 view .LVU651
  74:modulations/mini_sequencer.h ****       set_num_steps(4);
 2381              		.loc 4 74 32 is_stmt 0 view .LVU652
 2382 0066 CB88     		ldrh	r3, [r1, #6]
 2383 0068 A3F50043 		sub	r3, r3, #32768
  74:modulations/mini_sequencer.h ****       set_num_steps(4);
 2384              		.loc 4 74 15 view .LVU653
 2385 006c 1BB2     		sxth	r3, r3
 2386              	.LVL179:
 2387              	.LBB998:
 2388              	.LBI993:
  54:modulations/mini_sequencer.h ****     int32_t difference = abs(int32_t(steps_[index]) - value);
 2389              		.loc 4 54 15 is_stmt 1 view .LVU654
 2390              	.LBB995:
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2391              		.loc 4 55 5 view .LVU655
  55:modulations/mini_sequencer.h ****     if (difference > 0) {
 2392              		.loc 4 55 5 is_stmt 0 view .LVU656
 2393              	.LBE995:
 2394              	.LBE998:
 2395              	.LBE1007:
 2396              	.LBE1015:
 2397              		.loc 11 56 19 is_stmt 1 view .LVU657
 2398              	.LBB1016:
 2399              	.LBB1008:
 2400              	.LBB999:
 2401              	.LBB996:
  56:modulations/mini_sequencer.h ****       steps_[index] = value;
 2402              		.loc 4 56 5 view .LVU658
 2403 006e 9A42     		cmp	r2, r3
  57:modulations/mini_sequencer.h ****     }
 2404              		.loc 4 57 7 view .LVU659
  57:modulations/mini_sequencer.h ****     }
 2405              		.loc 4 57 21 is_stmt 0 view .LVU660
 2406 0070 18BF     		it	ne
 2407 0072 A0F8A034 		strhne	r3, [r0, #1184]	@ movhi
 2408              	.LVL180:
  57:modulations/mini_sequencer.h ****     }
 2409              		.loc 4 57 21 view .LVU661
 2410              	.LBE996:
 2411              	.LBE999:
  75:modulations/mini_sequencer.h ****     }
 2412              		.loc 4 75 7 is_stmt 1 view .LVU662
 2413              	.LBB1000:
 2414              	.LBI973:
  61:modulations/mini_sequencer.h ****     num_steps_ = num_steps;
 2415              		.loc 4 61 15 view .LVU663
 2416              	.LBB975:
  62:modulations/mini_sequencer.h ****   }
 2417              		.loc 4 62 5 view .LVU664
  62:modulations/mini_sequencer.h ****   }
 2418              		.loc 4 62 16 is_stmt 0 view .LVU665
 2419 0076 0423     		movs	r3, #4
 2420              	.LVL181:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 68


  62:modulations/mini_sequencer.h ****   }
 2421              		.loc 4 62 16 view .LVU666
 2422 0078 DAE7     		b	.L102
 2423              	.LBE975:
 2424              	.LBE1000:
 2425              	.LBE1008:
 2426              	.LBE1016:
 2427              		.cfi_endproc
 2428              	.LFE1630:
 2430              		.section	.text._ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE,"axG",%progbits,_ZN5pe
 2431              		.align	1
 2432              		.weak	_ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE
 2433              		.syntax unified
 2434              		.thumb
 2435              		.thumb_func
 2436              		.fpu fpv5-d16
 2438              	_ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE:
 2439              	.LVL182:
 2440              	.LFB1609:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 2441              		.loc 1 159 3 is_stmt 1 view -0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 0
 2444              		@ frame_needed = 0, uses_anonymous_args = 0
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 2445              		.loc 1 159 3 view .LVU668
 2446              	.LBB1045:
 2447              	.LBI1045:
 2448              		.file 12 "drums/bass_drum.h"
   1:drums/bass_drum.h **** // Copyright 2013 Emilie Gillet.
   2:drums/bass_drum.h **** //
   3:drums/bass_drum.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:drums/bass_drum.h **** //
   5:drums/bass_drum.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:drums/bass_drum.h **** // of this software and associated documentation files (the "Software"), to deal
   7:drums/bass_drum.h **** // in the Software without restriction, including without limitation the rights
   8:drums/bass_drum.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:drums/bass_drum.h **** // copies of the Software, and to permit persons to whom the Software is
  10:drums/bass_drum.h **** // furnished to do so, subject to the following conditions:
  11:drums/bass_drum.h **** // 
  12:drums/bass_drum.h **** // The above copyright notice and this permission notice shall be included in
  13:drums/bass_drum.h **** // all copies or substantial portions of the Software.
  14:drums/bass_drum.h **** // 
  15:drums/bass_drum.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:drums/bass_drum.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:drums/bass_drum.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:drums/bass_drum.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:drums/bass_drum.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:drums/bass_drum.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:drums/bass_drum.h **** // THE SOFTWARE.
  22:drums/bass_drum.h **** // 
  23:drums/bass_drum.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:drums/bass_drum.h **** //
  25:drums/bass_drum.h **** // -----------------------------------------------------------------------------
  26:drums/bass_drum.h **** //
  27:drums/bass_drum.h **** // 808-style bass drum.
  28:drums/bass_drum.h ****  
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 69


  29:drums/bass_drum.h **** #ifndef PEAKS_DRUMS_BASS_DRUM_H_
  30:drums/bass_drum.h **** #define PEAKS_DRUMS_BASS_DRUM_H_
  31:drums/bass_drum.h **** 
  32:drums/bass_drum.h **** #include "stmlib/stmlib.h"
  33:drums/bass_drum.h **** 
  34:drums/bass_drum.h **** #include "drums/svf.h"
  35:drums/bass_drum.h **** #include "drums/excitation.h"
  36:drums/bass_drum.h **** 
  37:drums/bass_drum.h **** #include "gate_processor.h"
  38:drums/bass_drum.h **** 
  39:drums/bass_drum.h **** namespace peaks {
  40:drums/bass_drum.h **** 
  41:drums/bass_drum.h **** class BassDrum {
  42:drums/bass_drum.h ****  public:
  43:drums/bass_drum.h ****   BassDrum() { }
  44:drums/bass_drum.h ****   ~BassDrum() { }
  45:drums/bass_drum.h **** 
  46:drums/bass_drum.h ****   void Init();
  47:drums/bass_drum.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  48:drums/bass_drum.h ****   
  49:drums/bass_drum.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
 2449              		.loc 12 49 8 view .LVU669
 2450              	.LBB1046:
  50:drums/bass_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 2451              		.loc 12 50 5 view .LVU670
 2452 0000 012A     		cmp	r2, #1
 2453              	.LBB1047:
 2454              	.LBB1048:
  51:drums/bass_drum.h ****       set_frequency(0);
  52:drums/bass_drum.h ****       set_punch(40000);
  53:drums/bass_drum.h ****       set_tone(8192 + (parameter[0] >> 1));
 2455              		.loc 12 53 35 is_stmt 0 view .LVU671
 2456 0002 0B88     		ldrh	r3, [r1]
 2457              	.LBE1048:
 2458              	.LBE1047:
 2459              	.LBE1046:
 2460              	.LBE1045:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 2461              		.loc 1 159 3 view .LVU672
 2462 0004 10B5     		push	{r4, lr}
 2463              		.cfi_def_cfa_offset 8
 2464              		.cfi_offset 4, -8
 2465              		.cfi_offset 14, -4
 2466              	.LBB1125:
 2467              	.LBB1122:
 2468              	.LBB1083:
 2469              	.LBB1080:
 2470              	.LBB1049:
 2471              	.LBB1050:
  54:drums/bass_drum.h ****       set_decay(parameter[1]);
  55:drums/bass_drum.h ****     } else {
  56:drums/bass_drum.h ****       set_frequency(parameter[0] - 32768);
  57:drums/bass_drum.h ****       set_punch(parameter[1]);
  58:drums/bass_drum.h ****       set_tone(parameter[2]);
  59:drums/bass_drum.h ****       set_decay(parameter[3]);
  60:drums/bass_drum.h ****     }
  61:drums/bass_drum.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 70


  62:drums/bass_drum.h ****   
  63:drums/bass_drum.h ****   void set_frequency(int16_t frequency) {
  64:drums/bass_drum.h ****     frequency_ = (31 << 7) + (static_cast<int32_t>(frequency) * 896 >> 15);
  65:drums/bass_drum.h ****   }
  66:drums/bass_drum.h ****   
  67:drums/bass_drum.h ****   void set_decay(uint16_t decay) {
  68:drums/bass_drum.h ****     uint32_t scaled;
  69:drums/bass_drum.h ****     uint32_t squared;
  70:drums/bass_drum.h ****     scaled = 65535 - decay;
 2472              		.loc 12 70 22 view .LVU673
 2473 0006 4C88     		ldrh	r4, [r1, #2]
 2474              	.LBE1050:
 2475              	.LBE1049:
 2476              	.LBE1080:
 2477              	.LBE1083:
  50:drums/bass_drum.h ****       set_frequency(0);
 2478              		.loc 12 50 5 view .LVU674
 2479 0008 20D1     		bne	.L104
 2480              	.LVL183:
 2481              	.LBB1084:
 2482              	.LBI1047:
  49:drums/bass_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 2483              		.loc 12 49 8 is_stmt 1 view .LVU675
 2484              	.LBB1081:
  51:drums/bass_drum.h ****       set_punch(40000);
 2485              		.loc 12 51 7 view .LVU676
 2486              	.LBB1059:
 2487              	.LBI1059:
  63:drums/bass_drum.h ****     frequency_ = (31 << 7) + (static_cast<int32_t>(frequency) * 896 >> 15);
 2488              		.loc 12 63 8 view .LVU677
 2489              	.LBB1060:
  64:drums/bass_drum.h ****   }
 2490              		.loc 12 64 5 view .LVU678
 2491              	.LBE1060:
 2492              	.LBE1059:
  53:drums/bass_drum.h ****       set_decay(parameter[1]);
 2493              		.loc 12 53 37 is_stmt 0 view .LVU679
 2494 000a 5B08     		lsrs	r3, r3, #1
 2495              	.LBB1063:
 2496              	.LBB1061:
  64:drums/bass_drum.h ****   }
 2497              		.loc 12 64 16 view .LVU680
 2498 000c 4FF47861 		mov	r1, #3968
 2499              	.LVL184:
  64:drums/bass_drum.h ****   }
 2500              		.loc 12 64 16 view .LVU681
 2501              	.LBE1061:
 2502              	.LBE1063:
 2503              	.LBB1064:
 2504              	.LBB1057:
 2505              	.LBB1051:
 2506              	.LBB1052:
 2507              		.file 13 "./drums/svf.h"
   1:./drums/svf.h **** // Copyright 2013 Emilie Gillet.
   2:./drums/svf.h **** //
   3:./drums/svf.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./drums/svf.h **** //
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 71


   5:./drums/svf.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./drums/svf.h **** // of this software and associated documentation files (the "Software"), to deal
   7:./drums/svf.h **** // in the Software without restriction, including without limitation the rights
   8:./drums/svf.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./drums/svf.h **** // copies of the Software, and to permit persons to whom the Software is
  10:./drums/svf.h **** // furnished to do so, subject to the following conditions:
  11:./drums/svf.h **** // 
  12:./drums/svf.h **** // The above copyright notice and this permission notice shall be included in
  13:./drums/svf.h **** // all copies or substantial portions of the Software.
  14:./drums/svf.h **** // 
  15:./drums/svf.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./drums/svf.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./drums/svf.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./drums/svf.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./drums/svf.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./drums/svf.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./drums/svf.h **** // THE SOFTWARE.
  22:./drums/svf.h **** // 
  23:./drums/svf.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./drums/svf.h **** //
  25:./drums/svf.h **** // -----------------------------------------------------------------------------
  26:./drums/svf.h **** //
  27:./drums/svf.h **** // SVF used for modeling the bridged T-networks.
  28:./drums/svf.h **** 
  29:./drums/svf.h **** #ifndef PEAKS_DRUMS_SVF_H_
  30:./drums/svf.h **** #define PEAKS_DRUMS_SVF_H_
  31:./drums/svf.h **** 
  32:./drums/svf.h **** #include "stmlib/stmlib.h"
  33:./drums/svf.h **** #include "stmlib/utils/dsp.h"
  34:./drums/svf.h **** 
  35:./drums/svf.h **** #include "resources.h"
  36:./drums/svf.h **** 
  37:./drums/svf.h **** namespace peaks {
  38:./drums/svf.h **** 
  39:./drums/svf.h **** enum SvfMode {
  40:./drums/svf.h ****   SVF_MODE_LP,
  41:./drums/svf.h ****   SVF_MODE_BP,
  42:./drums/svf.h ****   SVF_MODE_HP
  43:./drums/svf.h **** };
  44:./drums/svf.h **** 
  45:./drums/svf.h **** class Svf {
  46:./drums/svf.h ****  public:
  47:./drums/svf.h ****   Svf() { }
  48:./drums/svf.h ****   ~Svf() { }
  49:./drums/svf.h ****   
  50:./drums/svf.h ****   inline void Init() {
  51:./drums/svf.h ****     lp_ = 0;
  52:./drums/svf.h ****     bp_ = 0;
  53:./drums/svf.h ****     frequency_ = 33 << 7;
  54:./drums/svf.h ****     resonance_ = 16384;
  55:./drums/svf.h ****     dirty_ = true;
  56:./drums/svf.h ****     punch_ = 0;
  57:./drums/svf.h ****   }
  58:./drums/svf.h ****   
  59:./drums/svf.h ****   inline void set_frequency(int16_t frequency) {
  60:./drums/svf.h ****     dirty_ = dirty_ || (frequency_ != frequency);
  61:./drums/svf.h ****     frequency_ = frequency;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 72


  62:./drums/svf.h ****   }
  63:./drums/svf.h ****   
  64:./drums/svf.h ****   inline void set_resonance(int16_t resonance) {
  65:./drums/svf.h ****     resonance_ = resonance;
  66:./drums/svf.h ****     dirty_ = true;
 2508              		.loc 13 66 12 view .LVU682
 2509 0010 80F8AC21 		strb	r2, [r0, #428]
 2510              	.LBE1052:
 2511              	.LBE1051:
 2512              	.LBE1057:
 2513              	.LBE1064:
 2514              	.LBB1065:
 2515              	.LBB1066:
  71:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
  72:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
  73:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
  74:drums/bass_drum.h ****   }
  75:drums/bass_drum.h ****   
  76:drums/bass_drum.h ****   void set_tone(uint16_t tone) {
  77:drums/bass_drum.h ****     uint32_t coefficient = tone;
 2516              		.loc 12 77 14 view .LVU683
 2517 0014 03F50053 		add	r3, r3, #8192
 2518              	.LBE1066:
 2519              	.LBE1065:
 2520              	.LBB1069:
 2521              	.LBB1062:
  64:drums/bass_drum.h ****   }
 2522              		.loc 12 64 16 view .LVU684
 2523 0018 C0F8CC11 		str	r1, [r0, #460]
 2524              	.LVL185:
  64:drums/bass_drum.h ****   }
 2525              		.loc 12 64 16 view .LVU685
 2526              	.LBE1062:
 2527              	.LBE1069:
  52:drums/bass_drum.h ****       set_tone(8192 + (parameter[0] >> 1));
 2528              		.loc 12 52 7 is_stmt 1 view .LVU686
 2529              	.LBB1070:
 2530              	.LBI1070:
  78:drums/bass_drum.h ****     coefficient = coefficient * coefficient >> 16;
  79:drums/bass_drum.h ****     lp_coefficient_ = 512 + (coefficient >> 2) * 3;
  80:drums/bass_drum.h ****   }
  81:drums/bass_drum.h **** 
  82:drums/bass_drum.h ****   void set_punch(uint16_t punch) {
 2531              		.loc 12 82 8 view .LVU687
 2532              	.LBE1070:
 2533              	.LBE1081:
 2534              	.LBE1084:
 2535              	.LBE1122:
 2536              	.LBE1125:
  83:drums/bass_drum.h ****     resonator_.set_punch(punch * punch >> 16);
 2537              		.loc 12 83 5 view .LVU688
 2538              	.LBB1126:
 2539              	.LBB1123:
 2540              	.LBB1085:
 2541              	.LBB1082:
 2542              	.LBB1075:
 2543              	.LBB1071:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 73


 2544              	.LBI1071:
  67:./drums/svf.h ****   }
  68:./drums/svf.h ****   
  69:./drums/svf.h ****   inline void set_punch(uint16_t punch) {
 2545              		.loc 13 69 15 view .LVU689
 2546              	.LBB1072:
  70:./drums/svf.h ****     punch_ = (static_cast<uint32_t>(punch) * punch) >> 24;
 2547              		.loc 13 70 5 view .LVU690
 2548              		.loc 13 70 12 is_stmt 0 view .LVU691
 2549 001c 2321     		movs	r1, #35
 2550              	.LBE1072:
 2551              	.LBE1071:
 2552              	.LBE1075:
 2553              	.LBB1076:
 2554              	.LBB1067:
  78:drums/bass_drum.h ****     lp_coefficient_ = 512 + (coefficient >> 2) * 3;
 2555              		.loc 12 78 31 view .LVU692
 2556 001e 5B43     		muls	r3, r3, r3
 2557              	.LBE1067:
 2558              	.LBE1076:
 2559              	.LBB1077:
 2560              	.LBB1074:
 2561              	.LBB1073:
 2562              		.loc 13 70 12 view .LVU693
 2563 0020 C0F8B411 		str	r1, [r0, #436]
 2564              	.LVL186:
 2565              		.loc 13 70 12 view .LVU694
 2566              	.LBE1073:
 2567              	.LBE1074:
 2568              	.LBE1077:
  53:drums/bass_drum.h ****       set_decay(parameter[1]);
 2569              		.loc 12 53 7 is_stmt 1 view .LVU695
 2570              	.LBB1078:
 2571              	.LBI1065:
  76:drums/bass_drum.h ****     uint32_t coefficient = tone;
 2572              		.loc 12 76 8 view .LVU696
 2573              	.LBB1068:
  77:drums/bass_drum.h ****     coefficient = coefficient * coefficient >> 16;
 2574              		.loc 12 77 5 view .LVU697
  78:drums/bass_drum.h ****     lp_coefficient_ = 512 + (coefficient >> 2) * 3;
 2575              		.loc 12 78 5 view .LVU698
  79:drums/bass_drum.h ****   }
 2576              		.loc 12 79 5 view .LVU699
  79:drums/bass_drum.h ****   }
 2577              		.loc 12 79 42 is_stmt 0 view .LVU700
 2578 0024 9B0C     		lsrs	r3, r3, #18
  79:drums/bass_drum.h ****   }
 2579              		.loc 12 79 48 view .LVU701
 2580 0026 03EB4303 		add	r3, r3, r3, lsl #1
  79:drums/bass_drum.h ****   }
 2581              		.loc 12 79 27 view .LVU702
 2582 002a 03F50073 		add	r3, r3, #512
  79:drums/bass_drum.h ****   }
 2583              		.loc 12 79 21 view .LVU703
 2584 002e C0F8D031 		str	r3, [r0, #464]
 2585              	.LVL187:
  79:drums/bass_drum.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 74


 2586              		.loc 12 79 21 view .LVU704
 2587              	.LBE1068:
 2588              	.LBE1078:
  54:drums/bass_drum.h ****     } else {
 2589              		.loc 12 54 7 is_stmt 1 view .LVU705
 2590              	.LBB1079:
 2591              	.LBI1049:
  67:drums/bass_drum.h ****     uint32_t scaled;
 2592              		.loc 12 67 8 view .LVU706
 2593              	.LBB1058:
  68:drums/bass_drum.h ****     uint32_t squared;
 2594              		.loc 12 68 5 view .LVU707
  69:drums/bass_drum.h ****     scaled = 65535 - decay;
 2595              		.loc 12 69 5 view .LVU708
  70:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
 2596              		.loc 12 70 5 view .LVU709
  70:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
 2597              		.loc 12 70 20 is_stmt 0 view .LVU710
 2598 0032 C4F57F43 		rsb	r3, r4, #65280
 2599 0036 FF33     		adds	r3, r3, #255
 2600              	.LVL188:
  71:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
 2601              		.loc 12 71 5 is_stmt 1 view .LVU711
  72:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
 2602              		.loc 12 72 5 view .LVU712
  71:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
 2603              		.loc 12 71 22 is_stmt 0 view .LVU713
 2604 0038 03FB03F4 		mul	r4, r3, r3
  71:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
 2605              		.loc 12 71 13 view .LVU714
 2606 003c 240C     		lsrs	r4, r4, #16
 2607              	.LVL189:
  72:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
 2608              		.loc 12 72 22 view .LVU715
 2609 003e 5C43     		muls	r4, r3, r4
 2610              	.LVL190:
  73:drums/bass_drum.h ****   }
 2611              		.loc 12 73 5 is_stmt 1 view .LVU716
 2612              	.LBB1055:
 2613              	.LBI1051:
  64:./drums/svf.h ****     resonance_ = resonance;
 2614              		.loc 13 64 15 view .LVU717
 2615              	.LBB1053:
  65:./drums/svf.h ****     dirty_ = true;
 2616              		.loc 13 65 5 view .LVU718
 2617              	.LBE1053:
 2618              	.LBE1055:
  72:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
 2619              		.loc 12 72 12 is_stmt 0 view .LVU719
 2620 0040 A40C     		lsrs	r4, r4, #18
 2621              	.LVL191:
  73:drums/bass_drum.h ****   }
 2622              		.loc 12 73 42 view .LVU720
 2623 0042 C4F5FF44 		rsb	r4, r4, #32640
 2624              	.LVL192:
 2625              	.LBB1056:
 2626              	.LBB1054:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 75


  65:./drums/svf.h ****     dirty_ = true;
 2627              		.loc 13 65 16 view .LVU721
 2628 0046 A0F8B041 		strh	r4, [r0, #432]	@ movhi
  66:./drums/svf.h ****   }
 2629              		.loc 13 66 5 is_stmt 1 view .LVU722
 2630              	.LVL193:
 2631              	.L103:
  66:./drums/svf.h ****   }
 2632              		.loc 13 66 5 is_stmt 0 view .LVU723
 2633              	.LBE1054:
 2634              	.LBE1056:
 2635              	.LBE1058:
 2636              	.LBE1079:
 2637              	.LBE1082:
 2638              	.LBE1085:
 2639              	.LBE1123:
 2640              	.LBE1126:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 2641              		.loc 1 159 3 view .LVU724
 2642 004a 10BD     		pop	{r4, pc}
 2643              	.LVL194:
 2644              	.L104:
 2645              	.LBB1127:
 2646              	.LBB1124:
  56:drums/bass_drum.h ****       set_punch(parameter[1]);
 2647              		.loc 12 56 7 is_stmt 1 view .LVU725
 2648              	.LBB1086:
 2649              	.LBI1086:
  63:drums/bass_drum.h ****     frequency_ = (31 << 7) + (static_cast<int32_t>(frequency) * 896 >> 15);
 2650              		.loc 12 63 8 view .LVU726
 2651              	.LBB1087:
  64:drums/bass_drum.h ****   }
 2652              		.loc 12 64 5 view .LVU727
 2653              	.LBE1087:
 2654              	.LBE1086:
  56:drums/bass_drum.h ****       set_punch(parameter[1]);
 2655              		.loc 12 56 34 is_stmt 0 view .LVU728
 2656 004c A3F50043 		sub	r3, r3, #32768
 2657              	.LVL195:
 2658              	.LBB1092:
 2659              	.LBB1093:
 2660              		.loc 12 83 32 view .LVU729
 2661 0050 6443     		muls	r4, r4, r4
 2662              	.LBE1093:
 2663              	.LBE1092:
 2664              	.LBB1106:
 2665              	.LBB1088:
  64:drums/bass_drum.h ****   }
 2666              		.loc 12 64 63 view .LVU730
 2667 0052 1BB2     		sxth	r3, r3
 2668 0054 240C     		lsrs	r4, r4, #16
 2669 0056 C3EBC303 		rsb	r3, r3, r3, lsl #3
 2670              	.LBE1088:
 2671              	.LBE1106:
 2672              	.LBB1107:
 2673              	.LBB1102:
 2674              	.LBB1094:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 76


 2675              	.LBB1095:
 2676              		.loc 13 70 44 view .LVU731
 2677 005a 6443     		muls	r4, r4, r4
 2678              	.LBE1095:
 2679              	.LBE1094:
 2680              	.LBE1102:
 2681              	.LBE1107:
 2682              	.LBB1108:
 2683              	.LBB1089:
  64:drums/bass_drum.h ****   }
 2684              		.loc 12 64 69 view .LVU732
 2685 005c 1B12     		asrs	r3, r3, #8
 2686              	.LBE1089:
 2687              	.LBE1108:
 2688              	.LBB1109:
 2689              	.LBB1103:
 2690              	.LBB1099:
 2691              	.LBB1096:
 2692              		.loc 13 70 53 view .LVU733
 2693 005e 240E     		lsrs	r4, r4, #24
 2694              	.LBE1096:
 2695              	.LBE1099:
 2696              	.LBE1103:
 2697              	.LBE1109:
 2698              	.LBB1110:
 2699              	.LBB1090:
  64:drums/bass_drum.h ****   }
 2700              		.loc 12 64 28 view .LVU734
 2701 0060 03F57863 		add	r3, r3, #3968
 2702              	.LBE1090:
 2703              	.LBE1110:
 2704              	.LBB1111:
 2705              	.LBB1104:
 2706              	.LBB1100:
 2707              	.LBB1097:
 2708              		.loc 13 70 12 view .LVU735
 2709 0064 C0F8B441 		str	r4, [r0, #436]
 2710              	.LBE1097:
 2711              	.LBE1100:
 2712              	.LBE1104:
 2713              	.LBE1111:
 2714              	.LBB1112:
 2715              	.LBB1091:
  64:drums/bass_drum.h ****   }
 2716              		.loc 12 64 16 view .LVU736
 2717 0068 C0F8CC31 		str	r3, [r0, #460]
 2718              	.LVL196:
  64:drums/bass_drum.h ****   }
 2719              		.loc 12 64 16 view .LVU737
 2720              	.LBE1091:
 2721              	.LBE1112:
  57:drums/bass_drum.h ****       set_tone(parameter[2]);
 2722              		.loc 12 57 7 is_stmt 1 view .LVU738
 2723              	.LBB1113:
 2724              	.LBI1092:
  82:drums/bass_drum.h ****     resonator_.set_punch(punch * punch >> 16);
 2725              		.loc 12 82 8 view .LVU739
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 77


 2726              	.LBB1105:
 2727              		.loc 12 83 5 view .LVU740
 2728              	.LBB1101:
 2729              	.LBI1094:
  69:./drums/svf.h ****     punch_ = (static_cast<uint32_t>(punch) * punch) >> 24;
 2730              		.loc 13 69 15 view .LVU741
 2731              	.LBB1098:
 2732              		.loc 13 70 5 view .LVU742
 2733              		.loc 13 70 5 is_stmt 0 view .LVU743
 2734              	.LBE1098:
 2735              	.LBE1101:
 2736              	.LBE1105:
 2737              	.LBE1113:
  58:drums/bass_drum.h ****       set_decay(parameter[3]);
 2738              		.loc 12 58 7 is_stmt 1 view .LVU744
 2739              	.LBB1114:
 2740              	.LBI1114:
  76:drums/bass_drum.h ****     uint32_t coefficient = tone;
 2741              		.loc 12 76 8 view .LVU745
 2742              	.LBB1115:
  77:drums/bass_drum.h ****     coefficient = coefficient * coefficient >> 16;
 2743              		.loc 12 77 5 view .LVU746
  77:drums/bass_drum.h ****     coefficient = coefficient * coefficient >> 16;
 2744              		.loc 12 77 14 is_stmt 0 view .LVU747
 2745 006c 8B88     		ldrh	r3, [r1, #4]
 2746              	.LVL197:
  78:drums/bass_drum.h ****     lp_coefficient_ = 512 + (coefficient >> 2) * 3;
 2747              		.loc 12 78 5 is_stmt 1 view .LVU748
  79:drums/bass_drum.h ****   }
 2748              		.loc 12 79 5 view .LVU749
  78:drums/bass_drum.h ****     lp_coefficient_ = 512 + (coefficient >> 2) * 3;
 2749              		.loc 12 78 31 is_stmt 0 view .LVU750
 2750 006e 5B43     		muls	r3, r3, r3
 2751              	.LVL198:
  79:drums/bass_drum.h ****   }
 2752              		.loc 12 79 42 view .LVU751
 2753 0070 9B0C     		lsrs	r3, r3, #18
  79:drums/bass_drum.h ****   }
 2754              		.loc 12 79 48 view .LVU752
 2755 0072 03EB4303 		add	r3, r3, r3, lsl #1
  79:drums/bass_drum.h ****   }
 2756              		.loc 12 79 27 view .LVU753
 2757 0076 03F50073 		add	r3, r3, #512
  79:drums/bass_drum.h ****   }
 2758              		.loc 12 79 21 view .LVU754
 2759 007a C0F8D031 		str	r3, [r0, #464]
 2760              	.LVL199:
  79:drums/bass_drum.h ****   }
 2761              		.loc 12 79 21 view .LVU755
 2762              	.LBE1115:
 2763              	.LBE1114:
  59:drums/bass_drum.h ****     }
 2764              		.loc 12 59 7 is_stmt 1 view .LVU756
 2765              	.LBB1116:
 2766              	.LBI1116:
  67:drums/bass_drum.h ****     uint32_t scaled;
 2767              		.loc 12 67 8 view .LVU757
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 78


 2768              	.LBB1117:
  68:drums/bass_drum.h ****     uint32_t squared;
 2769              		.loc 12 68 5 view .LVU758
  69:drums/bass_drum.h ****     scaled = 65535 - decay;
 2770              		.loc 12 69 5 view .LVU759
  70:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
 2771              		.loc 12 70 5 view .LVU760
  70:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
 2772              		.loc 12 70 22 is_stmt 0 view .LVU761
 2773 007e CB88     		ldrh	r3, [r1, #6]
  70:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
 2774              		.loc 12 70 20 view .LVU762
 2775 0080 C3F57F42 		rsb	r2, r3, #65280
 2776              	.LVL200:
  70:drums/bass_drum.h ****     squared = scaled * scaled >> 16;
 2777              		.loc 12 70 20 view .LVU763
 2778 0084 FF32     		adds	r2, r2, #255
 2779              	.LVL201:
  71:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
 2780              		.loc 12 71 5 is_stmt 1 view .LVU764
  72:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
 2781              		.loc 12 72 5 view .LVU765
  71:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
 2782              		.loc 12 71 22 is_stmt 0 view .LVU766
 2783 0086 02FB02F3 		mul	r3, r2, r2
  71:drums/bass_drum.h ****     scaled = squared * scaled >> 18;
 2784              		.loc 12 71 13 view .LVU767
 2785 008a 1B0C     		lsrs	r3, r3, #16
 2786              	.LVL202:
  72:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
 2787              		.loc 12 72 22 view .LVU768
 2788 008c 5343     		muls	r3, r2, r3
 2789              	.LVL203:
  73:drums/bass_drum.h ****   }
 2790              		.loc 12 73 5 is_stmt 1 view .LVU769
 2791              	.LBB1118:
 2792              	.LBI1118:
  64:./drums/svf.h ****     resonance_ = resonance;
 2793              		.loc 13 64 15 view .LVU770
 2794              	.LBB1119:
  65:./drums/svf.h ****     dirty_ = true;
 2795              		.loc 13 65 5 view .LVU771
 2796              	.LBE1119:
 2797              	.LBE1118:
  72:drums/bass_drum.h ****     resonator_.set_resonance(32768 - 128 - scaled);
 2798              		.loc 12 72 12 is_stmt 0 view .LVU772
 2799 008e 9B0C     		lsrs	r3, r3, #18
 2800              	.LVL204:
  73:drums/bass_drum.h ****   }
 2801              		.loc 12 73 42 view .LVU773
 2802 0090 C3F5FF43 		rsb	r3, r3, #32640
 2803              	.LVL205:
 2804              	.LBB1121:
 2805              	.LBB1120:
  65:./drums/svf.h ****     dirty_ = true;
 2806              		.loc 13 65 16 view .LVU774
 2807 0094 A0F8B031 		strh	r3, [r0, #432]	@ movhi
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 79


 2808              	.LVL206:
  66:./drums/svf.h ****   }
 2809              		.loc 13 66 5 is_stmt 1 view .LVU775
  66:./drums/svf.h ****   }
 2810              		.loc 13 66 12 is_stmt 0 view .LVU776
 2811 0098 0123     		movs	r3, #1
 2812 009a 80F8AC31 		strb	r3, [r0, #428]
 2813              	.LVL207:
  66:./drums/svf.h ****   }
 2814              		.loc 13 66 12 view .LVU777
 2815              	.LBE1120:
 2816              	.LBE1121:
 2817              	.LBE1117:
 2818              	.LBE1116:
 2819              	.LBE1124:
 2820              	.LBE1127:
 159:processors.h  ****   DECLARE_PROCESSOR(SnareDrum, snare_drum_);
 2821              		.loc 1 159 3 view .LVU778
 2822 009e D4E7     		b	.L103
 2823              		.cfi_endproc
 2824              	.LFE1609:
 2826              		.section	.text._ZN5peaks9SnareDrum13set_frequencyEs,"axG",%progbits,_ZN5peaks9SnareDrum13set_frequ
 2827              		.align	1
 2828              		.weak	_ZN5peaks9SnareDrum13set_frequencyEs
 2829              		.syntax unified
 2830              		.thumb
 2831              		.thumb_func
 2832              		.fpu fpv5-d16
 2834              	_ZN5peaks9SnareDrum13set_frequencyEs:
 2835              	.LVL208:
 2836              	.LFB1480:
 2837              		.file 14 "drums/snare_drum.h"
   1:drums/snare_drum.h **** // Copyright 2013 Emilie Gillet.
   2:drums/snare_drum.h **** //
   3:drums/snare_drum.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:drums/snare_drum.h **** //
   5:drums/snare_drum.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:drums/snare_drum.h **** // of this software and associated documentation files (the "Software"), to deal
   7:drums/snare_drum.h **** // in the Software without restriction, including without limitation the rights
   8:drums/snare_drum.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:drums/snare_drum.h **** // copies of the Software, and to permit persons to whom the Software is
  10:drums/snare_drum.h **** // furnished to do so, subject to the following conditions:
  11:drums/snare_drum.h **** // 
  12:drums/snare_drum.h **** // The above copyright notice and this permission notice shall be included in
  13:drums/snare_drum.h **** // all copies or substantial portions of the Software.
  14:drums/snare_drum.h **** // 
  15:drums/snare_drum.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:drums/snare_drum.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:drums/snare_drum.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:drums/snare_drum.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:drums/snare_drum.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:drums/snare_drum.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:drums/snare_drum.h **** // THE SOFTWARE.
  22:drums/snare_drum.h **** // 
  23:drums/snare_drum.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:drums/snare_drum.h **** //
  25:drums/snare_drum.h **** // -----------------------------------------------------------------------------
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 80


  26:drums/snare_drum.h **** //
  27:drums/snare_drum.h **** // 808-style snare drum.
  28:drums/snare_drum.h ****  
  29:drums/snare_drum.h **** #ifndef PEAKS_DRUMS_SNARE_DRUM_H_
  30:drums/snare_drum.h **** #define PEAKS_DRUMS_SNARE_DRUM_H_
  31:drums/snare_drum.h **** 
  32:drums/snare_drum.h **** #include "stmlib/stmlib.h"
  33:drums/snare_drum.h **** 
  34:drums/snare_drum.h **** #include "drums/svf.h"
  35:drums/snare_drum.h **** #include "drums/excitation.h"
  36:drums/snare_drum.h **** 
  37:drums/snare_drum.h **** #include <cstdio>
  38:drums/snare_drum.h **** 
  39:drums/snare_drum.h **** #include "gate_processor.h"
  40:drums/snare_drum.h **** 
  41:drums/snare_drum.h **** namespace peaks {
  42:drums/snare_drum.h **** 
  43:drums/snare_drum.h **** class SnareDrum {
  44:drums/snare_drum.h ****  public:
  45:drums/snare_drum.h ****   SnareDrum() { }
  46:drums/snare_drum.h ****   ~SnareDrum() { }
  47:drums/snare_drum.h **** 
  48:drums/snare_drum.h ****   void Init();
  49:drums/snare_drum.h ****   void Process(const GateFlags* gate_flags, int16_t* out, size_t size);
  50:drums/snare_drum.h ****   
  51:drums/snare_drum.h ****   void Configure(uint16_t* parameter, ControlMode control_mode) {
  52:drums/snare_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
  53:drums/snare_drum.h ****       set_frequency(0);
  54:drums/snare_drum.h ****       set_decay(32768);
  55:drums/snare_drum.h ****       set_tone(parameter[0]);
  56:drums/snare_drum.h ****       set_snappy(parameter[1]);
  57:drums/snare_drum.h ****     } else {
  58:drums/snare_drum.h ****       set_frequency(parameter[0] - 32768);
  59:drums/snare_drum.h ****       set_tone(parameter[1]);
  60:drums/snare_drum.h ****       set_snappy(parameter[2]);
  61:drums/snare_drum.h ****       set_decay(parameter[3]);
  62:drums/snare_drum.h ****     }
  63:drums/snare_drum.h ****   }
  64:drums/snare_drum.h **** 
  65:drums/snare_drum.h ****   void set_tone(uint16_t tone) {
  66:drums/snare_drum.h ****     gain_1_ = 22000 - (tone >> 2);
  67:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
  68:drums/snare_drum.h ****   }
  69:drums/snare_drum.h **** 
  70:drums/snare_drum.h ****   void set_snappy(uint16_t snappy) {
  71:drums/snare_drum.h ****     snappy >>= 1;
  72:drums/snare_drum.h ****     if (snappy >= 28672) {
  73:drums/snare_drum.h ****       snappy = 28672;
  74:drums/snare_drum.h ****     }
  75:drums/snare_drum.h ****     snappy_ = 512 + snappy;
  76:drums/snare_drum.h ****   }
  77:drums/snare_drum.h **** 
  78:drums/snare_drum.h ****   void set_decay(uint16_t decay) {
  79:drums/snare_drum.h ****     body_1_.set_resonance(29000 + (decay >> 5));
  80:drums/snare_drum.h ****     body_2_.set_resonance(26500 + (decay >> 5));
  81:drums/snare_drum.h ****     excitation_noise_.set_decay(4092 + (decay >> 14));
  82:drums/snare_drum.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 81


  83:drums/snare_drum.h ****   
  84:drums/snare_drum.h ****   void set_frequency(int16_t frequency) {
 2838              		.loc 14 84 8 is_stmt 1 view -0
 2839              		.cfi_startproc
 2840              		@ args = 0, pretend = 0, frame = 0
 2841              		@ frame_needed = 0, uses_anonymous_args = 0
 2842              		@ link register save eliminated.
  85:drums/snare_drum.h ****     int16_t base_note = 52 << 7;
 2843              		.loc 14 85 5 view .LVU780
  86:drums/snare_drum.h ****     int32_t transposition = frequency;
 2844              		.loc 14 86 5 view .LVU781
  87:drums/snare_drum.h ****     base_note += transposition * 896 >> 15;
 2845              		.loc 14 87 5 view .LVU782
 2846              		.loc 14 87 32 is_stmt 0 view .LVU783
 2847 0000 C1EBC101 		rsb	r1, r1, r1, lsl #3
 2848              	.LVL209:
 2849              	.LBB1134:
 2850              	.LBB1135:
  60:./drums/svf.h ****     frequency_ = frequency;
 2851              		.loc 13 60 14 view .LVU784
 2852 0004 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2853              	.LBE1135:
 2854              	.LBE1134:
 2855              		.loc 14 87 15 view .LVU785
 2856 0008 C1F30F21 		ubfx	r1, r1, #8, #16
 2857 000c 01F5D052 		add	r2, r1, #6656
 2858 0010 12B2     		sxth	r2, r2
 2859              	.LVL210:
  88:drums/snare_drum.h ****     body_1_.set_frequency(base_note);
 2860              		.loc 14 88 5 is_stmt 1 view .LVU786
 2861              	.LBB1137:
 2862              	.LBI1134:
  59:./drums/svf.h ****     dirty_ = dirty_ || (frequency_ != frequency);
 2863              		.loc 13 59 15 view .LVU787
 2864              	.LBB1136:
  60:./drums/svf.h ****     frequency_ = frequency;
 2865              		.loc 13 60 5 view .LVU788
  60:./drums/svf.h ****     frequency_ = frequency;
 2866              		.loc 13 60 21 is_stmt 0 view .LVU789
 2867 0012 23B9     		cbnz	r3, .L107
 2868 0014 B0F95230 		ldrsh	r3, [r0, #82]
 2869 0018 9B1A     		subs	r3, r3, r2
 2870 001a 18BF     		it	ne
 2871 001c 0123     		movne	r3, #1
 2872              	.L107:
  60:./drums/svf.h ****     frequency_ = frequency;
 2873              		.loc 13 60 12 view .LVU790
 2874 001e 80F85030 		strb	r3, [r0, #80]
  61:./drums/svf.h ****   }
 2875              		.loc 13 61 5 is_stmt 1 view .LVU791
  61:./drums/svf.h ****   }
 2876              		.loc 13 61 16 is_stmt 0 view .LVU792
 2877 0022 A0F85220 		strh	r2, [r0, #82]	@ movhi
 2878              	.LVL211:
  61:./drums/svf.h ****   }
 2879              		.loc 13 61 16 view .LVU793
 2880              	.LBE1136:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 82


 2881              	.LBE1137:
  89:drums/snare_drum.h ****     body_2_.set_frequency(base_note + (12 << 7));
 2882              		.loc 14 89 5 is_stmt 1 view .LVU794
 2883              		.loc 14 89 37 is_stmt 0 view .LVU795
 2884 0026 01F50052 		add	r2, r1, #8192
 2885              	.LVL212:
 2886              	.LBB1138:
 2887              	.LBB1139:
  60:./drums/svf.h ****     frequency_ = frequency;
 2888              		.loc 13 60 14 view .LVU796
 2889 002a 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2890              	.LBE1139:
 2891              	.LBE1138:
 2892              		.loc 14 89 26 view .LVU797
 2893 002e 12B2     		sxth	r2, r2
 2894              	.LVL213:
 2895              	.LBB1143:
 2896              	.LBI1138:
  59:./drums/svf.h ****     dirty_ = dirty_ || (frequency_ != frequency);
 2897              		.loc 13 59 15 is_stmt 1 view .LVU798
 2898              	.LBB1140:
  60:./drums/svf.h ****     frequency_ = frequency;
 2899              		.loc 13 60 5 view .LVU799
  60:./drums/svf.h ****     frequency_ = frequency;
 2900              		.loc 13 60 21 is_stmt 0 view .LVU800
 2901 0030 23B9     		cbnz	r3, .L108
  60:./drums/svf.h ****     frequency_ = frequency;
 2902              		.loc 13 60 21 view .LVU801
 2903 0032 B0F97230 		ldrsh	r3, [r0, #114]
 2904 0036 9B1A     		subs	r3, r3, r2
 2905 0038 18BF     		it	ne
 2906 003a 0123     		movne	r3, #1
 2907              	.L108:
 2908              	.LBE1140:
 2909              	.LBE1143:
  90:drums/snare_drum.h ****     noise_.set_frequency(base_note + (48 << 7));
 2910              		.loc 14 90 36 view .LVU802
 2911 003c 01F54851 		add	r1, r1, #12800
 2912              	.LBB1144:
 2913              	.LBB1141:
  60:./drums/svf.h ****     frequency_ = frequency;
 2914              		.loc 13 60 12 view .LVU803
 2915 0040 80F87030 		strb	r3, [r0, #112]
  61:./drums/svf.h ****   }
 2916              		.loc 13 61 5 is_stmt 1 view .LVU804
 2917              	.LBE1141:
 2918              	.LBE1144:
 2919              	.LBB1145:
 2920              	.LBB1146:
  60:./drums/svf.h ****     frequency_ = frequency;
 2921              		.loc 13 60 14 is_stmt 0 view .LVU805
 2922 0044 90F89030 		ldrb	r3, [r0, #144]	@ zero_extendqisi2
 2923              	.LBE1146:
 2924              	.LBE1145:
 2925              		.loc 14 90 25 view .LVU806
 2926 0048 09B2     		sxth	r1, r1
 2927              	.LBB1148:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 83


 2928              	.LBB1142:
  61:./drums/svf.h ****   }
 2929              		.loc 13 61 16 view .LVU807
 2930 004a A0F87220 		strh	r2, [r0, #114]	@ movhi
 2931              	.LVL214:
  61:./drums/svf.h ****   }
 2932              		.loc 13 61 16 view .LVU808
 2933              	.LBE1142:
 2934              	.LBE1148:
 2935              		.loc 14 90 5 is_stmt 1 view .LVU809
 2936              	.LBB1149:
 2937              	.LBI1145:
  59:./drums/svf.h ****     dirty_ = dirty_ || (frequency_ != frequency);
 2938              		.loc 13 59 15 view .LVU810
 2939              	.LBB1147:
  60:./drums/svf.h ****     frequency_ = frequency;
 2940              		.loc 13 60 5 view .LVU811
  60:./drums/svf.h ****     frequency_ = frequency;
 2941              		.loc 13 60 21 is_stmt 0 view .LVU812
 2942 004e 23B9     		cbnz	r3, .L109
 2943 0050 B0F99230 		ldrsh	r3, [r0, #146]
 2944 0054 5B1A     		subs	r3, r3, r1
 2945 0056 18BF     		it	ne
 2946 0058 0123     		movne	r3, #1
 2947              	.L109:
  60:./drums/svf.h ****     frequency_ = frequency;
 2948              		.loc 13 60 12 view .LVU813
 2949 005a 80F89030 		strb	r3, [r0, #144]
  61:./drums/svf.h ****   }
 2950              		.loc 13 61 5 is_stmt 1 view .LVU814
  61:./drums/svf.h ****   }
 2951              		.loc 13 61 16 is_stmt 0 view .LVU815
 2952 005e A0F89210 		strh	r1, [r0, #146]	@ movhi
 2953              	.LVL215:
  61:./drums/svf.h ****   }
 2954              		.loc 13 61 16 view .LVU816
 2955              	.LBE1147:
 2956              	.LBE1149:
  91:drums/snare_drum.h ****   }
 2957              		.loc 14 91 3 view .LVU817
 2958 0062 7047     		bx	lr
 2959              		.cfi_endproc
 2960              	.LFE1480:
 2962              		.section	.text._ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE,"axG",%progbits,_ZN5p
 2963              		.align	1
 2964              		.weak	_ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE
 2965              		.syntax unified
 2966              		.thumb
 2967              		.thumb_func
 2968              		.fpu fpv5-d16
 2970              	_ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE:
 2971              	.LVL216:
 2972              	.LFB1612:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 2973              		.loc 1 160 3 is_stmt 1 view -0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 84


 2976              		@ frame_needed = 0, uses_anonymous_args = 0
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 2977              		.loc 1 160 3 view .LVU819
 2978              	.LBB1178:
 2979              	.LBB1179:
  52:drums/snare_drum.h ****       set_frequency(0);
 2980              		.loc 14 52 5 is_stmt 0 view .LVU820
 2981 0000 012A     		cmp	r2, #1
 2982              	.LBE1179:
 2983              	.LBE1178:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 2984              		.loc 1 160 3 view .LVU821
 2985 0002 70B5     		push	{r4, r5, r6, lr}
 2986              		.cfi_def_cfa_offset 16
 2987              		.cfi_offset 4, -16
 2988              		.cfi_offset 5, -12
 2989              		.cfi_offset 6, -8
 2990              		.cfi_offset 14, -4
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 2991              		.loc 1 160 3 view .LVU822
 2992 0004 0446     		mov	r4, r0
 2993 0006 0D46     		mov	r5, r1
 2994 0008 1646     		mov	r6, r2
 2995 000a 00F5EC70 		add	r0, r0, #472
 2996              	.LVL217:
 2997              	.LBB1240:
 2998              	.LBI1178:
  51:drums/snare_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 2999              		.loc 14 51 8 is_stmt 1 view .LVU823
 3000              	.LBB1235:
  52:drums/snare_drum.h ****       set_frequency(0);
 3001              		.loc 14 52 5 view .LVU824
 3002 000e 29D1     		bne	.L111
 3003              	.LVL218:
 3004              	.LBB1180:
 3005              	.LBI1180:
  51:drums/snare_drum.h ****     if (control_mode == CONTROL_MODE_HALF) {
 3006              		.loc 14 51 8 view .LVU825
 3007              	.LBB1181:
  53:drums/snare_drum.h ****       set_decay(32768);
 3008              		.loc 14 53 7 view .LVU826
  53:drums/snare_drum.h ****       set_decay(32768);
 3009              		.loc 14 53 20 is_stmt 0 view .LVU827
 3010 0010 0021     		movs	r1, #0
 3011              	.LVL219:
  53:drums/snare_drum.h ****       set_decay(32768);
 3012              		.loc 14 53 20 view .LVU828
 3013 0012 FFF7FEFF 		bl	_ZN5peaks9SnareDrum13set_frequencyEs
 3014              	.LVL220:
  54:drums/snare_drum.h ****       set_tone(parameter[0]);
 3015              		.loc 14 54 7 is_stmt 1 view .LVU829
 3016              	.LBB1182:
 3017              	.LBI1182:
  78:drums/snare_drum.h ****     body_1_.set_resonance(29000 + (decay >> 5));
 3018              		.loc 14 78 8 view .LVU830
 3019              	.LBE1182:
 3020              	.LBE1181:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 85


 3021              	.LBE1180:
 3022              	.LBE1235:
 3023              	.LBE1240:
  79:drums/snare_drum.h ****     body_2_.set_resonance(26500 + (decay >> 5));
 3024              		.loc 14 79 5 view .LVU831
 3025              	.LBB1241:
 3026              	.LBB1236:
 3027              	.LBB1204:
 3028              	.LBB1201:
 3029              	.LBB1191:
 3030              	.LBB1183:
 3031              	.LBI1183:
  64:./drums/svf.h ****     resonance_ = resonance;
 3032              		.loc 13 64 15 view .LVU832
 3033              	.LBB1184:
  65:./drums/svf.h ****     dirty_ = true;
 3034              		.loc 13 65 5 view .LVU833
  65:./drums/svf.h ****     dirty_ = true;
 3035              		.loc 13 65 16 is_stmt 0 view .LVU834
 3036 0016 47F24853 		movw	r3, #30024
  66:./drums/svf.h ****   }
 3037              		.loc 13 66 12 view .LVU835
 3038 001a 84F82862 		strb	r6, [r4, #552]
  65:./drums/svf.h ****     dirty_ = true;
 3039              		.loc 13 65 16 view .LVU836
 3040 001e A4F82C32 		strh	r3, [r4, #556]	@ movhi
  66:./drums/svf.h ****   }
 3041              		.loc 13 66 5 is_stmt 1 view .LVU837
 3042              	.LVL221:
  66:./drums/svf.h ****   }
 3043              		.loc 13 66 5 is_stmt 0 view .LVU838
 3044              	.LBE1184:
 3045              	.LBE1183:
 3046              	.LBE1191:
 3047              	.LBE1201:
 3048              	.LBE1204:
 3049              	.LBE1236:
 3050              	.LBE1241:
  80:drums/snare_drum.h ****     excitation_noise_.set_decay(4092 + (decay >> 14));
 3051              		.loc 14 80 5 is_stmt 1 view .LVU839
 3052              	.LBB1242:
 3053              	.LBB1237:
 3054              	.LBB1205:
 3055              	.LBB1202:
 3056              	.LBB1192:
 3057              	.LBB1185:
 3058              	.LBI1185:
  64:./drums/svf.h ****     resonance_ = resonance;
 3059              		.loc 13 64 15 view .LVU840
 3060              	.LBB1186:
  65:./drums/svf.h ****     dirty_ = true;
 3061              		.loc 13 65 5 view .LVU841
  65:./drums/svf.h ****     dirty_ = true;
 3062              		.loc 13 65 16 is_stmt 0 view .LVU842
 3063 0022 46F68433 		movw	r3, #27524
  66:./drums/svf.h ****   }
 3064              		.loc 13 66 12 view .LVU843
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 86


 3065 0026 84F84862 		strb	r6, [r4, #584]
  65:./drums/svf.h ****     dirty_ = true;
 3066              		.loc 13 65 16 view .LVU844
 3067 002a A4F84C32 		strh	r3, [r4, #588]	@ movhi
  66:./drums/svf.h ****   }
 3068              		.loc 13 66 5 is_stmt 1 view .LVU845
 3069              	.LVL222:
  66:./drums/svf.h ****   }
 3070              		.loc 13 66 5 is_stmt 0 view .LVU846
 3071              	.LBE1186:
 3072              	.LBE1185:
 3073              	.LBE1192:
 3074              	.LBE1202:
 3075              	.LBE1205:
 3076              	.LBE1237:
 3077              	.LBE1242:
  81:drums/snare_drum.h ****   }
 3078              		.loc 14 81 5 is_stmt 1 view .LVU847
 3079              	.LBB1243:
 3080              	.LBB1238:
 3081              	.LBB1206:
 3082              	.LBB1203:
 3083              	.LBB1193:
 3084              	.LBB1187:
 3085              	.LBI1187:
 3086              		.file 15 "./drums/excitation.h"
   1:./drums/excitation.h **** // Copyright 2013 Emilie Gillet.
   2:./drums/excitation.h **** //
   3:./drums/excitation.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./drums/excitation.h **** //
   5:./drums/excitation.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./drums/excitation.h **** // of this software and associated documentation files (the "Software"), to deal
   7:./drums/excitation.h **** // in the Software without restriction, including without limitation the rights
   8:./drums/excitation.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./drums/excitation.h **** // copies of the Software, and to permit persons to whom the Software is
  10:./drums/excitation.h **** // furnished to do so, subject to the following conditions:
  11:./drums/excitation.h **** // 
  12:./drums/excitation.h **** // The above copyright notice and this permission notice shall be included in
  13:./drums/excitation.h **** // all copies or substantial portions of the Software.
  14:./drums/excitation.h **** // 
  15:./drums/excitation.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./drums/excitation.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./drums/excitation.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./drums/excitation.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./drums/excitation.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./drums/excitation.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./drums/excitation.h **** // THE SOFTWARE.
  22:./drums/excitation.h **** // 
  23:./drums/excitation.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./drums/excitation.h **** //
  25:./drums/excitation.h **** // -----------------------------------------------------------------------------
  26:./drums/excitation.h **** //
  27:./drums/excitation.h **** // Exponential decay excitation.
  28:./drums/excitation.h **** 
  29:./drums/excitation.h **** #ifndef PEAKS_DRUMS_EXCITATION_H_
  30:./drums/excitation.h **** #define PEAKS_DRUMS_EXCITATION_H_
  31:./drums/excitation.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 87


  32:./drums/excitation.h **** #include "stmlib/stmlib.h"
  33:./drums/excitation.h **** 
  34:./drums/excitation.h **** namespace peaks {
  35:./drums/excitation.h **** 
  36:./drums/excitation.h **** class Excitation {
  37:./drums/excitation.h ****  public:
  38:./drums/excitation.h ****   Excitation() { }
  39:./drums/excitation.h ****   ~Excitation() { }
  40:./drums/excitation.h **** 
  41:./drums/excitation.h ****   void Init() {
  42:./drums/excitation.h ****     delay_ = 0;
  43:./drums/excitation.h ****     decay_ = 4093;
  44:./drums/excitation.h ****     counter_ = 0;
  45:./drums/excitation.h ****     state_ = 0;
  46:./drums/excitation.h ****   }
  47:./drums/excitation.h **** 
  48:./drums/excitation.h ****   void set_delay(uint16_t delay) {
  49:./drums/excitation.h ****     delay_ = delay;
  50:./drums/excitation.h ****   }
  51:./drums/excitation.h ****   
  52:./drums/excitation.h ****   void set_decay(uint16_t decay) {
 3087              		.loc 15 52 8 view .LVU848
 3088              	.LBB1188:
  53:./drums/excitation.h ****     decay_ = decay;
 3089              		.loc 15 53 5 view .LVU849
 3090              		.loc 15 53 12 is_stmt 0 view .LVU850
 3091 002e 40F6FE73 		movw	r3, #4094
 3092              	.LBE1188:
 3093              	.LBE1187:
 3094              	.LBE1193:
 3095              	.LBB1194:
 3096              	.LBB1195:
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3097              		.loc 14 66 29 view .LVU851
 3098 0032 2A88     		ldrh	r2, [r5]
 3099              	.LBE1195:
 3100              	.LBE1194:
 3101              	.LBB1197:
 3102              	.LBB1190:
 3103              	.LBB1189:
 3104              		.loc 15 53 12 view .LVU852
 3105 0034 C4F81832 		str	r3, [r4, #536]
 3106              	.LVL223:
 3107              		.loc 15 53 12 view .LVU853
 3108              	.LBE1189:
 3109              	.LBE1190:
 3110              	.LBE1197:
  55:drums/snare_drum.h ****       set_snappy(parameter[1]);
 3111              		.loc 14 55 7 is_stmt 1 view .LVU854
 3112              	.LBB1198:
 3113              	.LBI1194:
  65:drums/snare_drum.h ****     gain_1_ = 22000 - (tone >> 2);
 3114              		.loc 14 65 8 view .LVU855
 3115              	.LBB1196:
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3116              		.loc 14 66 5 view .LVU856
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 88


 3117              		.loc 14 66 21 is_stmt 0 view .LVU857
 3118 0038 45F2F053 		movw	r3, #22000
 3119 003c A3EB9201 		sub	r1, r3, r2, lsr #2
  67:drums/snare_drum.h ****   }
 3120              		.loc 14 67 21 view .LVU858
 3121 0040 03EB9203 		add	r3, r3, r2, lsr #2
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3122              		.loc 14 66 13 view .LVU859
 3123 0044 C4F88812 		str	r1, [r4, #648]
  67:drums/snare_drum.h ****   }
 3124              		.loc 14 67 5 is_stmt 1 view .LVU860
  67:drums/snare_drum.h ****   }
 3125              		.loc 14 67 21 is_stmt 0 view .LVU861
 3126 0048 C4F88C32 		str	r3, [r4, #652]
 3127              	.LVL224:
  67:drums/snare_drum.h ****   }
 3128              		.loc 14 67 21 view .LVU862
 3129              	.LBE1196:
 3130              	.LBE1198:
  56:drums/snare_drum.h ****     } else {
 3131              		.loc 14 56 7 is_stmt 1 view .LVU863
 3132              	.LBB1199:
 3133              	.LBI1199:
  70:drums/snare_drum.h ****     snappy >>= 1;
 3134              		.loc 14 70 8 view .LVU864
 3135              	.LBB1200:
  71:drums/snare_drum.h ****     if (snappy >= 28672) {
 3136              		.loc 14 71 5 view .LVU865
  71:drums/snare_drum.h ****     if (snappy >= 28672) {
 3137              		.loc 14 71 12 is_stmt 0 view .LVU866
 3138 004c 6B88     		ldrh	r3, [r5, #2]
 3139 004e 5B08     		lsrs	r3, r3, #1
 3140              	.LVL225:
  72:drums/snare_drum.h ****       snappy = 28672;
 3141              		.loc 14 72 5 is_stmt 1 view .LVU867
  75:drums/snare_drum.h ****   }
 3142              		.loc 14 75 5 view .LVU868
  75:drums/snare_drum.h ****   }
 3143              		.loc 14 75 19 is_stmt 0 view .LVU869
 3144 0050 B3F5E04F 		cmp	r3, #28672
 3145 0054 28BF     		it	cs
 3146 0056 4FF4E043 		movcs	r3, #28672
 3147              	.LVL226:
  75:drums/snare_drum.h ****   }
 3148              		.loc 14 75 19 view .LVU870
 3149 005a 03F50073 		add	r3, r3, #512
  75:drums/snare_drum.h ****   }
 3150              		.loc 14 75 13 view .LVU871
 3151 005e A4F89032 		strh	r3, [r4, #656]	@ movhi
 3152              	.LVL227:
 3153              	.L110:
  75:drums/snare_drum.h ****   }
 3154              		.loc 14 75 13 view .LVU872
 3155              	.LBE1200:
 3156              	.LBE1199:
 3157              	.LBE1203:
 3158              	.LBE1206:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 89


 3159              	.LBE1238:
 3160              	.LBE1243:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 3161              		.loc 1 160 3 view .LVU873
 3162 0062 70BD     		pop	{r4, r5, r6, pc}
 3163              	.LVL228:
 3164              	.L111:
 3165              	.LBB1244:
 3166              	.LBB1239:
  58:drums/snare_drum.h ****       set_tone(parameter[1]);
 3167              		.loc 14 58 7 is_stmt 1 view .LVU874
  58:drums/snare_drum.h ****       set_tone(parameter[1]);
 3168              		.loc 14 58 34 is_stmt 0 view .LVU875
 3169 0064 0988     		ldrh	r1, [r1]
 3170              	.LVL229:
  58:drums/snare_drum.h ****       set_tone(parameter[1]);
 3171              		.loc 14 58 34 view .LVU876
 3172 0066 A1F50041 		sub	r1, r1, #32768
  58:drums/snare_drum.h ****       set_tone(parameter[1]);
 3173              		.loc 14 58 20 view .LVU877
 3174 006a 09B2     		sxth	r1, r1
 3175 006c FFF7FEFF 		bl	_ZN5peaks9SnareDrum13set_frequencyEs
 3176              	.LVL230:
  59:drums/snare_drum.h ****       set_snappy(parameter[2]);
 3177              		.loc 14 59 7 is_stmt 1 view .LVU878
 3178              	.LBB1207:
 3179              	.LBI1207:
  65:drums/snare_drum.h ****     gain_1_ = 22000 - (tone >> 2);
 3180              		.loc 14 65 8 view .LVU879
 3181              	.LBB1208:
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3182              		.loc 14 66 5 view .LVU880
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3183              		.loc 14 66 29 is_stmt 0 view .LVU881
 3184 0070 6A88     		ldrh	r2, [r5, #2]
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3185              		.loc 14 66 21 view .LVU882
 3186 0072 45F2F053 		movw	r3, #22000
 3187 0076 A3EB9201 		sub	r1, r3, r2, lsr #2
  67:drums/snare_drum.h ****   }
 3188              		.loc 14 67 21 view .LVU883
 3189 007a 03EB9203 		add	r3, r3, r2, lsr #2
 3190              	.LBE1208:
 3191              	.LBE1207:
 3192              	.LBB1211:
 3193              	.LBB1212:
  79:drums/snare_drum.h ****     body_2_.set_resonance(26500 + (decay >> 5));
 3194              		.loc 14 79 33 view .LVU884
 3195 007e 47F24812 		movw	r2, #29000
 3196              	.LBE1212:
 3197              	.LBE1211:
 3198              	.LBB1229:
 3199              	.LBB1209:
  66:drums/snare_drum.h ****     gain_2_ = 22000 + (tone >> 2);
 3200              		.loc 14 66 13 view .LVU885
 3201 0082 C4F88812 		str	r1, [r4, #648]
  67:drums/snare_drum.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 90


 3202              		.loc 14 67 5 is_stmt 1 view .LVU886
 3203              	.LBE1209:
 3204              	.LBE1229:
 3205              	.LBB1230:
 3206              	.LBB1227:
 3207              	.LBB1213:
 3208              	.LBB1214:
  66:./drums/svf.h ****   }
 3209              		.loc 13 66 12 is_stmt 0 view .LVU887
 3210 0086 0121     		movs	r1, #1
 3211              	.LBE1214:
 3212              	.LBE1213:
 3213              	.LBE1227:
 3214              	.LBE1230:
 3215              	.LBB1231:
 3216              	.LBB1210:
  67:drums/snare_drum.h ****   }
 3217              		.loc 14 67 21 view .LVU888
 3218 0088 C4F88C32 		str	r3, [r4, #652]
 3219              	.LVL231:
  67:drums/snare_drum.h ****   }
 3220              		.loc 14 67 21 view .LVU889
 3221              	.LBE1210:
 3222              	.LBE1231:
  60:drums/snare_drum.h ****       set_decay(parameter[3]);
 3223              		.loc 14 60 7 is_stmt 1 view .LVU890
 3224              	.LBB1232:
 3225              	.LBI1232:
  70:drums/snare_drum.h ****     snappy >>= 1;
 3226              		.loc 14 70 8 view .LVU891
 3227              	.LBB1233:
  71:drums/snare_drum.h ****     if (snappy >= 28672) {
 3228              		.loc 14 71 5 view .LVU892
  71:drums/snare_drum.h ****     if (snappy >= 28672) {
 3229              		.loc 14 71 12 is_stmt 0 view .LVU893
 3230 008c AB88     		ldrh	r3, [r5, #4]
 3231 008e 5B08     		lsrs	r3, r3, #1
 3232              	.LVL232:
  72:drums/snare_drum.h ****       snappy = 28672;
 3233              		.loc 14 72 5 is_stmt 1 view .LVU894
  75:drums/snare_drum.h ****   }
 3234              		.loc 14 75 5 view .LVU895
  75:drums/snare_drum.h ****   }
 3235              		.loc 14 75 19 is_stmt 0 view .LVU896
 3236 0090 B3F5E04F 		cmp	r3, #28672
 3237 0094 28BF     		it	cs
 3238 0096 4FF4E043 		movcs	r3, #28672
 3239              	.LVL233:
  75:drums/snare_drum.h ****   }
 3240              		.loc 14 75 19 view .LVU897
 3241 009a 03F50073 		add	r3, r3, #512
  75:drums/snare_drum.h ****   }
 3242              		.loc 14 75 13 view .LVU898
 3243 009e A4F89032 		strh	r3, [r4, #656]	@ movhi
 3244              	.LVL234:
  75:drums/snare_drum.h ****   }
 3245              		.loc 14 75 13 view .LVU899
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 91


 3246              	.LBE1233:
 3247              	.LBE1232:
  61:drums/snare_drum.h ****     }
 3248              		.loc 14 61 7 is_stmt 1 view .LVU900
  61:drums/snare_drum.h ****     }
 3249              		.loc 14 61 16 is_stmt 0 view .LVU901
 3250 00a2 EB88     		ldrh	r3, [r5, #6]
 3251              	.LVL235:
 3252              	.LBB1234:
 3253              	.LBI1211:
  78:drums/snare_drum.h ****     body_1_.set_resonance(29000 + (decay >> 5));
 3254              		.loc 14 78 8 is_stmt 1 view .LVU902
 3255              	.LBB1228:
  79:drums/snare_drum.h ****     body_2_.set_resonance(26500 + (decay >> 5));
 3256              		.loc 14 79 5 view .LVU903
 3257              	.LBB1217:
 3258              	.LBI1213:
  64:./drums/svf.h ****     resonance_ = resonance;
 3259              		.loc 13 64 15 view .LVU904
 3260              	.LBB1215:
  65:./drums/svf.h ****     dirty_ = true;
 3261              		.loc 13 65 5 view .LVU905
  66:./drums/svf.h ****   }
 3262              		.loc 13 66 12 is_stmt 0 view .LVU906
 3263 00a4 84F82812 		strb	r1, [r4, #552]
 3264              	.LBE1215:
 3265              	.LBE1217:
  79:drums/snare_drum.h ****     body_2_.set_resonance(26500 + (decay >> 5));
 3266              		.loc 14 79 33 view .LVU907
 3267 00a8 02EB5312 		add	r2, r2, r3, lsr #5
 3268              	.LBB1218:
 3269              	.LBB1219:
  66:./drums/svf.h ****   }
 3270              		.loc 13 66 12 view .LVU908
 3271 00ac 84F84812 		strb	r1, [r4, #584]
 3272              	.LBE1219:
 3273              	.LBE1218:
 3274              	.LBB1222:
 3275              	.LBB1216:
  65:./drums/svf.h ****     dirty_ = true;
 3276              		.loc 13 65 16 view .LVU909
 3277 00b0 A4F82C22 		strh	r2, [r4, #556]	@ movhi
  66:./drums/svf.h ****   }
 3278              		.loc 13 66 5 is_stmt 1 view .LVU910
 3279              	.LVL236:
  66:./drums/svf.h ****   }
 3280              		.loc 13 66 5 is_stmt 0 view .LVU911
 3281              	.LBE1216:
 3282              	.LBE1222:
  80:drums/snare_drum.h ****     excitation_noise_.set_decay(4092 + (decay >> 14));
 3283              		.loc 14 80 5 is_stmt 1 view .LVU912
 3284              	.LBB1223:
 3285              	.LBI1218:
  64:./drums/svf.h ****     resonance_ = resonance;
 3286              		.loc 13 64 15 view .LVU913
 3287              	.LBB1220:
  65:./drums/svf.h ****     dirty_ = true;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 92


 3288              		.loc 13 65 5 view .LVU914
 3289              	.LBE1220:
 3290              	.LBE1223:
  80:drums/snare_drum.h ****     excitation_noise_.set_decay(4092 + (decay >> 14));
 3291              		.loc 14 80 33 is_stmt 0 view .LVU915
 3292 00b4 46F28472 		movw	r2, #26500
 3293 00b8 02EB5312 		add	r2, r2, r3, lsr #5
  81:drums/snare_drum.h ****   }
 3294              		.loc 14 81 47 view .LVU916
 3295 00bc 9B0B     		lsrs	r3, r3, #14
 3296              	.LVL237:
 3297              	.LBB1224:
 3298              	.LBB1221:
  65:./drums/svf.h ****     dirty_ = true;
 3299              		.loc 13 65 16 view .LVU917
 3300 00be A4F84C22 		strh	r2, [r4, #588]	@ movhi
  66:./drums/svf.h ****   }
 3301              		.loc 13 66 5 is_stmt 1 view .LVU918
 3302              	.LVL238:
  66:./drums/svf.h ****   }
 3303              		.loc 13 66 5 is_stmt 0 view .LVU919
 3304              	.LBE1221:
 3305              	.LBE1224:
  81:drums/snare_drum.h ****   }
 3306              		.loc 14 81 5 is_stmt 1 view .LVU920
 3307              	.LBB1225:
 3308              	.LBI1225:
  52:./drums/excitation.h ****     decay_ = decay;
 3309              		.loc 15 52 8 view .LVU921
 3310              	.LBB1226:
 3311              		.loc 15 53 5 view .LVU922
 3312              		.loc 15 53 14 is_stmt 0 view .LVU923
 3313 00c2 03F6FC73 		addw	r3, r3, #4092
 3314 00c6 C4F81832 		str	r3, [r4, #536]
 3315              	.LVL239:
 3316              		.loc 15 53 14 view .LVU924
 3317              	.LBE1226:
 3318              	.LBE1225:
 3319              	.LBE1228:
 3320              	.LBE1234:
 3321              	.LBE1239:
 3322              	.LBE1244:
 160:processors.h  ****   DECLARE_PROCESSOR(HighHat, high_hat_);
 3323              		.loc 1 160 3 view .LVU925
 3324 00ca CAE7     		b	.L110
 3325              		.cfi_endproc
 3326              	.LFE1612:
 3328              		.section	.text._ZN5peaks12BouncingBall11set_gravityEt,"axG",%progbits,_ZN5peaks12BouncingBall11set
 3329              		.align	1
 3330              		.weak	_ZN5peaks12BouncingBall11set_gravityEt
 3331              		.syntax unified
 3332              		.thumb
 3333              		.thumb_func
 3334              		.fpu fpv5-d16
 3336              	_ZN5peaks12BouncingBall11set_gravityEt:
 3337              	.LVL240:
 3338              	.LFB1497:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 93


  87:modulations/bouncing_ball.h ****     }
  88:modulations/bouncing_ball.h ****   }
  89:modulations/bouncing_ball.h ****   
  90:modulations/bouncing_ball.h ****   inline void set_gravity(uint16_t gravity) {
 3339              		.loc 3 90 15 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
  91:modulations/bouncing_ball.h ****     gravity_ = stmlib::Interpolate88(lut_gravity, gravity);
 3343              		.loc 3 91 5 view .LVU927
 3344              	.LBB1245:
 3345              	.LBI1245:
 3346              		.file 16 "../../stmlib/utils/dsp.h"
   1:../../stmlib/utils/dsp.h **** // Copyright 2012 Emilie Gillet.
   2:../../stmlib/utils/dsp.h **** //
   3:../../stmlib/utils/dsp.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/utils/dsp.h **** //
   5:../../stmlib/utils/dsp.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/utils/dsp.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/utils/dsp.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/utils/dsp.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/utils/dsp.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/utils/dsp.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/utils/dsp.h **** // 
  12:../../stmlib/utils/dsp.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/utils/dsp.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/utils/dsp.h **** // 
  15:../../stmlib/utils/dsp.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/utils/dsp.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/utils/dsp.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/utils/dsp.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/utils/dsp.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/utils/dsp.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/utils/dsp.h **** // THE SOFTWARE.
  22:../../stmlib/utils/dsp.h **** // 
  23:../../stmlib/utils/dsp.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/utils/dsp.h **** //
  25:../../stmlib/utils/dsp.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/utils/dsp.h **** //
  27:../../stmlib/utils/dsp.h **** // A set of basic operands, especially useful for fixed-point arithmetic, with
  28:../../stmlib/utils/dsp.h **** // fast ASM implementations.
  29:../../stmlib/utils/dsp.h **** 
  30:../../stmlib/utils/dsp.h **** #ifndef STMLIB_UTILS_DSP_H_
  31:../../stmlib/utils/dsp.h **** #define STMLIB_UTILS_DSP_H_
  32:../../stmlib/utils/dsp.h **** 
  33:../../stmlib/utils/dsp.h **** #include "stmlib/stmlib.h"
  34:../../stmlib/utils/dsp.h **** 
  35:../../stmlib/utils/dsp.h **** namespace stmlib {
  36:../../stmlib/utils/dsp.h **** 
  37:../../stmlib/utils/dsp.h **** inline int16_t Interpolate824(const int16_t* table, uint32_t phase)
  38:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  39:../../stmlib/utils/dsp.h **** 
  40:../../stmlib/utils/dsp.h **** inline uint16_t Interpolate824(const uint16_t* table, uint32_t phase)
  41:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  42:../../stmlib/utils/dsp.h **** 
  43:../../stmlib/utils/dsp.h **** inline int16_t Interpolate824(const uint8_t* table, uint32_t phase)
  44:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 94


  45:../../stmlib/utils/dsp.h **** 
  46:../../stmlib/utils/dsp.h **** inline uint16_t Interpolate88(const uint16_t* table, uint16_t index)
  47:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  48:../../stmlib/utils/dsp.h **** 
  49:../../stmlib/utils/dsp.h **** inline int16_t Interpolate88(const int16_t* table, uint16_t index)
  50:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  51:../../stmlib/utils/dsp.h **** 
  52:../../stmlib/utils/dsp.h **** inline int16_t Interpolate1022(const int16_t* table, uint32_t phase)
  53:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  54:../../stmlib/utils/dsp.h **** 
  55:../../stmlib/utils/dsp.h **** inline int16_t Interpolate115(const int16_t* table, uint32_t phase)
  56:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  57:../../stmlib/utils/dsp.h **** 
  58:../../stmlib/utils/dsp.h **** inline int16_t Crossfade(
  59:../../stmlib/utils/dsp.h ****     const int16_t* table_a,
  60:../../stmlib/utils/dsp.h ****     const int16_t* table_b,
  61:../../stmlib/utils/dsp.h ****     uint32_t phase,
  62:../../stmlib/utils/dsp.h ****     uint16_t balance)
  63:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  64:../../stmlib/utils/dsp.h **** 
  65:../../stmlib/utils/dsp.h **** inline int16_t Crossfade(
  66:../../stmlib/utils/dsp.h ****     const uint8_t* table_a,
  67:../../stmlib/utils/dsp.h ****     const uint8_t* table_b,
  68:../../stmlib/utils/dsp.h ****     uint32_t phase,
  69:../../stmlib/utils/dsp.h ****     uint16_t balance)
  70:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  71:../../stmlib/utils/dsp.h **** 
  72:../../stmlib/utils/dsp.h **** inline int16_t Crossfade1022(
  73:../../stmlib/utils/dsp.h ****     const uint8_t* table_a,
  74:../../stmlib/utils/dsp.h ****     const uint8_t* table_b,
  75:../../stmlib/utils/dsp.h ****     uint32_t phase,
  76:../../stmlib/utils/dsp.h ****     uint16_t balance)
  77:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  78:../../stmlib/utils/dsp.h **** 
  79:../../stmlib/utils/dsp.h **** inline int16_t Crossfade115(
  80:../../stmlib/utils/dsp.h ****     const uint8_t* table_a,
  81:../../stmlib/utils/dsp.h ****     const uint8_t* table_b,
  82:../../stmlib/utils/dsp.h ****     uint16_t phase,
  83:../../stmlib/utils/dsp.h ****     uint16_t balance)
  84:../../stmlib/utils/dsp.h ****   __attribute__((always_inline));
  85:../../stmlib/utils/dsp.h **** 
  86:../../stmlib/utils/dsp.h **** inline int16_t Mix(int16_t a, int16_t b, uint16_t balance) {
  87:../../stmlib/utils/dsp.h ****   return (a * (65535 - balance) + b * balance) >> 16;
  88:../../stmlib/utils/dsp.h **** }
  89:../../stmlib/utils/dsp.h **** 
  90:../../stmlib/utils/dsp.h **** inline uint16_t Mix(uint16_t a, uint16_t b, uint16_t balance) {
  91:../../stmlib/utils/dsp.h ****   return (a * (65535 - balance) + b * balance) >> 16;
  92:../../stmlib/utils/dsp.h **** }
  93:../../stmlib/utils/dsp.h **** 
  94:../../stmlib/utils/dsp.h **** inline int16_t Interpolate824(const int16_t* table, uint32_t phase) {
  95:../../stmlib/utils/dsp.h ****   int32_t a = table[phase >> 24];
  96:../../stmlib/utils/dsp.h ****   int32_t b = table[(phase >> 24) + 1];
  97:../../stmlib/utils/dsp.h ****   return a + ((b - a) * static_cast<int32_t>((phase >> 8) & 0xffff) >> 16);
  98:../../stmlib/utils/dsp.h **** }
  99:../../stmlib/utils/dsp.h **** 
 100:../../stmlib/utils/dsp.h **** inline uint16_t Interpolate824(const uint16_t* table, uint32_t phase) {
 101:../../stmlib/utils/dsp.h ****   uint32_t a = table[phase >> 24];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 95


 102:../../stmlib/utils/dsp.h ****   uint32_t b = table[(phase >> 24) + 1];
 103:../../stmlib/utils/dsp.h ****   return a + ((b - a) * static_cast<uint32_t>((phase >> 8) & 0xffff) >> 16);
 104:../../stmlib/utils/dsp.h **** }
 105:../../stmlib/utils/dsp.h **** 
 106:../../stmlib/utils/dsp.h **** inline int16_t Interpolate824(const uint8_t* table, uint32_t phase) {
 107:../../stmlib/utils/dsp.h ****   int32_t a = table[phase >> 24];
 108:../../stmlib/utils/dsp.h ****   int32_t b = table[(phase >> 24) + 1];
 109:../../stmlib/utils/dsp.h ****   return (a << 8) + \
 110:../../stmlib/utils/dsp.h ****       ((b - a) * static_cast<int32_t>(phase & 0xffffff) >> 16) - 32768;
 111:../../stmlib/utils/dsp.h **** }
 112:../../stmlib/utils/dsp.h **** 
 113:../../stmlib/utils/dsp.h **** inline uint16_t Interpolate88(const uint16_t* table, uint16_t index) {
 3347              		.loc 16 113 17 view .LVU928
 3348              	.LBB1246:
 114:../../stmlib/utils/dsp.h ****   int32_t a = table[index >> 8];
 3349              		.loc 16 114 3 view .LVU929
 3350              		.loc 16 114 27 is_stmt 0 view .LVU930
 3351 0000 0A0A     		lsrs	r2, r1, #8
 115:../../stmlib/utils/dsp.h ****   int32_t b = table[(index >> 8) + 1];
 116:../../stmlib/utils/dsp.h ****   return a + ((b - a) * static_cast<int32_t>(index & 0xff) >> 8);
 3352              		.loc 16 116 25 view .LVU931
 3353 0002 C9B2     		uxtb	r1, r1
 3354              	.LVL241:
 3355              		.loc 16 116 25 view .LVU932
 3356              	.LBE1246:
 3357              	.LBE1245:
  90:modulations/bouncing_ball.h ****     gravity_ = stmlib::Interpolate88(lut_gravity, gravity);
 3358              		.loc 3 90 15 view .LVU933
 3359 0004 10B5     		push	{r4, lr}
 3360              		.cfi_def_cfa_offset 8
 3361              		.cfi_offset 4, -8
 3362              		.cfi_offset 14, -4
 3363              	.LBB1248:
 3364              	.LBB1247:
 114:../../stmlib/utils/dsp.h ****   int32_t a = table[index >> 8];
 3365              		.loc 16 114 31 view .LVU934
 3366 0006 064C     		ldr	r4, .L114
 3367 0008 34F81230 		ldrh	r3, [r4, r2, lsl #1]
 3368              	.LVL242:
 115:../../stmlib/utils/dsp.h ****   int32_t b = table[(index >> 8) + 1];
 3369              		.loc 16 115 3 is_stmt 1 view .LVU935
 3370              		.loc 16 116 3 view .LVU936
 115:../../stmlib/utils/dsp.h ****   int32_t b = table[(index >> 8) + 1];
 3371              		.loc 16 115 37 is_stmt 0 view .LVU937
 3372 000c 0132     		adds	r2, r2, #1
 115:../../stmlib/utils/dsp.h ****   int32_t b = table[(index >> 8) + 1];
 3373              		.loc 16 115 11 view .LVU938
 3374 000e 34F81220 		ldrh	r2, [r4, r2, lsl #1]
 3375              		.loc 16 116 18 view .LVU939
 3376 0012 D21A     		subs	r2, r2, r3
 3377              		.loc 16 116 23 view .LVU940
 3378 0014 5143     		muls	r1, r2, r1
 3379              		.loc 16 116 64 view .LVU941
 3380 0016 03EB2123 		add	r3, r3, r1, asr #8
 3381              	.LBE1247:
 3382              	.LBE1248:
 3383              		.loc 3 91 37 view .LVU942
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 96


 3384 001a 9BB2     		uxth	r3, r3
 3385 001c 0360     		str	r3, [r0]
  92:modulations/bouncing_ball.h ****   }
 3386              		.loc 3 92 3 view .LVU943
 3387 001e 10BD     		pop	{r4, pc}
 3388              	.L115:
 3389              		.align	2
 3390              	.L114:
 3391 0020 00000000 		.word	_ZN5peaks11lut_gravityE
 3392              		.cfi_endproc
 3393              	.LFE1497:
 3395              		.section	.text._ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE,"axG",%progbits,_Z
 3396              		.align	1
 3397              		.weak	_ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE
 3398              		.syntax unified
 3399              		.thumb
 3400              		.thumb_func
 3401              		.fpu fpv5-d16
 3403              	_ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE:
 3404              	.LVL243:
 3405              	.LFB1627:
 165:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 3406              		.loc 1 165 3 is_stmt 1 view -0
 3407              		.cfi_startproc
 3408              		@ args = 0, pretend = 0, frame = 0
 3409              		@ frame_needed = 0, uses_anonymous_args = 0
 165:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 3410              		.loc 1 165 3 view .LVU945
 3411              	.LBB1269:
 3412              	.LBB1270:
  56:modulations/bouncing_ball.h ****       set_initial_amplitude(65535);
 3413              		.loc 3 56 5 is_stmt 0 view .LVU946
 3414 0000 012A     		cmp	r2, #1
 3415              	.LBE1270:
 3416              	.LBE1269:
 165:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 3417              		.loc 1 165 3 view .LVU947
 3418 0002 38B5     		push	{r3, r4, r5, lr}
 3419              		.cfi_def_cfa_offset 16
 3420              		.cfi_offset 3, -16
 3421              		.cfi_offset 4, -12
 3422              		.cfi_offset 5, -8
 3423              		.cfi_offset 14, -4
 165:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 3424              		.loc 1 165 3 view .LVU948
 3425 0004 0446     		mov	r4, r0
 3426 0006 0D46     		mov	r5, r1
 3427 0008 00F59060 		add	r0, r0, #1152
 3428              	.LVL244:
 3429              	.LBB1291:
 3430              	.LBI1269:
  55:modulations/bouncing_ball.h ****     if (control_mode == CONTROL_MODE_HALF) {
 3431              		.loc 3 55 8 is_stmt 1 view .LVU949
 3432              	.LBB1289:
  56:modulations/bouncing_ball.h ****       set_initial_amplitude(65535);
 3433              		.loc 3 56 5 view .LVU950
 3434              	.LBB1271:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 97


 3435              	.LBB1272:
  59:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
 3436              		.loc 3 59 18 is_stmt 0 view .LVU951
 3437 000c 0988     		ldrh	r1, [r1]
 3438              	.LVL245:
  59:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
 3439              		.loc 3 59 18 view .LVU952
 3440              	.LBE1272:
 3441              	.LBE1271:
  56:modulations/bouncing_ball.h ****       set_initial_amplitude(65535);
 3442              		.loc 3 56 5 view .LVU953
 3443 000e 13D1     		bne	.L117
 3444              	.LVL246:
 3445              	.LBB1280:
 3446              	.LBI1271:
  55:modulations/bouncing_ball.h ****     if (control_mode == CONTROL_MODE_HALF) {
 3447              		.loc 3 55 8 is_stmt 1 view .LVU954
 3448              	.LBB1279:
  57:modulations/bouncing_ball.h ****       set_initial_velocity(0);
 3449              		.loc 3 57 7 view .LVU955
 3450              	.LBB1273:
 3451              	.LBI1273:
  93:modulations/bouncing_ball.h ****   
  94:modulations/bouncing_ball.h ****   inline void set_bounce_loss(uint16_t bounce_loss) {
  95:modulations/bouncing_ball.h ****     uint32_t b = 65535 - bounce_loss;
  96:modulations/bouncing_ball.h ****     b = b * b >> 16;
  97:modulations/bouncing_ball.h ****     bounce_loss_ = 4095 - (b >> 4);
  98:modulations/bouncing_ball.h ****   }
  99:modulations/bouncing_ball.h **** 
 100:modulations/bouncing_ball.h ****   inline void set_initial_amplitude(uint16_t initial_amplitude) {
 3452              		.loc 3 100 15 view .LVU956
 3453              	.LBB1274:
 101:modulations/bouncing_ball.h ****     initial_amplitude_ = static_cast<int32_t>(initial_amplitude) << 14;
 3454              		.loc 3 101 5 view .LVU957
 3455              		.loc 3 101 24 is_stmt 0 view .LVU958
 3456 0010 164B     		ldr	r3, .L119
 3457 0012 C4F88834 		str	r3, [r4, #1160]
 3458              	.LVL247:
 3459              		.loc 3 101 24 view .LVU959
 3460              	.LBE1274:
 3461              	.LBE1273:
  58:modulations/bouncing_ball.h ****       set_gravity(parameter[0]);
 3462              		.loc 3 58 7 is_stmt 1 view .LVU960
 3463              	.LBB1275:
 3464              	.LBI1275:
 102:modulations/bouncing_ball.h ****   }
 103:modulations/bouncing_ball.h ****   
 104:modulations/bouncing_ball.h ****   inline void set_initial_velocity(int16_t initial_velocity) {
 3465              		.loc 3 104 15 view .LVU961
 3466              	.LBB1276:
 105:modulations/bouncing_ball.h ****     initial_velocity_ = static_cast<int32_t>(initial_velocity) << 4;
 3467              		.loc 3 105 5 view .LVU962
 3468              		.loc 3 105 23 is_stmt 0 view .LVU963
 3469 0016 0023     		movs	r3, #0
 3470 0018 C4F88C34 		str	r3, [r4, #1164]
 3471              	.LVL248:
 3472              		.loc 3 105 23 view .LVU964
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 98


 3473              	.LBE1276:
 3474              	.LBE1275:
  59:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
 3475              		.loc 3 59 7 is_stmt 1 view .LVU965
  59:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
 3476              		.loc 3 59 18 is_stmt 0 view .LVU966
 3477 001c FFF7FEFF 		bl	_ZN5peaks12BouncingBall11set_gravityEt
 3478              	.LVL249:
  60:modulations/bouncing_ball.h ****     } else {
 3479              		.loc 3 60 7 is_stmt 1 view .LVU967
 3480              	.LBB1277:
 3481              	.LBI1277:
  94:modulations/bouncing_ball.h ****     uint32_t b = 65535 - bounce_loss;
 3482              		.loc 3 94 15 view .LVU968
 3483              	.LBB1278:
  95:modulations/bouncing_ball.h ****     b = b * b >> 16;
 3484              		.loc 3 95 5 view .LVU969
  95:modulations/bouncing_ball.h ****     b = b * b >> 16;
 3485              		.loc 3 95 26 is_stmt 0 view .LVU970
 3486 0020 6B88     		ldrh	r3, [r5, #2]
  97:modulations/bouncing_ball.h ****   }
 3487              		.loc 3 97 25 view .LVU971
 3488 0022 40F6FF72 		movw	r2, #4095
  95:modulations/bouncing_ball.h ****     b = b * b >> 16;
 3489              		.loc 3 95 24 view .LVU972
 3490 0026 C3F57F43 		rsb	r3, r3, #65280
 3491 002a FF33     		adds	r3, r3, #255
 3492              	.LVL250:
  96:modulations/bouncing_ball.h ****     bounce_loss_ = 4095 - (b >> 4);
 3493              		.loc 3 96 5 is_stmt 1 view .LVU973
  97:modulations/bouncing_ball.h ****   }
 3494              		.loc 3 97 5 view .LVU974
  96:modulations/bouncing_ball.h ****     bounce_loss_ = 4095 - (b >> 4);
 3495              		.loc 3 96 11 is_stmt 0 view .LVU975
 3496 002c 5B43     		muls	r3, r3, r3
 3497              	.LVL251:
  97:modulations/bouncing_ball.h ****   }
 3498              		.loc 3 97 25 view .LVU976
 3499 002e A2EB1353 		sub	r3, r2, r3, lsr #20
  97:modulations/bouncing_ball.h ****   }
 3500              		.loc 3 97 18 view .LVU977
 3501 0032 C4F88434 		str	r3, [r4, #1156]
 3502              	.LVL252:
 3503              	.L116:
  97:modulations/bouncing_ball.h ****   }
 3504              		.loc 3 97 18 view .LVU978
 3505              	.LBE1278:
 3506              	.LBE1277:
 3507              	.LBE1279:
 3508              	.LBE1280:
 3509              	.LBE1289:
 3510              	.LBE1291:
 165:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 3511              		.loc 1 165 3 view .LVU979
 3512 0036 38BD     		pop	{r3, r4, r5, pc}
 3513              	.LVL253:
 3514              	.L117:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 99


 3515              	.LBB1292:
 3516              	.LBB1290:
  62:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
 3517              		.loc 3 62 7 is_stmt 1 view .LVU980
  62:modulations/bouncing_ball.h ****       set_bounce_loss(parameter[1]);
 3518              		.loc 3 62 18 is_stmt 0 view .LVU981
 3519 0038 FFF7FEFF 		bl	_ZN5peaks12BouncingBall11set_gravityEt
 3520              	.LVL254:
  63:modulations/bouncing_ball.h ****       set_initial_amplitude(parameter[2]);
 3521              		.loc 3 63 7 is_stmt 1 view .LVU982
 3522              	.LBB1281:
 3523              	.LBI1281:
  94:modulations/bouncing_ball.h ****     uint32_t b = 65535 - bounce_loss;
 3524              		.loc 3 94 15 view .LVU983
 3525              	.LBB1282:
  95:modulations/bouncing_ball.h ****     b = b * b >> 16;
 3526              		.loc 3 95 5 view .LVU984
  95:modulations/bouncing_ball.h ****     b = b * b >> 16;
 3527              		.loc 3 95 26 is_stmt 0 view .LVU985
 3528 003c 6B88     		ldrh	r3, [r5, #2]
  97:modulations/bouncing_ball.h ****   }
 3529              		.loc 3 97 25 view .LVU986
 3530 003e 40F6FF72 		movw	r2, #4095
  95:modulations/bouncing_ball.h ****     b = b * b >> 16;
 3531              		.loc 3 95 24 view .LVU987
 3532 0042 C3F57F43 		rsb	r3, r3, #65280
 3533 0046 FF33     		adds	r3, r3, #255
 3534              	.LVL255:
  96:modulations/bouncing_ball.h ****     bounce_loss_ = 4095 - (b >> 4);
 3535              		.loc 3 96 5 is_stmt 1 view .LVU988
  97:modulations/bouncing_ball.h ****   }
 3536              		.loc 3 97 5 view .LVU989
  96:modulations/bouncing_ball.h ****     bounce_loss_ = 4095 - (b >> 4);
 3537              		.loc 3 96 11 is_stmt 0 view .LVU990
 3538 0048 5B43     		muls	r3, r3, r3
 3539              	.LVL256:
  97:modulations/bouncing_ball.h ****   }
 3540              		.loc 3 97 25 view .LVU991
 3541 004a A2EB1353 		sub	r3, r2, r3, lsr #20
  97:modulations/bouncing_ball.h ****   }
 3542              		.loc 3 97 18 view .LVU992
 3543 004e C4F88434 		str	r3, [r4, #1156]
 3544              	.LVL257:
  97:modulations/bouncing_ball.h ****   }
 3545              		.loc 3 97 18 view .LVU993
 3546              	.LBE1282:
 3547              	.LBE1281:
  64:modulations/bouncing_ball.h ****       set_initial_velocity(parameter[3] - 32768);
 3548              		.loc 3 64 7 is_stmt 1 view .LVU994
 3549              	.LBB1283:
 3550              	.LBI1283:
 100:modulations/bouncing_ball.h ****     initial_amplitude_ = static_cast<int32_t>(initial_amplitude) << 14;
 3551              		.loc 3 100 15 view .LVU995
 3552              	.LBB1284:
 101:modulations/bouncing_ball.h ****   }
 3553              		.loc 3 101 5 view .LVU996
 101:modulations/bouncing_ball.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 100


 3554              		.loc 3 101 26 is_stmt 0 view .LVU997
 3555 0052 AB88     		ldrh	r3, [r5, #4]
 101:modulations/bouncing_ball.h ****   }
 3556              		.loc 3 101 66 view .LVU998
 3557 0054 9B03     		lsls	r3, r3, #14
 101:modulations/bouncing_ball.h ****   }
 3558              		.loc 3 101 24 view .LVU999
 3559 0056 C4F88834 		str	r3, [r4, #1160]
 3560              	.LVL258:
 101:modulations/bouncing_ball.h ****   }
 3561              		.loc 3 101 24 view .LVU1000
 3562              	.LBE1284:
 3563              	.LBE1283:
  65:modulations/bouncing_ball.h ****     }
 3564              		.loc 3 65 7 is_stmt 1 view .LVU1001
 3565              	.LBB1285:
 3566              	.LBI1285:
 104:modulations/bouncing_ball.h ****     initial_velocity_ = static_cast<int32_t>(initial_velocity) << 4;
 3567              		.loc 3 104 15 view .LVU1002
 3568              	.LBB1286:
 3569              		.loc 3 105 5 view .LVU1003
 3570              	.LBE1286:
 3571              	.LBE1285:
  65:modulations/bouncing_ball.h ****     }
 3572              		.loc 3 65 41 is_stmt 0 view .LVU1004
 3573 005a EB88     		ldrh	r3, [r5, #6]
 3574 005c A3F50043 		sub	r3, r3, #32768
 3575              	.LBB1288:
 3576              	.LBB1287:
 3577              		.loc 3 105 25 view .LVU1005
 3578 0060 1BB2     		sxth	r3, r3
 3579              		.loc 3 105 64 view .LVU1006
 3580 0062 1B01     		lsls	r3, r3, #4
 3581              		.loc 3 105 23 view .LVU1007
 3582 0064 C4F88C34 		str	r3, [r4, #1164]
 3583              	.LVL259:
 3584              		.loc 3 105 23 view .LVU1008
 3585              	.LBE1287:
 3586              	.LBE1288:
 3587              	.LBE1290:
 3588              	.LBE1292:
 165:processors.h  ****   DECLARE_PROCESSOR(MiniSequencer, mini_sequencer_);
 3589              		.loc 1 165 3 view .LVU1009
 3590 0068 E5E7     		b	.L116
 3591              	.L120:
 3592 006a 00BF     		.align	2
 3593              	.L119:
 3594 006c 00C0FF3F 		.word	1073725440
 3595              		.cfi_endproc
 3596              	.LFE1627:
 3598              		.section	.text._ZN5peaks13MiniSequencer4InitEv,"axG",%progbits,_ZN5peaks13MiniSequencer4InitEv,com
 3599              		.align	1
 3600              		.weak	_ZN5peaks13MiniSequencer4InitEv
 3601              		.syntax unified
 3602              		.thumb
 3603              		.thumb_func
 3604              		.fpu fpv5-d16
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 101


 3606              	_ZN5peaks13MiniSequencer4InitEv:
 3607              	.LVL260:
 3608              	.LFB1525:
  47:modulations/mini_sequencer.h ****     std::fill(&steps_[0], &steps_[kMaxNumSteps], 0);
 3609              		.loc 4 47 8 is_stmt 1 view -0
 3610              		.cfi_startproc
 3611              		@ args = 0, pretend = 0, frame = 0
 3612              		@ frame_needed = 0, uses_anonymous_args = 0
 3613              		@ link register save eliminated.
  48:modulations/mini_sequencer.h ****     num_steps_ = 4;
 3614              		.loc 4 48 5 view .LVU1011
 3615              	.LBB1298:
 3616              	.LBI1298:
 3617              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 102


  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 103


 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 104


 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 105


 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 260:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 261:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 262:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 263:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 264:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 265:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 106


 272:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 275:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 278:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 280:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 283:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 284:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 285:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 286:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 287:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 294:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 297:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 300:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 302:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 306:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 307:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 308:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 311:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 313:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __it; }
 316:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 317:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 321:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _From
 323:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 326:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 328:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 107


 329:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 330:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __res; }
 332:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 333:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 338:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 339:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move
 341:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 342:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 343:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 345:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 347:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 349:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 350:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 351:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 352:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 353:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 354:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 355:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 357:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 358:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 360:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 362:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 364:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 365:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 366:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 367:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 368:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 369:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 370:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 372:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 373:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 375:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 377:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 380:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 381:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 382:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 383:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 384:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 385:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 108


 386:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 387:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 388:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 389:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 390:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 392:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 393:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 395:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 397:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 400:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 401:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 402:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 403:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 404:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 405:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 406:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 407:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 408:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 409:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 410:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 412:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 413:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 417:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 418:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 424:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 428:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 429:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 430:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 431:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 434:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct char_traits;
 435:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 436:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 438:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 439:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 441:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 442:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 109


 443:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 448:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 454:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 457:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 460:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 465:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 468:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 471:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 474:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 475:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 477:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct _Deque_iterator;
 479:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 480:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 482:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 483:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 485:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _OI);
 488:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 489:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 490:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 496:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 110


 500:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 502:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 508:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 513:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 514:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 516:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 517:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 518:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 519:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 520:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 522:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  _OI);
 525:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 526:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 527:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 530:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 532:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 533:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 540:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 541:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 544:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 545:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 546:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 547:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 548:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 554:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 556:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 111


 557:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 558:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 562:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 563:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 568:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 571:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 572:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 573:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 574:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 577:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 578:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 579:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 580:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 581:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 587:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 589:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 590:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 591:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 593:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 595:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 596:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 601:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 604:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 605:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 607:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 609:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 610:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 612:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 613:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 112


 614:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 616:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 618:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 619:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 620:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 621:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 622:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 623:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 624:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 625:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 626:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 628:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 631:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 633:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 634:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 636:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 637:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 638:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 639:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 640:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 641:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 643:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 646:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 648:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 650:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 652:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 653:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 654:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 655:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 656:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 657:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 658:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 660:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 663:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 665:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 667:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 670:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 113


 671:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 672:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 673:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 674:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 675:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 677:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 678:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 680:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 682:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 683:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 689:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 691:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 693:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 694:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 695:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 696:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 699:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 701:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 704:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 707:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __last,
 711:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __result);
 712:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 713:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 714:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 717:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 720:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 721:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 723:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _OI);
 726:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 727:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 114


 728:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(
 731:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 735:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 742:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 745:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 747:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 748:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 751:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 752:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 753:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 754:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 756:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 757:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_OI);
 760:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 761:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 762:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 767:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 768:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 772:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 776:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 777:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 783:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 784:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 115


 785:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 790:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 791:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 794:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 797:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 799:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 800:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 807:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 810:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 811:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 812:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 813:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 819:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 820:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 826:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 827:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 830:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 833:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 835:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 836:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 116


 842:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 843:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 845:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       __result);
 846:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 847:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 848:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 850:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 852:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 853:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 856:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 859:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 860:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 861:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __value;
 862:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 863:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 864:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 867:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 870:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 871:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 874:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 875:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 876:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 878:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 880:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 883:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 884:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 886:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 887:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__first = __tmp;
 889:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return;
 890:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 891:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 892:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 895:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 896:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 117


 899:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 902:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 904:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 906:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _VTp&);
 909:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 910:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 916:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 918:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const _Tp&);
 921:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 922:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 923:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 929:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 930:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 934:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 937:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 3618              		.loc 17 937 5 view .LVU1012
 3619              	.LBB1299:
 3620              	.LBI1299:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 3621              		.loc 17 913 5 view .LVU1013
 3622              	.LBB1300:
 3623              	.LBI1300:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 3624              		.loc 17 868 5 view .LVU1014
 3625              	.LBB1301:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3626              		.loc 17 873 11 is_stmt 0 view .LVU1015
 3627 0000 0023     		movs	r3, #0
 3628              	.LBE1301:
 3629              	.LBE1300:
 3630              	.LBE1299:
 3631              	.LBE1298:
  49:modulations/mini_sequencer.h ****     step_ = 0;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 118


 3632              		.loc 4 49 16 view .LVU1016
 3633 0002 0422     		movs	r2, #4
 3634              	.LBB1305:
 3635              	.LBB1304:
 3636              	.LBB1303:
 3637              	.LBB1302:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3638              		.loc 17 873 11 view .LVU1017
 3639 0004 C0F80230 		str	r3, [r0, #2]	@ unaligned
 3640 0008 C0F80630 		str	r3, [r0, #6]	@ unaligned
 3641              	.LVL261:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3642              		.loc 17 873 11 view .LVU1018
 3643              	.LBE1302:
 3644              	.LBE1303:
 3645              	.LBE1304:
 3646              	.LBE1305:
  49:modulations/mini_sequencer.h ****     step_ = 0;
 3647              		.loc 4 49 5 is_stmt 1 view .LVU1019
  50:modulations/mini_sequencer.h ****     reset_at_next_clock_ = false;
 3648              		.loc 4 50 5 view .LVU1020
  49:modulations/mini_sequencer.h ****     step_ = 0;
 3649              		.loc 4 49 16 is_stmt 0 view .LVU1021
 3650 000c 0280     		strh	r2, [r0]	@ movhi
  51:modulations/mini_sequencer.h ****   }
 3651              		.loc 4 51 5 is_stmt 1 view .LVU1022
  51:modulations/mini_sequencer.h ****   }
 3652              		.loc 4 51 26 is_stmt 0 view .LVU1023
 3653 000e 8372     		strb	r3, [r0, #10]
  52:modulations/mini_sequencer.h ****   
 3654              		.loc 4 52 3 view .LVU1024
 3655 0010 7047     		bx	lr
 3656              		.cfi_endproc
 3657              	.LFE1525:
 3659              		.section	.text._ZN5peaks10Processors17MiniSequencerInitEv,"axG",%progbits,_ZN5peaks10Processors17M
 3660              		.align	1
 3661              		.weak	_ZN5peaks10Processors17MiniSequencerInitEv
 3662              		.syntax unified
 3663              		.thumb
 3664              		.thumb_func
 3665              		.fpu fpv5-d16
 3667              	_ZN5peaks10Processors17MiniSequencerInitEv:
 3668              	.LVL262:
 3669              	.LFB1628:
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 3670              		.loc 1 166 3 is_stmt 1 view -0
 3671              		.cfi_startproc
 3672              		@ args = 0, pretend = 0, frame = 0
 3673              		@ frame_needed = 0, uses_anonymous_args = 0
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 3674              		.loc 1 166 3 view .LVU1026
 3675 0000 00F59360 		add	r0, r0, #1176
 3676              	.LVL263:
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 3677              		.loc 1 166 3 is_stmt 0 view .LVU1027
 3678 0004 08B5     		push	{r3, lr}
 3679              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 119


 3680              		.cfi_offset 3, -8
 3681              		.cfi_offset 14, -4
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 3682              		.loc 1 166 3 view .LVU1028
 3683 0006 FFF7FEFF 		bl	_ZN5peaks13MiniSequencer4InitEv
 3684              	.LVL264:
 166:processors.h  ****   DECLARE_PROCESSOR(NumberStation, number_station_);
 3685              		.loc 1 166 3 view .LVU1029
 3686 000a 08BD     		pop	{r3, pc}
 3687              		.cfi_endproc
 3688              	.LFE1628:
 3690              		.section	.text._ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE,"axG",%progbits,_ZN5pea
 3691              		.align	1
 3692              		.weak	_ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE
 3693              		.syntax unified
 3694              		.thumb
 3695              		.thumb_func
 3696              		.fpu fpv5-d16
 3698              	_ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE:
 3699              	.LVL265:
 3700              	.LFB1596:
 111:processors.h  ****     function_ = function;
 3701              		.loc 1 111 15 is_stmt 1 view -0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 8
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
 112:processors.h  ****     lfo_.set_sync(function == PROCESSOR_FUNCTION_TAP_LFO);
 3705              		.loc 1 112 5 view .LVU1031
 111:processors.h  ****     function_ = function;
 3706              		.loc 1 111 15 is_stmt 0 view .LVU1032
 3707 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3708              		.cfi_def_cfa_offset 32
 3709              		.cfi_offset 4, -20
 3710              		.cfi_offset 5, -16
 3711              		.cfi_offset 6, -12
 3712              		.cfi_offset 7, -8
 3713              		.cfi_offset 14, -4
 113:processors.h  ****     callbacks_ = callbacks_table_[function];
 3714              		.loc 1 113 18 view .LVU1033
 3715 0002 8E1E     		subs	r6, r1, #2
 111:processors.h  ****     function_ = function;
 3716              		.loc 1 111 15 view .LVU1034
 3717 0004 0F46     		mov	r7, r1
 112:processors.h  ****     lfo_.set_sync(function == PROCESSOR_FUNCTION_TAP_LFO);
 3718              		.loc 1 112 15 view .LVU1035
 3719 0006 4170     		strb	r1, [r0, #1]
 113:processors.h  ****     callbacks_ = callbacks_table_[function];
 3720              		.loc 1 113 5 is_stmt 1 view .LVU1036
 111:processors.h  ****     function_ = function;
 3721              		.loc 1 111 15 is_stmt 0 view .LVU1037
 3722 0008 0446     		mov	r4, r0
 113:processors.h  ****     callbacks_ = callbacks_table_[function];
 3723              		.loc 1 113 18 view .LVU1038
 3724 000a 7542     		rsbs	r5, r6, #0
 3725              	.LBB1329:
 3726              	.LBB1330:
 108:modulations/lfo.h ****       pattern_predictor_.Init();
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 120


 3727              		.loc 7 108 5 view .LVU1039
 3728 000c 90F87810 		ldrb	r1, [r0, #120]	@ zero_extendqisi2
 3729              	.LVL266:
 108:modulations/lfo.h ****       pattern_predictor_.Init();
 3730              		.loc 7 108 5 view .LVU1040
 3731              	.LBE1330:
 3732              	.LBE1329:
 113:processors.h  ****     callbacks_ = callbacks_table_[function];
 3733              		.loc 1 113 18 view .LVU1041
 3734 0010 7541     		adcs	r5, r5, r6
 3735              	.LVL267:
 3736              	.LBB1350:
 3737              	.LBI1329:
 107:modulations/lfo.h ****     if (!sync_ && sync) {
 3738              		.loc 7 107 15 is_stmt 1 view .LVU1042
 3739              	.LBB1349:
 108:modulations/lfo.h ****       pattern_predictor_.Init();
 3740              		.loc 7 108 5 view .LVU1043
 3741 0012 A9B9     		cbnz	r1, .L124
 108:modulations/lfo.h ****       pattern_predictor_.Init();
 3742              		.loc 7 108 16 is_stmt 0 view .LVU1044
 3743 0014 022F     		cmp	r7, #2
 3744 0016 13D1     		bne	.L124
 109:modulations/lfo.h ****     }
 3745              		.loc 7 109 7 is_stmt 1 view .LVU1045
 3746              	.LVL268:
 3747              	.LBB1331:
 3748              	.LBI1331:
 3749              		.file 18 "../../stmlib/algorithms/pattern_predictor.h"
   1:../../stmlib/algorithms/pattern_predictor.h **** // Copyright 2013 Emilie Gillet.
   2:../../stmlib/algorithms/pattern_predictor.h **** //
   3:../../stmlib/algorithms/pattern_predictor.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/algorithms/pattern_predictor.h **** //
   5:../../stmlib/algorithms/pattern_predictor.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/algorithms/pattern_predictor.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/algorithms/pattern_predictor.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/algorithms/pattern_predictor.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/algorithms/pattern_predictor.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/algorithms/pattern_predictor.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/algorithms/pattern_predictor.h **** // 
  12:../../stmlib/algorithms/pattern_predictor.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/algorithms/pattern_predictor.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/algorithms/pattern_predictor.h **** // 
  15:../../stmlib/algorithms/pattern_predictor.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/algorithms/pattern_predictor.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/algorithms/pattern_predictor.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/algorithms/pattern_predictor.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/algorithms/pattern_predictor.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/algorithms/pattern_predictor.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/algorithms/pattern_predictor.h **** // THE SOFTWARE.
  22:../../stmlib/algorithms/pattern_predictor.h **** // 
  23:../../stmlib/algorithms/pattern_predictor.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/algorithms/pattern_predictor.h **** //
  25:../../stmlib/algorithms/pattern_predictor.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/algorithms/pattern_predictor.h **** //
  27:../../stmlib/algorithms/pattern_predictor.h **** // Pattern predictor for synchronization to drum patterns or clocks with swing.
  28:../../stmlib/algorithms/pattern_predictor.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 121


  29:../../stmlib/algorithms/pattern_predictor.h **** #ifndef STMLIB_ALGORITHMS_PATTERN_PREDICTOR_H_
  30:../../stmlib/algorithms/pattern_predictor.h **** #define STMLIB_ALGORITHMS_PATTERN_PREDICTOR_H_
  31:../../stmlib/algorithms/pattern_predictor.h **** 
  32:../../stmlib/algorithms/pattern_predictor.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/algorithms/pattern_predictor.h **** 
  34:../../stmlib/algorithms/pattern_predictor.h **** #include <algorithm>
  35:../../stmlib/algorithms/pattern_predictor.h **** #include <cstdlib>
  36:../../stmlib/algorithms/pattern_predictor.h **** 
  37:../../stmlib/algorithms/pattern_predictor.h **** namespace stmlib {
  38:../../stmlib/algorithms/pattern_predictor.h ****   
  39:../../stmlib/algorithms/pattern_predictor.h **** template<size_t history_size = 16, uint8_t max_candidate_period = 8>
  40:../../stmlib/algorithms/pattern_predictor.h **** class PatternPredictor {
  41:../../stmlib/algorithms/pattern_predictor.h ****  public: 
  42:../../stmlib/algorithms/pattern_predictor.h ****   PatternPredictor() { }
  43:../../stmlib/algorithms/pattern_predictor.h **** 
  44:../../stmlib/algorithms/pattern_predictor.h ****   void Init() {
 3750              		.loc 18 44 8 view .LVU1046
 3751              	.LBB1332:
 3752              	.LBB1333:
 3753              	.LBB1334:
 3754              	.LBB1335:
 3755              	.LBB1336:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3756              		.loc 17 873 11 is_stmt 0 view .LVU1047
 3757 0018 00F18003 		add	r3, r0, #128
 3758              	.LVL269:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3759              		.loc 17 873 11 view .LVU1048
 3760              	.LBE1336:
 3761              	.LBE1335:
 3762              	.LBE1334:
 3763              	.LBE1333:
  45:../../stmlib/algorithms/pattern_predictor.h ****     history_pointer_ = 0;
 3764              		.loc 18 45 22 view .LVU1049
 3765 001c C0F84811 		str	r1, [r0, #328]
 3766              	.LVL270:
 3767              	.LBB1340:
 3768              	.LBI1333:
 3769              		.loc 17 937 5 is_stmt 1 view .LVU1050
 3770              	.LBB1339:
 3771              	.LBI1334:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 3772              		.loc 17 913 5 view .LVU1051
 3773              	.LBB1338:
 3774              	.LBI1335:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 3775              		.loc 17 868 5 view .LVU1052
 3776              	.LBB1337:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3777              		.loc 17 873 11 is_stmt 0 view .LVU1053
 3778 0020 8022     		movs	r2, #128
 3779 0022 0191     		str	r1, [sp, #4]
 3780 0024 1846     		mov	r0, r3
 3781              	.LVL271:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3782              		.loc 17 873 11 view .LVU1054
 3783 0026 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 122


 3784              	.LVL272:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3785              		.loc 17 873 11 view .LVU1055
 3786              	.LBE1337:
 3787              	.LBE1338:
 3788              	.LBE1339:
 3789              	.LBE1340:
 3790              	.LBB1341:
 3791              	.LBI1341:
 3792              		.loc 17 937 5 is_stmt 1 view .LVU1056
 3793              	.LBB1342:
 3794              	.LBI1342:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 3795              		.loc 17 913 5 view .LVU1057
 3796              	.LBB1343:
 3797              	.LBI1343:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 3798              		.loc 17 868 5 view .LVU1058
 3799              	.LBB1344:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3800              		.loc 17 873 11 is_stmt 0 view .LVU1059
 3801 002a 2422     		movs	r2, #36
 3802 002c 0199     		ldr	r1, [sp, #4]
 3803 002e 8030     		adds	r0, r0, #128
 3804 0030 FFF7FEFF 		bl	memset
 3805              	.LVL273:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3806              		.loc 17 873 11 view .LVU1060
 3807              	.LBE1344:
 3808              	.LBE1343:
 3809              	.LBE1342:
 3810              	.LBE1341:
 3811              	.LBB1345:
 3812              	.LBI1345:
 3813              		.loc 17 937 5 is_stmt 1 view .LVU1061
 3814              	.LBB1346:
 3815              	.LBI1346:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 3816              		.loc 17 913 5 view .LVU1062
 3817              	.LBB1347:
 3818              	.LBI1347:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 3819              		.loc 17 868 5 view .LVU1063
 3820              	.LBB1348:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3821              		.loc 17 873 11 is_stmt 0 view .LVU1064
 3822 0034 2422     		movs	r2, #36
 3823 0036 0199     		ldr	r1, [sp, #4]
 3824 0038 04F59270 		add	r0, r4, #292
 3825              	.LVL274:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3826              		.loc 17 873 11 view .LVU1065
 3827 003c FFF7FEFF 		bl	memset
 3828              	.LVL275:
 3829              	.L124:
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 3830              		.loc 17 873 11 view .LVU1066
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 123


 3831              	.LBE1348:
 3832              	.LBE1347:
 3833              	.LBE1346:
 3834              	.LBE1345:
 3835              	.LBE1332:
 3836              	.LBE1331:
 111:modulations/lfo.h ****   }
 3837              		.loc 7 111 5 is_stmt 1 view .LVU1067
 111:modulations/lfo.h ****   }
 3838              		.loc 7 111 11 is_stmt 0 view .LVU1068
 3839 0040 84F87850 		strb	r5, [r4, #120]
 3840              	.LVL276:
 111:modulations/lfo.h ****   }
 3841              		.loc 7 111 11 view .LVU1069
 3842              	.LBE1349:
 3843              	.LBE1350:
 114:processors.h  ****     if (function != PROCESSOR_FUNCTION_TAP_LFO) {
 3844              		.loc 1 114 5 is_stmt 1 view .LVU1070
 114:processors.h  ****     if (function != PROCESSOR_FUNCTION_TAP_LFO) {
 3845              		.loc 1 114 16 is_stmt 0 view .LVU1071
 3846 0044 1823     		movs	r3, #24
 3847 0046 264D     		ldr	r5, .L150
 3848 0048 04F10C06 		add	r6, r4, #12
 115:processors.h  ****       (this->*callbacks_.init_fn)();
 3849              		.loc 1 115 5 view .LVU1072
 3850 004c 022F     		cmp	r7, #2
 114:processors.h  ****     if (function != PROCESSOR_FUNCTION_TAP_LFO) {
 3851              		.loc 1 114 16 view .LVU1073
 3852 004e 03FB0755 		mla	r5, r3, r7, r5
 3853 0052 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3854 0054 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3855 0056 95E80300 		ldm	r5, {r0, r1}
 3856 005a 86E80300 		stm	r6, {r0, r1}
 115:processors.h  ****       (this->*callbacks_.init_fn)();
 3857              		.loc 1 115 5 is_stmt 1 view .LVU1074
 3858 005e 0AD0     		beq	.L125
 116:processors.h  ****     }
 3859              		.loc 1 116 7 view .LVU1075
 116:processors.h  ****     }
 3860              		.loc 1 116 35 is_stmt 0 view .LVU1076
 3861 0060 2269     		ldr	r2, [r4, #16]
 3862 0062 E368     		ldr	r3, [r4, #12]
 3863 0064 D507     		lsls	r5, r2, #31
 3864 0066 4FEA6201 		asr	r1, r2, #1
 116:processors.h  ****     }
 3865              		.loc 1 116 34 view .LVU1077
 3866 006a 04EB6200 		add	r0, r4, r2, asr #1
 116:processors.h  ****     }
 3867              		.loc 1 116 35 view .LVU1078
 3868 006e 44BF     		itt	mi
 3869 0070 6258     		ldrmi	r2, [r4, r1]
 3870 0072 D358     		ldrmi	r3, [r2, r3]
 116:processors.h  ****     }
 3871              		.loc 1 116 34 view .LVU1079
 3872 0074 9847     		blx	r3
 3873              	.LVL277:
 3874              	.L125:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 124


 118:processors.h  ****   }
 3875              		.loc 1 118 5 is_stmt 1 view .LVU1080
 3876              	.LBB1351:
 3877              	.LBI1351:
 130:processors.h  ****     if (function_ == PROCESSOR_FUNCTION_SNARE_DRUM ||
 3878              		.loc 1 130 8 view .LVU1081
 3879              	.LBB1352:
 131:processors.h  ****         function_ == PROCESSOR_FUNCTION_HIGH_HAT) {
 3880              		.loc 1 131 5 view .LVU1082
 3881              	.LBB1353:
 131:processors.h  ****         function_ == PROCESSOR_FUNCTION_HIGH_HAT) {
 3882              		.loc 1 131 9 is_stmt 0 view .LVU1083
 3883 0076 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 131:processors.h  ****         function_ == PROCESSOR_FUNCTION_HIGH_HAT) {
 3884              		.loc 1 131 5 view .LVU1084
 3885 0078 131F     		subs	r3, r2, #4
 3886 007a 012B     		cmp	r3, #1
 3887 007c 10D8     		bhi	.L127
 3888              	.LBB1354:
 133:processors.h  ****           ? parameter_[1] : parameter_[0];
 3889              		.loc 1 133 7 is_stmt 1 view .LVU1085
 134:processors.h  ****       uint16_t snappy_parameter = control_mode_ == CONTROL_MODE_FULL
 3890              		.loc 1 134 11 is_stmt 0 view .LVU1086
 3891 007e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 3892 0080 A388     		ldrh	r3, [r4, #4]
 3893 0082 F1B9     		cbnz	r1, .L128
 3894              	.LVL278:
 135:processors.h  ****           ? parameter_[2] : parameter_[1];
 3895              		.loc 1 135 7 is_stmt 1 view .LVU1087
 134:processors.h  ****       uint16_t snappy_parameter = control_mode_ == CONTROL_MODE_FULL
 3896              		.loc 1 134 11 is_stmt 0 view .LVU1088
 3897 0084 1946     		mov	r1, r3
 136:processors.h  ****       if (tone_parameter >= 65000 && snappy_parameter >= 65000) {
 3898              		.loc 1 136 11 view .LVU1089
 3899 0086 E388     		ldrh	r3, [r4, #6]
 3900              	.LVL279:
 3901              	.L129:
 137:processors.h  ****         if (function_ != PROCESSOR_FUNCTION_HIGH_HAT) {
 3902              		.loc 1 137 7 is_stmt 1 view .LVU1090
 3903 0088 4FF6E750 		movw	r0, #64999
 3904 008c 8142     		cmp	r1, r0
 3905 008e 1AD9     		bls	.L130
 137:processors.h  ****         if (function_ != PROCESSOR_FUNCTION_HIGH_HAT) {
 3906              		.loc 1 137 35 is_stmt 0 view .LVU1091
 3907 0090 8342     		cmp	r3, r0
 3908 0092 1CD9     		bls	.L131
 138:processors.h  ****           set_function(PROCESSOR_FUNCTION_HIGH_HAT);
 3909              		.loc 1 138 9 is_stmt 1 view .LVU1092
 3910 0094 052A     		cmp	r2, #5
 3911 0096 03D0     		beq	.L127
 139:processors.h  ****         }
 3912              		.loc 1 139 11 view .LVU1093
 139:processors.h  ****         }
 3913              		.loc 1 139 23 is_stmt 0 view .LVU1094
 3914 0098 0521     		movs	r1, #5
 3915              	.L149:
 143:processors.h  ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 125


 3916              		.loc 1 143 23 view .LVU1095
 3917 009a 2046     		mov	r0, r4
 3918 009c FFF7FEFF 		bl	_ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE
 3919              	.LVL280:
 3920              	.L127:
 143:processors.h  ****         }
 3921              		.loc 1 143 23 view .LVU1096
 3922              	.LBE1354:
 3923              	.LBE1353:
 147:processors.h  ****   }
 3924              		.loc 1 147 5 is_stmt 1 view .LVU1097
 147:processors.h  ****   }
 3925              		.loc 1 147 67 is_stmt 0 view .LVU1098
 3926 00a0 226A     		ldr	r2, [r4, #32]
 3927 00a2 E369     		ldr	r3, [r4, #28]
 3928 00a4 5110     		asrs	r1, r2, #1
 147:processors.h  ****   }
 3929              		.loc 1 147 37 view .LVU1099
 3930 00a6 04EB6200 		add	r0, r4, r2, asr #1
 147:processors.h  ****   }
 3931              		.loc 1 147 67 view .LVU1100
 3932 00aa D207     		lsls	r2, r2, #31
 3933 00ac 48BF     		it	mi
 3934 00ae 6258     		ldrmi	r2, [r4, r1]
 147:processors.h  ****   }
 3935              		.loc 1 147 37 view .LVU1101
 3936 00b0 2146     		mov	r1, r4
 147:processors.h  ****   }
 3937              		.loc 1 147 67 view .LVU1102
 3938 00b2 48BF     		it	mi
 3939 00b4 D358     		ldrmi	r3, [r2, r3]
 147:processors.h  ****   }
 3940              		.loc 1 147 37 view .LVU1103
 3941 00b6 11F8022B 		ldrb	r2, [r1], #2	@ zero_extendqisi2
 3942              	.LBE1352:
 3943              	.LBE1351:
 119:processors.h  ****   
 3944              		.loc 1 119 3 view .LVU1104
 3945 00ba 03B0     		add	sp, sp, #12
 3946              		.cfi_remember_state
 3947              		.cfi_def_cfa_offset 20
 3948              		@ sp needed
 3949 00bc BDE8F040 		pop	{r4, r5, r6, r7, lr}
 3950              		.cfi_restore 14
 3951              		.cfi_restore 7
 3952              		.cfi_restore 6
 3953              		.cfi_restore 5
 3954              		.cfi_restore 4
 3955              		.cfi_def_cfa_offset 0
 3956              	.LVL281:
 3957              	.LBB1358:
 3958              	.LBB1357:
 147:processors.h  ****   }
 3959              		.loc 1 147 37 view .LVU1105
 3960 00c0 1847     		bx	r3	@ indirect register sibling call
 3961              	.LVL282:
 3962              	.L128:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 126


 3963              		.cfi_restore_state
 3964              	.LBB1356:
 3965              	.LBB1355:
 134:processors.h  ****       uint16_t snappy_parameter = control_mode_ == CONTROL_MODE_FULL
 3966              		.loc 1 134 11 view .LVU1106
 3967 00c2 6188     		ldrh	r1, [r4, #2]
 3968              	.LVL283:
 135:processors.h  ****           ? parameter_[2] : parameter_[1];
 3969              		.loc 1 135 7 is_stmt 1 view .LVU1107
 135:processors.h  ****           ? parameter_[2] : parameter_[1];
 3970              		.loc 1 135 7 is_stmt 0 view .LVU1108
 3971 00c4 E0E7     		b	.L129
 3972              	.LVL284:
 3973              	.L130:
 141:processors.h  ****         if (function_ != PROCESSOR_FUNCTION_SNARE_DRUM) {
 3974              		.loc 1 141 14 is_stmt 1 view .LVU1109
 3975 00c6 4FF6F430 		movw	r0, #64500
 3976 00ca 8142     		cmp	r1, r0
 3977 00cc 03D9     		bls	.L132
 3978              	.L131:
 141:processors.h  ****         if (function_ != PROCESSOR_FUNCTION_SNARE_DRUM) {
 3979              		.loc 1 141 42 is_stmt 0 view .LVU1110
 3980 00ce 4FF6F431 		movw	r1, #64500
 3981 00d2 8B42     		cmp	r3, r1
 3982 00d4 E4D8     		bhi	.L127
 3983              	.L132:
 142:processors.h  ****           set_function(PROCESSOR_FUNCTION_SNARE_DRUM);
 3984              		.loc 1 142 9 is_stmt 1 view .LVU1111
 3985 00d6 042A     		cmp	r2, #4
 3986 00d8 E2D0     		beq	.L127
 143:processors.h  ****         }
 3987              		.loc 1 143 11 view .LVU1112
 143:processors.h  ****         }
 3988              		.loc 1 143 23 is_stmt 0 view .LVU1113
 3989 00da 0421     		movs	r1, #4
 3990 00dc DDE7     		b	.L149
 3991              	.L151:
 3992 00de 00BF     		.align	2
 3993              	.L150:
 3994 00e0 00000000 		.word	.LANCHOR0
 3995              	.LBE1355:
 3996              	.LBE1356:
 3997              	.LBE1357:
 3998              	.LBE1358:
 3999              		.cfi_endproc
 4000              	.LFE1596:
 4002              		.section	.text._ZN5peaks10Processors4InitEh,"ax",%progbits
 4003              		.align	1
 4004              		.global	_ZN5peaks10Processors4InitEh
 4005              		.syntax unified
 4006              		.thumb
 4007              		.thumb_func
 4008              		.fpu fpv5-d16
 4010              	_ZN5peaks10Processors4InitEh:
 4011              	.LVL285:
 4012              	.LFB1634:
  60:processors.cpp ****   for (uint16_t i = 0; i < PROCESSOR_FUNCTION_LAST; ++i) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 127


 4013              		.loc 5 60 38 is_stmt 1 view -0
 4014              		.cfi_startproc
 4015              		@ args = 0, pretend = 0, frame = 0
 4016              		@ frame_needed = 0, uses_anonymous_args = 0
  61:processors.cpp ****     (this->*callbacks_table_[i].init_fn)();
 4017              		.loc 5 61 3 view .LVU1115
 4018              	.LBB1371:
  61:processors.cpp ****     (this->*callbacks_table_[i].init_fn)();
 4019              		.loc 5 61 26 view .LVU1116
 4020              	.LBE1371:
  60:processors.cpp ****   for (uint16_t i = 0; i < PROCESSOR_FUNCTION_LAST; ++i) {
 4021              		.loc 5 60 38 is_stmt 0 view .LVU1117
 4022 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4023              		.cfi_def_cfa_offset 24
 4024              		.cfi_offset 3, -24
 4025              		.cfi_offset 4, -20
 4026              		.cfi_offset 5, -16
 4027              		.cfi_offset 6, -12
 4028              		.cfi_offset 7, -8
 4029              		.cfi_offset 14, -4
  60:processors.cpp ****   for (uint16_t i = 0; i < PROCESSOR_FUNCTION_LAST; ++i) {
 4030              		.loc 5 60 38 view .LVU1118
 4031 0002 0446     		mov	r4, r0
 4032 0004 0D46     		mov	r5, r1
 4033 0006 0026     		movs	r6, #0
 4034              	.LVL286:
 4035              	.L154:
 4036              	.LBB1372:
  62:processors.cpp ****   }
 4037              		.loc 5 62 5 is_stmt 1 view .LVU1119
  62:processors.cpp ****   }
 4038              		.loc 5 62 42 is_stmt 0 view .LVU1120
 4039 0008 1823     		movs	r3, #24
 4040 000a 2C49     		ldr	r1, .L159
 4041 000c 7343     		muls	r3, r6, r3
  61:processors.cpp ****     (this->*callbacks_table_[i].init_fn)();
 4042              		.loc 5 61 26 view .LVU1121
 4043 000e 0136     		adds	r6, r6, #1
 4044              	.LVL287:
  62:processors.cpp ****   }
 4045              		.loc 5 62 42 view .LVU1122
 4046 0010 CA18     		adds	r2, r1, r3
 4047 0012 CB58     		ldr	r3, [r1, r3]
 4048 0014 5268     		ldr	r2, [r2, #4]
 4049 0016 5710     		asrs	r7, r2, #1
  62:processors.cpp ****   }
 4050              		.loc 5 62 41 view .LVU1123
 4051 0018 04EB6200 		add	r0, r4, r2, asr #1
  62:processors.cpp ****   }
 4052              		.loc 5 62 42 view .LVU1124
 4053 001c D207     		lsls	r2, r2, #31
 4054 001e 44BF     		itt	mi
 4055 0020 E259     		ldrmi	r2, [r4, r7]
 4056 0022 D358     		ldrmi	r3, [r2, r3]
  62:processors.cpp ****   }
 4057              		.loc 5 62 41 view .LVU1125
 4058 0024 9847     		blx	r3
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 128


 4059              	.LVL288:
  61:processors.cpp ****     (this->*callbacks_table_[i].init_fn)();
 4060              		.loc 5 61 3 is_stmt 1 view .LVU1126
  61:processors.cpp ****     (this->*callbacks_table_[i].init_fn)();
 4061              		.loc 5 61 26 view .LVU1127
 4062 0026 0C2E     		cmp	r6, #12
 4063 0028 EED1     		bne	.L154
 4064              	.LBE1372:
  65:processors.cpp ****   snare_drum_.Init();
 4065              		.loc 5 65 3 view .LVU1128
  65:processors.cpp ****   snare_drum_.Init();
 4066              		.loc 5 65 18 is_stmt 0 view .LVU1129
 4067 002a 04F5B870 		add	r0, r4, #368
 4068              	.LBB1373:
 4069              	.LBB1374:
  52:modulations/bouncing_ball.h ****   }
 4070              		.loc 3 52 23 view .LVU1130
 4071 002e 0026     		movs	r6, #0
 4072              	.LBE1374:
 4073              	.LBE1373:
  65:processors.cpp ****   snare_drum_.Init();
 4074              		.loc 5 65 18 view .LVU1131
 4075 0030 FFF7FEFF 		bl	_ZN5peaks8BassDrum4InitEv
 4076              	.LVL289:
  66:processors.cpp ****   fm_drum_.Init();
 4077              		.loc 5 66 3 is_stmt 1 view .LVU1132
  66:processors.cpp ****   fm_drum_.Init();
 4078              		.loc 5 66 19 is_stmt 0 view .LVU1133
 4079 0034 04F5EC70 		add	r0, r4, #472
 4080 0038 FFF7FEFF 		bl	_ZN5peaks9SnareDrum4InitEv
 4081              	.LVL290:
  67:processors.cpp ****   fm_drum_.set_sd_range(index == 1);
 4082              		.loc 5 67 3 is_stmt 1 view .LVU1134
  67:processors.cpp ****   fm_drum_.set_sd_range(index == 1);
 4083              		.loc 5 67 16 is_stmt 0 view .LVU1135
 4084 003c 04F54070 		add	r0, r4, #768
 4085 0040 FFF7FEFF 		bl	_ZN5peaks6FmDrum4InitEv
 4086              	.LVL291:
  68:processors.cpp ****   high_hat_.Init();
 4087              		.loc 5 68 3 is_stmt 1 view .LVU1136
  68:processors.cpp ****   high_hat_.Init();
 4088              		.loc 5 68 24 is_stmt 0 view .LVU1137
 4089 0044 6B1E     		subs	r3, r5, #1
  69:processors.cpp ****   bouncing_ball_.Init();
 4090              		.loc 5 69 17 view .LVU1138
 4091 0046 04F52570 		add	r0, r4, #660
  68:processors.cpp ****   high_hat_.Init();
 4092              		.loc 5 68 24 view .LVU1139
 4093 004a 5D42     		rsbs	r5, r3, #0
 4094 004c 5D41     		adcs	r5, r5, r3
 4095              	.LVL292:
 4096              	.LBB1377:
 4097              	.LBI1377:
  58:drums/fm_drum.h ****     sd_range_ = sd_range;
 4098              		.loc 6 58 15 is_stmt 1 view .LVU1140
 4099              	.LBB1378:
  59:drums/fm_drum.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 129


 4100              		.loc 6 59 5 view .LVU1141
  59:drums/fm_drum.h ****   }
 4101              		.loc 6 59 15 is_stmt 0 view .LVU1142
 4102 004e 84F80053 		strb	r5, [r4, #768]
 4103              	.LVL293:
  59:drums/fm_drum.h ****   }
 4104              		.loc 6 59 15 view .LVU1143
 4105              	.LBE1378:
 4106              	.LBE1377:
  69:processors.cpp ****   bouncing_ball_.Init();
 4107              		.loc 5 69 3 is_stmt 1 view .LVU1144
  69:processors.cpp ****   bouncing_ball_.Init();
 4108              		.loc 5 69 17 is_stmt 0 view .LVU1145
 4109 0052 FFF7FEFF 		bl	_ZN5peaks7HighHat4InitEv
 4110              	.LVL294:
  70:processors.cpp ****   lfo_.Init();
 4111              		.loc 5 70 3 is_stmt 1 view .LVU1146
 4112              	.LBB1379:
 4113              	.LBI1373:
  48:modulations/bouncing_ball.h ****     initial_amplitude_ = 65535L << 14;
 4114              		.loc 3 48 8 view .LVU1147
 4115              	.LBB1375:
  49:modulations/bouncing_ball.h ****     gravity_ = 40;
 4116              		.loc 3 49 5 view .LVU1148
  49:modulations/bouncing_ball.h ****     gravity_ = 40;
 4117              		.loc 3 49 24 is_stmt 0 view .LVU1149
 4118 0056 1A4B     		ldr	r3, .L159+4
 4119              	.LBE1375:
 4120              	.LBE1379:
  71:processors.cpp ****   envelope_.Init();
 4121              		.loc 5 71 12 view .LVU1150
 4122 0058 04F16800 		add	r0, r4, #104
 4123              	.LBB1380:
 4124              	.LBB1376:
  52:modulations/bouncing_ball.h ****   }
 4125              		.loc 3 52 23 view .LVU1151
 4126 005c C4F88C64 		str	r6, [r4, #1164]
  49:modulations/bouncing_ball.h ****     gravity_ = 40;
 4127              		.loc 3 49 24 view .LVU1152
 4128 0060 C4F88834 		str	r3, [r4, #1160]
  50:modulations/bouncing_ball.h ****     bounce_loss_ = 4095;
 4129              		.loc 3 50 5 is_stmt 1 view .LVU1153
  50:modulations/bouncing_ball.h ****     bounce_loss_ = 4095;
 4130              		.loc 3 50 14 is_stmt 0 view .LVU1154
 4131 0064 2823     		movs	r3, #40
 4132 0066 C4F88034 		str	r3, [r4, #1152]
  51:modulations/bouncing_ball.h ****     initial_velocity_ = 0;
 4133              		.loc 3 51 5 is_stmt 1 view .LVU1155
  51:modulations/bouncing_ball.h ****     initial_velocity_ = 0;
 4134              		.loc 3 51 18 is_stmt 0 view .LVU1156
 4135 006a 40F6FF73 		movw	r3, #4095
 4136 006e C4F88434 		str	r3, [r4, #1156]
  52:modulations/bouncing_ball.h ****   }
 4137              		.loc 3 52 5 is_stmt 1 view .LVU1157
 4138              	.LVL295:
  52:modulations/bouncing_ball.h ****   }
 4139              		.loc 3 52 5 is_stmt 0 view .LVU1158
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 130


 4140              	.LBE1376:
 4141              	.LBE1380:
  71:processors.cpp ****   envelope_.Init();
 4142              		.loc 5 71 3 is_stmt 1 view .LVU1159
  71:processors.cpp ****   envelope_.Init();
 4143              		.loc 5 71 12 is_stmt 0 view .LVU1160
 4144 0072 FFF7FEFF 		bl	_ZN5peaks3Lfo4InitEv
 4145              	.LVL296:
  72:processors.cpp ****   pulse_shaper_.Init();
 4146              		.loc 5 72 3 is_stmt 1 view .LVU1161
  72:processors.cpp ****   pulse_shaper_.Init();
 4147              		.loc 5 72 17 is_stmt 0 view .LVU1162
 4148 0076 04F12400 		add	r0, r4, #36
 4149 007a FFF7FEFF 		bl	_ZN5peaks18MultistageEnvelope4InitEv
 4150              	.LVL297:
  73:processors.cpp ****   pulse_randomizer_.Init();
 4151              		.loc 5 73 3 is_stmt 1 view .LVU1163
  73:processors.cpp ****   pulse_randomizer_.Init();
 4152              		.loc 5 73 21 is_stmt 0 view .LVU1164
 4153 007e 04F54A70 		add	r0, r4, #808
 4154 0082 FFF7FEFF 		bl	_ZN5peaks11PulseShaper4InitEv
 4155              	.LVL298:
  74:processors.cpp ****   mini_sequencer_.Init();
 4156              		.loc 5 74 3 is_stmt 1 view .LVU1165
  74:processors.cpp ****   mini_sequencer_.Init();
 4157              		.loc 5 74 25 is_stmt 0 view .LVU1166
 4158 0086 04F23440 		addw	r0, r4, #1076
 4159 008a FFF7FEFF 		bl	_ZN5peaks15PulseRandomizer4InitEv
 4160              	.LVL299:
  75:processors.cpp ****   number_station_.Init();
 4161              		.loc 5 75 3 is_stmt 1 view .LVU1167
  75:processors.cpp ****   number_station_.Init();
 4162              		.loc 5 75 23 is_stmt 0 view .LVU1168
 4163 008e 04F59360 		add	r0, r4, #1176
 4164 0092 FFF7FEFF 		bl	_ZN5peaks13MiniSequencer4InitEv
 4165              	.LVL300:
  76:processors.cpp ****   number_station_.set_voice(index == 1);
 4166              		.loc 5 76 3 is_stmt 1 view .LVU1169
  76:processors.cpp ****   number_station_.set_voice(index == 1);
 4167              		.loc 5 76 23 is_stmt 0 view .LVU1170
 4168 0096 04F2A440 		addw	r0, r4, #1188
 4169 009a FFF7FEFF 		bl	_ZN5peaks13NumberStation4InitEv
 4170              	.LVL301:
  77:processors.cpp ****   
 4171              		.loc 5 77 3 is_stmt 1 view .LVU1171
 4172              	.LBB1381:
 4173              	.LBI1381:
  77:number_station/number_station.h ****   }
  78:number_station/number_station.h ****   
  79:number_station/number_station.h ****   inline void set_voice(bool voice) {
 4174              		.loc 10 79 15 view .LVU1172
 4175              	.LBB1382:
  80:number_station/number_station.h ****     voice_ = voice;
 4176              		.loc 10 80 5 view .LVU1173
 4177              	.LBE1382:
 4178              	.LBE1381:
  80:processors.cpp ****   std::fill(&parameter_[0], &parameter_[4], 32768);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 131


 4179              		.loc 5 80 15 is_stmt 0 view .LVU1174
 4180 009e 3146     		mov	r1, r6
 4181 00a0 2046     		mov	r0, r4
 4182              	.LBB1384:
 4183              	.LBB1383:
 4184              		.loc 10 80 12 view .LVU1175
 4185 00a2 84F8DC54 		strb	r5, [r4, #1244]
 4186              	.LVL302:
 4187              		.loc 10 80 12 view .LVU1176
 4188              	.LBE1383:
 4189              	.LBE1384:
  79:processors.cpp ****   set_function(PROCESSOR_FUNCTION_ENVELOPE);
 4190              		.loc 5 79 3 is_stmt 1 view .LVU1177
  79:processors.cpp ****   set_function(PROCESSOR_FUNCTION_ENVELOPE);
 4191              		.loc 5 79 17 is_stmt 0 view .LVU1178
 4192 00a6 2670     		strb	r6, [r4]
  80:processors.cpp ****   std::fill(&parameter_[0], &parameter_[4], 32768);
 4193              		.loc 5 80 3 is_stmt 1 view .LVU1179
  80:processors.cpp ****   std::fill(&parameter_[0], &parameter_[4], 32768);
 4194              		.loc 5 80 15 is_stmt 0 view .LVU1180
 4195 00a8 FFF7FEFF 		bl	_ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE
 4196              	.LVL303:
  81:processors.cpp **** }
 4197              		.loc 5 81 3 is_stmt 1 view .LVU1181
 4198              	.LBB1385:
 4199              	.LBI1385:
 4200              		.loc 17 937 5 view .LVU1182
 4201              	.LBB1386:
 4202              	.LBI1386:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 4203              		.loc 17 913 5 view .LVU1183
 4204              	.LBB1387:
 4205              	.LBI1387:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 4206              		.loc 17 868 5 view .LVU1184
 4207              	.LBB1388:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4208              		.loc 17 872 22 view .LVU1185
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 4209              		.loc 17 873 11 is_stmt 0 view .LVU1186
 4210 00ac 4FF40043 		mov	r3, #32768
 4211 00b0 6380     		strh	r3, [r4, #2]	@ movhi
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4212              		.loc 17 872 7 is_stmt 1 view .LVU1187
 4213              	.LVL304:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4214              		.loc 17 872 22 view .LVU1188
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 4215              		.loc 17 873 11 is_stmt 0 view .LVU1189
 4216 00b2 A380     		strh	r3, [r4, #4]	@ movhi
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4217              		.loc 17 872 7 is_stmt 1 view .LVU1190
 4218              	.LVL305:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4219              		.loc 17 872 22 view .LVU1191
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 4220              		.loc 17 873 11 is_stmt 0 view .LVU1192
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 132


 4221 00b4 E380     		strh	r3, [r4, #6]	@ movhi
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4222              		.loc 17 872 7 is_stmt 1 view .LVU1193
 4223              	.LVL306:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4224              		.loc 17 872 22 view .LVU1194
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 4225              		.loc 17 873 11 is_stmt 0 view .LVU1195
 4226 00b6 2381     		strh	r3, [r4, #8]	@ movhi
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4227              		.loc 17 872 7 is_stmt 1 view .LVU1196
 4228              	.LVL307:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4229              		.loc 17 872 22 view .LVU1197
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 4230              		.loc 17 872 22 is_stmt 0 view .LVU1198
 4231              	.LBE1388:
 4232              	.LBE1387:
 4233              	.LBE1386:
 4234              	.LBE1385:
  82:processors.cpp **** 
 4235              		.loc 5 82 1 view .LVU1199
 4236 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4237              	.LVL308:
 4238              	.L160:
  82:processors.cpp **** 
 4239              		.loc 5 82 1 view .LVU1200
 4240 00ba 00BF     		.align	2
 4241              	.L159:
 4242 00bc 00000000 		.word	.LANCHOR0
 4243 00c0 00C0FF3F 		.word	1073725440
 4244              		.cfi_endproc
 4245              	.LFE1634:
 4247              		.section	.text.startup._GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E,"ax",%progbits
 4248              		.align	1
 4249              		.syntax unified
 4250              		.thumb
 4251              		.thumb_func
 4252              		.fpu fpv5-d16
 4254              	_GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E:
 4255              	.LFB1664:
  86:processors.cpp **** 
  87:processors.cpp **** }  // namespace peaks
 4256              		.loc 5 87 1 is_stmt 1 view -0
 4257              		.cfi_startproc
 4258              		@ args = 0, pretend = 0, frame = 0
 4259              		@ frame_needed = 0, uses_anonymous_args = 0
 4260              		@ link register save eliminated.
 4261              	.LBB1420:
 4262              	.LBI1420:
 4263              		.loc 5 87 1 view .LVU1202
 4264              	.LVL309:
 4265              	.LBB1421:
  85:processors.cpp **** 
 4266              		.loc 5 85 24 view .LVU1203
  85:processors.cpp **** 
 4267              		.loc 5 85 12 is_stmt 0 view .LVU1204
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 133


 4268 0000 024A     		ldr	r2, .L162
 4269 0002 0020     		movs	r0, #0
 4270 0004 0249     		ldr	r1, .L162+4
 4271 0006 FFF7FEBF 		b	__aeabi_atexit
 4272              	.LVL310:
 4273              	.L163:
 4274 000a 00BF     		.align	2
 4275              	.L162:
 4276 000c 00000000 		.word	__dso_handle
 4277 0010 00000000 		.word	__tcf_0
 4278              	.LBE1421:
 4279              	.LBE1420:
 4280              		.cfi_endproc
 4281              	.LFE1664:
 4283              		.section	.init_array,"aw",%init_array
 4284              		.align	2
 4285 0000 00000000 		.word	_GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E(target1)
 4286              		.global	_ZN5peaks10processorsE
 4287              		.global	_ZN5peaks10Processors16callbacks_table_E
 4288              		.section	.bss._ZN5peaks10processorsE,"aw",%nobits
 4289              		.align	2
 4292              	_ZN5peaks10processorsE:
 4293 0000 00000000 		.space	2624
 4293      00000000 
 4293      00000000 
 4293      00000000 
 4293      00000000 
 4294              		.section	.rodata._ZN5peaks10Processors16callbacks_table_E,"a"
 4295              		.align	2
 4296              		.set	.LANCHOR0,. + 0
 4299              	_ZN5peaks10Processors16callbacks_table_E:
 4300 0000 00000000 		.word	_ZN5peaks10Processors22MultistageEnvelopeInitEv
 4301 0004 00000000 		.word	0
 4302 0008 00000000 		.word	_ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj
 4303 000c 00000000 		.word	0
 4304 0010 00000000 		.word	_ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE
 4305 0014 00000000 		.word	0
 4306 0018 00000000 		.word	_ZN5peaks10Processors7LfoInitEv
 4307 001c 00000000 		.word	0
 4308 0020 00000000 		.word	_ZN5peaks10Processors10LfoProcessEPKhPsj
 4309 0024 00000000 		.word	0
 4310 0028 00000000 		.word	_ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE
 4311 002c 00000000 		.word	0
 4312 0030 00000000 		.word	_ZN5peaks10Processors7LfoInitEv
 4313 0034 00000000 		.word	0
 4314 0038 00000000 		.word	_ZN5peaks10Processors10LfoProcessEPKhPsj
 4315 003c 00000000 		.word	0
 4316 0040 00000000 		.word	_ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE
 4317 0044 00000000 		.word	0
 4318 0048 00000000 		.word	_ZN5peaks10Processors12BassDrumInitEv
 4319 004c 00000000 		.word	0
 4320 0050 00000000 		.word	_ZN5peaks10Processors15BassDrumProcessEPKhPsj
 4321 0054 00000000 		.word	0
 4322 0058 00000000 		.word	_ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE
 4323 005c 00000000 		.word	0
 4324 0060 00000000 		.word	_ZN5peaks10Processors13SnareDrumInitEv
 4325 0064 00000000 		.word	0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 134


 4326 0068 00000000 		.word	_ZN5peaks10Processors16SnareDrumProcessEPKhPsj
 4327 006c 00000000 		.word	0
 4328 0070 00000000 		.word	_ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE
 4329 0074 00000000 		.word	0
 4330 0078 00000000 		.word	_ZN5peaks10Processors11HighHatInitEv
 4331 007c 00000000 		.word	0
 4332 0080 00000000 		.word	_ZN5peaks10Processors14HighHatProcessEPKhPsj
 4333 0084 00000000 		.word	0
 4334 0088 00000000 		.word	_ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE
 4335 008c 00000000 		.word	0
 4336 0090 00000000 		.word	_ZN5peaks10Processors10FmDrumInitEv
 4337 0094 00000000 		.word	0
 4338 0098 00000000 		.word	_ZN5peaks10Processors13FmDrumProcessEPKhPsj
 4339 009c 00000000 		.word	0
 4340 00a0 00000000 		.word	_ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE
 4341 00a4 00000000 		.word	0
 4342 00a8 00000000 		.word	_ZN5peaks10Processors15PulseShaperInitEv
 4343 00ac 00000000 		.word	0
 4344 00b0 00000000 		.word	_ZN5peaks10Processors18PulseShaperProcessEPKhPsj
 4345 00b4 00000000 		.word	0
 4346 00b8 00000000 		.word	_ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE
 4347 00bc 00000000 		.word	0
 4348 00c0 00000000 		.word	_ZN5peaks10Processors19PulseRandomizerInitEv
 4349 00c4 00000000 		.word	0
 4350 00c8 00000000 		.word	_ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj
 4351 00cc 00000000 		.word	0
 4352 00d0 00000000 		.word	_ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE
 4353 00d4 00000000 		.word	0
 4354 00d8 00000000 		.word	_ZN5peaks10Processors16BouncingBallInitEv
 4355 00dc 00000000 		.word	0
 4356 00e0 00000000 		.word	_ZN5peaks10Processors19BouncingBallProcessEPKhPsj
 4357 00e4 00000000 		.word	0
 4358 00e8 00000000 		.word	_ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE
 4359 00ec 00000000 		.word	0
 4360 00f0 00000000 		.word	_ZN5peaks10Processors17MiniSequencerInitEv
 4361 00f4 00000000 		.word	0
 4362 00f8 00000000 		.word	_ZN5peaks10Processors20MiniSequencerProcessEPKhPsj
 4363 00fc 00000000 		.word	0
 4364 0100 00000000 		.word	_ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE
 4365 0104 00000000 		.word	0
 4366 0108 00000000 		.word	_ZN5peaks10Processors17NumberStationInitEv
 4367 010c 00000000 		.word	0
 4368 0110 00000000 		.word	_ZN5peaks10Processors20NumberStationProcessEPKhPsj
 4369 0114 00000000 		.word	0
 4370 0118 00000000 		.word	_ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE
 4371 011c 00000000 		.word	0
 4372              		.text
 4373              	.Letext0:
 4374              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 4375              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 4376              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 4377              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4378              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4379              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4380              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4381              		.file 26 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4382              		.file 27 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 135


 4383              		.file 28 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4384              		.file 29 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4385              		.file 30 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4386              		.file 31 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4387              		.file 32 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 4388              		.file 33 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 4389              		.file 34 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 4390              		.file 35 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 4391              		.file 36 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 4392              		.file 37 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 4393              		.file 38 "../../stmlib/stmlib.h"
 4394              		.file 39 "./resources.h"
 4395              		.file 40 "./gate_processor.h"
 4396              		.file 41 "drums/high_hat.h"
 4397              		.file 42 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 4398              		.file 43 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 136


DEFINED SYMBOLS
                            *ABS*:0000000000000000 processors.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:17     .text._ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:25     .text._ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:186    .text._ZN5peaks10Processors27MultistageEnvelopeConfigureEPtNS_11ControlModeE:0000000000000068 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:195    .text._ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:202    .text._ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors16HighHatConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:216    .text._ZN5peaks10Processors16BouncingBallInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:223    .text._ZN5peaks10Processors16BouncingBallInitEv:0000000000000000 _ZN5peaks10Processors16BouncingBallInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:262    .text._ZN5peaks10Processors16BouncingBallInitEv:000000000000001c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:267    .text._ZN5peaks10Processors19BouncingBallProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:274    .text._ZN5peaks10Processors19BouncingBallProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors19BouncingBallProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:392    .text._ZN5peaks10Processors19BouncingBallProcessEPKhPsj:000000000000006c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:397    .text._ZN5peaks10Processors20MiniSequencerProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:404    .text._ZN5peaks10Processors20MiniSequencerProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors20MiniSequencerProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:513    .text.__tcf_0:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:519    .text.__tcf_0:0000000000000000 __tcf_0
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:533    .text._ZN5peaks10Processors20NumberStationProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:540    .text._ZN5peaks10Processors20NumberStationProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors20NumberStationProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:559    .text._ZN5peaks10Processors17NumberStationInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:566    .text._ZN5peaks10Processors17NumberStationInitEv:0000000000000000 _ZN5peaks10Processors17NumberStationInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:585    .text._ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:592    .text._ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors22PulseRandomizerProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:611    .text._ZN5peaks10Processors19PulseRandomizerInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:618    .text._ZN5peaks10Processors19PulseRandomizerInitEv:0000000000000000 _ZN5peaks10Processors19PulseRandomizerInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:637    .text._ZN5peaks10Processors18PulseShaperProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:644    .text._ZN5peaks10Processors18PulseShaperProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors18PulseShaperProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:663    .text._ZN5peaks10Processors15PulseShaperInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:670    .text._ZN5peaks10Processors15PulseShaperInitEv:0000000000000000 _ZN5peaks10Processors15PulseShaperInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:689    .text._ZN5peaks10Processors13FmDrumProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:696    .text._ZN5peaks10Processors13FmDrumProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors13FmDrumProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:715    .text._ZN5peaks10Processors10FmDrumInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:722    .text._ZN5peaks10Processors10FmDrumInitEv:0000000000000000 _ZN5peaks10Processors10FmDrumInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:741    .text._ZN5peaks10Processors14HighHatProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:748    .text._ZN5peaks10Processors14HighHatProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors14HighHatProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:767    .text._ZN5peaks10Processors11HighHatInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:774    .text._ZN5peaks10Processors11HighHatInitEv:0000000000000000 _ZN5peaks10Processors11HighHatInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:793    .text._ZN5peaks10Processors16SnareDrumProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:800    .text._ZN5peaks10Processors16SnareDrumProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors16SnareDrumProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:819    .text._ZN5peaks10Processors13SnareDrumInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:826    .text._ZN5peaks10Processors13SnareDrumInitEv:0000000000000000 _ZN5peaks10Processors13SnareDrumInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:845    .text._ZN5peaks10Processors15BassDrumProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:852    .text._ZN5peaks10Processors15BassDrumProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors15BassDrumProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:871    .text._ZN5peaks10Processors12BassDrumInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:878    .text._ZN5peaks10Processors12BassDrumInitEv:0000000000000000 _ZN5peaks10Processors12BassDrumInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:897    .text._ZN5peaks10Processors10LfoProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:904    .text._ZN5peaks10Processors10LfoProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors10LfoProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:923    .text._ZN5peaks10Processors7LfoInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:930    .text._ZN5peaks10Processors7LfoInitEv:0000000000000000 _ZN5peaks10Processors7LfoInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:949    .text._ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:956    .text._ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj:0000000000000000 _ZN5peaks10Processors25MultistageEnvelopeProcessEPKhPsj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:975    .text._ZN5peaks10Processors22MultistageEnvelopeInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:982    .text._ZN5peaks10Processors22MultistageEnvelopeInitEv:0000000000000000 _ZN5peaks10Processors22MultistageEnvelopeInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1001   .text._ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1008   .text._ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors15FmDrumConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1261   .text._ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1268   .text._ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors12LfoConfigureEPtNS_11ControlModeE
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 137


/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1532   .text._ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1539   .text._ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors20PulseShaperConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1716   .text._ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1723   .text._ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors24PulseRandomizerConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1877   .text._ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:1884   .text._ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors22NumberStationConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2107   .text._ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2114   .text._ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors22MiniSequencerConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2431   .text._ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2438   .text._ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors17BassDrumConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2827   .text._ZN5peaks9SnareDrum13set_frequencyEs:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2834   .text._ZN5peaks9SnareDrum13set_frequencyEs:0000000000000000 _ZN5peaks9SnareDrum13set_frequencyEs
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2963   .text._ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:2970   .text._ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors18SnareDrumConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3329   .text._ZN5peaks12BouncingBall11set_gravityEt:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3336   .text._ZN5peaks12BouncingBall11set_gravityEt:0000000000000000 _ZN5peaks12BouncingBall11set_gravityEt
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3391   .text._ZN5peaks12BouncingBall11set_gravityEt:0000000000000020 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3396   .text._ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3403   .text._ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE:0000000000000000 _ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3594   .text._ZN5peaks10Processors21BouncingBallConfigureEPtNS_11ControlModeE:000000000000006c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3599   .text._ZN5peaks13MiniSequencer4InitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3606   .text._ZN5peaks13MiniSequencer4InitEv:0000000000000000 _ZN5peaks13MiniSequencer4InitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3660   .text._ZN5peaks10Processors17MiniSequencerInitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3667   .text._ZN5peaks10Processors17MiniSequencerInitEv:0000000000000000 _ZN5peaks10Processors17MiniSequencerInitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3691   .text._ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3698   .text._ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE:0000000000000000 _ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:3994   .text._ZN5peaks10Processors12set_functionENS_17ProcessorFunctionE:00000000000000e0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4003   .text._ZN5peaks10Processors4InitEh:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4010   .text._ZN5peaks10Processors4InitEh:0000000000000000 _ZN5peaks10Processors4InitEh
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4242   .text._ZN5peaks10Processors4InitEh:00000000000000bc $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4248   .text.startup._GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4254   .text.startup._GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E:0000000000000000 _GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4276   .text.startup._GLOBAL__sub_I__ZN5peaks10Processors16callbacks_table_E:000000000000000c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4284   .init_array:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4292   .bss._ZN5peaks10processorsE:0000000000000000 _ZN5peaks10processorsE
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4299   .rodata._ZN5peaks10Processors16callbacks_table_E:0000000000000000 _ZN5peaks10Processors16callbacks_table_E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4289   .bss._ZN5peaks10processorsE:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s:4295   .rodata._ZN5peaks10Processors16callbacks_table_E:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN5peaks13NumberStation7ProcessEPKhPsj
_ZN5peaks13NumberStation4InitEv
_ZN5peaks15PulseRandomizer7ProcessEPKhPsj
_ZN5peaks15PulseRandomizer4InitEv
_ZN5peaks11PulseShaper7ProcessEPKhPsj
_ZN5peaks11PulseShaper4InitEv
_ZN5peaks6FmDrum7ProcessEPKhPsj
_ZN5peaks6FmDrum4InitEv
_ZN5peaks7HighHat7ProcessEPKhPsj
_ZN5peaks7HighHat4InitEv
_ZN5peaks9SnareDrum7ProcessEPKhPsj
_ZN5peaks9SnareDrum4InitEv
_ZN5peaks8BassDrum7ProcessEPKhPsj
_ZN5peaks8BassDrum4InitEv
_ZN5peaks3Lfo7ProcessEPKhPsj
_ZN5peaks3Lfo4InitEv
_ZN5peaks18MultistageEnvelope7ProcessEPKhPsj
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccK3kd4W.s 			page 138


_ZN5peaks18MultistageEnvelope4InitEv
_ZN5peaks6FmDrum5MorphEtt
_ZN5peaks3Lfo26set_shape_parameter_presetEt
_ZN5peaks11lut_gravityE
memset
__aeabi_atexit
__dso_handle
