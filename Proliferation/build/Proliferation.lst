ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Proliferation.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1606:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1606:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev,"axG",%progbits,_ZN5daisy8patch_sm12DaisyPatch
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev:
  52              	.LVL1:
  53              	.LFB2529:
  54              		.file 2 "../../libDaisy//src/daisy_patch_sm.h"
   1:../../libDaisy//src/daisy_patch_sm.h **** #pragma once
   2:../../libDaisy//src/daisy_patch_sm.h **** 
   3:../../libDaisy//src/daisy_patch_sm.h **** #include "daisy.h"
   4:../../libDaisy//src/daisy_patch_sm.h **** 
   5:../../libDaisy//src/daisy_patch_sm.h **** namespace daisy
   6:../../libDaisy//src/daisy_patch_sm.h **** {
   7:../../libDaisy//src/daisy_patch_sm.h **** namespace patch_sm
   8:../../libDaisy//src/daisy_patch_sm.h **** {
   9:../../libDaisy//src/daisy_patch_sm.h ****     /** Accessors for the Analog Controls. 
  10:../../libDaisy//src/daisy_patch_sm.h ****      *  These cover the 8x Bipolar CV inputs
  11:../../libDaisy//src/daisy_patch_sm.h ****      *  as well as the 4x 0-3V3 ADC inputs on
  12:../../libDaisy//src/daisy_patch_sm.h ****      *  the hardware 
  13:../../libDaisy//src/daisy_patch_sm.h ****      * 
  14:../../libDaisy//src/daisy_patch_sm.h ****      *  When reading a value with DaisyPatchSM::GetAdcValue()
  15:../../libDaisy//src/daisy_patch_sm.h ****      * 
  16:../../libDaisy//src/daisy_patch_sm.h ****      *  patch.GetAdcValue(patch_sm::CV_1);
  17:../../libDaisy//src/daisy_patch_sm.h ****      */
  18:../../libDaisy//src/daisy_patch_sm.h ****     enum
  19:../../libDaisy//src/daisy_patch_sm.h ****     {
  20:../../libDaisy//src/daisy_patch_sm.h ****         CV_1 = 0,
  21:../../libDaisy//src/daisy_patch_sm.h ****         CV_2,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 3


  22:../../libDaisy//src/daisy_patch_sm.h ****         CV_3,
  23:../../libDaisy//src/daisy_patch_sm.h ****         CV_4,
  24:../../libDaisy//src/daisy_patch_sm.h ****         CV_5,
  25:../../libDaisy//src/daisy_patch_sm.h ****         CV_6,
  26:../../libDaisy//src/daisy_patch_sm.h ****         CV_7,
  27:../../libDaisy//src/daisy_patch_sm.h ****         CV_8,
  28:../../libDaisy//src/daisy_patch_sm.h ****         ADC_9,
  29:../../libDaisy//src/daisy_patch_sm.h ****         ADC_10,
  30:../../libDaisy//src/daisy_patch_sm.h ****         ADC_11,
  31:../../libDaisy//src/daisy_patch_sm.h ****         ADC_12,
  32:../../libDaisy//src/daisy_patch_sm.h ****         ADC_LAST,
  33:../../libDaisy//src/daisy_patch_sm.h ****     };
  34:../../libDaisy//src/daisy_patch_sm.h **** 
  35:../../libDaisy//src/daisy_patch_sm.h ****     /** Enum for addressing the CV Outputs via the WriteCvOut function. */
  36:../../libDaisy//src/daisy_patch_sm.h ****     enum
  37:../../libDaisy//src/daisy_patch_sm.h ****     {
  38:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_BOTH = 0,
  39:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_1,
  40:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_2,
  41:../../libDaisy//src/daisy_patch_sm.h ****     };
  42:../../libDaisy//src/daisy_patch_sm.h **** 
  43:../../libDaisy//src/daisy_patch_sm.h **** 
  44:../../libDaisy//src/daisy_patch_sm.h ****     /** @brief Board support file for DaisyPatchSM hardware
  45:../../libDaisy//src/daisy_patch_sm.h ****      *  @author shensley
  46:../../libDaisy//src/daisy_patch_sm.h ****      *  @ingroup boards
  47:../../libDaisy//src/daisy_patch_sm.h ****      * 
  48:../../libDaisy//src/daisy_patch_sm.h ****      *  Daisy Patch SM is a complete Eurorack module DSP engine.
  49:../../libDaisy//src/daisy_patch_sm.h ****      *  Based on the Daisy Seed, with circuits added for 
  50:../../libDaisy//src/daisy_patch_sm.h ****      *  interfacing directly with eurorack modular synthesizers.
  51:../../libDaisy//src/daisy_patch_sm.h ****      */
  52:../../libDaisy//src/daisy_patch_sm.h ****     class DaisyPatchSM
  53:../../libDaisy//src/daisy_patch_sm.h ****     {
  54:../../libDaisy//src/daisy_patch_sm.h ****       public:
  55:../../libDaisy//src/daisy_patch_sm.h ****         /** Helper for mapping pins, and accessing them using the `GetPin` function */
  56:../../libDaisy//src/daisy_patch_sm.h ****         enum class PinBank
  57:../../libDaisy//src/daisy_patch_sm.h ****         {
  58:../../libDaisy//src/daisy_patch_sm.h ****             A,
  59:../../libDaisy//src/daisy_patch_sm.h ****             B,
  60:../../libDaisy//src/daisy_patch_sm.h ****             C,
  61:../../libDaisy//src/daisy_patch_sm.h ****             D
  62:../../libDaisy//src/daisy_patch_sm.h ****         };
  63:../../libDaisy//src/daisy_patch_sm.h **** 
  64:../../libDaisy//src/daisy_patch_sm.h ****         DaisyPatchSM() {}
  65:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
  55              		.loc 2 65 9 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB539:
  61              	.LBI539:
  62              		.file 3 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 4


   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn 
  18:../../libDaisy//src/hid/gatein.h ****     Constructor 
  19:../../libDaisy//src/hid/gatein.h ****     */
  20:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  21:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
  22:../../libDaisy//src/hid/gatein.h ****     Destructor 
  23:../../libDaisy//src/hid/gatein.h ****     */
  24:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
  63              		.loc 3 24 5 view .LVU3
  64              		.loc 3 24 5 is_stmt 0 view .LVU4
  65              	.LBE539:
  66              	.LBB540:
  67              	.LBI540:
  68              		.loc 3 24 5 is_stmt 1 view .LVU5
  69              		.loc 3 24 5 is_stmt 0 view .LVU6
  70              	.LBE540:
  71              	.LBB541:
  72              	.LBI541:
  73              		.file 4 "../../libDaisy//src/dev/codec_pcm3060.h"
   1:../../libDaisy//src/dev/codec_pcm3060.h **** #pragma once
   2:../../libDaisy//src/dev/codec_pcm3060.h **** #ifndef DSY_CODEC_PCM3060_H
   3:../../libDaisy//src/dev/codec_pcm3060.h **** #define DSY_CODEC_PCM3060_H
   4:../../libDaisy//src/dev/codec_pcm3060.h **** #include "per/i2c.h"
   5:../../libDaisy//src/dev/codec_pcm3060.h **** namespace daisy
   6:../../libDaisy//src/dev/codec_pcm3060.h **** {
   7:../../libDaisy//src/dev/codec_pcm3060.h **** /**
   8:../../libDaisy//src/dev/codec_pcm3060.h ****  * @brief Driver for the TI PCM3060 Audio Codec.
   9:../../libDaisy//src/dev/codec_pcm3060.h ****  * @addtogroup codec
  10:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  11:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now this is a limited interface that uses I2C to communicate with the PCM3060
  12:../../libDaisy//src/dev/codec_pcm3060.h ****  * The device can also be accessed with SPI, which is not yet supported.
  13:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  14:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now all registers are set to their defaults, and the Init function will 
  15:../../libDaisy//src/dev/codec_pcm3060.h ****  * perform a MRST and SRST before setting the format to 24bit LJ, and disabling 
  16:../../libDaisy//src/dev/codec_pcm3060.h ****  * power save for both the ADC and DAC.
  17:../../libDaisy//src/dev/codec_pcm3060.h ****  *
  18:../../libDaisy//src/dev/codec_pcm3060.h ****  */
  19:../../libDaisy//src/dev/codec_pcm3060.h **** class Pcm3060
  20:../../libDaisy//src/dev/codec_pcm3060.h **** {
  21:../../libDaisy//src/dev/codec_pcm3060.h ****   public:
  22:../../libDaisy//src/dev/codec_pcm3060.h ****     enum class Result
  23:../../libDaisy//src/dev/codec_pcm3060.h ****     {
  24:../../libDaisy//src/dev/codec_pcm3060.h ****         OK,
  25:../../libDaisy//src/dev/codec_pcm3060.h ****         ERR,
  26:../../libDaisy//src/dev/codec_pcm3060.h ****     };
  27:../../libDaisy//src/dev/codec_pcm3060.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 5


  28:../../libDaisy//src/dev/codec_pcm3060.h ****     Pcm3060() {}
  29:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
  74              		.loc 4 29 5 is_stmt 1 view .LVU7
  75              		.loc 4 29 5 is_stmt 0 view .LVU8
  76              	.LBE541:
  77              	.LBB542:
  78              	.LBI542:
  79              		.file 5 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  80              		.loc 5 42 5 is_stmt 1 view .LVU9
  81              		.loc 5 42 5 is_stmt 0 view .LVU10
  82              	.LBE542:
  83              	.LBB543:
  84              	.LBI543:
  85              		.file 6 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 6


   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 7


  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  86              		.loc 6 93 5 is_stmt 1 view .LVU11
  87              		.loc 6 93 5 is_stmt 0 view .LVU12
  88              	.LBE543:
  89              	.LBB544:
  90              	.LBI544:
  91              		.file 7 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 8


  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 9


  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  92              		.loc 7 96 5 is_stmt 1 view .LVU13
  93              		.loc 7 96 5 is_stmt 0 view .LVU14
  94              	.LBE544:
  95              	.LBB545:
  96              	.LBI545:
  97              		.file 8 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 10


  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
  98              		.loc 8 78 5 is_stmt 1 view .LVU15
  99              		.loc 8 78 5 is_stmt 0 view .LVU16
 100              	.LBE545:
 101              		.loc 2 65 26 view .LVU17
 102 0000 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE2529:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 11


 106              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 107              		.thumb_set _ZN5daisy8patch_sm12DaisyPatchSMD1Ev,_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
 108 0002 00BF     		.section	.text._ZN7daisysp8ReverbScD2Ev,"axG",%progbits,_ZN7daisysp8ReverbScD5Ev,comdat
 109              		.align	1
 110              		.p2align 2,,3
 111              		.weak	_ZN7daisysp8ReverbScD2Ev
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-d16
 117              	_ZN7daisysp8ReverbScD2Ev:
 118              	.LVL2:
 119              	.LFB4426:
 120              		.file 9 "../../DaisySP//Source/Effects/reverbsc.h"
   1:../../DaisySP//Source/Effects/reverbsc.h **** #pragma once
   2:../../DaisySP//Source/Effects/reverbsc.h **** #ifndef DSYSP_REVERBSC_H
   3:../../DaisySP//Source/Effects/reverbsc.h **** #define DSYSP_REVERBSC_H
   4:../../DaisySP//Source/Effects/reverbsc.h **** 
   5:../../DaisySP//Source/Effects/reverbsc.h **** #define DSY_REVERBSC_MAX_SIZE 98936
   6:../../DaisySP//Source/Effects/reverbsc.h **** 
   7:../../DaisySP//Source/Effects/reverbsc.h **** namespace daisysp
   8:../../DaisySP//Source/Effects/reverbsc.h **** {
   9:../../DaisySP//Source/Effects/reverbsc.h **** /**Delay line for internal reverb use
  10:../../DaisySP//Source/Effects/reverbsc.h **** */
  11:../../DaisySP//Source/Effects/reverbsc.h **** typedef struct
  12:../../DaisySP//Source/Effects/reverbsc.h **** {
  13:../../DaisySP//Source/Effects/reverbsc.h ****     int    write_pos;         /**< write position */
  14:../../DaisySP//Source/Effects/reverbsc.h ****     int    buffer_size;       /**< buffer size */
  15:../../DaisySP//Source/Effects/reverbsc.h ****     int    read_pos;          /**< read position */
  16:../../DaisySP//Source/Effects/reverbsc.h ****     int    read_pos_frac;     /**< fractional component of read pos */
  17:../../DaisySP//Source/Effects/reverbsc.h ****     int    read_pos_frac_inc; /**< increment for fractional */
  18:../../DaisySP//Source/Effects/reverbsc.h ****     int    dummy;             /**<  dummy var */
  19:../../DaisySP//Source/Effects/reverbsc.h ****     int    seed_val;          /**< randseed */
  20:../../DaisySP//Source/Effects/reverbsc.h ****     int    rand_line_cnt;     /**< number of random lines */
  21:../../DaisySP//Source/Effects/reverbsc.h ****     float  filter_state;      /**< state of filter */
  22:../../DaisySP//Source/Effects/reverbsc.h ****     float *buf;               /**< buffer ptr */
  23:../../DaisySP//Source/Effects/reverbsc.h **** } ReverbScDl;
  24:../../DaisySP//Source/Effects/reverbsc.h **** 
  25:../../DaisySP//Source/Effects/reverbsc.h **** /** Stereo Reverb
  26:../../DaisySP//Source/Effects/reverbsc.h **** 
  27:../../DaisySP//Source/Effects/reverbsc.h **** Reverb SC:               Ported from csound/soundpipe
  28:../../DaisySP//Source/Effects/reverbsc.h **** 
  29:../../DaisySP//Source/Effects/reverbsc.h **** Original author(s):        Sean Costello, Istvan Varga
  30:../../DaisySP//Source/Effects/reverbsc.h **** 
  31:../../DaisySP//Source/Effects/reverbsc.h **** Year:                    1999, 2005
  32:../../DaisySP//Source/Effects/reverbsc.h **** 
  33:../../DaisySP//Source/Effects/reverbsc.h **** Ported to soundpipe by:  Paul Batchelor
  34:../../DaisySP//Source/Effects/reverbsc.h **** 
  35:../../DaisySP//Source/Effects/reverbsc.h **** Ported by:                Stephen Hensley
  36:../../DaisySP//Source/Effects/reverbsc.h **** */
  37:../../DaisySP//Source/Effects/reverbsc.h **** class ReverbSc
  38:../../DaisySP//Source/Effects/reverbsc.h **** {
  39:../../DaisySP//Source/Effects/reverbsc.h ****   public:
  40:../../DaisySP//Source/Effects/reverbsc.h ****     ReverbSc() {}
  41:../../DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 121              		.loc 9 41 5 is_stmt 1 view -0
 122              		.cfi_startproc
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 12


 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              		.loc 9 41 18 is_stmt 0 view .LVU19
 127 0000 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE4426:
 131              		.weak	_ZN7daisysp8ReverbScD1Ev
 132              		.thumb_set _ZN7daisysp8ReverbScD1Ev,_ZN7daisysp8ReverbScD2Ev
 133 0002 00BF     		.section	.text._ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev,"axG",%progbits,_ZNSt5arrayI12Sample
 134              		.align	1
 135              		.p2align 2,,3
 136              		.weak	_ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv5-d16
 142              	_ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev:
 143              	.LVL3:
 144              	.LFB5425:
 145              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // <array> -*- C++ -*-
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** /** @file include/array
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****  *  This is a Standard C++ Library header.
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****  */
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #ifndef _GLIBCXX_ARRAY
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #define _GLIBCXX_ARRAY 1
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #pragma GCC system_header
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #if __cplusplus < 201103L
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** # include <bits/c++0x_warning.h>
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #else
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 13


  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #include <utility>
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #include <bits/functexcept.h>
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #include <bits/stl_algobase.h>
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** #include <bits/range_access.h>
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** {
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     struct __array_traits
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     {
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef _Tp _Type[_Nm];
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       static constexpr _Tp&
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       static constexpr _Tp*
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _S_ptr(const _Type& __t) noexcept
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp*>(__t); }
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     };
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****  template<typename _Tp>
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    struct __array_traits<_Tp, 0>
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    {
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      struct _Type { };
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      typedef true_type _Is_swappable;
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      typedef true_type _Is_nothrow_swappable;
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      static constexpr _Tp&
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      { return *static_cast<_Tp*>(nullptr); }
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      static constexpr _Tp*
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      _S_ptr(const _Type&) noexcept
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****      { return nullptr; }
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    };
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****   /**
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  @ingroup sequences
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  Sets support random access iterators.
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****    *  @tparam  Nm  Number of elements.
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****   */
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****   template<typename _Tp, std::size_t _Nm>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 14


  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     struct array
 146              		.loc 10 94 12 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              		.loc 10 94 12 is_stmt 0 view .LVU21
 152 0000 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE5425:
 156              		.weak	_ZNSt5arrayI12SampleBufferILj240000EELj8EED1Ev
 157              		.thumb_set _ZNSt5arrayI12SampleBufferILj240000EELj8EED1Ev,_ZNSt5arrayI12SampleBufferILj240000EELj8
 158 0002 00BF     		.section	.text._Z10getSamplesv,"ax",%progbits
 159              		.align	1
 160              		.p2align 2,,3
 161              		.global	_Z10getSamplesv
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-d16
 167              	_Z10getSamplesv:
 168              	.LFB4840:
 169              		.file 11 "Proliferation.cpp"
   1:Proliferation.cpp **** #include "daisy_patch_sm.h"
   2:Proliferation.cpp **** #include "daisysp.h"
   3:Proliferation.cpp **** #include "samplebuffer.h"
   4:Proliferation.cpp **** #include <array>
   5:Proliferation.cpp **** 
   6:Proliferation.cpp **** using namespace daisy;
   7:Proliferation.cpp **** using namespace patch_sm;
   8:Proliferation.cpp **** using namespace daisysp;
   9:Proliferation.cpp **** 
  10:Proliferation.cpp **** DaisyPatchSM    hw;
  11:Proliferation.cpp **** Switch          toggle;
  12:Proliferation.cpp **** Switch          button;
  13:Proliferation.cpp **** ReverbSc        rev; 
  14:Proliferation.cpp **** 
  15:Proliferation.cpp **** #define NUM_BUFFERS 8
  16:Proliferation.cpp **** // 5 second sample buffers at 48kHz
  17:Proliferation.cpp **** #define BUFFER_SIZE (48000 * 5)
  18:Proliferation.cpp **** std::array<SampleBuffer<BUFFER_SIZE>, NUM_BUFFERS> DSY_SDRAM_BSS buffers;
  19:Proliferation.cpp **** int s = 0;
  20:Proliferation.cpp **** 
  21:Proliferation.cpp **** void getSamples(){
 170              		.loc 11 21 18 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
  22:Proliferation.cpp **** 	hw.ProcessAllControls();
 174              		.loc 11 22 2 view .LVU23
 175              	.LVL4:
 176              	.LBB546:
 177              	.LBI546:
  66:../../libDaisy//src/daisy_patch_sm.h **** 
  67:../../libDaisy//src/daisy_patch_sm.h ****         /** Initializes the memories, and core peripherals for the Daisy Patch SM */
  68:../../libDaisy//src/daisy_patch_sm.h ****         void Init();
  69:../../libDaisy//src/daisy_patch_sm.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 15


  70:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts a non-interleaving audio callback */
  71:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::AudioCallback cb);
  72:../../libDaisy//src/daisy_patch_sm.h **** 
  73:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts an interleaving audio callback */
  74:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  75:../../libDaisy//src/daisy_patch_sm.h **** 
  76:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  77:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  78:../../libDaisy//src/daisy_patch_sm.h ****          */
  79:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  80:../../libDaisy//src/daisy_patch_sm.h **** 
  81:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  82:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  83:../../libDaisy//src/daisy_patch_sm.h ****          */
  84:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  85:../../libDaisy//src/daisy_patch_sm.h **** 
  86:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the transmission of audio. */
  87:../../libDaisy//src/daisy_patch_sm.h ****         void StopAudio();
  88:../../libDaisy//src/daisy_patch_sm.h **** 
  89:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the number of samples processed in an audio callback. 
  90:../../libDaisy//src/daisy_patch_sm.h ****          *  This will only take effect on the next invocation of `StartAudio`
  91:../../libDaisy//src/daisy_patch_sm.h ****          */
  92:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioBlockSize(size_t size);
  93:../../libDaisy//src/daisy_patch_sm.h **** 
  94:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the samplerate for the audio engine 
  95:../../libDaisy//src/daisy_patch_sm.h ****          *  This will set it to the closest valid samplerate. Options being:
  96:../../libDaisy//src/daisy_patch_sm.h ****          *  8kHz, 16kHz, 32kHz, 48kHz, and 96kHz
  97:../../libDaisy//src/daisy_patch_sm.h ****          */
  98:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(float sr);
  99:../../libDaisy//src/daisy_patch_sm.h **** 
 100:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(SaiHandle::Config::SampleRate sample_rate);
 101:../../libDaisy//src/daisy_patch_sm.h **** 
 102:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the number of samples processed in an audio callback */
 103:../../libDaisy//src/daisy_patch_sm.h ****         size_t AudioBlockSize();
 104:../../libDaisy//src/daisy_patch_sm.h **** 
 105:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the audio engine's samplerate in Hz */
 106:../../libDaisy//src/daisy_patch_sm.h ****         float AudioSampleRate();
 107:../../libDaisy//src/daisy_patch_sm.h **** 
 108:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the rate at which the audio callback will be called in Hz */
 109:../../libDaisy//src/daisy_patch_sm.h ****         float AudioCallbackRate();
 110:../../libDaisy//src/daisy_patch_sm.h **** 
 111:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts the Control ADCs 
 112:../../libDaisy//src/daisy_patch_sm.h ****          * 
 113:../../libDaisy//src/daisy_patch_sm.h ****          *  This is started automatically when Init() is called.
 114:../../libDaisy//src/daisy_patch_sm.h ****          */
 115:../../libDaisy//src/daisy_patch_sm.h ****         void StartAdc();
 116:../../libDaisy//src/daisy_patch_sm.h **** 
 117:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the Control ADCs */
 118:../../libDaisy//src/daisy_patch_sm.h ****         void StopAdc();
 119:../../libDaisy//src/daisy_patch_sm.h **** 
 120:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and filters all of the analog control inputs */
 121:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAnalogControls();
 122:../../libDaisy//src/daisy_patch_sm.h **** 
 123:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and debounces any of the digital control inputs 
 124:../../libDaisy//src/daisy_patch_sm.h ****          *  This does nothing on this board at this time.
 125:../../libDaisy//src/daisy_patch_sm.h ****          */
 126:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessDigitalControls();
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 16


 127:../../libDaisy//src/daisy_patch_sm.h **** 
 128:../../libDaisy//src/daisy_patch_sm.h ****         /** Does both of the above */
 129:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAllControls()
 178              		.loc 2 129 14 view .LVU24
 179              	.LBB547:
 130:../../libDaisy//src/daisy_patch_sm.h ****         {
 131:../../libDaisy//src/daisy_patch_sm.h ****             ProcessAnalogControls();
 180              		.loc 2 131 13 view .LVU25
 181              	.LBE547:
 182              	.LBE546:
  21:Proliferation.cpp **** 	hw.ProcessAllControls();
 183              		.loc 11 21 18 is_stmt 0 view .LVU26
 184 0000 38B5     		push	{r3, r4, r5, lr}
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 3, -16
 187              		.cfi_offset 4, -12
 188              		.cfi_offset 5, -8
 189              		.cfi_offset 14, -4
 190              	.LBB550:
 191              	.LBB548:
 192              		.loc 2 131 34 view .LVU27
 193 0002 AA48     		ldr	r0, .L89
 194              	.LBE548:
 195              	.LBE550:
  23:Proliferation.cpp **** 	button.Debounce();
  24:Proliferation.cpp **** 
  25:Proliferation.cpp **** 	int randSamp = rand() % 8;
 196              		.loc 11 25 26 view .LVU28
 197 0004 0825     		movs	r5, #8
 198              	.LBB551:
 199              	.LBB549:
 200              		.loc 2 131 34 view .LVU29
 201 0006 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 202              	.LVL5:
 132:../../libDaisy//src/daisy_patch_sm.h ****             ProcessDigitalControls();
 203              		.loc 2 132 13 is_stmt 1 view .LVU30
 204              		.loc 2 132 35 is_stmt 0 view .LVU31
 205 000a A848     		ldr	r0, .L89
 206 000c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 207              	.LVL6:
 208              		.loc 2 132 35 view .LVU32
 209              	.LBE549:
 210              	.LBE551:
  23:Proliferation.cpp **** 	button.Debounce();
 211              		.loc 11 23 2 is_stmt 1 view .LVU33
  23:Proliferation.cpp **** 	button.Debounce();
 212              		.loc 11 23 17 is_stmt 0 view .LVU34
 213 0010 A748     		ldr	r0, .L89+4
 214 0012 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 215              	.LVL7:
 216              		.loc 11 25 2 is_stmt 1 view .LVU35
 217              		.loc 11 25 21 is_stmt 0 view .LVU36
 218 0016 FFF7FEFF 		bl	rand
 219              	.LVL8:
 220              		.loc 11 25 26 view .LVU37
 221 001a 4342     		rsbs	r3, r0, #0
 222 001c 00F00704 		and	r4, r0, #7
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 17


 223 0020 03F00703 		and	r3, r3, #7
 224 0024 58BF     		it	pl
 225 0026 5C42     		rsbpl	r4, r3, #0
 226              	.LVL9:
  26:Proliferation.cpp **** 
  27:Proliferation.cpp ****     for(size_t i = 0; i < buffers.size(); i++)
 227              		.loc 11 27 5 is_stmt 1 view .LVU38
 228              	.LBB552:
 229              		.loc 11 27 25 view .LVU39
 230 0028 04E0     		b	.L11
 231              	.LVL10:
 232              	.L81:
 233              		.loc 11 27 5 view .LVU40
 234              		.loc 11 27 25 view .LVU41
 235 002a 013D     		subs	r5, r5, #1
 236              	.LVL11:
 237              	.LBB553:
 238              	.LBB554:
 239              		.file 12 "samplebuffer.h"
   1:samplebuffer.h **** #pragma once
   2:samplebuffer.h **** #ifndef SAMPLEBUFFER_H
   3:samplebuffer.h **** #define SAMPLEBUFFER_H
   4:samplebuffer.h **** 
   5:samplebuffer.h **** #include <stddef.h>
   6:samplebuffer.h **** 
   7:samplebuffer.h **** /** Sample buffer with record and playback.
   8:samplebuffer.h **** 
   9:samplebuffer.h **** By: Alex Virgona
  10:samplebuffer.h **** */
  11:samplebuffer.h **** template <size_t kBufferSize>
  12:samplebuffer.h **** class SampleBuffer
  13:samplebuffer.h **** {
  14:samplebuffer.h ****   public:
  15:samplebuffer.h ****     SampleBuffer() {}
  16:samplebuffer.h ****     ~SampleBuffer() {}
  17:samplebuffer.h **** 
  18:samplebuffer.h ****     void Init()
  19:samplebuffer.h ****     {
  20:samplebuffer.h ****         Clear();
  21:samplebuffer.h ****         recording_ = false;
  22:samplebuffer.h ****         write_ptr_ = 0;
  23:samplebuffer.h ****         playing_   = false;
  24:samplebuffer.h ****         read_ptr_  = 0;
  25:samplebuffer.h ****     }
  26:samplebuffer.h **** 
  27:samplebuffer.h ****     void Clear()
  28:samplebuffer.h ****     {
  29:samplebuffer.h ****         for(size_t i = 0; i < kBufferSize; i++)
  30:samplebuffer.h ****         {
  31:samplebuffer.h ****             buffer_[i] = 0.f;
  32:samplebuffer.h ****         }
  33:samplebuffer.h ****     }
  34:samplebuffer.h **** 
  35:samplebuffer.h ****     void Record(bool start = true)
  36:samplebuffer.h ****     {
  37:samplebuffer.h ****         if(start)
  38:samplebuffer.h ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 18


  39:samplebuffer.h ****             Clear();
  40:samplebuffer.h ****         }
  41:samplebuffer.h ****         recording_ = start;
  42:samplebuffer.h ****         write_ptr_ = 0;
  43:samplebuffer.h ****     }
  44:samplebuffer.h **** 
  45:samplebuffer.h ****     void Play(bool start = true)
  46:samplebuffer.h ****     {
  47:samplebuffer.h ****         playing_  = start;
 240              		.loc 12 47 19 is_stmt 0 view .LVU42
 241 002c 83F808C0 		strb	ip, [r3, #8]
  48:samplebuffer.h ****         read_ptr_ = 0;
 242              		.loc 12 48 19 view .LVU43
 243 0030 5960     		str	r1, [r3, #4]
 244              	.LBE554:
 245              	.LBE553:
 246              		.loc 11 27 25 view .LVU44
 247 0032 1ED0     		beq	.L80
 248              	.LVL12:
 249              	.L11:
  28:Proliferation.cpp ****     {
  29:Proliferation.cpp ****         if(hw.gate_in_1.Trig()) {
 250              		.loc 11 29 9 is_stmt 1 view .LVU45
 251              		.loc 11 29 29 is_stmt 0 view .LVU46
 252 0034 9F48     		ldr	r0, .L89+8
 253 0036 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 254              	.LVL13:
  30:Proliferation.cpp ****             buffers[randSamp].Play();
 255              		.loc 11 30 13 is_stmt 1 view .LVU47
 256              	.LBB556:
 257              	.LBI556:
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     {
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef _Tp 	    			      value_type;
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef value_type*			      pointer;
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef const value_type*                       const_pointer;
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef value_type&                   	      reference;
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef const value_type&             	      const_reference;
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef value_type*          		      iterator;
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef const value_type*			      const_iterator;
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef std::size_t                    	      size_type;
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       // Support for zero-sized arrays mandatory.
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       typename _AT_Type::_Type                         _M_elems;
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       // No explicit construct/copy/destroy for aggregate type.
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       // DR 776.
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX20_CONSTEXPR void
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       fill(const value_type& __u)
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { std::fill_n(begin(), size(), __u); }
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX20_CONSTEXPR void
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       swap(array& __other)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 19


 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       // Iterators.
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       begin() noexcept
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return iterator(data()); }
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       begin() const noexcept
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_iterator(data()); }
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR iterator
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       end() noexcept
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return iterator(data() + _Nm); }
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       end() const noexcept
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_iterator(data() + _Nm); }
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       rbegin() noexcept
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return reverse_iterator(end()); }
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       rbegin() const noexcept
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_reverse_iterator(end()); }
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       rend() noexcept
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return reverse_iterator(begin()); }
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       rend() const noexcept
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_reverse_iterator(begin()); }
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       cbegin() const noexcept
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_iterator(data()); }
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       cend() const noexcept
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_iterator(data() + _Nm); }
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       crbegin() const noexcept
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_reverse_iterator(end()); }
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       crend() const noexcept
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_reverse_iterator(begin()); }
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       // Capacity.
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       constexpr size_type
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       size() const noexcept { return _Nm; }
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       constexpr size_type
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 20


 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       max_size() const noexcept { return _Nm; }
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX_NODISCARD constexpr bool
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       empty() const noexcept { return size() == 0; }
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array **** 
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       // Element access.
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       _GLIBCXX17_CONSTEXPR reference
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       operator[](size_type __n) noexcept
 258              		.loc 10 185 7 view .LVU48
 259              	.LBB557:
 260              	.LBI557:
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
 261              		.loc 10 55 7 view .LVU49
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
 262              		.loc 10 55 7 is_stmt 0 view .LVU50
 263              	.LBE557:
 264              	.LBE556:
 265              	.LBB558:
 266              	.LBI558:
  45:samplebuffer.h ****     {
 267              		.loc 12 45 10 is_stmt 1 view .LVU51
 268              	.LBB559:
  47:samplebuffer.h ****         read_ptr_ = 0;
 269              		.loc 12 47 19 is_stmt 0 view .LVU52
 270 003a 9F4B     		ldr	r3, .L89+12
 271 003c 9F4A     		ldr	r2, .L89+16
 272 003e 4FF0010C 		mov	ip, #1
 273              		.loc 12 48 19 view .LVU53
 274 0042 0021     		movs	r1, #0
  47:samplebuffer.h ****         read_ptr_ = 0;
 275              		.loc 12 47 19 view .LVU54
 276 0044 02FB0433 		mla	r3, r2, r4, r3
 277              	.LVL14:
  47:samplebuffer.h ****         read_ptr_ = 0;
 278              		.loc 12 47 19 view .LVU55
 279              	.LBE559:
 280              	.LBE558:
  29:Proliferation.cpp ****             buffers[randSamp].Play();
 281              		.loc 11 29 9 view .LVU56
 282 0048 E8B1     		cbz	r0, .L7
 283              	.LBB561:
 284              	.LBB560:
  47:samplebuffer.h ****         read_ptr_ = 0;
 285              		.loc 12 47 19 view .LVU57
 286 004a 83F808C0 		strb	ip, [r3, #8]
 287              		.loc 12 48 19 view .LVU58
 288 004e 5960     		str	r1, [r3, #4]
 289              	.LVL15:
 290              	.L8:
 291              		.loc 12 48 19 view .LVU59
 292              	.LBE560:
 293              	.LBE561:
  31:Proliferation.cpp ****         } else if(hw.gate_in_1.Trig()) {
  32:Proliferation.cpp ****             //buffers[i].Play(false);
  33:Proliferation.cpp ****         }
  34:Proliferation.cpp **** 
  35:Proliferation.cpp **** 		if(hw.gate_in_2.Trig()) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 21


 294              		.loc 11 35 3 is_stmt 1 view .LVU60
 295              		.loc 11 35 23 is_stmt 0 view .LVU61
 296 0050 9B48     		ldr	r0, .L89+20
 297 0052 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 298              	.LVL16:
  36:Proliferation.cpp ****             buffers[randSamp].Play();
 299              		.loc 11 36 13 is_stmt 1 view .LVU62
 300              	.LBB562:
 301              	.LBI562:
 302              		.loc 10 185 7 view .LVU63
 303              	.LBB563:
 304              	.LBI563:
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
 305              		.loc 10 55 7 view .LVU64
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
 306              		.loc 10 55 7 is_stmt 0 view .LVU65
 307              	.LBE563:
 308              	.LBE562:
 309              	.LBB564:
 310              	.LBI553:
  45:samplebuffer.h ****     {
 311              		.loc 12 45 10 is_stmt 1 view .LVU66
 312              	.LBB555:
  47:samplebuffer.h ****         read_ptr_ = 0;
 313              		.loc 12 47 19 is_stmt 0 view .LVU67
 314 0056 984B     		ldr	r3, .L89+12
 315 0058 984A     		ldr	r2, .L89+16
 316 005a 4FF0010C 		mov	ip, #1
 317              		.loc 12 48 19 view .LVU68
 318 005e 0021     		movs	r1, #0
  47:samplebuffer.h ****         read_ptr_ = 0;
 319              		.loc 12 47 19 view .LVU69
 320 0060 02FB0433 		mla	r3, r2, r4, r3
 321              	.LVL17:
  47:samplebuffer.h ****         read_ptr_ = 0;
 322              		.loc 12 47 19 view .LVU70
 323              	.LBE555:
 324              	.LBE564:
  35:Proliferation.cpp ****             buffers[randSamp].Play();
 325              		.loc 11 35 3 view .LVU71
 326 0064 0028     		cmp	r0, #0
 327 0066 E0D1     		bne	.L81
  37:Proliferation.cpp ****         } else if(hw.gate_in_2.Trig()) {
 328              		.loc 11 37 16 is_stmt 1 view .LVU72
 329              		.loc 11 37 36 is_stmt 0 view .LVU73
 330 0068 9548     		ldr	r0, .L89+20
 331 006a FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 332              	.LVL18:
  27:Proliferation.cpp ****     {
 333              		.loc 11 27 5 is_stmt 1 view .LVU74
  27:Proliferation.cpp ****     {
 334              		.loc 11 27 25 view .LVU75
 335 006e 013D     		subs	r5, r5, #1
 336              	.LVL19:
  27:Proliferation.cpp ****     {
 337              		.loc 11 27 25 is_stmt 0 view .LVU76
 338 0070 E0D1     		bne	.L11
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 22


 339              	.LVL20:
 340              	.L80:
  27:Proliferation.cpp ****     {
 341              		.loc 11 27 25 view .LVU77
 342              	.LBE552:
  38:Proliferation.cpp ****             //buffers[i].Play(false);
  39:Proliferation.cpp ****         }
  40:Proliferation.cpp ****     }
  41:Proliferation.cpp ****     
  42:Proliferation.cpp ****     // testing switch case statement
  43:Proliferation.cpp ****     switch(s) {
 343              		.loc 11 43 5 is_stmt 1 view .LVU78
 344 0072 944A     		ldr	r2, .L89+24
 345 0074 1368     		ldr	r3, [r2]
 346 0076 072B     		cmp	r3, #7
 347 0078 1CD8     		bhi	.L6
 348 007a DFE803F0 		tbb	[pc, r3]
 349              	.L14:
 350 007e 08       		.byte	(.L21-.L14)/2
 351 007f 33       		.byte	(.L20-.L14)/2
 352 0080 4A       		.byte	(.L19-.L14)/2
 353 0081 61       		.byte	(.L18-.L14)/2
 354 0082 78       		.byte	(.L17-.L14)/2
 355 0083 8F       		.byte	(.L16-.L14)/2
 356 0084 A7       		.byte	(.L15-.L14)/2
 357 0085 1C       		.byte	(.L13-.L14)/2
 358              	.LVL21:
 359              		.p2align 1
 360              	.L7:
 361              	.LBB565:
  31:Proliferation.cpp ****             //buffers[i].Play(false);
 362              		.loc 11 31 16 view .LVU79
  31:Proliferation.cpp ****             //buffers[i].Play(false);
 363              		.loc 11 31 36 is_stmt 0 view .LVU80
 364 0086 8B48     		ldr	r0, .L89+8
 365 0088 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 366              	.LVL22:
  31:Proliferation.cpp ****             //buffers[i].Play(false);
 367              		.loc 11 31 36 view .LVU81
 368 008c E0E7     		b	.L8
 369              	.LVL23:
 370              	.L21:
  31:Proliferation.cpp ****             //buffers[i].Play(false);
 371              		.loc 11 31 36 view .LVU82
 372              	.LBE565:
  44:Proliferation.cpp ****         case 0:
 373              		.loc 11 44 9 is_stmt 1 view .LVU83
  45:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[0].IsRecording()) {
 374              		.loc 11 45 13 view .LVU84
 375              	.LBB566:
 376              	.LBI566:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 23


  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 377              		.loc 1 70 17 view .LVU85
 378              	.LBB567:
 379              		.loc 1 70 38 view .LVU86
 380              		.loc 1 70 45 is_stmt 0 view .LVU87
 381 008e 884B     		ldr	r3, .L89+4
 382              		.loc 1 70 54 view .LVU88
 383 0090 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 384 0092 79B1     		cbz	r1, .L6
 385              		.loc 1 70 56 view .LVU89
 386 0094 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 387              	.LVL24:
 388              		.loc 1 70 56 view .LVU90
 389              	.LBE567:
 390              	.LBE566:
 391              		.loc 11 45 36 view .LVU91
 392 0096 7F2B     		cmp	r3, #127
 393 0098 40F0B280 		bne	.L22
 394              	.LVL25:
 395              	.LBB568:
 396              	.LBI568:
  49:samplebuffer.h ****     }
  50:samplebuffer.h **** 
  51:samplebuffer.h ****     float Process(const float sample)
  52:samplebuffer.h ****     {
  53:samplebuffer.h ****         Write(sample);
  54:samplebuffer.h ****         return Read();
  55:samplebuffer.h ****     }
  56:samplebuffer.h **** 
  57:samplebuffer.h ****     void Write(const float sample)
  58:samplebuffer.h ****     {
  59:samplebuffer.h ****         if(recording_)
  60:samplebuffer.h ****         {
  61:samplebuffer.h ****             buffer_[write_ptr_] = sample;
  62:samplebuffer.h ****             write_ptr_++;
  63:samplebuffer.h ****             if(write_ptr_ >= kBufferSize)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 24


  64:samplebuffer.h ****             {
  65:samplebuffer.h ****                 recording_ = false;
  66:samplebuffer.h ****                 write_ptr_ = 0;
  67:samplebuffer.h ****             }
  68:samplebuffer.h ****         }
  69:samplebuffer.h ****     }
  70:samplebuffer.h **** 
  71:samplebuffer.h ****     float Read()
  72:samplebuffer.h ****     {
  73:samplebuffer.h ****         if(playing_)
  74:samplebuffer.h ****         {
  75:samplebuffer.h ****             float out = buffer_[read_ptr_];
  76:samplebuffer.h ****             read_ptr_++;
  77:samplebuffer.h ****             if(read_ptr_ >= kBufferSize)
  78:samplebuffer.h ****             {
  79:samplebuffer.h ****                 playing_  = false;
  80:samplebuffer.h ****                 read_ptr_ = 0;
  81:samplebuffer.h ****             }
  82:samplebuffer.h ****             return out;
  83:samplebuffer.h ****         }
  84:samplebuffer.h ****         else
  85:samplebuffer.h ****         {
  86:samplebuffer.h ****             return 0.f;
  87:samplebuffer.h ****         }
  88:samplebuffer.h ****     }
  89:samplebuffer.h **** 
  90:samplebuffer.h ****     bool IsPlaying() const { return playing_; }
  91:samplebuffer.h ****     bool IsRecording() const { return recording_; }
 397              		.loc 12 91 10 is_stmt 1 view .LVU92
 398              	.LBB569:
 399              		.loc 12 91 39 is_stmt 0 view .LVU93
 400 009c 864C     		ldr	r4, .L89+12
 401              	.LVL26:
 402              		.loc 12 91 39 view .LVU94
 403              	.LBE569:
 404              	.LBE568:
 405              		.loc 11 45 36 view .LVU95
 406 009e 657A     		ldrb	r5, [r4, #9]	@ zero_extendqisi2
 407 00a0 45B9     		cbnz	r5, .L6
 408              	.LBB570:
 409              	.LBB571:
 410              	.LBB572:
 411              	.LBB573:
  31:samplebuffer.h ****         }
 412              		.loc 12 31 24 view .LVU96
 413 00a2 894A     		ldr	r2, .L89+28
 414 00a4 2946     		mov	r1, r5
 415 00a6 04F10C00 		add	r0, r4, #12
 416 00aa FFF7FEFF 		bl	memset
 417              	.LVL27:
 418              	.LBE573:
 419              	.LBE572:
  41:samplebuffer.h ****         write_ptr_ = 0;
 420              		.loc 12 41 20 view .LVU97
 421 00ae 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 422              		.loc 12 42 20 view .LVU98
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 25


 423 00b0 2560     		str	r5, [r4]
  41:samplebuffer.h ****         write_ptr_ = 0;
 424              		.loc 12 41 20 view .LVU99
 425 00b2 6372     		strb	r3, [r4, #9]
 426              	.L6:
 427              	.LBE571:
 428              	.LBE570:
  46:Proliferation.cpp ****                 buffers[0].Record();
  47:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[0].IsRecording()) {
  48:Proliferation.cpp ****                 buffers[0].Record(false);
  49:Proliferation.cpp ****                 s++;
  50:Proliferation.cpp ****             }
  51:Proliferation.cpp ****             break;;
  52:Proliferation.cpp ****         case 1:
  53:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[1].IsRecording()) {
  54:Proliferation.cpp ****                 buffers[1].Record();
  55:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[1].IsRecording()) {
  56:Proliferation.cpp ****                 buffers[1].Record(false);
  57:Proliferation.cpp ****                 s++;
  58:Proliferation.cpp ****             }
  59:Proliferation.cpp ****             break;;
  60:Proliferation.cpp ****         case 2:
  61:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[2].IsRecording()) {
  62:Proliferation.cpp ****                 buffers[2].Record();
  63:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[2].IsRecording()) {
  64:Proliferation.cpp ****                 buffers[2].Record(false);
  65:Proliferation.cpp ****                 s++;
  66:Proliferation.cpp ****             }
  67:Proliferation.cpp ****             break;;
  68:Proliferation.cpp ****         case 3:
  69:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[3].IsRecording()) {
  70:Proliferation.cpp ****                 buffers[3].Record();
  71:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[3].IsRecording()) {
  72:Proliferation.cpp ****                 buffers[3].Record(false);
  73:Proliferation.cpp ****                 s++;
  74:Proliferation.cpp ****             }
  75:Proliferation.cpp ****             break;;
  76:Proliferation.cpp ****         case 4:
  77:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[4].IsRecording()) {
  78:Proliferation.cpp ****                 buffers[4].Record();
  79:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[4].IsRecording()) {
  80:Proliferation.cpp ****                 buffers[4].Record(false);
  81:Proliferation.cpp ****                 s++;
  82:Proliferation.cpp ****             }
  83:Proliferation.cpp ****             break;;
  84:Proliferation.cpp ****         case 5:
  85:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[5].IsRecording()) {
  86:Proliferation.cpp ****                 buffers[5].Record();
  87:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[5].IsRecording()) {
  88:Proliferation.cpp ****                 buffers[5].Record(false);
  89:Proliferation.cpp ****                 s++;
  90:Proliferation.cpp ****             }
  91:Proliferation.cpp ****             break;;
  92:Proliferation.cpp ****         case 6:
  93:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[6].IsRecording()) {
  94:Proliferation.cpp ****                 buffers[6].Record();
  95:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[6].IsRecording()) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 26


  96:Proliferation.cpp ****                 buffers[6].Record(false);
  97:Proliferation.cpp ****                 s++;
  98:Proliferation.cpp ****             }
  99:Proliferation.cpp ****             break;;
 100:Proliferation.cpp ****         case 7:
 101:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[7].IsRecording()) {
 102:Proliferation.cpp ****                 buffers[7].Record();
 103:Proliferation.cpp ****             } else if(button.FallingEdge() && buffers[7].IsRecording()) {
 104:Proliferation.cpp ****                 buffers[7].Record(false);
 105:Proliferation.cpp ****                 s++;
 106:Proliferation.cpp ****             }
 107:Proliferation.cpp ****             break;;
 108:Proliferation.cpp ****     }
 109:Proliferation.cpp **** 
 110:Proliferation.cpp **** }
 429              		.loc 11 110 1 view .LVU100
 430 00b4 38BD     		pop	{r3, r4, r5, pc}
 431              	.LVL28:
 432              	.L13:
  99:Proliferation.cpp ****         case 7:
 433              		.loc 11 99 19 is_stmt 1 view .LVU101
 100:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[7].IsRecording()) {
 434              		.loc 11 100 9 view .LVU102
 101:Proliferation.cpp ****                 buffers[7].Record();
 435              		.loc 11 101 13 view .LVU103
 436              	.LBB574:
 437              	.LBI574:
 438              		.loc 1 70 17 view .LVU104
 439              	.LBB575:
 440              		.loc 1 70 38 view .LVU105
 441              		.loc 1 70 45 is_stmt 0 view .LVU106
 442 00b6 7E4B     		ldr	r3, .L89+4
 443              		.loc 1 70 54 view .LVU107
 444 00b8 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 445 00ba 0029     		cmp	r1, #0
 446 00bc FAD0     		beq	.L6
 447              		.loc 1 70 56 view .LVU108
 448 00be 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 449              	.LVL29:
 450              		.loc 1 70 56 view .LVU109
 451              	.LBE575:
 452              	.LBE574:
 101:Proliferation.cpp ****                 buffers[7].Record();
 453              		.loc 11 101 36 view .LVU110
 454 00c0 7F2B     		cmp	r3, #127
 455 00c2 00F0AB80 		beq	.L82
 103:Proliferation.cpp ****                 buffers[7].Record(false);
 456              		.loc 11 103 20 is_stmt 1 view .LVU111
 457              	.LVL30:
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
 458              		.loc 1 75 9 view .LVU112
 103:Proliferation.cpp ****                 buffers[7].Record(false);
 459              		.loc 11 103 44 is_stmt 0 view .LVU113
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 27


 460 00c6 802B     		cmp	r3, #128
 461 00c8 F4D1     		bne	.L6
 462              	.LVL31:
 463              	.LBB576:
 464              	.LBI576:
 465              		.loc 12 91 10 is_stmt 1 view .LVU114
 466              	.LBB577:
 467              		.loc 12 91 39 is_stmt 0 view .LVU115
 468 00ca 804B     		ldr	r3, .L89+32
 469              	.LBE577:
 470              	.LBE576:
 103:Proliferation.cpp ****                 buffers[7].Record(false);
 471              		.loc 11 103 44 view .LVU116
 472 00cc 93F85D1A 		ldrb	r1, [r3, #2653]	@ zero_extendqisi2
 473 00d0 0029     		cmp	r1, #0
 474 00d2 EFD0     		beq	.L6
 104:Proliferation.cpp ****                 s++;
 475              		.loc 11 104 17 is_stmt 1 view .LVU117
 476              	.LVL32:
 477              	.LBB578:
 478              	.LBI578:
  35:samplebuffer.h ****     {
 479              		.loc 12 35 10 view .LVU118
 480              	.LBB579:
  41:samplebuffer.h ****         write_ptr_ = 0;
 481              		.loc 12 41 20 is_stmt 0 view .LVU119
 482 00d4 0021     		movs	r1, #0
 483              	.LBE579:
 484              	.LBE578:
 105:Proliferation.cpp ****             }
 485              		.loc 11 105 18 view .LVU120
 486 00d6 0820     		movs	r0, #8
 487              	.LBB581:
 488              	.LBB580:
  41:samplebuffer.h ****         write_ptr_ = 0;
 489              		.loc 12 41 20 view .LVU121
 490 00d8 83F85D1A 		strb	r1, [r3, #2653]
  42:samplebuffer.h ****     }
 491              		.loc 12 42 20 view .LVU122
 492 00dc C3F8541A 		str	r1, [r3, #2644]
 493              	.LVL33:
  42:samplebuffer.h ****     }
 494              		.loc 12 42 20 view .LVU123
 495              	.LBE580:
 496              	.LBE581:
 105:Proliferation.cpp ****             }
 497              		.loc 11 105 17 is_stmt 1 view .LVU124
 105:Proliferation.cpp ****             }
 498              		.loc 11 105 18 is_stmt 0 view .LVU125
 499 00e0 1060     		str	r0, [r2]
 107:Proliferation.cpp ****     }
 500              		.loc 11 107 19 is_stmt 1 view .LVU126
 501              		.loc 11 110 1 is_stmt 0 view .LVU127
 502 00e2 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL34:
 504              	.L20:
  51:Proliferation.cpp ****         case 1:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 28


 505              		.loc 11 51 19 is_stmt 1 view .LVU128
  52:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[1].IsRecording()) {
 506              		.loc 11 52 9 view .LVU129
  53:Proliferation.cpp ****                 buffers[1].Record();
 507              		.loc 11 53 13 view .LVU130
 508              	.LBB582:
 509              	.LBI582:
  70:../../libDaisy//src/hid/switch.h **** 
 510              		.loc 1 70 17 view .LVU131
 511              	.LBB583:
  70:../../libDaisy//src/hid/switch.h **** 
 512              		.loc 1 70 38 view .LVU132
  70:../../libDaisy//src/hid/switch.h **** 
 513              		.loc 1 70 45 is_stmt 0 view .LVU133
 514 00e4 724B     		ldr	r3, .L89+4
  70:../../libDaisy//src/hid/switch.h **** 
 515              		.loc 1 70 54 view .LVU134
 516 00e6 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 517 00e8 0029     		cmp	r1, #0
 518 00ea E3D0     		beq	.L6
  70:../../libDaisy//src/hid/switch.h **** 
 519              		.loc 1 70 56 view .LVU135
 520 00ec 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 521              	.LVL35:
  70:../../libDaisy//src/hid/switch.h **** 
 522              		.loc 1 70 56 view .LVU136
 523              	.LBE583:
 524              	.LBE582:
  53:Proliferation.cpp ****                 buffers[1].Record();
 525              		.loc 11 53 36 view .LVU137
 526 00ee 7F2B     		cmp	r3, #127
 527 00f0 00F0B880 		beq	.L83
  55:Proliferation.cpp ****                 buffers[1].Record(false);
 528              		.loc 11 55 20 is_stmt 1 view .LVU138
 529              	.LVL36:
 530              		.loc 1 75 9 view .LVU139
  55:Proliferation.cpp ****                 buffers[1].Record(false);
 531              		.loc 11 55 44 is_stmt 0 view .LVU140
 532 00f4 802B     		cmp	r3, #128
 533 00f6 DDD1     		bne	.L6
 534              	.LVL37:
 535              	.LBB584:
 536              	.LBI584:
 537              		.loc 12 91 10 is_stmt 1 view .LVU141
 538              	.LBB585:
 539              		.loc 12 91 39 is_stmt 0 view .LVU142
 540 00f8 754B     		ldr	r3, .L89+36
 541              	.LBE585:
 542              	.LBE584:
  55:Proliferation.cpp ****                 buffers[1].Record(false);
 543              		.loc 11 55 44 view .LVU143
 544 00fa 93F81516 		ldrb	r1, [r3, #1557]	@ zero_extendqisi2
 545 00fe 0029     		cmp	r1, #0
 546 0100 D8D0     		beq	.L6
  56:Proliferation.cpp ****                 s++;
 547              		.loc 11 56 17 is_stmt 1 view .LVU144
 548              	.LVL38:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 29


 549              	.LBB586:
 550              	.LBI586:
  35:samplebuffer.h ****     {
 551              		.loc 12 35 10 view .LVU145
 552              	.LBB587:
  41:samplebuffer.h ****         write_ptr_ = 0;
 553              		.loc 12 41 20 is_stmt 0 view .LVU146
 554 0102 0021     		movs	r1, #0
 555              	.LBE587:
 556              	.LBE586:
  57:Proliferation.cpp ****             }
 557              		.loc 11 57 18 view .LVU147
 558 0104 0220     		movs	r0, #2
 559              	.LBB589:
 560              	.LBB588:
  41:samplebuffer.h ****         write_ptr_ = 0;
 561              		.loc 12 41 20 view .LVU148
 562 0106 83F81516 		strb	r1, [r3, #1557]
  42:samplebuffer.h ****     }
 563              		.loc 12 42 20 view .LVU149
 564 010a C3F80C16 		str	r1, [r3, #1548]
 565              	.LVL39:
  42:samplebuffer.h ****     }
 566              		.loc 12 42 20 view .LVU150
 567              	.LBE588:
 568              	.LBE589:
  57:Proliferation.cpp ****             }
 569              		.loc 11 57 17 is_stmt 1 view .LVU151
  57:Proliferation.cpp ****             }
 570              		.loc 11 57 18 is_stmt 0 view .LVU152
 571 010e 1060     		str	r0, [r2]
 572              		.loc 11 110 1 view .LVU153
 573 0110 38BD     		pop	{r3, r4, r5, pc}
 574              	.LVL40:
 575              	.L19:
  59:Proliferation.cpp ****         case 2:
 576              		.loc 11 59 19 is_stmt 1 view .LVU154
  60:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[2].IsRecording()) {
 577              		.loc 11 60 9 view .LVU155
  61:Proliferation.cpp ****                 buffers[2].Record();
 578              		.loc 11 61 13 view .LVU156
 579              	.LBB590:
 580              	.LBI590:
  70:../../libDaisy//src/hid/switch.h **** 
 581              		.loc 1 70 17 view .LVU157
 582              	.LBB591:
  70:../../libDaisy//src/hid/switch.h **** 
 583              		.loc 1 70 38 view .LVU158
  70:../../libDaisy//src/hid/switch.h **** 
 584              		.loc 1 70 45 is_stmt 0 view .LVU159
 585 0112 674B     		ldr	r3, .L89+4
  70:../../libDaisy//src/hid/switch.h **** 
 586              		.loc 1 70 54 view .LVU160
 587 0114 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 588 0116 0029     		cmp	r1, #0
 589 0118 CCD0     		beq	.L6
  70:../../libDaisy//src/hid/switch.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 30


 590              		.loc 1 70 56 view .LVU161
 591 011a 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 592              	.LVL41:
  70:../../libDaisy//src/hid/switch.h **** 
 593              		.loc 1 70 56 view .LVU162
 594              	.LBE591:
 595              	.LBE590:
  61:Proliferation.cpp ****                 buffers[2].Record();
 596              		.loc 11 61 36 view .LVU163
 597 011c 7F2B     		cmp	r3, #127
 598 011e 00F08F80 		beq	.L84
  63:Proliferation.cpp ****                 buffers[2].Record(false);
 599              		.loc 11 63 20 is_stmt 1 view .LVU164
 600              	.LVL42:
 601              		.loc 1 75 9 view .LVU165
  63:Proliferation.cpp ****                 buffers[2].Record(false);
 602              		.loc 11 63 44 is_stmt 0 view .LVU166
 603 0122 802B     		cmp	r3, #128
 604 0124 C6D1     		bne	.L6
 605              	.LVL43:
 606              	.LBB592:
 607              	.LBI592:
 608              		.loc 12 91 10 is_stmt 1 view .LVU167
 609              	.LBB593:
 610              		.loc 12 91 39 is_stmt 0 view .LVU168
 611 0126 6B4B     		ldr	r3, .L89+40
 612              	.LBE593:
 613              	.LBE592:
  63:Proliferation.cpp ****                 buffers[2].Record(false);
 614              		.loc 11 63 44 view .LVU169
 615 0128 93F8211C 		ldrb	r1, [r3, #3105]	@ zero_extendqisi2
 616 012c 0029     		cmp	r1, #0
 617 012e C1D0     		beq	.L6
  64:Proliferation.cpp ****                 s++;
 618              		.loc 11 64 17 is_stmt 1 view .LVU170
 619              	.LVL44:
 620              	.LBB594:
 621              	.LBI594:
  35:samplebuffer.h ****     {
 622              		.loc 12 35 10 view .LVU171
 623              	.LBB595:
  41:samplebuffer.h ****         write_ptr_ = 0;
 624              		.loc 12 41 20 is_stmt 0 view .LVU172
 625 0130 0021     		movs	r1, #0
 626              	.LBE595:
 627              	.LBE594:
  65:Proliferation.cpp ****             }
 628              		.loc 11 65 18 view .LVU173
 629 0132 0320     		movs	r0, #3
 630              	.LBB597:
 631              	.LBB596:
  41:samplebuffer.h ****         write_ptr_ = 0;
 632              		.loc 12 41 20 view .LVU174
 633 0134 83F8211C 		strb	r1, [r3, #3105]
  42:samplebuffer.h ****     }
 634              		.loc 12 42 20 view .LVU175
 635 0138 C3F8181C 		str	r1, [r3, #3096]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 31


 636              	.LVL45:
  42:samplebuffer.h ****     }
 637              		.loc 12 42 20 view .LVU176
 638              	.LBE596:
 639              	.LBE597:
  65:Proliferation.cpp ****             }
 640              		.loc 11 65 17 is_stmt 1 view .LVU177
  65:Proliferation.cpp ****             }
 641              		.loc 11 65 18 is_stmt 0 view .LVU178
 642 013c 1060     		str	r0, [r2]
 643              		.loc 11 110 1 view .LVU179
 644 013e 38BD     		pop	{r3, r4, r5, pc}
 645              	.LVL46:
 646              	.L18:
  67:Proliferation.cpp ****         case 3:
 647              		.loc 11 67 19 is_stmt 1 view .LVU180
  68:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[3].IsRecording()) {
 648              		.loc 11 68 9 view .LVU181
  69:Proliferation.cpp ****                 buffers[3].Record();
 649              		.loc 11 69 13 view .LVU182
 650              	.LBB598:
 651              	.LBI598:
  70:../../libDaisy//src/hid/switch.h **** 
 652              		.loc 1 70 17 view .LVU183
 653              	.LBB599:
  70:../../libDaisy//src/hid/switch.h **** 
 654              		.loc 1 70 38 view .LVU184
  70:../../libDaisy//src/hid/switch.h **** 
 655              		.loc 1 70 45 is_stmt 0 view .LVU185
 656 0140 5B4B     		ldr	r3, .L89+4
  70:../../libDaisy//src/hid/switch.h **** 
 657              		.loc 1 70 54 view .LVU186
 658 0142 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 659 0144 0029     		cmp	r1, #0
 660 0146 B5D0     		beq	.L6
  70:../../libDaisy//src/hid/switch.h **** 
 661              		.loc 1 70 56 view .LVU187
 662 0148 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 663              	.LVL47:
  70:../../libDaisy//src/hid/switch.h **** 
 664              		.loc 1 70 56 view .LVU188
 665              	.LBE599:
 666              	.LBE598:
  69:Proliferation.cpp ****                 buffers[3].Record();
 667              		.loc 11 69 36 view .LVU189
 668 014a 7F2B     		cmp	r3, #127
 669 014c 00F0CC80 		beq	.L85
  71:Proliferation.cpp ****                 buffers[3].Record(false);
 670              		.loc 11 71 20 is_stmt 1 view .LVU190
 671              	.LVL48:
 672              		.loc 1 75 9 view .LVU191
  71:Proliferation.cpp ****                 buffers[3].Record(false);
 673              		.loc 11 71 44 is_stmt 0 view .LVU192
 674 0150 802B     		cmp	r3, #128
 675 0152 AFD1     		bne	.L6
 676              	.LVL49:
 677              	.LBB600:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 32


 678              	.LBI600:
 679              		.loc 12 91 10 is_stmt 1 view .LVU193
 680              	.LBB601:
 681              		.loc 12 91 39 is_stmt 0 view .LVU194
 682 0154 604B     		ldr	r3, .L89+44
 683              	.LBE601:
 684              	.LBE600:
  71:Proliferation.cpp ****                 buffers[3].Record(false);
 685              		.loc 11 71 44 view .LVU195
 686 0156 93F82D12 		ldrb	r1, [r3, #557]	@ zero_extendqisi2
 687 015a 0029     		cmp	r1, #0
 688 015c AAD0     		beq	.L6
  72:Proliferation.cpp ****                 s++;
 689              		.loc 11 72 17 is_stmt 1 view .LVU196
 690              	.LVL50:
 691              	.LBB602:
 692              	.LBI602:
  35:samplebuffer.h ****     {
 693              		.loc 12 35 10 view .LVU197
 694              	.LBB603:
  41:samplebuffer.h ****         write_ptr_ = 0;
 695              		.loc 12 41 20 is_stmt 0 view .LVU198
 696 015e 0021     		movs	r1, #0
 697              	.LBE603:
 698              	.LBE602:
  73:Proliferation.cpp ****             }
 699              		.loc 11 73 18 view .LVU199
 700 0160 0420     		movs	r0, #4
 701              	.LBB605:
 702              	.LBB604:
  41:samplebuffer.h ****         write_ptr_ = 0;
 703              		.loc 12 41 20 view .LVU200
 704 0162 83F82D12 		strb	r1, [r3, #557]
  42:samplebuffer.h ****     }
 705              		.loc 12 42 20 view .LVU201
 706 0166 C3F82412 		str	r1, [r3, #548]
 707              	.LVL51:
  42:samplebuffer.h ****     }
 708              		.loc 12 42 20 view .LVU202
 709              	.LBE604:
 710              	.LBE605:
  73:Proliferation.cpp ****             }
 711              		.loc 11 73 17 is_stmt 1 view .LVU203
  73:Proliferation.cpp ****             }
 712              		.loc 11 73 18 is_stmt 0 view .LVU204
 713 016a 1060     		str	r0, [r2]
 714              		.loc 11 110 1 view .LVU205
 715 016c 38BD     		pop	{r3, r4, r5, pc}
 716              	.LVL52:
 717              	.L17:
  75:Proliferation.cpp ****         case 4:
 718              		.loc 11 75 19 is_stmt 1 view .LVU206
  76:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[4].IsRecording()) {
 719              		.loc 11 76 9 view .LVU207
  77:Proliferation.cpp ****                 buffers[4].Record();
 720              		.loc 11 77 13 view .LVU208
 721              	.LBB606:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 33


 722              	.LBI606:
  70:../../libDaisy//src/hid/switch.h **** 
 723              		.loc 1 70 17 view .LVU209
 724              	.LBB607:
  70:../../libDaisy//src/hid/switch.h **** 
 725              		.loc 1 70 38 view .LVU210
  70:../../libDaisy//src/hid/switch.h **** 
 726              		.loc 1 70 45 is_stmt 0 view .LVU211
 727 016e 504B     		ldr	r3, .L89+4
  70:../../libDaisy//src/hid/switch.h **** 
 728              		.loc 1 70 54 view .LVU212
 729 0170 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 730 0172 0029     		cmp	r1, #0
 731 0174 9ED0     		beq	.L6
  70:../../libDaisy//src/hid/switch.h **** 
 732              		.loc 1 70 56 view .LVU213
 733 0176 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 734              	.LVL53:
  70:../../libDaisy//src/hid/switch.h **** 
 735              		.loc 1 70 56 view .LVU214
 736              	.LBE607:
 737              	.LBE606:
  77:Proliferation.cpp ****                 buffers[4].Record();
 738              		.loc 11 77 36 view .LVU215
 739 0178 7F2B     		cmp	r3, #127
 740 017a 00F08580 		beq	.L86
  79:Proliferation.cpp ****                 buffers[4].Record(false);
 741              		.loc 11 79 20 is_stmt 1 view .LVU216
 742              	.LVL54:
 743              		.loc 1 75 9 view .LVU217
  79:Proliferation.cpp ****                 buffers[4].Record(false);
 744              		.loc 11 79 44 is_stmt 0 view .LVU218
 745 017e 802B     		cmp	r3, #128
 746 0180 98D1     		bne	.L6
 747              	.LVL55:
 748              	.LBB608:
 749              	.LBI608:
 750              		.loc 12 91 10 is_stmt 1 view .LVU219
 751              	.LBB609:
 752              		.loc 12 91 39 is_stmt 0 view .LVU220
 753 0182 564B     		ldr	r3, .L89+48
 754              	.LBE609:
 755              	.LBE608:
  79:Proliferation.cpp ****                 buffers[4].Record(false);
 756              		.loc 11 79 44 view .LVU221
 757 0184 93F83918 		ldrb	r1, [r3, #2105]	@ zero_extendqisi2
 758 0188 0029     		cmp	r1, #0
 759 018a 93D0     		beq	.L6
  80:Proliferation.cpp ****                 s++;
 760              		.loc 11 80 17 is_stmt 1 view .LVU222
 761              	.LVL56:
 762              	.LBB610:
 763              	.LBI610:
  35:samplebuffer.h ****     {
 764              		.loc 12 35 10 view .LVU223
 765              	.LBB611:
  41:samplebuffer.h ****         write_ptr_ = 0;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 34


 766              		.loc 12 41 20 is_stmt 0 view .LVU224
 767 018c 0021     		movs	r1, #0
 768              	.LBE611:
 769              	.LBE610:
  81:Proliferation.cpp ****             }
 770              		.loc 11 81 18 view .LVU225
 771 018e 0520     		movs	r0, #5
 772              	.LBB613:
 773              	.LBB612:
  41:samplebuffer.h ****         write_ptr_ = 0;
 774              		.loc 12 41 20 view .LVU226
 775 0190 83F83918 		strb	r1, [r3, #2105]
  42:samplebuffer.h ****     }
 776              		.loc 12 42 20 view .LVU227
 777 0194 C3F83018 		str	r1, [r3, #2096]
 778              	.LVL57:
  42:samplebuffer.h ****     }
 779              		.loc 12 42 20 view .LVU228
 780              	.LBE612:
 781              	.LBE613:
  81:Proliferation.cpp ****             }
 782              		.loc 11 81 17 is_stmt 1 view .LVU229
  81:Proliferation.cpp ****             }
 783              		.loc 11 81 18 is_stmt 0 view .LVU230
 784 0198 1060     		str	r0, [r2]
 785              		.loc 11 110 1 view .LVU231
 786 019a 38BD     		pop	{r3, r4, r5, pc}
 787              	.LVL58:
 788              	.L16:
  83:Proliferation.cpp ****         case 5:
 789              		.loc 11 83 19 is_stmt 1 view .LVU232
  84:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[5].IsRecording()) {
 790              		.loc 11 84 9 view .LVU233
  85:Proliferation.cpp ****                 buffers[5].Record();
 791              		.loc 11 85 13 view .LVU234
 792              	.LBB614:
 793              	.LBI614:
  70:../../libDaisy//src/hid/switch.h **** 
 794              		.loc 1 70 17 view .LVU235
 795              	.LBB615:
  70:../../libDaisy//src/hid/switch.h **** 
 796              		.loc 1 70 38 view .LVU236
  70:../../libDaisy//src/hid/switch.h **** 
 797              		.loc 1 70 45 is_stmt 0 view .LVU237
 798 019c 444B     		ldr	r3, .L89+4
  70:../../libDaisy//src/hid/switch.h **** 
 799              		.loc 1 70 54 view .LVU238
 800 019e 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 801 01a0 0029     		cmp	r1, #0
 802 01a2 87D0     		beq	.L6
  70:../../libDaisy//src/hid/switch.h **** 
 803              		.loc 1 70 56 view .LVU239
 804 01a4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 805              	.LVL59:
  70:../../libDaisy//src/hid/switch.h **** 
 806              		.loc 1 70 56 view .LVU240
 807              	.LBE615:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 35


 808              	.LBE614:
  85:Proliferation.cpp ****                 buffers[5].Record();
 809              		.loc 11 85 36 view .LVU241
 810 01a6 7F2B     		cmp	r3, #127
 811 01a8 00F0C280 		beq	.L87
  87:Proliferation.cpp ****                 buffers[5].Record(false);
 812              		.loc 11 87 20 is_stmt 1 view .LVU242
 813              	.LVL60:
 814              		.loc 1 75 9 view .LVU243
  87:Proliferation.cpp ****                 buffers[5].Record(false);
 815              		.loc 11 87 44 is_stmt 0 view .LVU244
 816 01ac 802B     		cmp	r3, #128
 817 01ae 81D1     		bne	.L6
 818              	.LVL61:
 819              	.LBB616:
 820              	.LBI616:
 821              		.loc 12 91 10 is_stmt 1 view .LVU245
 822              	.LBB617:
 823              		.loc 12 91 39 is_stmt 0 view .LVU246
 824 01b0 4B4B     		ldr	r3, .L89+52
 825              	.LBE617:
 826              	.LBE616:
  87:Proliferation.cpp ****                 buffers[5].Record(false);
 827              		.loc 11 87 44 view .LVU247
 828 01b2 93F8451E 		ldrb	r1, [r3, #3653]	@ zero_extendqisi2
 829 01b6 0029     		cmp	r1, #0
 830 01b8 3FF47CAF 		beq	.L6
  88:Proliferation.cpp ****                 s++;
 831              		.loc 11 88 17 is_stmt 1 view .LVU248
 832              	.LVL62:
 833              	.LBB618:
 834              	.LBI618:
  35:samplebuffer.h ****     {
 835              		.loc 12 35 10 view .LVU249
 836              	.LBB619:
  41:samplebuffer.h ****         write_ptr_ = 0;
 837              		.loc 12 41 20 is_stmt 0 view .LVU250
 838 01bc 0021     		movs	r1, #0
 839              	.LBE619:
 840              	.LBE618:
  89:Proliferation.cpp ****             }
 841              		.loc 11 89 18 view .LVU251
 842 01be 0620     		movs	r0, #6
 843              	.LBB621:
 844              	.LBB620:
  41:samplebuffer.h ****         write_ptr_ = 0;
 845              		.loc 12 41 20 view .LVU252
 846 01c0 83F8451E 		strb	r1, [r3, #3653]
  42:samplebuffer.h ****     }
 847              		.loc 12 42 20 view .LVU253
 848 01c4 C3F83C1E 		str	r1, [r3, #3644]
 849              	.LVL63:
  42:samplebuffer.h ****     }
 850              		.loc 12 42 20 view .LVU254
 851              	.LBE620:
 852              	.LBE621:
  89:Proliferation.cpp ****             }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 36


 853              		.loc 11 89 17 is_stmt 1 view .LVU255
  89:Proliferation.cpp ****             }
 854              		.loc 11 89 18 is_stmt 0 view .LVU256
 855 01c8 1060     		str	r0, [r2]
 856              		.loc 11 110 1 view .LVU257
 857 01ca 38BD     		pop	{r3, r4, r5, pc}
 858              	.LVL64:
 859              	.L15:
  91:Proliferation.cpp ****         case 6:
 860              		.loc 11 91 19 is_stmt 1 view .LVU258
  92:Proliferation.cpp ****             if(button.RisingEdge() && !buffers[6].IsRecording()) {
 861              		.loc 11 92 9 view .LVU259
  93:Proliferation.cpp ****                 buffers[6].Record();
 862              		.loc 11 93 13 view .LVU260
 863              	.LBB622:
 864              	.LBI622:
  70:../../libDaisy//src/hid/switch.h **** 
 865              		.loc 1 70 17 view .LVU261
 866              	.LBB623:
  70:../../libDaisy//src/hid/switch.h **** 
 867              		.loc 1 70 38 view .LVU262
  70:../../libDaisy//src/hid/switch.h **** 
 868              		.loc 1 70 45 is_stmt 0 view .LVU263
 869 01cc 384B     		ldr	r3, .L89+4
  70:../../libDaisy//src/hid/switch.h **** 
 870              		.loc 1 70 54 view .LVU264
 871 01ce 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 872 01d0 0029     		cmp	r1, #0
 873 01d2 3FF46FAF 		beq	.L6
  70:../../libDaisy//src/hid/switch.h **** 
 874              		.loc 1 70 56 view .LVU265
 875 01d6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 876              	.LVL65:
  70:../../libDaisy//src/hid/switch.h **** 
 877              		.loc 1 70 56 view .LVU266
 878              	.LBE623:
 879              	.LBE622:
  93:Proliferation.cpp ****                 buffers[6].Record();
 880              		.loc 11 93 36 view .LVU267
 881 01d8 7F2B     		cmp	r3, #127
 882 01da 00F09780 		beq	.L88
  95:Proliferation.cpp ****                 buffers[6].Record(false);
 883              		.loc 11 95 20 is_stmt 1 view .LVU268
 884              	.LVL66:
 885              		.loc 1 75 9 view .LVU269
  95:Proliferation.cpp ****                 buffers[6].Record(false);
 886              		.loc 11 95 44 is_stmt 0 view .LVU270
 887 01de 802B     		cmp	r3, #128
 888 01e0 7FF468AF 		bne	.L6
 889              	.LVL67:
 890              	.LBB624:
 891              	.LBI624:
 892              		.loc 12 91 10 is_stmt 1 view .LVU271
 893              	.LBB625:
 894              		.loc 12 91 39 is_stmt 0 view .LVU272
 895 01e4 3F4B     		ldr	r3, .L89+56
 896              	.LBE625:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 37


 897              	.LBE624:
  95:Proliferation.cpp ****                 buffers[6].Record(false);
 898              		.loc 11 95 44 view .LVU273
 899 01e6 93F85114 		ldrb	r1, [r3, #1105]	@ zero_extendqisi2
 900 01ea 0029     		cmp	r1, #0
 901 01ec 3FF462AF 		beq	.L6
  96:Proliferation.cpp ****                 s++;
 902              		.loc 11 96 17 is_stmt 1 view .LVU274
 903              	.LVL68:
 904              	.LBB626:
 905              	.LBI626:
  35:samplebuffer.h ****     {
 906              		.loc 12 35 10 view .LVU275
 907              	.LBB627:
  41:samplebuffer.h ****         write_ptr_ = 0;
 908              		.loc 12 41 20 is_stmt 0 view .LVU276
 909 01f0 0021     		movs	r1, #0
 910              	.LBE627:
 911              	.LBE626:
  97:Proliferation.cpp ****             }
 912              		.loc 11 97 18 view .LVU277
 913 01f2 0720     		movs	r0, #7
 914              	.LBB629:
 915              	.LBB628:
  41:samplebuffer.h ****         write_ptr_ = 0;
 916              		.loc 12 41 20 view .LVU278
 917 01f4 83F85114 		strb	r1, [r3, #1105]
  42:samplebuffer.h ****     }
 918              		.loc 12 42 20 view .LVU279
 919 01f8 C3F84814 		str	r1, [r3, #1096]
 920              	.LVL69:
  42:samplebuffer.h ****     }
 921              		.loc 12 42 20 view .LVU280
 922              	.LBE628:
 923              	.LBE629:
  97:Proliferation.cpp ****             }
 924              		.loc 11 97 17 is_stmt 1 view .LVU281
  97:Proliferation.cpp ****             }
 925              		.loc 11 97 18 is_stmt 0 view .LVU282
 926 01fc 1060     		str	r0, [r2]
 927              		.loc 11 110 1 view .LVU283
 928 01fe 38BD     		pop	{r3, r4, r5, pc}
 929              	.LVL70:
 930              	.L22:
  47:Proliferation.cpp ****                 buffers[0].Record(false);
 931              		.loc 11 47 20 is_stmt 1 view .LVU284
 932              		.loc 1 75 9 view .LVU285
  47:Proliferation.cpp ****                 buffers[0].Record(false);
 933              		.loc 11 47 44 is_stmt 0 view .LVU286
 934 0200 802B     		cmp	r3, #128
 935 0202 7FF457AF 		bne	.L6
 936              	.LVL71:
 937              	.LBB630:
 938              	.LBI630:
 939              		.loc 12 91 10 is_stmt 1 view .LVU287
 940              	.LBB631:
 941              		.loc 12 91 39 is_stmt 0 view .LVU288
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 38


 942 0206 2C4B     		ldr	r3, .L89+12
 943              	.LBE631:
 944              	.LBE630:
  47:Proliferation.cpp ****                 buffers[0].Record(false);
 945              		.loc 11 47 44 view .LVU289
 946 0208 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 947 020a 0029     		cmp	r1, #0
 948 020c 3FF452AF 		beq	.L6
  48:Proliferation.cpp ****                 s++;
 949              		.loc 11 48 17 is_stmt 1 view .LVU290
 950              	.LVL72:
 951              	.LBB632:
 952              	.LBI632:
  35:samplebuffer.h ****     {
 953              		.loc 12 35 10 view .LVU291
 954              	.LBB633:
  41:samplebuffer.h ****         write_ptr_ = 0;
 955              		.loc 12 41 20 is_stmt 0 view .LVU292
 956 0210 0021     		movs	r1, #0
 957              	.LBE633:
 958              	.LBE632:
  49:Proliferation.cpp ****             }
 959              		.loc 11 49 18 view .LVU293
 960 0212 0120     		movs	r0, #1
 961              	.LBB635:
 962              	.LBB634:
  41:samplebuffer.h ****         write_ptr_ = 0;
 963              		.loc 12 41 20 view .LVU294
 964 0214 5972     		strb	r1, [r3, #9]
  42:samplebuffer.h ****     }
 965              		.loc 12 42 20 view .LVU295
 966 0216 1960     		str	r1, [r3]
 967              	.LVL73:
  42:samplebuffer.h ****     }
 968              		.loc 12 42 20 view .LVU296
 969              	.LBE634:
 970              	.LBE635:
  49:Proliferation.cpp ****             }
 971              		.loc 11 49 17 is_stmt 1 view .LVU297
  49:Proliferation.cpp ****             }
 972              		.loc 11 49 18 is_stmt 0 view .LVU298
 973 0218 1060     		str	r0, [r2]
 974              		.loc 11 110 1 view .LVU299
 975 021a 38BD     		pop	{r3, r4, r5, pc}
 976              	.LVL74:
 977              	.L82:
 978              	.LBB636:
 979              	.LBI636:
 980              		.loc 12 91 10 is_stmt 1 view .LVU300
 981              	.LBB637:
 982              		.loc 12 91 39 is_stmt 0 view .LVU301
 983 021c 2B4C     		ldr	r4, .L89+32
 984              	.LVL75:
 985              		.loc 12 91 39 view .LVU302
 986              	.LBE637:
 987              	.LBE636:
 101:Proliferation.cpp ****                 buffers[7].Record();
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 39


 988              		.loc 11 101 36 view .LVU303
 989 021e 94F85D5A 		ldrb	r5, [r4, #2653]	@ zero_extendqisi2
 990 0222 002D     		cmp	r5, #0
 991 0224 7FF446AF 		bne	.L6
 992              	.LBB638:
 993              	.LBB639:
 994              	.LBB640:
 995              	.LBB641:
  31:samplebuffer.h ****         }
 996              		.loc 12 31 24 view .LVU304
 997 0228 274A     		ldr	r2, .L89+28
 998 022a 2946     		mov	r1, r5
 999 022c 04F52660 		add	r0, r4, #2656
 1000 0230 FFF7FEFF 		bl	memset
 1001              	.LVL76:
 1002              	.LBE641:
 1003              	.LBE640:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1004              		.loc 12 41 20 view .LVU305
 1005 0234 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1006              		.loc 12 42 20 view .LVU306
 1007 0236 C4F8545A 		str	r5, [r4, #2644]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1008              		.loc 12 41 20 view .LVU307
 1009 023a 84F85D3A 		strb	r3, [r4, #2653]
 1010              	.LBE639:
 1011              	.LBE638:
 1012              		.loc 11 110 1 view .LVU308
 1013 023e 38BD     		pop	{r3, r4, r5, pc}
 1014              	.LVL77:
 1015              	.L84:
 1016              	.LBB642:
 1017              	.LBI642:
 1018              		.loc 12 91 10 is_stmt 1 view .LVU309
 1019              	.LBB643:
 1020              		.loc 12 91 39 is_stmt 0 view .LVU310
 1021 0240 244C     		ldr	r4, .L89+40
 1022              	.LVL78:
 1023              		.loc 12 91 39 view .LVU311
 1024              	.LBE643:
 1025              	.LBE642:
  61:Proliferation.cpp ****                 buffers[2].Record();
 1026              		.loc 11 61 36 view .LVU312
 1027 0242 94F8215C 		ldrb	r5, [r4, #3105]	@ zero_extendqisi2
 1028 0246 002D     		cmp	r5, #0
 1029 0248 7FF434AF 		bne	.L6
 1030              	.LBB644:
 1031              	.LBB645:
 1032              	.LBB646:
 1033              	.LBB647:
  31:samplebuffer.h ****         }
 1034              		.loc 12 31 24 view .LVU313
 1035 024c 1E4A     		ldr	r2, .L89+28
 1036 024e 2946     		mov	r1, r5
 1037 0250 04F62440 		addw	r0, r4, #3108
 1038 0254 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 40


 1039              	.LVL79:
 1040              	.LBE647:
 1041              	.LBE646:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1042              		.loc 12 41 20 view .LVU314
 1043 0258 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1044              		.loc 12 42 20 view .LVU315
 1045 025a C4F8185C 		str	r5, [r4, #3096]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1046              		.loc 12 41 20 view .LVU316
 1047 025e 84F8213C 		strb	r3, [r4, #3105]
 1048              	.LBE645:
 1049              	.LBE644:
 1050              		.loc 11 110 1 view .LVU317
 1051 0262 38BD     		pop	{r3, r4, r5, pc}
 1052              	.LVL80:
 1053              	.L83:
 1054              	.LBB648:
 1055              	.LBI648:
 1056              		.loc 12 91 10 is_stmt 1 view .LVU318
 1057              	.LBB649:
 1058              		.loc 12 91 39 is_stmt 0 view .LVU319
 1059 0264 1A4C     		ldr	r4, .L89+36
 1060              	.LVL81:
 1061              		.loc 12 91 39 view .LVU320
 1062              	.LBE649:
 1063              	.LBE648:
  53:Proliferation.cpp ****                 buffers[1].Record();
 1064              		.loc 11 53 36 view .LVU321
 1065 0266 94F81556 		ldrb	r5, [r4, #1557]	@ zero_extendqisi2
 1066 026a 002D     		cmp	r5, #0
 1067 026c 7FF422AF 		bne	.L6
 1068              	.LBB650:
 1069              	.LBB651:
 1070              	.LBB652:
 1071              	.LBB653:
  31:samplebuffer.h ****         }
 1072              		.loc 12 31 24 view .LVU322
 1073 0270 154A     		ldr	r2, .L89+28
 1074 0272 2946     		mov	r1, r5
 1075 0274 04F5C360 		add	r0, r4, #1560
 1076 0278 FFF7FEFF 		bl	memset
 1077              	.LVL82:
 1078              	.LBE653:
 1079              	.LBE652:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1080              		.loc 12 41 20 view .LVU323
 1081 027c 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1082              		.loc 12 42 20 view .LVU324
 1083 027e C4F80C56 		str	r5, [r4, #1548]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1084              		.loc 12 41 20 view .LVU325
 1085 0282 84F81536 		strb	r3, [r4, #1557]
 1086              	.LBE651:
 1087              	.LBE650:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 41


 1088              		.loc 11 110 1 view .LVU326
 1089 0286 38BD     		pop	{r3, r4, r5, pc}
 1090              	.LVL83:
 1091              	.L86:
 1092              	.LBB654:
 1093              	.LBI654:
 1094              		.loc 12 91 10 is_stmt 1 view .LVU327
 1095              	.LBB655:
 1096              		.loc 12 91 39 is_stmt 0 view .LVU328
 1097 0288 144C     		ldr	r4, .L89+48
 1098              	.LVL84:
 1099              		.loc 12 91 39 view .LVU329
 1100              	.LBE655:
 1101              	.LBE654:
  77:Proliferation.cpp ****                 buffers[4].Record();
 1102              		.loc 11 77 36 view .LVU330
 1103 028a 94F83958 		ldrb	r5, [r4, #2105]	@ zero_extendqisi2
 1104 028e 002D     		cmp	r5, #0
 1105 0290 7FF410AF 		bne	.L6
 1106              	.LBB656:
 1107              	.LBB657:
 1108              	.LBB658:
 1109              	.LBB659:
  31:samplebuffer.h ****         }
 1110              		.loc 12 31 24 view .LVU331
 1111 0294 0C4A     		ldr	r2, .L89+28
 1112 0296 2946     		mov	r1, r5
 1113 0298 04F63C00 		addw	r0, r4, #2108
 1114 029c FFF7FEFF 		bl	memset
 1115              	.LVL85:
 1116              	.LBE659:
 1117              	.LBE658:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1118              		.loc 12 41 20 view .LVU332
 1119 02a0 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1120              		.loc 12 42 20 view .LVU333
 1121 02a2 C4F83058 		str	r5, [r4, #2096]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1122              		.loc 12 41 20 view .LVU334
 1123 02a6 84F83938 		strb	r3, [r4, #2105]
 1124              	.LBE657:
 1125              	.LBE656:
 1126              		.loc 11 110 1 view .LVU335
 1127 02aa 38BD     		pop	{r3, r4, r5, pc}
 1128              	.L90:
 1129              		.align	2
 1130              	.L89:
 1131 02ac 00000000 		.word	.LANCHOR0
 1132 02b0 00000000 		.word	.LANCHOR1
 1133 02b4 B0010000 		.word	.LANCHOR0+432
 1134 02b8 00000000 		.word	buffers
 1135 02bc 0CA60E00 		.word	960012
 1136 02c0 B7010000 		.word	.LANCHOR0+439
 1137 02c4 00000000 		.word	.LANCHOR2
 1138 02c8 00A60E00 		.word	960000
 1139 02cc 00806600 		.word	buffers+6717440
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 42


 1140 02d0 00A00E00 		.word	buffers+958464
 1141 02d4 00401D00 		.word	buffers+1916928
 1142 02d8 00F02B00 		.word	buffers+2879488
 1143 02dc 00903A00 		.word	buffers+3837952
 1144 02e0 00304900 		.word	buffers+4796416
 1145 02e4 00E05700 		.word	buffers+5758976
 1146              	.LVL86:
 1147              	.L85:
 1148              	.LBB660:
 1149              	.LBI660:
 1150              		.loc 12 91 10 is_stmt 1 view .LVU336
 1151              	.LBB661:
 1152              		.loc 12 91 39 is_stmt 0 view .LVU337
 1153 02e8 1A4C     		ldr	r4, .L91
 1154              	.LVL87:
 1155              		.loc 12 91 39 view .LVU338
 1156              	.LBE661:
 1157              	.LBE660:
  69:Proliferation.cpp ****                 buffers[3].Record();
 1158              		.loc 11 69 36 view .LVU339
 1159 02ea 94F82D52 		ldrb	r5, [r4, #557]	@ zero_extendqisi2
 1160 02ee 002D     		cmp	r5, #0
 1161 02f0 7FF4E0AE 		bne	.L6
 1162              	.LBB662:
 1163              	.LBB663:
 1164              	.LBB664:
 1165              	.LBB665:
  31:samplebuffer.h ****         }
 1166              		.loc 12 31 24 view .LVU340
 1167 02f4 184A     		ldr	r2, .L91+4
 1168 02f6 2946     		mov	r1, r5
 1169 02f8 04F50C70 		add	r0, r4, #560
 1170 02fc FFF7FEFF 		bl	memset
 1171              	.LVL88:
 1172              	.LBE665:
 1173              	.LBE664:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1174              		.loc 12 41 20 view .LVU341
 1175 0300 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1176              		.loc 12 42 20 view .LVU342
 1177 0302 C4F82452 		str	r5, [r4, #548]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1178              		.loc 12 41 20 view .LVU343
 1179 0306 84F82D32 		strb	r3, [r4, #557]
 1180              	.LBE663:
 1181              	.LBE662:
 1182              		.loc 11 110 1 view .LVU344
 1183 030a 38BD     		pop	{r3, r4, r5, pc}
 1184              	.LVL89:
 1185              	.L88:
 1186              	.LBB666:
 1187              	.LBI666:
 1188              		.loc 12 91 10 is_stmt 1 view .LVU345
 1189              	.LBB667:
 1190              		.loc 12 91 39 is_stmt 0 view .LVU346
 1191 030c 134C     		ldr	r4, .L91+8
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 43


 1192              	.LVL90:
 1193              		.loc 12 91 39 view .LVU347
 1194              	.LBE667:
 1195              	.LBE666:
  93:Proliferation.cpp ****                 buffers[6].Record();
 1196              		.loc 11 93 36 view .LVU348
 1197 030e 94F85154 		ldrb	r5, [r4, #1105]	@ zero_extendqisi2
 1198 0312 002D     		cmp	r5, #0
 1199 0314 7FF4CEAE 		bne	.L6
 1200              	.LBB668:
 1201              	.LBB669:
 1202              	.LBB670:
 1203              	.LBB671:
  31:samplebuffer.h ****         }
 1204              		.loc 12 31 24 view .LVU349
 1205 0318 0F4A     		ldr	r2, .L91+4
 1206 031a 2946     		mov	r1, r5
 1207 031c 04F25440 		addw	r0, r4, #1108
 1208 0320 FFF7FEFF 		bl	memset
 1209              	.LVL91:
 1210              	.LBE671:
 1211              	.LBE670:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1212              		.loc 12 41 20 view .LVU350
 1213 0324 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1214              		.loc 12 42 20 view .LVU351
 1215 0326 C4F84854 		str	r5, [r4, #1096]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1216              		.loc 12 41 20 view .LVU352
 1217 032a 84F85134 		strb	r3, [r4, #1105]
 1218              	.LBE669:
 1219              	.LBE668:
 1220              		.loc 11 110 1 view .LVU353
 1221 032e 38BD     		pop	{r3, r4, r5, pc}
 1222              	.LVL92:
 1223              	.L87:
 1224              	.LBB672:
 1225              	.LBI672:
 1226              		.loc 12 91 10 is_stmt 1 view .LVU354
 1227              	.LBB673:
 1228              		.loc 12 91 39 is_stmt 0 view .LVU355
 1229 0330 0B4C     		ldr	r4, .L91+12
 1230              	.LVL93:
 1231              		.loc 12 91 39 view .LVU356
 1232              	.LBE673:
 1233              	.LBE672:
  85:Proliferation.cpp ****                 buffers[5].Record();
 1234              		.loc 11 85 36 view .LVU357
 1235 0332 94F8455E 		ldrb	r5, [r4, #3653]	@ zero_extendqisi2
 1236 0336 002D     		cmp	r5, #0
 1237 0338 7FF4BCAE 		bne	.L6
 1238              	.LBB674:
 1239              	.LBB675:
 1240              	.LBB676:
 1241              	.LBB677:
  31:samplebuffer.h ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 44


 1242              		.loc 12 31 24 view .LVU358
 1243 033c 064A     		ldr	r2, .L91+4
 1244 033e 2946     		mov	r1, r5
 1245 0340 04F64860 		addw	r0, r4, #3656
 1246 0344 FFF7FEFF 		bl	memset
 1247              	.LVL94:
 1248              	.LBE677:
 1249              	.LBE676:
  41:samplebuffer.h ****         write_ptr_ = 0;
 1250              		.loc 12 41 20 view .LVU359
 1251 0348 0123     		movs	r3, #1
  42:samplebuffer.h ****     }
 1252              		.loc 12 42 20 view .LVU360
 1253 034a C4F83C5E 		str	r5, [r4, #3644]
  41:samplebuffer.h ****         write_ptr_ = 0;
 1254              		.loc 12 41 20 view .LVU361
 1255 034e 84F8453E 		strb	r3, [r4, #3653]
 1256              	.LBE675:
 1257              	.LBE674:
 1258              		.loc 11 110 1 view .LVU362
 1259 0352 38BD     		pop	{r3, r4, r5, pc}
 1260              	.L92:
 1261              		.align	2
 1262              	.L91:
 1263 0354 00F02B00 		.word	buffers+2879488
 1264 0358 00A60E00 		.word	960000
 1265 035c 00E05700 		.word	buffers+5758976
 1266 0360 00304900 		.word	buffers+4796416
 1267              		.cfi_endproc
 1268              	.LFE4840:
 1270              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 1271              		.align	1
 1272              		.p2align 2,,3
 1273              		.global	_Z13AudioCallbackPKPKfPPfj
 1274              		.syntax unified
 1275              		.thumb
 1276              		.thumb_func
 1277              		.fpu fpv5-d16
 1279              	_Z13AudioCallbackPKPKfPPfj:
 1280              	.LVL95:
 1281              	.LFB4842:
 111:Proliferation.cpp **** 
 112:Proliferation.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
 113:Proliferation.cpp **** {
 1282              		.loc 11 113 1 is_stmt 1 view -0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 16
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 114:Proliferation.cpp **** 	getSamples();
 1286              		.loc 11 114 2 view .LVU364
 113:Proliferation.cpp **** 	getSamples();
 1287              		.loc 11 113 1 is_stmt 0 view .LVU365
 1288 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1289              		.cfi_def_cfa_offset 36
 1290              		.cfi_offset 4, -36
 1291              		.cfi_offset 5, -32
 1292              		.cfi_offset 6, -28
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 45


 1293              		.cfi_offset 7, -24
 1294              		.cfi_offset 8, -20
 1295              		.cfi_offset 9, -16
 1296              		.cfi_offset 10, -12
 1297              		.cfi_offset 11, -8
 1298              		.cfi_offset 14, -4
 1299 0004 2DED048B 		vpush.64	{d8, d9}
 1300              		.cfi_def_cfa_offset 52
 1301              		.cfi_offset 80, -52
 1302              		.cfi_offset 81, -48
 1303              		.cfi_offset 82, -44
 1304              		.cfi_offset 83, -40
 1305              	.LBB728:
 1306              	.LBB729:
 1307              		.file 13 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP//Source/Utility/dsp.h **** */
   3:../../DaisySP//Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP//Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP//Source/Utility/dsp.h **** 
  11:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP//Source/Utility/dsp.h **** */
  13:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP//Source/Utility/dsp.h **** 
  21:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP//Source/Utility/dsp.h **** {
  23:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP//Source/Utility/dsp.h **** 
  26:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP//Source/Utility/dsp.h **** */
  32:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP//Source/Utility/dsp.h **** {
  34:../../DaisySP//Source/Utility/dsp.h ****     float r;
  35:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP//Source/Utility/dsp.h **** #else
  38:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP//Source/Utility/dsp.h ****     return r;
  41:../../DaisySP//Source/Utility/dsp.h **** }
  42:../../DaisySP//Source/Utility/dsp.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 46


  43:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP//Source/Utility/dsp.h **** {
  45:../../DaisySP//Source/Utility/dsp.h ****     float r;
  46:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP//Source/Utility/dsp.h **** #else
  49:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP//Source/Utility/dsp.h ****     return r;
  52:../../DaisySP//Source/Utility/dsp.h **** }
  53:../../DaisySP//Source/Utility/dsp.h **** 
  54:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP//Source/Utility/dsp.h **** */
  56:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP//Source/Utility/dsp.h **** {
  58:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP//Source/Utility/dsp.h **** }
  60:../../DaisySP//Source/Utility/dsp.h **** 
  61:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP//Source/Utility/dsp.h **** */
  65:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP//Source/Utility/dsp.h **** {
  67:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP//Source/Utility/dsp.h ****     return f;
  75:../../DaisySP//Source/Utility/dsp.h **** }
  76:../../DaisySP//Source/Utility/dsp.h **** 
  77:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP//Source/Utility/dsp.h **** {
  79:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP//Source/Utility/dsp.h ****     return f;
  87:../../DaisySP//Source/Utility/dsp.h **** }
  88:../../DaisySP//Source/Utility/dsp.h **** 
  89:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP//Source/Utility/dsp.h **** */
  92:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP//Source/Utility/dsp.h **** {
  94:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP//Source/Utility/dsp.h **** */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 47


 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP//Source/Utility/dsp.h **** }
 115:../../DaisySP//Source/Utility/dsp.h **** 
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP//Source/Utility/dsp.h **** }
 120:../../DaisySP//Source/Utility/dsp.h **** 
 121:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP//Source/Utility/dsp.h **** */
 123:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP//Source/Utility/dsp.h **** {
 125:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP//Source/Utility/dsp.h **** }
 127:../../DaisySP//Source/Utility/dsp.h **** 
 128:../../DaisySP//Source/Utility/dsp.h **** 
 129:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP//Source/Utility/dsp.h **** */
 135:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 136:../../DaisySP//Source/Utility/dsp.h **** {
 137:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 138:../../DaisySP//Source/Utility/dsp.h **** }
 139:../../DaisySP//Source/Utility/dsp.h **** 
 140:../../DaisySP//Source/Utility/dsp.h **** /** Curves to use with the fmap function */
 141:../../DaisySP//Source/Utility/dsp.h **** enum class Mapping
 142:../../DaisySP//Source/Utility/dsp.h **** {
 143:../../DaisySP//Source/Utility/dsp.h ****     LINEAR,
 144:../../DaisySP//Source/Utility/dsp.h ****     EXP,
 145:../../DaisySP//Source/Utility/dsp.h ****     LOG,
 146:../../DaisySP//Source/Utility/dsp.h **** };
 147:../../DaisySP//Source/Utility/dsp.h **** 
 148:../../DaisySP//Source/Utility/dsp.h **** /** Maps a float between a specified range, using a specified curve. 
 149:../../DaisySP//Source/Utility/dsp.h ****  * 
 150:../../DaisySP//Source/Utility/dsp.h ****  *  \param in a value between 0 to 1 that will be mapped to the new range.
 151:../../DaisySP//Source/Utility/dsp.h ****  *  \param min the new minimum value
 152:../../DaisySP//Source/Utility/dsp.h ****  *  \param max the new maxmimum value
 153:../../DaisySP//Source/Utility/dsp.h ****  *  \param curve a Mapping Value to adjust the response curve of the transformation
 154:../../DaisySP//Source/Utility/dsp.h ****  *               defaults to Linear. @see Mapping
 155:../../DaisySP//Source/Utility/dsp.h ****  * 
 156:../../DaisySP//Source/Utility/dsp.h ****  *  When using the log curve min and max, must be greater than zero.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 48


 157:../../DaisySP//Source/Utility/dsp.h ****  * 
 158:../../DaisySP//Source/Utility/dsp.h ****  *  \retval returns the transformed float within the new range.
 159:../../DaisySP//Source/Utility/dsp.h **** */
 160:../../DaisySP//Source/Utility/dsp.h **** inline float
 161:../../DaisySP//Source/Utility/dsp.h **** fmap(float in, float min, float max, Mapping curve = Mapping::LINEAR)
 162:../../DaisySP//Source/Utility/dsp.h **** {
 163:../../DaisySP//Source/Utility/dsp.h ****     switch(curve)
 164:../../DaisySP//Source/Utility/dsp.h ****     {
 165:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::EXP:
 166:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min + (in * in) * (max - min), min, max);
 167:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LOG:
 168:../../DaisySP//Source/Utility/dsp.h ****         {
 169:../../DaisySP//Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 170:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 171:../../DaisySP//Source/Utility/dsp.h ****         }
 172:../../DaisySP//Source/Utility/dsp.h ****         case Mapping::LINEAR:
 173:../../DaisySP//Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 1308              		.loc 13 173 31 view .LVU366
 1309 0008 9FED6D9A 		vldr.32	s18, .L106
 1310              	.LBE729:
 1311              	.LBE728:
 113:Proliferation.cpp **** 	getSamples();
 1312              		.loc 11 113 1 view .LVU367
 1313 000c 87B0     		sub	sp, sp, #28
 1314              		.cfi_def_cfa_offset 80
 113:Proliferation.cpp **** 	getSamples();
 1315              		.loc 11 113 1 view .LVU368
 1316 000e 9346     		mov	fp, r2
 1317 0010 0646     		mov	r6, r0
 1318 0012 0F46     		mov	r7, r1
 1319              		.loc 11 114 12 view .LVU369
 1320 0014 FFF7FEFF 		bl	_Z10getSamplesv
 1321              	.LVL96:
 115:Proliferation.cpp **** 
 116:Proliferation.cpp ****     // get and set reverb values  
 117:Proliferation.cpp ****     float time_knob = hw.GetAdcValue(CV_1);
 1322              		.loc 11 117 5 is_stmt 1 view .LVU370
 1323              		.loc 11 117 37 is_stmt 0 view .LVU371
 1324 0018 0021     		movs	r1, #0
 1325 001a 6A48     		ldr	r0, .L106+4
 1326 001c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1327              	.LVL97:
 118:Proliferation.cpp ****     float time      = fmap(time_knob, 0.3f, 0.99f);
 1328              		.loc 11 118 5 is_stmt 1 view .LVU372
 1329              	.LBB743:
 1330              	.LBI728:
 161:../../DaisySP//Source/Utility/dsp.h **** {
 1331              		.loc 13 161 1 view .LVU373
 1332              	.LBE743:
 163:../../DaisySP//Source/Utility/dsp.h ****     {
 1333              		.loc 13 163 5 view .LVU374
 1334              	.LBB744:
 1335              	.LBB740:
 172:../../DaisySP//Source/Utility/dsp.h ****         default: return fclamp(min + in * (max - min), min, max);
 1336              		.loc 13 172 9 view .LVU375
 1337              		.loc 13 173 9 view .LVU376
 1338              		.loc 13 173 18 view .LVU377
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 49


 1339              		.loc 13 173 31 is_stmt 0 view .LVU378
 1340 0020 F0EE497A 		vmov.f32	s15, s18
 1341 0024 DFED686A 		vldr.32	s13, .L106+8
 1342              	.LBE740:
 1343              	.LBE744:
 119:Proliferation.cpp **** 
 120:Proliferation.cpp ****     float damp_knob = hw.GetAdcValue(CV_2);
 1344              		.loc 11 120 37 view .LVU379
 1345 0028 0121     		movs	r1, #1
 1346 002a 6648     		ldr	r0, .L106+4
 1347              	.LBB745:
 1348              	.LBB741:
 1349              		.loc 13 173 31 view .LVU380
 1350 002c E0EE267A 		vfma.f32	s15, s0, s13
 1351              	.LVL98:
 1352              	.LBB730:
 1353              	.LBI730:
  56:../../DaisySP//Source/Utility/dsp.h **** {
 1354              		.loc 13 56 14 is_stmt 1 view .LVU381
 1355              	.LBE730:
 1356              	.LBE741:
 1357              	.LBE745:
  58:../../DaisySP//Source/Utility/dsp.h **** }
 1358              		.loc 13 58 5 view .LVU382
 1359              	.LBB746:
 1360              	.LBB742:
 1361              	.LBB739:
 1362              	.LBB731:
 1363              	.LBI731:
  32:../../DaisySP//Source/Utility/dsp.h **** {
 1364              		.loc 13 32 14 view .LVU383
 1365              	.LBB732:
  34:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 1366              		.loc 13 34 5 view .LVU384
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 1367              		.loc 13 36 5 view .LVU385
 1368              	.LBE732:
 1369              	.LBE731:
 1370              	.LBB734:
 1371              	.LBB735:
  47:../../DaisySP//Source/Utility/dsp.h **** #else
 1372              		.loc 13 47 5 is_stmt 0 view .LVU386
 1373 0030 9FED667A 		vldr.32	s14, .L106+12
 1374              	.LBE735:
 1375              	.LBE734:
 1376              	.LBB737:
 1377              	.LBB733:
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 1378              		.loc 13 36 5 view .LVU387
 1379              		.syntax unified
 1380              	@ 36 "../../DaisySP//Source/Utility/dsp.h" 1
 1381 0034 C7FE897A 		vmaxnm.f32 s15, s15, s18
 1382              	@ 0 "" 2
 1383              	.LVL99:
  40:../../DaisySP//Source/Utility/dsp.h **** }
 1384              		.loc 13 40 5 is_stmt 1 view .LVU388
  40:../../DaisySP//Source/Utility/dsp.h **** }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 50


 1385              		.loc 13 40 5 is_stmt 0 view .LVU389
 1386              		.thumb
 1387              		.syntax unified
 1388              	.LBE733:
 1389              	.LBE737:
 1390              	.LBB738:
 1391              	.LBI734:
  43:../../DaisySP//Source/Utility/dsp.h **** {
 1392              		.loc 13 43 14 is_stmt 1 view .LVU390
 1393              	.LBB736:
  45:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 1394              		.loc 13 45 5 view .LVU391
  47:../../DaisySP//Source/Utility/dsp.h **** #else
 1395              		.loc 13 47 5 view .LVU392
 1396              		.syntax unified
 1397              	@ 47 "../../DaisySP//Source/Utility/dsp.h" 1
 1398 0038 87FEC79A 		vminnm.f32 s18, s15, s14
 1399              	@ 0 "" 2
 1400              	.LVL100:
  51:../../DaisySP//Source/Utility/dsp.h **** }
 1401              		.loc 13 51 5 view .LVU393
  51:../../DaisySP//Source/Utility/dsp.h **** }
 1402              		.loc 13 51 5 is_stmt 0 view .LVU394
 1403              		.thumb
 1404              		.syntax unified
 1405              	.LBE736:
 1406              	.LBE738:
 1407              	.LBE739:
 1408              	.LBE742:
 1409              	.LBE746:
 1410              		.loc 11 120 5 is_stmt 1 view .LVU395
 1411              		.loc 11 120 37 is_stmt 0 view .LVU396
 1412 003c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1413              	.LVL101:
 1414              		.loc 11 120 37 view .LVU397
 1415 0040 F0EE400A 		vmov.f32	s1, s0
 1416              	.LVL102:
 121:Proliferation.cpp ****     float damp      = fmap(damp_knob, 1000.f, 19000.f, Mapping::LOG);
 1417              		.loc 11 121 5 is_stmt 1 view .LVU398
 1418              	.LBB747:
 1419              	.LBI747:
 161:../../DaisySP//Source/Utility/dsp.h **** {
 1420              		.loc 13 161 1 view .LVU399
 1421              	.LBE747:
 163:../../DaisySP//Source/Utility/dsp.h ****     {
 1422              		.loc 13 163 5 view .LVU400
 1423              	.LBB767:
 1424              	.LBB748:
 1425              	.LBI748:
 161:../../DaisySP//Source/Utility/dsp.h **** {
 1426              		.loc 13 161 1 view .LVU401
 161:../../DaisySP//Source/Utility/dsp.h **** {
 1427              		.loc 13 161 1 is_stmt 0 view .LVU402
 1428              	.LBE748:
 1429              	.LBE767:
 167:../../DaisySP//Source/Utility/dsp.h ****         {
 1430              		.loc 13 167 9 is_stmt 1 view .LVU403
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 51


 168:../../DaisySP//Source/Utility/dsp.h ****             const float a = 1.f / log10f(max / min);
 1431              		.loc 13 168 9 view .LVU404
 1432              	.LBB768:
 1433              	.LBB764:
 1434              	.LBB749:
 169:../../DaisySP//Source/Utility/dsp.h ****             return fclamp(min * powf(10, in / a), min, max);
 1435              		.loc 13 169 13 view .LVU405
 170:../../DaisySP//Source/Utility/dsp.h ****         }
 1436              		.loc 13 170 13 view .LVU406
 170:../../DaisySP//Source/Utility/dsp.h ****         }
 1437              		.loc 13 170 37 is_stmt 0 view .LVU407
 1438 0044 DFED627A 		vldr.32	s15, .L106+16
 1439 0048 B2EE040A 		vmov.f32	s0, #1.0e+1
 1440              	.LVL103:
 170:../../DaisySP//Source/Utility/dsp.h ****         }
 1441              		.loc 13 170 37 view .LVU408
 1442 004c C0EEA70A 		vdiv.f32	s1, s1, s15
 1443              	.LVL104:
 170:../../DaisySP//Source/Utility/dsp.h ****         }
 1444              		.loc 13 170 37 view .LVU409
 1445 0050 FFF7FEFF 		bl	powf
 1446              	.LVL105:
 1447              	.LBB750:
 1448              	.LBI750:
  56:../../DaisySP//Source/Utility/dsp.h **** {
 1449              		.loc 13 56 14 is_stmt 1 view .LVU410
 1450              	.LBE750:
 1451              	.LBE749:
 1452              	.LBE764:
 1453              	.LBE768:
  58:../../DaisySP//Source/Utility/dsp.h **** }
 1454              		.loc 13 58 5 view .LVU411
 1455              	.LBB769:
 1456              	.LBB765:
 1457              	.LBB762:
 1458              	.LBB759:
 1459              	.LBB751:
 1460              	.LBI751:
  32:../../DaisySP//Source/Utility/dsp.h **** {
 1461              		.loc 13 32 14 view .LVU412
 1462              	.LBB752:
  34:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 1463              		.loc 13 34 5 view .LVU413
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 1464              		.loc 13 36 5 view .LVU414
 1465              	.LBE752:
 1466              	.LBE751:
 1467              	.LBE759:
 170:../../DaisySP//Source/Utility/dsp.h ****         }
 1468              		.loc 13 170 26 is_stmt 0 view .LVU415
 1469 0054 DFED5F7A 		vldr.32	s15, .L106+20
 1470              	.LBE762:
 1471              	.LBE765:
 1472              	.LBE769:
 122:Proliferation.cpp **** 
 123:Proliferation.cpp ****     float send_level = hw.GetAdcValue(CV_3);
 1473              		.loc 11 123 38 view .LVU416
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 52


 1474 0058 0221     		movs	r1, #2
 1475 005a 5A48     		ldr	r0, .L106+4
 1476              	.LBB770:
 1477              	.LBB766:
 1478              	.LBB763:
 1479              	.LBB760:
 1480              	.LBB754:
 1481              	.LBB755:
  47:../../DaisySP//Source/Utility/dsp.h **** #else
 1482              		.loc 13 47 5 view .LVU417
 1483 005c 9FED5E7A 		vldr.32	s14, .L106+24
 1484              	.LBE755:
 1485              	.LBE754:
 1486              	.LBE760:
 170:../../DaisySP//Source/Utility/dsp.h ****         }
 1487              		.loc 13 170 26 view .LVU418
 1488 0060 20EE278A 		vmul.f32	s16, s0, s15
 1489              	.LVL106:
 1490              	.LBB761:
 1491              	.LBB757:
 1492              	.LBB753:
  36:../../DaisySP//Source/Utility/dsp.h **** #else
 1493              		.loc 13 36 5 view .LVU419
 1494              		.syntax unified
 1495              	@ 36 "../../DaisySP//Source/Utility/dsp.h" 1
 1496 0064 88FE278A 		vmaxnm.f32 s16, s16, s15
 1497              	@ 0 "" 2
 1498              	.LVL107:
  40:../../DaisySP//Source/Utility/dsp.h **** }
 1499              		.loc 13 40 5 is_stmt 1 view .LVU420
  40:../../DaisySP//Source/Utility/dsp.h **** }
 1500              		.loc 13 40 5 is_stmt 0 view .LVU421
 1501              		.thumb
 1502              		.syntax unified
 1503              	.LBE753:
 1504              	.LBE757:
 1505              	.LBB758:
 1506              	.LBI754:
  43:../../DaisySP//Source/Utility/dsp.h **** {
 1507              		.loc 13 43 14 is_stmt 1 view .LVU422
 1508              	.LBB756:
  45:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 1509              		.loc 13 45 5 view .LVU423
  47:../../DaisySP//Source/Utility/dsp.h **** #else
 1510              		.loc 13 47 5 view .LVU424
 1511              		.syntax unified
 1512              	@ 47 "../../DaisySP//Source/Utility/dsp.h" 1
 1513 0068 88FE478A 		vminnm.f32 s16, s16, s14
 1514              	@ 0 "" 2
 1515              	.LVL108:
  51:../../DaisySP//Source/Utility/dsp.h **** }
 1516              		.loc 13 51 5 view .LVU425
  51:../../DaisySP//Source/Utility/dsp.h **** }
 1517              		.loc 13 51 5 is_stmt 0 view .LVU426
 1518              		.thumb
 1519              		.syntax unified
 1520              	.LBE756:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 53


 1521              	.LBE758:
 1522              	.LBE761:
 1523              	.LBE763:
 1524              	.LBE766:
 1525              	.LBE770:
 1526              		.loc 11 123 5 is_stmt 1 view .LVU427
 1527              		.loc 11 123 38 is_stmt 0 view .LVU428
 1528 006c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1529              	.LVL109:
 1530              	.LBB771:
 1531              	.LBB772:
  42:../../DaisySP//Source/Effects/reverbsc.h ****     /** Initializes the reverb module, and sets the sample_rate at which the Process function will 
  43:../../DaisySP//Source/Effects/reverbsc.h ****         Returns 0 if all good, or 1 if it runs out of delay times exceed maximum allowed.
  44:../../DaisySP//Source/Effects/reverbsc.h ****     */
  45:../../DaisySP//Source/Effects/reverbsc.h ****     int Init(float sample_rate);
  46:../../DaisySP//Source/Effects/reverbsc.h **** 
  47:../../DaisySP//Source/Effects/reverbsc.h ****     /** Process the input through the reverb, and updates values of out1, and out2 with the new pro
  48:../../DaisySP//Source/Effects/reverbsc.h ****     */
  49:../../DaisySP//Source/Effects/reverbsc.h ****     int Process(const float &in1, const float &in2, float *out1, float *out2);
  50:../../DaisySP//Source/Effects/reverbsc.h **** 
  51:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the reverb time. reverb tail becomes infinite when set to 1.0
  52:../../DaisySP//Source/Effects/reverbsc.h ****         \param fb - sets reverb time. range: 0.0 to 1.0
  53:../../DaisySP//Source/Effects/reverbsc.h ****     */
  54:../../DaisySP//Source/Effects/reverbsc.h ****     inline void SetFeedback(const float &fb) { feedback_ = fb; }
 1532              		.loc 9 54 58 view .LVU429
 1533 0070 5A4B     		ldr	r3, .L106+28
 1534              	.LVL110:
 1535              		.loc 9 54 58 view .LVU430
 1536              	.LBE772:
 1537              	.LBE771:
 124:Proliferation.cpp **** 
 125:Proliferation.cpp ****     rev.SetFeedback(time);
 1538              		.loc 11 125 5 is_stmt 1 view .LVU431
 1539              	.LBB774:
 1540              	.LBI771:
 1541              		.loc 9 54 17 view .LVU432
 1542              	.LBB773:
 1543              		.loc 9 54 48 view .LVU433
 1544              		.loc 9 54 58 is_stmt 0 view .LVU434
 1545 0072 83ED009A 		vstr.32	s18, [r3]
 1546              	.LVL111:
 1547              		.loc 9 54 58 view .LVU435
 1548              	.LBE773:
 1549              	.LBE774:
 126:Proliferation.cpp ****     rev.SetLpFreq(damp);
 1550              		.loc 11 126 5 is_stmt 1 view .LVU436
 1551              	.LBB775:
 1552              	.LBI775:
  55:../../DaisySP//Source/Effects/reverbsc.h ****     /** controls the internal dampening filter's cutoff frequency.
  56:../../DaisySP//Source/Effects/reverbsc.h ****         \param freq - low pass frequency. range: 0.0 to sample_rate / 2
  57:../../DaisySP//Source/Effects/reverbsc.h ****     */
  58:../../DaisySP//Source/Effects/reverbsc.h ****     inline void SetLpFreq(const float &freq) { lpfreq_ = freq; }
 1553              		.loc 9 58 17 view .LVU437
 1554              	.LBB776:
 1555              		.loc 9 58 48 view .LVU438
 1556              		.loc 9 58 56 is_stmt 0 view .LVU439
 1557 0076 83ED018A 		vstr.32	s16, [r3, #4]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 54


 1558              	.LVL112:
 1559              		.loc 9 58 56 view .LVU440
 1560              	.LBE776:
 1561              	.LBE775:
 127:Proliferation.cpp **** 
 128:Proliferation.cpp **** 	for (size_t i = 0; i < size; i++)
 1562              		.loc 11 128 2 is_stmt 1 view .LVU441
 1563              	.LBB777:
 1564              		.loc 11 128 23 view .LVU442
 1565 007a BBF1000F 		cmp	fp, #0
 1566 007e 00F09A80 		beq	.L93
 1567 0082 F0EE408A 		vmov.f32	s17, s0
 1568              		.loc 11 128 14 is_stmt 0 view .LVU443
 1569 0086 4FF0000A 		mov	r10, #0
 1570 008a DFF86091 		ldr	r9, .L106+44
 1571 008e 0DF11408 		add	r8, sp, #20
 1572              	.LBB778:
 129:Proliferation.cpp **** 	{
 130:Proliferation.cpp ****         // Zero samples prior to summing
 131:Proliferation.cpp ****         OUT_L[i] = 0.f;
 132:Proliferation.cpp ****         OUT_R[i] = 0.f;
 1573              		.loc 11 132 9 view .LVU444
 1574 0092 D7E900EC 		ldrd	lr, ip, [r7]
 1575              	.LBB779:
 1576              	.LBB780:
 133:Proliferation.cpp ****         for(auto &buffer : buffers)
 134:Proliferation.cpp ****         {
 135:Proliferation.cpp ****             // Record in mono
 136:Proliferation.cpp ****             float sample = buffer.Process((0.5 * IN_L[i] + 0.5 * IN_R[i]));
 1577              		.loc 11 136 66 view .LVU445
 1578 0096 D6E90001 		ldrd	r0, r1, [r6]
 1579              	.LVL113:
 1580              	.L102:
 1581              		.loc 11 136 66 view .LVU446
 1582              	.LBE780:
 1583              	.LBE779:
 131:Proliferation.cpp ****         OUT_R[i] = 0.f;
 1584              		.loc 11 131 9 is_stmt 1 view .LVU447
 131:Proliferation.cpp ****         OUT_R[i] = 0.f;
 1585              		.loc 11 131 18 is_stmt 0 view .LVU448
 1586 009a 0023     		movs	r3, #0
 1587 009c 0EEB8A0E 		add	lr, lr, r10, lsl #2
 132:Proliferation.cpp ****         for(auto &buffer : buffers)
 1588              		.loc 11 132 18 view .LVU449
 1589 00a0 0CEB8A0C 		add	ip, ip, r10, lsl #2
 1590 00a4 4E4C     		ldr	r4, .L106+32
 131:Proliferation.cpp ****         OUT_R[i] = 0.f;
 1591              		.loc 11 131 18 view .LVU450
 1592 00a6 CEF80030 		str	r3, [lr]	@ float
 132:Proliferation.cpp ****         for(auto &buffer : buffers)
 1593              		.loc 11 132 9 is_stmt 1 view .LVU451
 1594 00aa 4FEA8A05 		lsl	r5, r10, #2
 132:Proliferation.cpp ****         for(auto &buffer : buffers)
 1595              		.loc 11 132 18 is_stmt 0 view .LVU452
 1596 00ae CCF80030 		str	r3, [ip]	@ float
 133:Proliferation.cpp ****         for(auto &buffer : buffers)
 1597              		.loc 11 133 9 is_stmt 1 view .LVU453
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 55


 1598              	.LVL114:
 1599              	.LBB832:
 133:Proliferation.cpp ****         for(auto &buffer : buffers)
 1600              		.loc 11 133 28 view .LVU454
 1601 00b2 01E0     		b	.L100
 1602              	.LVL115:
 1603              	.L105:
 1604              	.LBB828:
 1605              		.loc 11 136 66 is_stmt 0 view .LVU455
 1606 00b4 D6E90001 		ldrd	r0, r1, [r6]
 1607              	.LVL116:
 1608              	.L100:
 1609              		.loc 11 136 13 is_stmt 1 discriminator 2 view .LVU456
 1610              	.LBB781:
 1611              	.LBI781:
  51:samplebuffer.h ****     {
 1612              		.loc 12 51 11 discriminator 2 view .LVU457
 1613              	.LBB782:
 1614              	.LBI782:
  57:samplebuffer.h ****     {
 1615              		.loc 12 57 10 discriminator 2 view .LVU458
 1616              	.LBB783:
 1617              	.LBB784:
 1618              	.LBI784:
  57:samplebuffer.h ****     {
 1619              		.loc 12 57 10 discriminator 2 view .LVU459
  57:samplebuffer.h ****     {
 1620              		.loc 12 57 10 is_stmt 0 discriminator 2 view .LVU460
 1621              	.LBE784:
 1622              	.LBE783:
 1623              	.LBE782:
 1624              	.LBB804:
 1625              	.LBI804:
  71:samplebuffer.h ****     {
 1626              		.loc 12 71 11 is_stmt 1 discriminator 2 view .LVU461
 1627              	.LBB805:
 1628              	.LBI805:
  71:samplebuffer.h ****     {
 1629              		.loc 12 71 11 discriminator 2 view .LVU462
 1630              	.LBE805:
 1631              	.LBE804:
 1632              	.LBE781:
 1633              		.loc 11 136 72 is_stmt 0 discriminator 2 view .LVU463
 1634 00b8 01EB050C 		add	ip, r1, r5
 1635              	.LBB821:
 1636              	.LBB812:
 1637              	.LBB797:
  59:samplebuffer.h ****         {
 1638              		.loc 12 59 9 discriminator 2 view .LVU464
 1639 00bc 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 1640              	.LBB791:
 1641              	.LBB785:
  63:samplebuffer.h ****             {
 1642              		.loc 12 63 13 discriminator 2 view .LVU465
 1643 00be 4949     		ldr	r1, .L106+36
 1644              	.LBE785:
 1645              	.LBE791:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 56


 1646              	.LBE797:
 1647              	.LBE812:
 1648              	.LBE821:
 1649              		.loc 11 136 48 discriminator 2 view .LVU466
 1650 00c0 B6EE006B 		vmov.f64	d6, #5.0e-1
 1651              		.loc 11 136 56 discriminator 2 view .LVU467
 1652 00c4 2844     		add	r0, r0, r5
 1653              	.LBB822:
 1654              	.LBB813:
 1655              	.LBB808:
  86:samplebuffer.h ****         }
 1656              		.loc 12 86 20 discriminator 2 view .LVU468
 1657 00c6 9FED488A 		vldr.32	s16, .L106+40
 1658              	.LBE808:
 1659              	.LBB809:
 1660              	.LBB806:
  77:samplebuffer.h ****             {
 1661              		.loc 12 77 13 discriminator 2 view .LVU469
 1662 00ca 0A46     		mov	r2, r1
 1663              	.LBE806:
 1664              	.LBE809:
 1665              	.LBE813:
 1666              	.LBB814:
 1667              	.LBB798:
  59:samplebuffer.h ****         {
 1668              		.loc 12 59 9 discriminator 2 view .LVU470
 1669 00cc CBB1     		cbz	r3, .L96
 1670              	.LBE798:
 1671              	.LBE814:
 1672              	.LBE822:
 1673              		.loc 11 136 56 view .LVU471
 1674 00ce 90ED007A 		vldr.32	s14, [r0]
 1675              	.LBB823:
 1676              	.LBB815:
 1677              	.LBB799:
 1678              	.LBB792:
 1679              	.LBB786:
  65:samplebuffer.h ****                 write_ptr_ = 0;
 1680              		.loc 12 65 28 view .LVU472
 1681 00d2 0020     		movs	r0, #0
 1682              	.LBE786:
 1683              	.LBE792:
 1684              	.LBE799:
 1685              	.LBE815:
 1686              	.LBE823:
 1687              		.loc 11 136 72 view .LVU473
 1688 00d4 9CED005A 		vldr.32	s10, [ip]
 1689              		.loc 11 136 56 view .LVU474
 1690 00d8 B7EEC77A 		vcvt.f64.f32	d7, s14
 1691              	.LBB824:
 1692              	.LBB816:
 1693              	.LBB800:
 1694              	.LBB793:
 1695              	.LBB787:
  61:samplebuffer.h ****             write_ptr_++;
 1696              		.loc 12 61 21 view .LVU475
 1697 00dc 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 57


 1698              	.LBE787:
 1699              	.LBE793:
 1700              	.LBE800:
 1701              	.LBE816:
 1702              	.LBE824:
 1703              		.loc 11 136 72 view .LVU476
 1704 00de B7EEC55A 		vcvt.f64.f32	d5, s10
 1705              	.LBB825:
 1706              	.LBB817:
 1707              	.LBB801:
 1708              	.LBB794:
 1709              	.LBB788:
  61:samplebuffer.h ****             write_ptr_++;
 1710              		.loc 12 61 33 view .LVU477
 1711 00e2 04EB830C 		add	ip, r4, r3, lsl #2
  62:samplebuffer.h ****             if(write_ptr_ >= kBufferSize)
 1712              		.loc 12 62 13 view .LVU478
 1713 00e6 0133     		adds	r3, r3, #1
 1714              	.LBE788:
 1715              	.LBE794:
 1716              	.LBE801:
 1717              	.LBE817:
 1718              	.LBE825:
 1719              		.loc 11 136 48 view .LVU479
 1720 00e8 27EE067B 		vmul.f64	d7, d7, d6
 1721              	.LBB826:
 1722              	.LBB818:
 1723              	.LBB802:
 1724              	.LBB795:
 1725              	.LBB789:
  63:samplebuffer.h ****             {
 1726              		.loc 12 63 13 view .LVU480
 1727 00ec 8B42     		cmp	r3, r1
 1728              	.LBE789:
 1729              	.LBE795:
 1730              	.LBE802:
 1731              	.LBE818:
 1732              	.LBE826:
 1733              		.loc 11 136 58 view .LVU481
 1734 00ee A5EE067B 		vfma.f64	d7, d5, d6
 1735              		.loc 11 136 42 view .LVU482
 1736 00f2 B7EEC77B 		vcvt.f32.f64	s14, d7
 1737 00f6 8CED037A 		vstr.32	s14, [ip, #12]
 1738              	.LBB827:
 1739              	.LBB819:
 1740              	.LBB803:
 1741              	.LBB796:
 1742              	.LBB790:
  62:samplebuffer.h ****             if(write_ptr_ >= kBufferSize)
 1743              		.loc 12 62 13 view .LVU483
 1744 00fa 2360     		str	r3, [r4]
  63:samplebuffer.h ****             {
 1745              		.loc 12 63 13 view .LVU484
 1746 00fc 01D9     		bls	.L96
  65:samplebuffer.h ****                 write_ptr_ = 0;
 1747              		.loc 12 65 28 view .LVU485
 1748 00fe 6072     		strb	r0, [r4, #9]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 58


  66:samplebuffer.h ****             }
 1749              		.loc 12 66 28 view .LVU486
 1750 0100 2060     		str	r0, [r4]
 1751              	.L96:
 1752              	.LBE790:
 1753              	.LBE796:
 1754              	.LBE803:
 1755              	.LBE819:
 1756              	.LBB820:
 1757              	.LBB810:
  73:samplebuffer.h ****         {
 1758              		.loc 12 73 9 view .LVU487
 1759 0102 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1760 0104 5BB1     		cbz	r3, .L98
 1761              	.LBE810:
 1762              	.LBB811:
 1763              	.LBB807:
  75:samplebuffer.h ****             read_ptr_++;
 1764              		.loc 12 75 33 view .LVU488
 1765 0106 6368     		ldr	r3, [r4, #4]
  79:samplebuffer.h ****                 read_ptr_ = 0;
 1766              		.loc 12 79 27 view .LVU489
 1767 0108 0021     		movs	r1, #0
  75:samplebuffer.h ****             read_ptr_++;
 1768              		.loc 12 75 19 view .LVU490
 1769 010a 04EB8300 		add	r0, r4, r3, lsl #2
  76:samplebuffer.h ****             if(read_ptr_ >= kBufferSize)
 1770              		.loc 12 76 13 view .LVU491
 1771 010e 0133     		adds	r3, r3, #1
  77:samplebuffer.h ****             {
 1772              		.loc 12 77 13 view .LVU492
 1773 0110 9342     		cmp	r3, r2
  75:samplebuffer.h ****             read_ptr_++;
 1774              		.loc 12 75 19 view .LVU493
 1775 0112 90ED038A 		vldr.32	s16, [r0, #12]
 1776              	.LVL117:
  76:samplebuffer.h ****             if(read_ptr_ >= kBufferSize)
 1777              		.loc 12 76 13 view .LVU494
 1778 0116 6360     		str	r3, [r4, #4]
  77:samplebuffer.h ****             {
 1779              		.loc 12 77 13 view .LVU495
 1780 0118 01D9     		bls	.L98
  79:samplebuffer.h ****                 read_ptr_ = 0;
 1781              		.loc 12 79 27 view .LVU496
 1782 011a 2172     		strb	r1, [r4, #8]
  80:samplebuffer.h ****             }
 1783              		.loc 12 80 27 view .LVU497
 1784 011c 6160     		str	r1, [r4, #4]
 1785              	.LVL118:
 1786              	.L98:
  80:samplebuffer.h ****             }
 1787              		.loc 12 80 27 view .LVU498
 1788              	.LBE807:
 1789              	.LBE811:
 1790              	.LBE820:
 1791              	.LBE827:
 137:Proliferation.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 59


 138:Proliferation.cpp ****             float dryl  = sample;
 1792              		.loc 11 138 13 is_stmt 1 view .LVU499
 139:Proliferation.cpp ****             float dryr  = sample;
 1793              		.loc 11 139 13 view .LVU500
 140:Proliferation.cpp ****             float sendl = sample * send_level;
 1794              		.loc 11 140 13 view .LVU501
 1795              		.loc 11 140 34 is_stmt 0 view .LVU502
 1796 011e 68EE887A 		vmul.f32	s15, s17, s16
 141:Proliferation.cpp ****             float sendr = sample * send_level;
 142:Proliferation.cpp ****             float wetl, wetr;
 143:Proliferation.cpp ****             rev.Process(sendl, sendr, &wetl, &wetr);
 1797              		.loc 11 143 24 view .LVU503
 1798 0122 04AB     		add	r3, sp, #16
 1799 0124 03AA     		add	r2, sp, #12
 1800 0126 02A9     		add	r1, sp, #8
 1801 0128 2C48     		ldr	r0, .L106+28
 1802              	.LBE828:
 133:Proliferation.cpp ****         {
 1803              		.loc 11 133 28 view .LVU504
 1804 012a 04F56A24 		add	r4, r4, #958464
 1805              	.LVL119:
 1806              	.LBB829:
 1807              		.loc 11 143 24 view .LVU505
 1808 012e CDF80080 		str	r8, [sp]
 140:Proliferation.cpp ****             float sendl = sample * send_level;
 1809              		.loc 11 140 19 view .LVU506
 1810 0132 CDED027A 		vstr.32	s15, [sp, #8]
 141:Proliferation.cpp ****             float sendr = sample * send_level;
 1811              		.loc 11 141 13 is_stmt 1 view .LVU507
 1812              	.LBE829:
 133:Proliferation.cpp ****         {
 1813              		.loc 11 133 28 is_stmt 0 view .LVU508
 1814 0136 04F20C64 		addw	r4, r4, #1548
 1815              	.LVL120:
 1816              	.LBB830:
 141:Proliferation.cpp ****             float sendr = sample * send_level;
 1817              		.loc 11 141 19 view .LVU509
 1818 013a CDED037A 		vstr.32	s15, [sp, #12]
 142:Proliferation.cpp ****             rev.Process(sendl, sendr, &wetl, &wetr);
 1819              		.loc 11 142 13 is_stmt 1 view .LVU510
 1820              		.loc 11 143 13 view .LVU511
 1821              		.loc 11 143 24 is_stmt 0 view .LVU512
 1822 013e FFF7FEFF 		bl	_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
 1823              	.LVL121:
 144:Proliferation.cpp ****             OUT_L[i] = dryl + wetl;
 1824              		.loc 11 144 13 is_stmt 1 view .LVU513
 1825              		.loc 11 144 29 is_stmt 0 view .LVU514
 1826 0142 DDED047A 		vldr.32	s15, [sp, #16]
 1827              	.LBE830:
 133:Proliferation.cpp ****         {
 1828              		.loc 11 133 28 view .LVU515
 1829 0146 A145     		cmp	r9, r4
 1830              	.LBB831:
 145:Proliferation.cpp ****             OUT_R[i] = dryr + wetr;
 1831              		.loc 11 145 13 view .LVU516
 1832 0148 D7E900EC 		ldrd	lr, ip, [r7]
 144:Proliferation.cpp ****             OUT_L[i] = dryl + wetl;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 60


 1833              		.loc 11 144 29 view .LVU517
 1834 014c 77EE887A 		vadd.f32	s15, s15, s16
 144:Proliferation.cpp ****             OUT_L[i] = dryl + wetl;
 1835              		.loc 11 144 20 view .LVU518
 1836 0150 0EEB0502 		add	r2, lr, r5
 1837              		.loc 11 145 20 view .LVU519
 1838 0154 0CEB0503 		add	r3, ip, r5
 144:Proliferation.cpp ****             OUT_L[i] = dryl + wetl;
 1839              		.loc 11 144 22 view .LVU520
 1840 0158 C2ED007A 		vstr.32	s15, [r2]
 1841              		.loc 11 145 13 is_stmt 1 view .LVU521
 1842              		.loc 11 145 29 is_stmt 0 view .LVU522
 1843 015c DDED057A 		vldr.32	s15, [sp, #20]
 1844 0160 77EE887A 		vadd.f32	s15, s15, s16
 1845              		.loc 11 145 22 view .LVU523
 1846 0164 C3ED007A 		vstr.32	s15, [r3]
 146:Proliferation.cpp **** 
 147:Proliferation.cpp ****             // Sum all playback channels
 148:Proliferation.cpp ****             OUT_L[i] += sample;
 1847              		.loc 11 148 13 is_stmt 1 view .LVU524
 1848              		.loc 11 148 22 is_stmt 0 view .LVU525
 1849 0168 D2ED007A 		vldr.32	s15, [r2]
 1850 016c 77EE887A 		vadd.f32	s15, s15, s16
 1851 0170 C2ED007A 		vstr.32	s15, [r2]
 149:Proliferation.cpp ****             OUT_R[i] += sample;
 1852              		.loc 11 149 13 is_stmt 1 view .LVU526
 1853              		.loc 11 149 22 is_stmt 0 view .LVU527
 1854 0174 D3ED007A 		vldr.32	s15, [r3]
 1855 0178 37EE888A 		vadd.f32	s16, s15, s16
 1856              	.LVL122:
 1857              		.loc 11 149 22 view .LVU528
 1858 017c 83ED008A 		vstr.32	s16, [r3]
 1859              	.LBE831:
 133:Proliferation.cpp ****         {
 1860              		.loc 11 133 9 is_stmt 1 view .LVU529
 1861              	.LVL123:
 133:Proliferation.cpp ****         {
 1862              		.loc 11 133 28 view .LVU530
 1863 0180 98D1     		bne	.L105
 1864              	.LBE832:
 150:Proliferation.cpp ****         }
 151:Proliferation.cpp ****         // Feed stereo input through to output
 152:Proliferation.cpp ****         OUT_L[i] += IN_L[i];
 1865              		.loc 11 152 9 discriminator 2 view .LVU531
 1866              		.loc 11 152 18 is_stmt 0 discriminator 2 view .LVU532
 1867 0182 D2ED007A 		vldr.32	s15, [r2]
 1868              	.LBE778:
 128:Proliferation.cpp **** 	{
 1869              		.loc 11 128 2 discriminator 2 view .LVU533
 1870 0186 0AF1010A 		add	r10, r10, #1
 1871              	.LVL124:
 1872              	.LBB833:
 153:Proliferation.cpp ****         OUT_R[i] += IN_R[i];
 1873              		.loc 11 153 21 discriminator 2 view .LVU534
 1874 018a D6E90001 		ldrd	r0, r1, [r6]
 1875              	.LBE833:
 128:Proliferation.cpp **** 	{
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 61


 1876              		.loc 11 128 23 discriminator 2 view .LVU535
 1877 018e D345     		cmp	fp, r10
 1878              	.LBB834:
 152:Proliferation.cpp ****         OUT_R[i] += IN_R[i];
 1879              		.loc 11 152 27 discriminator 2 view .LVU536
 1880 0190 00EB0504 		add	r4, r0, r5
 1881              	.LVL125:
 1882              		.loc 11 153 27 discriminator 2 view .LVU537
 1883 0194 0D44     		add	r5, r5, r1
 152:Proliferation.cpp ****         OUT_R[i] += IN_R[i];
 1884              		.loc 11 152 18 discriminator 2 view .LVU538
 1885 0196 94ED007A 		vldr.32	s14, [r4]
 1886 019a 77EE877A 		vadd.f32	s15, s15, s14
 1887 019e C2ED007A 		vstr.32	s15, [r2]
 1888              		.loc 11 153 9 is_stmt 1 discriminator 2 view .LVU539
 1889              		.loc 11 153 18 is_stmt 0 discriminator 2 view .LVU540
 1890 01a2 95ED007A 		vldr.32	s14, [r5]
 1891 01a6 D3ED007A 		vldr.32	s15, [r3]
 1892 01aa 77EE877A 		vadd.f32	s15, s15, s14
 1893 01ae C3ED007A 		vstr.32	s15, [r3]
 1894              	.LBE834:
 128:Proliferation.cpp **** 	{
 1895              		.loc 11 128 2 is_stmt 1 discriminator 2 view .LVU541
 1896              	.LVL126:
 128:Proliferation.cpp **** 	{
 1897              		.loc 11 128 23 discriminator 2 view .LVU542
 1898 01b2 7FF472AF 		bne	.L102
 1899              	.LVL127:
 1900              	.L93:
 128:Proliferation.cpp **** 	{
 1901              		.loc 11 128 23 is_stmt 0 discriminator 2 view .LVU543
 1902              	.LBE777:
 154:Proliferation.cpp **** 	}
 155:Proliferation.cpp **** }
 1903              		.loc 11 155 1 view .LVU544
 1904 01b6 07B0     		add	sp, sp, #28
 1905              		.cfi_def_cfa_offset 52
 1906              		@ sp needed
 1907 01b8 BDEC048B 		vldm	sp!, {d8-d9}
 1908              		.cfi_restore 82
 1909              		.cfi_restore 83
 1910              		.cfi_restore 80
 1911              		.cfi_restore 81
 1912              		.cfi_def_cfa_offset 36
 1913              	.LVL128:
 1914              		.loc 11 155 1 view .LVU545
 1915 01bc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1916              	.LVL129:
 1917              	.L107:
 1918              		.loc 11 155 1 view .LVU546
 1919              		.align	2
 1920              	.L106:
 1921 01c0 9A99993E 		.word	1050253722
 1922 01c4 00000000 		.word	.LANCHOR0
 1923 01c8 D7A3303F 		.word	1060152279
 1924 01cc A4707D3F 		.word	1065185444
 1925 01d0 E731483F 		.word	1061695975
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 62


 1926 01d4 00007A44 		.word	1148846080
 1927 01d8 00709446 		.word	1184133120
 1928 01dc 00000000 		.word	rev
 1929 01e0 00000000 		.word	buffers
 1930 01e4 7FA90300 		.word	239999
 1931 01e8 00000000 		.word	0
 1932 01ec 60307500 		.word	buffers+7680096
 1933              		.cfi_endproc
 1934              	.LFE4842:
 1936              		.section	.text._Z12InitSamplersv,"ax",%progbits
 1937              		.align	1
 1938              		.p2align 2,,3
 1939              		.global	_Z12InitSamplersv
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu fpv5-d16
 1945              	_Z12InitSamplersv:
 1946              	.LFB4843:
 156:Proliferation.cpp **** 
 157:Proliferation.cpp **** void InitSamplers(){
 1947              		.loc 11 157 20 is_stmt 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 158:Proliferation.cpp ****     for(auto &buffer : buffers)
 1951              		.loc 11 158 5 view .LVU548
 1952              	.LVL130:
 1953              	.LBB835:
 1954              		.loc 11 158 24 view .LVU549
 1955              	.LBE835:
 157:Proliferation.cpp ****     for(auto &buffer : buffers)
 1956              		.loc 11 157 20 is_stmt 0 view .LVU550
 1957 0000 10B5     		push	{r4, lr}
 1958              		.cfi_def_cfa_offset 8
 1959              		.cfi_offset 4, -8
 1960              		.cfi_offset 14, -4
 1961 0002 0B4B     		ldr	r3, .L112
 1962 0004 0B4C     		ldr	r4, .L112+4
 1963              	.LVL131:
 1964              	.L109:
 1965              	.LBB846:
 1966              	.LBB836:
 1967              	.LBB837:
 1968              	.LBB838:
 1969              	.LBB839:
  29:samplebuffer.h ****         {
 1970              		.loc 12 29 29 is_stmt 1 view .LVU551
  31:samplebuffer.h ****         }
 1971              		.loc 12 31 24 is_stmt 0 view .LVU552
 1972 0006 1846     		mov	r0, r3
 1973 0008 0B4A     		ldr	r2, .L112+8
 1974 000a 0021     		movs	r1, #0
 1975 000c FFF7FEFF 		bl	memset
 1976              	.LVL132:
  31:samplebuffer.h ****         }
 1977              		.loc 12 31 24 view .LVU553
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 63


 1978              	.LBE839:
 1979              	.LBE838:
 1980              	.LBE837:
 1981              	.LBE836:
 1982              		.loc 11 158 24 view .LVU554
 1983 0010 00F56A23 		add	r3, r0, #958464
 1984              	.LBB843:
 1985              	.LBB840:
  21:samplebuffer.h ****         write_ptr_ = 0;
 1986              		.loc 12 21 20 view .LVU555
 1987 0014 0022     		movs	r2, #0
 1988              	.LBE840:
 1989              	.LBE843:
 1990              		.loc 11 158 24 view .LVU556
 1991 0016 03F20C63 		addw	r3, r3, #1548
 1992              	.LBB844:
 1993              	.LBB841:
  21:samplebuffer.h ****         write_ptr_ = 0;
 1994              		.loc 12 21 20 view .LVU557
 1995 001a 00F8032C 		strb	r2, [r0, #-3]
 1996              	.LBE841:
 1997              	.LBE844:
 1998              		.loc 11 158 24 view .LVU558
 1999 001e 9C42     		cmp	r4, r3
 2000              	.LBB845:
 2001              	.LBB842:
  22:samplebuffer.h ****         playing_   = false;
 2002              		.loc 12 22 20 view .LVU559
 2003 0020 40F80C2C 		str	r2, [r0, #-12]
  23:samplebuffer.h ****         read_ptr_  = 0;
 2004              		.loc 12 23 20 view .LVU560
 2005 0024 00F8042C 		strb	r2, [r0, #-4]
  24:samplebuffer.h ****     }
 2006              		.loc 12 24 20 view .LVU561
 2007 0028 40F8082C 		str	r2, [r0, #-8]
 2008              	.LBE842:
 2009              	.LBE845:
 2010              		.loc 11 158 5 is_stmt 1 view .LVU562
 2011              	.LVL133:
 2012              		.loc 11 158 24 view .LVU563
 2013 002c EBD1     		bne	.L109
 2014              	.LBE846:
 159:Proliferation.cpp ****     {
 160:Proliferation.cpp ****         buffer.Init();
 161:Proliferation.cpp ****     }
 162:Proliferation.cpp **** }
 2015              		.loc 11 162 1 is_stmt 0 view .LVU564
 2016 002e 10BD     		pop	{r4, pc}
 2017              	.L113:
 2018              		.align	2
 2019              	.L112:
 2020 0030 0C000000 		.word	buffers+12
 2021 0034 6C307500 		.word	buffers+7680108
 2022 0038 00A60E00 		.word	960000
 2023              		.cfi_endproc
 2024              	.LFE4843:
 2026              		.section	.text.startup.main,"ax",%progbits
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 64


 2027              		.align	1
 2028              		.p2align 2,,3
 2029              		.global	main
 2030              		.syntax unified
 2031              		.thumb
 2032              		.thumb_func
 2033              		.fpu fpv5-d16
 2035              	main:
 2036              	.LFB4844:
 163:Proliferation.cpp **** 
 164:Proliferation.cpp **** 
 165:Proliferation.cpp **** int main(void)
 166:Proliferation.cpp **** {
 2037              		.loc 11 166 1 is_stmt 1 view -0
 2038              		.cfi_startproc
 2039              		@ Volatile: function does not return.
 2040              		@ args = 0, pretend = 0, frame = 0
 2041              		@ frame_needed = 0, uses_anonymous_args = 0
 167:Proliferation.cpp **** 	hw.Init();
 2042              		.loc 11 167 2 view .LVU566
 166:Proliferation.cpp **** 	hw.Init();
 2043              		.loc 11 166 1 is_stmt 0 view .LVU567
 2044 0000 08B5     		push	{r3, lr}
 2045              		.cfi_def_cfa_offset 8
 2046              		.cfi_offset 3, -8
 2047              		.cfi_offset 14, -4
 2048              		.loc 11 167 9 view .LVU568
 2049 0002 1648     		ldr	r0, .L117
 2050 0004 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
 2051              	.LVL134:
 168:Proliferation.cpp **** 
 169:Proliferation.cpp **** 	toggle.Init(hw.B8);
 2052              		.loc 11 169 2 is_stmt 1 view .LVU569
 2053              		.loc 11 169 13 is_stmt 0 view .LVU570
 2054 0008 154B     		ldr	r3, .L117+4
 2055 000a 9FED160A 		vldr.32	s0, .L117+8
 2056 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2057 0010 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 2058 0012 1548     		ldr	r0, .L117+12
 2059 0014 42EA0121 		orr	r1, r2, r1, lsl #8
 2060 0018 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2061              	.LVL135:
 170:Proliferation.cpp **** 	button.Init(hw.B7);
 2062              		.loc 11 170 2 is_stmt 1 view .LVU571
 2063              		.loc 11 170 13 is_stmt 0 view .LVU572
 2064 001c 134B     		ldr	r3, .L117+16
 2065 001e 9FED110A 		vldr.32	s0, .L117+8
 2066 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2067 0024 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 2068 0026 1248     		ldr	r0, .L117+20
 2069 0028 42EA0121 		orr	r1, r2, r1, lsl #8
 2070 002c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 2071              	.LVL136:
 171:Proliferation.cpp **** 	InitSamplers();
 2072              		.loc 11 171 2 is_stmt 1 view .LVU573
 2073              		.loc 11 171 14 is_stmt 0 view .LVU574
 2074 0030 FFF7FEFF 		bl	_Z12InitSamplersv
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 65


 2075              	.LVL137:
 172:Proliferation.cpp ****     rev.Init(hw.AudioSampleRate());
 2076              		.loc 11 172 5 is_stmt 1 view .LVU575
 2077              		.loc 11 172 13 is_stmt 0 view .LVU576
 2078 0034 0948     		ldr	r0, .L117
 2079 0036 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 2080              	.LVL138:
 2081 003a 0E48     		ldr	r0, .L117+24
 2082 003c FFF7FEFF 		bl	_ZN7daisysp8ReverbSc4InitEf
 2083              	.LVL139:
 173:Proliferation.cpp **** 
 174:Proliferation.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 2084              		.loc 11 174 2 is_stmt 1 view .LVU577
 2085              		.loc 11 174 22 is_stmt 0 view .LVU578
 2086 0040 0421     		movs	r1, #4
 2087 0042 0648     		ldr	r0, .L117
 2088 0044 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
 2089              	.LVL140:
 175:Proliferation.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 2090              		.loc 11 175 2 is_stmt 1 view .LVU579
 2091              		.loc 11 175 23 is_stmt 0 view .LVU580
 2092 0048 0321     		movs	r1, #3
 2093 004a 0448     		ldr	r0, .L117
 2094 004c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 2095              	.LVL141:
 176:Proliferation.cpp **** 	hw.StartAudio(AudioCallback);
 2096              		.loc 11 176 2 is_stmt 1 view .LVU581
 2097              		.loc 11 176 15 is_stmt 0 view .LVU582
 2098 0050 0949     		ldr	r1, .L117+28
 2099 0052 0248     		ldr	r0, .L117
 2100 0054 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
 2101              	.LVL142:
 2102              	.L115:
 177:Proliferation.cpp **** 
 178:Proliferation.cpp **** 	while(1) {
 2103              		.loc 11 178 2 is_stmt 1 discriminator 1 view .LVU583
 2104              		.loc 11 178 2 discriminator 1 view .LVU584
 2105              		.loc 11 178 2 discriminator 1 view .LVU585
 2106              		.loc 11 178 2 discriminator 1 view .LVU586
 2107 0058 FEE7     		b	.L115
 2108              	.L118:
 2109 005a 00BF     		.align	2
 2110              	.L117:
 2111 005c 00000000 		.word	.LANCHOR0
 2112 0060 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B8E
 2113 0064 00000000 		.word	0
 2114 0068 00000000 		.word	.LANCHOR3
 2115 006c 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B7E
 2116 0070 00000000 		.word	.LANCHOR1
 2117 0074 00000000 		.word	rev
 2118 0078 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 2119              		.cfi_endproc
 2120              	.LFE4844:
 2122              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 2123              		.align	1
 2124              		.p2align 2,,3
 2125              		.syntax unified
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 66


 2126              		.thumb
 2127              		.thumb_func
 2128              		.fpu fpv5-d16
 2130              	_GLOBAL__sub_I_hw:
 2131              	.LFB5427:
 179:Proliferation.cpp **** 	}
 180:Proliferation.cpp **** }
 2132              		.loc 11 180 1 view -0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 0
 2135              		@ frame_needed = 0, uses_anonymous_args = 0
 2136              	.LBB883:
 2137              	.LBI883:
 2138              		.loc 11 180 1 view .LVU588
 2139              	.LVL143:
 2140              	.LBB884:
 2141              	.LBB885:
 2142              	.LBI885:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2143              		.loc 2 64 9 view .LVU589
 2144              	.LBB886:
 2145              	.LBB887:
 2146              	.LBI887:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2147              		.loc 8 77 5 view .LVU590
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 2148              		.loc 8 77 5 is_stmt 0 view .LVU591
 2149              	.LBE887:
 2150              	.LBB888:
 2151              	.LBI888:
 2152              		.file 14 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 67


  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 68


  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 69


 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2153              		.loc 14 166 5 is_stmt 1 view .LVU592
 2154              	.LBE888:
 2155              	.LBE886:
 2156              	.LBE885:
 2157              	.LBE884:
 2158              	.LBE883:
 2159              		.loc 11 180 1 is_stmt 0 view .LVU593
 2160 0000 08B5     		push	{r3, lr}
 2161              		.cfi_def_cfa_offset 8
 2162              		.cfi_offset 3, -8
 2163              		.cfi_offset 14, -4
 2164              	.LBB927:
 2165              	.LBB923:
 2166              	.LBB915:
 2167              	.LBB911:
 2168              	.LBB891:
 2169              	.LBB889:
 2170              	.LBB890:
 2171              		.loc 14 166 34 view .LVU594
 2172 0002 1048     		ldr	r0, .L121
 2173 0004 0023     		movs	r3, #0
 2174              	.LBE890:
 2175              	.LBE889:
 2176              	.LBE891:
 2177              	.LBE911:
 2178              	.LBE915:
  10:Proliferation.cpp **** Switch          toggle;
 2179              		.loc 11 10 17 view .LVU595
 2180 0006 104A     		ldr	r2, .L121+4
 2181              	.LBB916:
 2182              	.LBB912:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 70


 2183              	.LBB892:
 2184              	.LBB893:
 2185              	.LBB894:
 2186              	.LBB895:
 2187              	.LBB896:
 2188              		.file 15 "../../libDaisy//src/per/i2c.h"
   1:../../libDaisy//src/per/i2c.h **** #pragma once
   2:../../libDaisy//src/per/i2c.h **** #include "daisy_core.h"
   3:../../libDaisy//src/per/i2c.h **** 
   4:../../libDaisy//src/per/i2c.h **** namespace daisy
   5:../../libDaisy//src/per/i2c.h **** {
   6:../../libDaisy//src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libDaisy//src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libDaisy//src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libDaisy//src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libDaisy//src/per/i2c.h ****  *  
  11:../../libDaisy//src/per/i2c.h ****  *      // setup the configuration
  12:../../libDaisy//src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libDaisy//src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libDaisy//src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libDaisy//src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libDaisy//src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libDaisy//src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libDaisy//src/per/i2c.h ****  */
  24:../../libDaisy//src/per/i2c.h **** class I2CHandle
  25:../../libDaisy//src/per/i2c.h **** {
  26:../../libDaisy//src/per/i2c.h ****   public:
  27:../../libDaisy//src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libDaisy//src/per/i2c.h ****     struct Config
  29:../../libDaisy//src/per/i2c.h ****     {
  30:../../libDaisy//src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libDaisy//src/per/i2c.h ****         enum class Mode
  32:../../libDaisy//src/per/i2c.h ****         {
  33:../../libDaisy//src/per/i2c.h ****             I2C_MASTER,
  34:../../libDaisy//src/per/i2c.h ****             I2C_SLAVE,
  35:../../libDaisy//src/per/i2c.h ****         };
  36:../../libDaisy//src/per/i2c.h **** 
  37:../../libDaisy//src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libDaisy//src/per/i2c.h ****         enum class Peripheral
  39:../../libDaisy//src/per/i2c.h ****         {
  40:../../libDaisy//src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libDaisy//src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libDaisy//src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libDaisy//src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libDaisy//src/per/i2c.h ****         };
  45:../../libDaisy//src/per/i2c.h **** 
  46:../../libDaisy//src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libDaisy//src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libDaisy//src/per/i2c.h ****          */
  49:../../libDaisy//src/per/i2c.h ****         enum class Speed
  50:../../libDaisy//src/per/i2c.h ****         {
  51:../../libDaisy//src/per/i2c.h ****             I2C_100KHZ, /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 71


  52:../../libDaisy//src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libDaisy//src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libDaisy//src/per/i2c.h ****         };
  55:../../libDaisy//src/per/i2c.h **** 
  56:../../libDaisy//src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libDaisy//src/per/i2c.h ****         struct
  58:../../libDaisy//src/per/i2c.h ****         {
  59:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libDaisy//src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libDaisy//src/per/i2c.h **** 
  63:../../libDaisy//src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libDaisy//src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libDaisy//src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libDaisy//src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libDaisy//src/per/i2c.h ****     };
  68:../../libDaisy//src/per/i2c.h **** 
  69:../../libDaisy//src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libDaisy//src/per/i2c.h ****     enum class Result
  71:../../libDaisy//src/per/i2c.h ****     {
  72:../../libDaisy//src/per/i2c.h ****         OK, /**< & */
  73:../../libDaisy//src/per/i2c.h ****         ERR /**< & */
  74:../../libDaisy//src/per/i2c.h ****     };
  75:../../libDaisy//src/per/i2c.h **** 
  76:../../libDaisy//src/per/i2c.h ****     enum class Direction
  77:../../libDaisy//src/per/i2c.h ****     {
  78:../../libDaisy//src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libDaisy//src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libDaisy//src/per/i2c.h ****     };
  81:../../libDaisy//src/per/i2c.h **** 
  82:../../libDaisy//src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 2189              		.loc 15 82 33 view .LVU596
 2190 0008 0362     		str	r3, [r0, #32]
 2191              	.LBE896:
 2192              	.LBE895:
 2193              	.LBE894:
 2194              	.LBE893:
 2195              	.LBE892:
 2196              	.LBB899:
 2197              	.LBB900:
 2198              	.LBB901:
 2199              		.file 16 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 72


  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 73


  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2200              		.loc 16 84 33 view .LVU597
 2201 000a 8362     		str	r3, [r0, #40]
 2202              	.LBE901:
 2203              	.LBE900:
 2204              	.LBE899:
 2205              	.LBE912:
 2206              	.LBE916:
  10:Proliferation.cpp **** Switch          toggle;
 2207              		.loc 11 10 17 view .LVU598
 2208 000c 0F49     		ldr	r1, .L121+8
 2209              	.LBB917:
 2210              	.LBB913:
 2211              	.LBB902:
 2212              	.LBB903:
 2213              	.LBB904:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2214              		.loc 7 95 35 view .LVU599
 2215 000e C0E90333 		strd	r3, r3, [r0, #12]
 2216              	.LVL144:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2217              		.loc 7 95 35 view .LVU600
 2218              	.LBE904:
 2219              	.LBE903:
 2220              	.LBE902:
 2221              	.LBB905:
 2222              	.LBI905:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2223              		.loc 6 92 5 is_stmt 1 view .LVU601
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2224              		.loc 6 92 5 is_stmt 0 view .LVU602
 2225              	.LBE905:
 2226              	.LBB906:
 2227              	.LBI906:
  40:../../libDaisy//src/hid/usb.h **** 
 2228              		.loc 5 40 5 is_stmt 1 view .LVU603
  40:../../libDaisy//src/hid/usb.h **** 
 2229              		.loc 5 40 5 is_stmt 0 view .LVU604
 2230              	.LBE906:
 2231              	.LBB907:
 2232              	.LBI892:
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 2233              		.loc 4 28 5 is_stmt 1 view .LVU605
 2234              	.LBB898:
 2235              	.LBB897:
 2236              	.LBI894:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 74


 2237              		.loc 15 82 5 view .LVU606
 2238              		.loc 15 82 5 is_stmt 0 view .LVU607
 2239              	.LBE897:
 2240              	.LBE898:
 2241              	.LBE907:
 2242              	.LBB908:
 2243              	.LBI899:
 2244              		.loc 16 84 5 is_stmt 1 view .LVU608
 2245              		.loc 16 84 5 is_stmt 0 view .LVU609
 2246              	.LBE908:
 2247              	.LBE913:
 2248              	.LBE917:
 2249              	.LBE923:
 2250              	.LBE927:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2251              		.loc 2 64 24 is_stmt 1 view .LVU610
 2252              	.LBB928:
 2253              	.LBB924:
 2254              	.LBB918:
 2255              	.LBB914:
 2256              	.LBB909:
 2257              	.LBI909:
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2258              		.loc 3 20 5 view .LVU611
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2259              		.loc 3 20 5 is_stmt 0 view .LVU612
 2260              	.LBE909:
 2261              	.LBB910:
 2262              	.LBI910:
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2263              		.loc 3 20 5 is_stmt 1 view .LVU613
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 2264              		.loc 3 20 5 is_stmt 0 view .LVU614
 2265              	.LBE910:
 2266              	.LBE914:
 2267              	.LBE918:
  10:Proliferation.cpp **** Switch          toggle;
 2268              		.loc 11 10 17 view .LVU615
 2269 0012 FFF7FEFF 		bl	__aeabi_atexit
 2270              	.LVL145:
 2271              	.LBB919:
 2272              	.LBI919:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2273              		.loc 1 41 5 is_stmt 1 view .LVU616
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2274              		.loc 1 41 5 is_stmt 0 view .LVU617
 2275              	.LBE919:
  11:Proliferation.cpp **** Switch          button;
 2276              		.loc 11 11 17 view .LVU618
 2277 0016 0E49     		ldr	r1, .L121+12
 2278 0018 0B4A     		ldr	r2, .L121+4
 2279 001a 0E48     		ldr	r0, .L121+16
 2280 001c FFF7FEFF 		bl	__aeabi_atexit
 2281              	.LVL146:
 2282              	.LBB920:
 2283              	.LBI920:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 75


 2284              		.loc 1 41 5 is_stmt 1 view .LVU619
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2285              		.loc 1 41 5 is_stmt 0 view .LVU620
 2286              	.LBE920:
  12:Proliferation.cpp **** ReverbSc        rev; 
 2287              		.loc 11 12 17 view .LVU621
 2288 0020 094A     		ldr	r2, .L121+4
 2289 0022 0B49     		ldr	r1, .L121+12
 2290 0024 0C48     		ldr	r0, .L121+20
 2291 0026 FFF7FEFF 		bl	__aeabi_atexit
 2292              	.LVL147:
 2293              	.LBB921:
 2294              	.LBI921:
  40:../../DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 2295              		.loc 9 40 5 is_stmt 1 view .LVU622
  40:../../DaisySP//Source/Effects/reverbsc.h ****     ~ReverbSc() {}
 2296              		.loc 9 40 5 is_stmt 0 view .LVU623
 2297              	.LBE921:
  13:Proliferation.cpp **** 
 2298              		.loc 11 13 17 view .LVU624
 2299 002a 074A     		ldr	r2, .L121+4
 2300 002c 0B49     		ldr	r1, .L121+24
 2301 002e 0C48     		ldr	r0, .L121+28
 2302 0030 FFF7FEFF 		bl	__aeabi_atexit
 2303              	.LVL148:
 2304              	.LBB922:
 2305              	.LBI922:
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     {
 2306              		.loc 10 94 12 is_stmt 1 view .LVU625
 2307              	.LBE922:
 2308              	.LBE924:
 2309              	.LBE928:
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/array ****     {
 2310              		.loc 10 94 12 view .LVU626
 2311              	.LBB929:
 2312              	.LBB925:
  18:Proliferation.cpp **** int s = 0;
 2313              		.loc 11 18 66 is_stmt 0 view .LVU627
 2314 0034 044A     		ldr	r2, .L121+4
 2315 0036 0B49     		ldr	r1, .L121+32
 2316 0038 0B48     		ldr	r0, .L121+36
 2317              	.LBE925:
 2318              	.LBE929:
 2319              		.loc 11 180 1 view .LVU628
 2320 003a BDE80840 		pop	{r3, lr}
 2321              		.cfi_restore 14
 2322              		.cfi_restore 3
 2323              		.cfi_def_cfa_offset 0
 2324              	.LBB930:
 2325              	.LBB926:
  18:Proliferation.cpp **** int s = 0;
 2326              		.loc 11 18 66 view .LVU629
 2327 003e FFF7FEBF 		b	__aeabi_atexit
 2328              	.LVL149:
 2329              	.L122:
 2330 0042 00BF     		.align	2
 2331              	.L121:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 76


 2332 0044 00000000 		.word	.LANCHOR0
 2333 0048 00000000 		.word	__dso_handle
 2334 004c 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 2335 0050 00000000 		.word	_ZN5daisy6SwitchD1Ev
 2336 0054 00000000 		.word	.LANCHOR3
 2337 0058 00000000 		.word	.LANCHOR1
 2338 005c 00000000 		.word	_ZN7daisysp8ReverbScD1Ev
 2339 0060 00000000 		.word	rev
 2340 0064 00000000 		.word	_ZNSt5arrayI12SampleBufferILj240000EELj8EED1Ev
 2341 0068 00000000 		.word	buffers
 2342              	.LBE926:
 2343              	.LBE930:
 2344              		.cfi_endproc
 2345              	.LFE5427:
 2347              		.section	.init_array,"aw",%init_array
 2348              		.align	2
 2349 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 2350              		.global	s
 2351              		.global	buffers
 2352              		.global	rev
 2353              		.global	button
 2354              		.global	toggle
 2355              		.global	hw
 2356              		.section	.bss.button,"aw",%nobits
 2357              		.align	2
 2358              		.set	.LANCHOR1,. + 0
 2361              	button:
 2362 0000 00000000 		.space	16
 2362      00000000 
 2362      00000000 
 2362      00000000 
 2363              		.section	.bss.hw,"aw",%nobits
 2364              		.align	2
 2365              		.set	.LANCHOR0,. + 0
 2368              	hw:
 2369 0000 00000000 		.space	464
 2369      00000000 
 2369      00000000 
 2369      00000000 
 2369      00000000 
 2370              		.section	.bss.rev,"aw",%nobits
 2371              		.align	2
 2374              	rev:
 2375 0000 00000000 		.space	396100
 2375      00000000 
 2375      00000000 
 2375      00000000 
 2375      00000000 
 2376              		.section	.bss.s,"aw",%nobits
 2377              		.align	2
 2378              		.set	.LANCHOR2,. + 0
 2381              	s:
 2382 0000 00000000 		.space	4
 2383              		.section	.bss.toggle,"aw",%nobits
 2384              		.align	2
 2385              		.set	.LANCHOR3,. + 0
 2388              	toggle:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 77


 2389 0000 00000000 		.space	16
 2389      00000000 
 2389      00000000 
 2389      00000000 
 2390              		.section	.sdram_bss,"aw"
 2391              		.align	2
 2394              	buffers:
 2395 0000 00000000 		.space	7680096
 2395      00000000 
 2395      00000000 
 2395      00000000 
 2395      00000000 
 2396              		.text
 2397              	.Letext0:
 2398              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 2399              		.file 18 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 2400              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdint.h"
 2401              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 2402              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2403              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2404              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2405              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2406              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2407              		.file 26 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2408              		.file 27 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2409              		.file 28 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2410              		.file 29 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2411              		.file 30 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2412              		.file 31 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2413              		.file 32 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2414              		.file 33 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2415              		.file 34 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2416              		.file 35 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2417              		.file 36 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2418              		.file 37 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2419              		.file 38 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2420              		.file 39 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 2421              		.file 40 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 2422              		.file 41 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 2423              		.file 42 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 2424              		.file 43 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 2425              		.file 44 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2426              		.file 45 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2427              		.file 46 "../../libDaisy//src/daisy_core.h"
 2428              		.file 47 "../../libDaisy//src/per/tim.h"
 2429              		.file 48 "../../libDaisy//src/per/sai.h"
 2430              		.file 49 "../../libDaisy//src/hid/ctrl.h"
 2431              		.file 50 "../../libDaisy//src/util/wav_format.h"
 2432              		.file 51 "../../libDaisy//src/dev/max11300.h"
 2433              		.file 52 "../../libDaisy//src/per/gpio.h"
 2434              		.file 53 "../../libDaisy//src/dev/sdram.h"
 2435              		.file 54 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 2436              		.file 55 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 2437              		.file 56 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
 2438              		.file 57 "../../DaisySP//Source/Control/adenv.h"
 2439              		.file 58 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/wchar.h"
 2440              		.file 59 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/locale.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 78


 2441              		.file 60 "../../libDaisy//src/dev/sr_595.h"
 2442              		.file 61 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 79


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Proliferation.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:43     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:51     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:51     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:109    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:117    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:117    .text._ZN7daisysp8ReverbScD2Ev:0000000000000000 _ZN7daisysp8ReverbScD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:134    .text._ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:142    .text._ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev:0000000000000000 _ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:142    .text._ZNSt5arrayI12SampleBufferILj240000EELj8EED2Ev:0000000000000000 _ZNSt5arrayI12SampleBufferILj240000EELj8EED1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:159    .text._Z10getSamplesv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:167    .text._Z10getSamplesv:0000000000000000 _Z10getSamplesv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:350    .text._Z10getSamplesv:000000000000007e $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:359    .text._Z10getSamplesv:0000000000000086 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1131   .text._Z10getSamplesv:00000000000002ac $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2394   .sdram_bss:0000000000000000 buffers
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1153   .text._Z10getSamplesv:00000000000002e8 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1263   .text._Z10getSamplesv:0000000000000354 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1271   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1279   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1921   .text._Z13AudioCallbackPKPKfPPfj:00000000000001c0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2374   .bss.rev:0000000000000000 rev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1937   .text._Z12InitSamplersv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:1945   .text._Z12InitSamplersv:0000000000000000 _Z12InitSamplersv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2020   .text._Z12InitSamplersv:0000000000000030 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2027   .text.startup.main:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2035   .text.startup.main:0000000000000000 main
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2111   .text.startup.main:000000000000005c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2123   .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2130   .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2332   .text.startup._GLOBAL__sub_I_hw:0000000000000044 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2348   .init_array:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2381   .bss.s:0000000000000000 s
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2361   .bss.button:0000000000000000 button
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2388   .bss.toggle:0000000000000000 toggle
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2368   .bss.hw:0000000000000000 hw
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2357   .bss.button:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2364   .bss.hw:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2371   .bss.rev:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2377   .bss.s:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2384   .bss.toggle:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s:2391   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD5Ev
                           .group:0000000000000000 _ZN7daisysp8ReverbScD5Ev
                           .group:0000000000000000 _ZNSt5arrayI12SampleBufferILj240000EELj8EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
_ZN5daisy6Switch8DebounceEv
rand
_ZN5daisy6GateIn4TrigEv
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//cctZSHN6.s 			page 80


memset
_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
powf
_ZN7daisysp8ReverbSc7ProcessERKfS2_PfS3_
_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
_ZN7daisysp8ReverbSc4InitEf
_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
_ZN5daisy8patch_sm12DaisyPatchSM2B8E
_ZN5daisy8patch_sm12DaisyPatchSM2B7E
__aeabi_atexit
__dso_handle
