ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"fm_voice.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNK5torus7FMVoice6SineFmEmf.isra.0,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	_ZNK5torus7FMVoice6SineFmEmf.isra.0:
  25              	.LVL0:
  26              	.LFB1524:
  27              		.file 1 "./dsp/fm_voice.h"
   1:./dsp/fm_voice.h **** // Copyright 2015 Emilie Gillet.
   2:./dsp/fm_voice.h **** //
   3:./dsp/fm_voice.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./dsp/fm_voice.h **** //
   5:./dsp/fm_voice.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./dsp/fm_voice.h **** // of this software and associated documentation files (the "Software"), to deal
   7:./dsp/fm_voice.h **** // in the Software without restriction, including without limitation the rights
   8:./dsp/fm_voice.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./dsp/fm_voice.h **** // copies of the Software, and to permit persons to whom the Software is
  10:./dsp/fm_voice.h **** // furnished to do so, subject to the following conditions:
  11:./dsp/fm_voice.h **** //
  12:./dsp/fm_voice.h **** // The above copyright notice and this permission notice shall be included in
  13:./dsp/fm_voice.h **** // all copies or substantial portions of the Software.
  14:./dsp/fm_voice.h **** //
  15:./dsp/fm_voice.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./dsp/fm_voice.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./dsp/fm_voice.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./dsp/fm_voice.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./dsp/fm_voice.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./dsp/fm_voice.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./dsp/fm_voice.h **** // THE SOFTWARE.
  22:./dsp/fm_voice.h **** //
  23:./dsp/fm_voice.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./dsp/fm_voice.h **** //
  25:./dsp/fm_voice.h **** // -----------------------------------------------------------------------------
  26:./dsp/fm_voice.h **** //
  27:./dsp/fm_voice.h **** // FM Voice.
  28:./dsp/fm_voice.h **** 
  29:./dsp/fm_voice.h **** #ifndef TORUS_DSP_FM_VOICE_H_
  30:./dsp/fm_voice.h **** #define TORUS_DSP_FM_VOICE_H_
  31:./dsp/fm_voice.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 2


  32:./dsp/fm_voice.h **** #include "stmlib/stmlib.h"
  33:./dsp/fm_voice.h **** 
  34:./dsp/fm_voice.h **** #include <algorithm>
  35:./dsp/fm_voice.h **** 
  36:./dsp/fm_voice.h **** #include "stmlib/dsp/filter.h"
  37:./dsp/fm_voice.h **** 
  38:./dsp/fm_voice.h **** #include "dsp/dsp.h"
  39:./dsp/fm_voice.h **** #include "dsp/follower.h"
  40:./dsp/fm_voice.h **** 
  41:./dsp/fm_voice.h **** #include "resources.h"
  42:./dsp/fm_voice.h **** 
  43:./dsp/fm_voice.h **** namespace torus
  44:./dsp/fm_voice.h **** {
  45:./dsp/fm_voice.h **** using namespace stmlib;
  46:./dsp/fm_voice.h **** 
  47:./dsp/fm_voice.h **** class FMVoice
  48:./dsp/fm_voice.h **** {
  49:./dsp/fm_voice.h ****   public:
  50:./dsp/fm_voice.h ****     FMVoice() {}
  51:./dsp/fm_voice.h ****     ~FMVoice() {}
  52:./dsp/fm_voice.h **** 
  53:./dsp/fm_voice.h ****     void Init();
  54:./dsp/fm_voice.h ****     void Process(const float* in, float* out, float* aux, size_t size);
  55:./dsp/fm_voice.h **** 
  56:./dsp/fm_voice.h ****     inline void set_frequency(float frequency)
  57:./dsp/fm_voice.h ****     {
  58:./dsp/fm_voice.h ****         carrier_frequency_ = frequency;
  59:./dsp/fm_voice.h ****     }
  60:./dsp/fm_voice.h **** 
  61:./dsp/fm_voice.h ****     inline void set_ratio(float ratio) { ratio_ = ratio; }
  62:./dsp/fm_voice.h **** 
  63:./dsp/fm_voice.h ****     inline void set_brightness(float brightness) { brightness_ = brightness; }
  64:./dsp/fm_voice.h **** 
  65:./dsp/fm_voice.h ****     inline void set_damping(float damping) { damping_ = damping; }
  66:./dsp/fm_voice.h **** 
  67:./dsp/fm_voice.h ****     inline void set_position(float position) { position_ = position; }
  68:./dsp/fm_voice.h **** 
  69:./dsp/fm_voice.h ****     inline void set_feedback_amount(float feedback_amount)
  70:./dsp/fm_voice.h ****     {
  71:./dsp/fm_voice.h ****         feedback_amount_ = feedback_amount;
  72:./dsp/fm_voice.h ****     }
  73:./dsp/fm_voice.h **** 
  74:./dsp/fm_voice.h ****     inline void TriggerInternalEnvelope()
  75:./dsp/fm_voice.h ****     {
  76:./dsp/fm_voice.h ****         amplitude_envelope_  = 1.0f;
  77:./dsp/fm_voice.h ****         brightness_envelope_ = 1.0f;
  78:./dsp/fm_voice.h ****     }
  79:./dsp/fm_voice.h **** 
  80:./dsp/fm_voice.h ****     inline float SineFm(uint32_t phase, float fm) const
  28              		.loc 1 80 18 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  81:./dsp/fm_voice.h ****     {
  82:./dsp/fm_voice.h ****         phase += (static_cast<uint32_t>((fm + 4.0f) * 536870912.0f)) << 3;
  33              		.loc 1 82 9 view .LVU1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 3


  34              		.loc 1 82 45 is_stmt 0 view .LVU2
  35 0000 F1EE007A 		vmov.f32	s15, #4.0e+0
  83:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  84:./dsp/fm_voice.h ****         float    fractional = static_cast<float>(phase << 12) / 4294967296.0f;
  36              		.loc 1 84 18 view .LVU3
  37 0004 9FED117A 		vldr.32	s14, .L2
  82:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  38              		.loc 1 82 45 view .LVU4
  39 0008 30EE270A 		vadd.f32	s0, s0, s15
  40              	.LVL1:
  82:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  41              		.loc 1 82 53 view .LVU5
  42 000c DFED107A 		vldr.32	s15, .L2+4
  43 0010 20EE270A 		vmul.f32	s0, s0, s15
  82:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  44              		.loc 1 82 19 view .LVU6
  45 0014 BCEEC00A 		vcvt.u32.f32	s0, s0
  82:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  46              		.loc 1 82 15 view .LVU7
  47 0018 10EE103A 		vmov	r3, s0	@ int
  48 001c 00EBC300 		add	r0, r0, r3, lsl #3
  49              	.LVL2:
  83:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  50              		.loc 1 83 9 is_stmt 1 view .LVU8
  85:./dsp/fm_voice.h ****         float    a          = lut_sine[integral];
  51              		.loc 1 85 18 is_stmt 0 view .LVU9
  52 0020 0C4B     		ldr	r3, .L2+8
  83:./dsp/fm_voice.h ****         uint32_t integral   = phase >> 20;
  53              		.loc 1 83 18 view .LVU10
  54 0022 020D     		lsrs	r2, r0, #20
  55              	.LVL3:
  84:./dsp/fm_voice.h ****         float    a          = lut_sine[integral];
  56              		.loc 1 84 9 is_stmt 1 view .LVU11
  57              		.loc 1 85 9 view .LVU12
  58              		.loc 1 85 18 is_stmt 0 view .LVU13
  59 0024 03EB8201 		add	r1, r3, r2, lsl #2
  86:./dsp/fm_voice.h ****         float    b          = lut_sine[integral + 1];
  60              		.loc 1 86 18 view .LVU14
  61 0028 03EB8203 		add	r3, r3, r2, lsl #2
  85:./dsp/fm_voice.h ****         float    a          = lut_sine[integral];
  62              		.loc 1 85 18 view .LVU15
  63 002c 91ED000A 		vldr.32	s0, [r1]
  64              	.LVL4:
  65              		.loc 1 86 9 is_stmt 1 view .LVU16
  87:./dsp/fm_voice.h ****         return a + (b - a) * fractional;
  66              		.loc 1 87 9 view .LVU17
  84:./dsp/fm_voice.h ****         float    a          = lut_sine[integral];
  67              		.loc 1 84 56 is_stmt 0 view .LVU18
  68 0030 0103     		lsls	r1, r0, #12
  69 0032 07EE901A 		vmov	s15, r1	@ int
  84:./dsp/fm_voice.h ****         float    a          = lut_sine[integral];
  70              		.loc 1 84 31 view .LVU19
  71 0036 F8EE677A 		vcvt.f32.u32	s15, s15
  84:./dsp/fm_voice.h ****         float    a          = lut_sine[integral];
  72              		.loc 1 84 18 view .LVU20
  73 003a 67EE877A 		vmul.f32	s15, s15, s14
  74              	.LVL5:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 4


  75              		.loc 1 87 23 view .LVU21
  76 003e 93ED017A 		vldr.32	s14, [r3, #4]
  77 0042 37EE407A 		vsub.f32	s14, s14, s0
  88:./dsp/fm_voice.h ****     }
  78              		.loc 1 88 5 view .LVU22
  79 0046 A7EE870A 		vfma.f32	s0, s15, s14
  80              	.LVL6:
  81              		.loc 1 88 5 view .LVU23
  82 004a 7047     		bx	lr
  83              	.L3:
  84              		.align	2
  85              	.L2:
  86 004c 0000802F 		.word	796917760
  87 0050 0000004E 		.word	1308622848
  88 0054 00000000 		.word	_ZN5torus8lut_sineE
  89              		.cfi_endproc
  90              	.LFE1524:
  92              		.section	.text._ZN6stmlib16SemitonesToRatioEf,"axG",%progbits,_ZN6stmlib16SemitonesToRatioEf,comda
  93              		.align	1
  94              		.weak	_ZN6stmlib16SemitonesToRatioEf
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN6stmlib16SemitonesToRatioEf:
 101              	.LVL7:
 102              	.LFB1513:
 103              		.file 2 "../../stmlib/dsp/units.h"
   1:../../stmlib/dsp/units.h **** // Copyright 2014 Emilie Gillet.
   2:../../stmlib/dsp/units.h **** //
   3:../../stmlib/dsp/units.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/units.h **** //
   5:../../stmlib/dsp/units.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/units.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/units.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/units.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/units.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/units.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/units.h **** // 
  12:../../stmlib/dsp/units.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/units.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/units.h **** // 
  15:../../stmlib/dsp/units.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/units.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/units.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/units.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/units.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/units.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/units.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/units.h **** // 
  23:../../stmlib/dsp/units.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/units.h **** //
  25:../../stmlib/dsp/units.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/units.h **** //
  27:../../stmlib/dsp/units.h **** // Conversion from semitones to frequency ratio.
  28:../../stmlib/dsp/units.h **** 
  29:../../stmlib/dsp/units.h **** #ifndef STMLIB_DSP_UNITS_H_
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 5


  30:../../stmlib/dsp/units.h **** #define STMLIB_DSP_UNITS_H_
  31:../../stmlib/dsp/units.h **** 
  32:../../stmlib/dsp/units.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/units.h **** #include "stmlib/dsp/dsp.h"
  34:../../stmlib/dsp/units.h **** 
  35:../../stmlib/dsp/units.h **** namespace stmlib {
  36:../../stmlib/dsp/units.h **** 
  37:../../stmlib/dsp/units.h **** extern const float lut_pitch_ratio_high[257];
  38:../../stmlib/dsp/units.h **** extern const float lut_pitch_ratio_low[257];
  39:../../stmlib/dsp/units.h **** 
  40:../../stmlib/dsp/units.h **** inline float SemitonesToRatio(float semitones) {
 104              		.loc 2 40 48 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
  41:../../stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 109              		.loc 2 41 3 view .LVU25
 110              		.loc 2 41 9 is_stmt 0 view .LVU26
 111 0000 DFED0E7A 		vldr.32	s15, .L5
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
  43:../../stmlib/dsp/units.h **** 
  44:../../stmlib/dsp/units.h ****   return lut_pitch_ratio_high[pitch_integral] * \
  45:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 112              		.loc 2 45 74 view .LVU27
 113 0004 0E4A     		ldr	r2, .L5+4
  41:../../stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 114              		.loc 2 41 9 view .LVU28
 115 0006 30EE270A 		vadd.f32	s0, s0, s15
 116              	.LVL8:
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 117              		.loc 2 42 3 is_stmt 1 view .LVU29
 118 000a FDEEC07A 		vcvt.s32.f32	s15, s0
 119              	.LVL9:
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 120              		.loc 2 42 3 view .LVU30
  44:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 121              		.loc 2 44 3 view .LVU31
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 122              		.loc 2 42 3 is_stmt 0 view .LVU32
 123 000e B8EEE77A 		vcvt.f32.s32	s14, s15
  44:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 124              		.loc 2 44 45 view .LVU33
 125 0012 17EE901A 		vmov	r1, s15	@ int
  42:../../stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 126              		.loc 2 42 3 view .LVU34
 127 0016 30EE470A 		vsub.f32	s0, s0, s14
 128              	.LVL10:
 129              		.loc 2 45 27 view .LVU35
 130 001a BEEECC0A 		vcvt.s32.f32	s0, s0, #8
 131              	.LVL11:
 132              		.loc 2 45 74 view .LVU36
 133 001e 10EE103A 		vmov	r3, s0	@ int
 134 0022 02EB8302 		add	r2, r2, r3, lsl #2
  44:../../stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 135              		.loc 2 44 45 view .LVU37
 136 0026 074B     		ldr	r3, .L5+8
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 6


 137 0028 03EB8103 		add	r3, r3, r1, lsl #2
 138              		.loc 2 45 74 view .LVU38
 139 002c 92ED000A 		vldr.32	s0, [r2]
 140 0030 D3ED007A 		vldr.32	s15, [r3]
 141              	.LVL12:
  46:../../stmlib/dsp/units.h **** }
 142              		.loc 2 46 1 view .LVU39
 143 0034 20EE270A 		vmul.f32	s0, s0, s15
 144 0038 7047     		bx	lr
 145              	.L6:
 146 003a 00BF     		.align	2
 147              	.L5:
 148 003c 00000043 		.word	1124073472
 149 0040 00000000 		.word	_ZN6stmlib19lut_pitch_ratio_lowE
 150 0044 00000000 		.word	_ZN6stmlib20lut_pitch_ratio_highE
 151              		.cfi_endproc
 152              	.LFE1513:
 154              		.section	.text._ZN5torus7FMVoice4InitEv,"ax",%progbits
 155              		.align	1
 156              		.global	_ZN5torus7FMVoice4InitEv
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv5-d16
 162              	_ZN5torus7FMVoice4InitEv:
 163              	.LVL13:
 164              	.LFB1514:
 165              		.file 3 "dsp/fm_voice.cpp"
   1:dsp/fm_voice.cpp **** // Copyright 2015 Emilie Gillet.
   2:dsp/fm_voice.cpp **** //
   3:dsp/fm_voice.cpp **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fm_voice.cpp **** //
   5:dsp/fm_voice.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fm_voice.cpp **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fm_voice.cpp **** // in the Software without restriction, including without limitation the rights
   8:dsp/fm_voice.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fm_voice.cpp **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fm_voice.cpp **** // furnished to do so, subject to the following conditions:
  11:dsp/fm_voice.cpp **** //
  12:dsp/fm_voice.cpp **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fm_voice.cpp **** // all copies or substantial portions of the Software.
  14:dsp/fm_voice.cpp **** //
  15:dsp/fm_voice.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fm_voice.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fm_voice.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fm_voice.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fm_voice.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fm_voice.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fm_voice.cpp **** // THE SOFTWARE.
  22:dsp/fm_voice.cpp **** //
  23:dsp/fm_voice.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fm_voice.cpp **** //
  25:dsp/fm_voice.cpp **** // -----------------------------------------------------------------------------
  26:dsp/fm_voice.cpp **** //
  27:dsp/fm_voice.cpp **** // FM Voice.
  28:dsp/fm_voice.cpp **** 
  29:dsp/fm_voice.cpp **** #include "dsp/fm_voice.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 7


  30:dsp/fm_voice.cpp **** 
  31:dsp/fm_voice.cpp **** #include <cmath>
  32:dsp/fm_voice.cpp **** 
  33:dsp/fm_voice.cpp **** #include "stmlib/dsp/dsp.h"
  34:dsp/fm_voice.cpp **** #include "stmlib/dsp/parameter_interpolator.h"
  35:dsp/fm_voice.cpp **** #include "stmlib/dsp/units.h"
  36:dsp/fm_voice.cpp **** 
  37:dsp/fm_voice.cpp **** #include "resources.h"
  38:dsp/fm_voice.cpp **** 
  39:dsp/fm_voice.cpp **** namespace torus
  40:dsp/fm_voice.cpp **** {
  41:dsp/fm_voice.cpp **** using namespace stmlib;
  42:dsp/fm_voice.cpp **** 
  43:dsp/fm_voice.cpp **** void FMVoice::Init()
  44:dsp/fm_voice.cpp **** {
 166              		.loc 3 44 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
  45:dsp/fm_voice.cpp ****     set_frequency(220.0f / kSampleRate);
 171              		.loc 3 45 5 view .LVU41
 172              	.LBB130:
 173              	.LBI130:
  56:./dsp/fm_voice.h ****     {
 174              		.loc 1 56 17 view .LVU42
 175              	.LBB131:
  58:./dsp/fm_voice.h ****     }
 176              		.loc 1 58 9 view .LVU43
 177              	.LBE131:
 178              	.LBE130:
 179              	.LBB134:
 180              	.LBB135:
  61:./dsp/fm_voice.h **** 
 181              		.loc 1 61 49 is_stmt 0 view .LVU44
 182 0000 4FF07C52 		mov	r2, #1056964608
 183              	.LBE135:
 184              	.LBE134:
 185              	.LBB138:
 186              	.LBB132:
  58:./dsp/fm_voice.h ****     }
 187              		.loc 1 58 28 view .LVU45
 188 0004 1F49     		ldr	r1, .L8
 189              	.LBE132:
 190              	.LBE138:
 191              	.LBB139:
 192              	.LBB140:
  71:./dsp/fm_voice.h ****     }
 193              		.loc 1 71 26 view .LVU46
 194 0006 0023     		movs	r3, #0
 195              	.LBE140:
 196              	.LBE139:
 197              	.LBB143:
 198              	.LBB144:
 199              	.LBB145:
 200              	.LBB146:
 201              		.file 4 "../../stmlib/dsp/dsp.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 8


   1:../../stmlib/dsp/dsp.h **** // Copyright 2012 Emilie Gillet.
   2:../../stmlib/dsp/dsp.h **** //
   3:../../stmlib/dsp/dsp.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/dsp.h **** //
   5:../../stmlib/dsp/dsp.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/dsp.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/dsp.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/dsp.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/dsp.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/dsp.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/dsp.h **** // 
  12:../../stmlib/dsp/dsp.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/dsp.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/dsp.h **** // 
  15:../../stmlib/dsp/dsp.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/dsp.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/dsp.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/dsp.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/dsp.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/dsp.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/dsp.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/dsp.h **** // 
  23:../../stmlib/dsp/dsp.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/dsp.h **** //
  25:../../stmlib/dsp/dsp.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/dsp.h **** //
  27:../../stmlib/dsp/dsp.h **** // DSP utility routines.
  28:../../stmlib/dsp/dsp.h **** 
  29:../../stmlib/dsp/dsp.h **** #ifndef STMLIB_UTILS_DSP_DSP_H_
  30:../../stmlib/dsp/dsp.h **** #define STMLIB_UTILS_DSP_DSP_H_
  31:../../stmlib/dsp/dsp.h **** 
  32:../../stmlib/dsp/dsp.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/dsp.h **** 
  34:../../stmlib/dsp/dsp.h **** #include <cmath>
  35:../../stmlib/dsp/dsp.h **** #include <math.h>
  36:../../stmlib/dsp/dsp.h **** 
  37:../../stmlib/dsp/dsp.h **** namespace stmlib {
  38:../../stmlib/dsp/dsp.h **** 
  39:../../stmlib/dsp/dsp.h **** #define MAKE_INTEGRAL_FRACTIONAL(x) \
  40:../../stmlib/dsp/dsp.h ****   int32_t x ## _integral = static_cast<int32_t>(x); \
  41:../../stmlib/dsp/dsp.h ****   float x ## _fractional = x - static_cast<float>(x ## _integral);
  42:../../stmlib/dsp/dsp.h **** 
  43:../../stmlib/dsp/dsp.h **** inline float Interpolate(const float* table, float index, float size) {
  44:../../stmlib/dsp/dsp.h ****   index *= size;
  45:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  46:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
  47:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
  48:../../stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  49:../../stmlib/dsp/dsp.h **** }
  50:../../stmlib/dsp/dsp.h **** 
  51:../../stmlib/dsp/dsp.h **** 
  52:../../stmlib/dsp/dsp.h **** inline float InterpolateHermite(const float* table, float index, float size) {
  53:../../stmlib/dsp/dsp.h ****   index *= size;
  54:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  55:../../stmlib/dsp/dsp.h ****   const float xm1 = table[index_integral - 1];
  56:../../stmlib/dsp/dsp.h ****   const float x0 = table[index_integral + 0];
  57:../../stmlib/dsp/dsp.h ****   const float x1 = table[index_integral + 1];
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 9


  58:../../stmlib/dsp/dsp.h ****   const float x2 = table[index_integral + 2];
  59:../../stmlib/dsp/dsp.h ****   const float c = (x1 - xm1) * 0.5f;
  60:../../stmlib/dsp/dsp.h ****   const float v = x0 - x1;
  61:../../stmlib/dsp/dsp.h ****   const float w = c + v;
  62:../../stmlib/dsp/dsp.h ****   const float a = w + v + (x2 - x0) * 0.5f;
  63:../../stmlib/dsp/dsp.h ****   const float b_neg = w + a;
  64:../../stmlib/dsp/dsp.h ****   const float f = index_fractional;
  65:../../stmlib/dsp/dsp.h ****   return (((a * f) - b_neg) * f + c) * f + x0;
  66:../../stmlib/dsp/dsp.h **** }
  67:../../stmlib/dsp/dsp.h **** 
  68:../../stmlib/dsp/dsp.h **** inline float InterpolateWrap(const float* table, float index, float size) {
  69:../../stmlib/dsp/dsp.h ****   index -= static_cast<float>(static_cast<int32_t>(index));
  70:../../stmlib/dsp/dsp.h ****   index *= size;
  71:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  72:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
  73:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
  74:../../stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  75:../../stmlib/dsp/dsp.h **** }
  76:../../stmlib/dsp/dsp.h **** 
  77:../../stmlib/dsp/dsp.h **** inline float SmoothStep(float value) {
  78:../../stmlib/dsp/dsp.h ****   return value * value * (3.0f - 2.0f * value);
  79:../../stmlib/dsp/dsp.h **** }
  80:../../stmlib/dsp/dsp.h **** 
  81:../../stmlib/dsp/dsp.h **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in) - out);
  82:../../stmlib/dsp/dsp.h **** #define SLOPE(out, in, positive, negative) { \
  83:../../stmlib/dsp/dsp.h ****   float error = (in) - out; \
  84:../../stmlib/dsp/dsp.h ****   out += (error > 0 ? positive : negative) * error; \
  85:../../stmlib/dsp/dsp.h **** }
  86:../../stmlib/dsp/dsp.h **** #define SLEW(out, in, delta) { \
  87:../../stmlib/dsp/dsp.h ****   float error = (in) - out; \
  88:../../stmlib/dsp/dsp.h ****   float d = (delta); \
  89:../../stmlib/dsp/dsp.h ****   if (error > d) { \
  90:../../stmlib/dsp/dsp.h ****     error = d; \
  91:../../stmlib/dsp/dsp.h ****   } else if (error < -d) { \
  92:../../stmlib/dsp/dsp.h ****     error = -d; \
  93:../../stmlib/dsp/dsp.h ****   } \
  94:../../stmlib/dsp/dsp.h ****   out += error; \
  95:../../stmlib/dsp/dsp.h **** }
  96:../../stmlib/dsp/dsp.h **** 
  97:../../stmlib/dsp/dsp.h **** inline float Crossfade(float a, float b, float fade) {
  98:../../stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
  99:../../stmlib/dsp/dsp.h **** }
 100:../../stmlib/dsp/dsp.h **** 
 101:../../stmlib/dsp/dsp.h **** inline float SoftLimit(float x) {
 102:../../stmlib/dsp/dsp.h ****   return x * (27.0f + x * x) / (27.0f + 9.0f * x * x);
 103:../../stmlib/dsp/dsp.h **** }
 104:../../stmlib/dsp/dsp.h **** 
 105:../../stmlib/dsp/dsp.h **** inline float SoftClip(float x) {
 106:../../stmlib/dsp/dsp.h ****   if (x < -3.0f) {
 107:../../stmlib/dsp/dsp.h ****     return -1.0f;
 108:../../stmlib/dsp/dsp.h ****   } else if (x > 3.0f) {
 109:../../stmlib/dsp/dsp.h ****     return 1.0f;
 110:../../stmlib/dsp/dsp.h ****   } else {
 111:../../stmlib/dsp/dsp.h ****     return SoftLimit(x);
 112:../../stmlib/dsp/dsp.h ****   }
 113:../../stmlib/dsp/dsp.h **** }
 114:../../stmlib/dsp/dsp.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 10


 115:../../stmlib/dsp/dsp.h **** #ifdef TEST
 116:../../stmlib/dsp/dsp.h ****   inline int32_t Clip16(int32_t x) {
 117:../../stmlib/dsp/dsp.h ****     if (x < -32768) {
 118:../../stmlib/dsp/dsp.h ****       return -32768;
 119:../../stmlib/dsp/dsp.h ****     } else if (x > 32767) {
 120:../../stmlib/dsp/dsp.h ****       return 32767;
 121:../../stmlib/dsp/dsp.h ****     } else {
 122:../../stmlib/dsp/dsp.h ****       return x;
 123:../../stmlib/dsp/dsp.h ****     }
 124:../../stmlib/dsp/dsp.h ****   }
 125:../../stmlib/dsp/dsp.h ****   inline uint16_t ClipU16(int32_t x) {
 126:../../stmlib/dsp/dsp.h ****     if (x < 0) {
 127:../../stmlib/dsp/dsp.h ****       return 0;
 128:../../stmlib/dsp/dsp.h ****     } else if (x > 65535) {
 129:../../stmlib/dsp/dsp.h ****       return 65535;
 130:../../stmlib/dsp/dsp.h ****     } else {
 131:../../stmlib/dsp/dsp.h ****       return x;
 132:../../stmlib/dsp/dsp.h ****     }
 133:../../stmlib/dsp/dsp.h ****   }
 134:../../stmlib/dsp/dsp.h **** #else
 135:../../stmlib/dsp/dsp.h ****   inline int32_t Clip16(int32_t x) {
 136:../../stmlib/dsp/dsp.h ****     int32_t result;
 137:../../stmlib/dsp/dsp.h ****     __asm ("ssat %0, %1, %2" : "=r" (result) :  "I" (16), "r" (x) );
 138:../../stmlib/dsp/dsp.h ****     return result;
 139:../../stmlib/dsp/dsp.h ****   }
 140:../../stmlib/dsp/dsp.h ****   inline uint32_t ClipU16(int32_t x) {
 141:../../stmlib/dsp/dsp.h ****     uint32_t result;
 142:../../stmlib/dsp/dsp.h ****     __asm ("usat %0, %1, %2" : "=r" (result) :  "I" (16), "r" (x) );
 143:../../stmlib/dsp/dsp.h ****     return result;
 144:../../stmlib/dsp/dsp.h ****   }
 145:../../stmlib/dsp/dsp.h **** #endif
 146:../../stmlib/dsp/dsp.h ****   
 147:../../stmlib/dsp/dsp.h **** #ifdef TEST
 148:../../stmlib/dsp/dsp.h ****   inline float Sqrt(float x) {
 149:../../stmlib/dsp/dsp.h ****     return sqrtf(x);
 150:../../stmlib/dsp/dsp.h ****   }
 151:../../stmlib/dsp/dsp.h **** #else
 152:../../stmlib/dsp/dsp.h ****   inline float Sqrt(float x) {
 153:../../stmlib/dsp/dsp.h ****     float result;
 154:../../stmlib/dsp/dsp.h ****     __asm ("vsqrt.f32 %0, %1" : "=w" (result) : "w" (x) );
 202              		.loc 4 154 5 view .LVU47
 203 0008 DFED1F7A 		vldr.32	s15, .L8+4
 204              	.LBE146:
 205              	.LBE145:
 206              	.LBE144:
 207              	.LBE143:
 208              	.LBB194:
 209              	.LBB136:
  61:./dsp/fm_voice.h **** 
 210              		.loc 1 61 49 view .LVU48
 211 000c 4260     		str	r2, [r0, #4]	@ float
 212              	.LBE136:
 213              	.LBE194:
 214              	.LBB195:
 215              	.LBB196:
  63:./dsp/fm_voice.h **** 
 216              		.loc 1 63 64 view .LVU49
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 11


 217 000e 8260     		str	r2, [r0, #8]	@ float
 218              	.LBE196:
 219              	.LBE195:
 220              	.LBB198:
 221              	.LBB199:
  65:./dsp/fm_voice.h **** 
 222              		.loc 1 65 55 view .LVU50
 223 0010 C260     		str	r2, [r0, #12]	@ float
 224              	.LBE199:
 225              	.LBE198:
 226              	.LBB201:
 227              	.LBB202:
  67:./dsp/fm_voice.h **** 
 228              		.loc 1 67 58 view .LVU51
 229 0012 0261     		str	r2, [r0, #16]	@ float
 230              	.LBE202:
 231              	.LBE201:
  46:dsp/fm_voice.cpp ****     set_ratio(0.5f);
  47:dsp/fm_voice.cpp ****     set_brightness(0.5f);
  48:dsp/fm_voice.cpp ****     set_damping(0.5f);
  49:dsp/fm_voice.cpp ****     set_position(0.5f);
  50:dsp/fm_voice.cpp ****     set_feedback_amount(0.0f);
  51:dsp/fm_voice.cpp **** 
  52:dsp/fm_voice.cpp ****     previous_carrier_frequency_   = carrier_frequency_;
  53:dsp/fm_voice.cpp ****     previous_modulator_frequency_ = carrier_frequency_;
  54:dsp/fm_voice.cpp ****     previous_brightness_          = brightness_;
 232              		.loc 3 54 35 view .LVU52
 233 0014 0262     		str	r2, [r0, #32]	@ float
  55:dsp/fm_voice.cpp ****     previous_damping_             = damping_;
 234              		.loc 3 55 35 view .LVU53
 235 0016 4262     		str	r2, [r0, #36]	@ float
  56:dsp/fm_voice.cpp ****     previous_feedback_amount_     = feedback_amount_;
  57:dsp/fm_voice.cpp **** 
  58:dsp/fm_voice.cpp ****     amplitude_envelope_  = 0.0f;
  59:dsp/fm_voice.cpp ****     brightness_envelope_ = 0.0f;
  60:dsp/fm_voice.cpp **** 
  61:dsp/fm_voice.cpp ****     carrier_phase_   = 0;
 236              		.loc 3 61 22 view .LVU54
 237 0018 0022     		movs	r2, #0
 238              	.LBB204:
 239              	.LBB133:
  58:./dsp/fm_voice.h ****     }
 240              		.loc 1 58 28 view .LVU55
 241 001a 0160     		str	r1, [r0]	@ float
 242              	.LVL14:
  58:./dsp/fm_voice.h ****     }
 243              		.loc 1 58 28 view .LVU56
 244              	.LBE133:
 245              	.LBE204:
  46:dsp/fm_voice.cpp ****     set_brightness(0.5f);
 246              		.loc 3 46 5 is_stmt 1 view .LVU57
 247              	.LBB205:
 248              	.LBI134:
  61:./dsp/fm_voice.h **** 
 249              		.loc 1 61 17 view .LVU58
 250              	.LBB137:
  61:./dsp/fm_voice.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 12


 251              		.loc 1 61 42 view .LVU59
  61:./dsp/fm_voice.h **** 
 252              		.loc 1 61 42 is_stmt 0 view .LVU60
 253              	.LBE137:
 254              	.LBE205:
  47:dsp/fm_voice.cpp ****     set_damping(0.5f);
 255              		.loc 3 47 5 is_stmt 1 view .LVU61
 256              	.LBB206:
 257              	.LBI195:
  63:./dsp/fm_voice.h **** 
 258              		.loc 1 63 17 view .LVU62
 259              	.LBB197:
  63:./dsp/fm_voice.h **** 
 260              		.loc 1 63 52 view .LVU63
  63:./dsp/fm_voice.h **** 
 261              		.loc 1 63 52 is_stmt 0 view .LVU64
 262              	.LBE197:
 263              	.LBE206:
  48:dsp/fm_voice.cpp ****     set_position(0.5f);
 264              		.loc 3 48 5 is_stmt 1 view .LVU65
 265              	.LBB207:
 266              	.LBI198:
  65:./dsp/fm_voice.h **** 
 267              		.loc 1 65 17 view .LVU66
 268              	.LBB200:
  65:./dsp/fm_voice.h **** 
 269              		.loc 1 65 46 view .LVU67
  65:./dsp/fm_voice.h **** 
 270              		.loc 1 65 46 is_stmt 0 view .LVU68
 271              	.LBE200:
 272              	.LBE207:
  49:dsp/fm_voice.cpp ****     set_feedback_amount(0.0f);
 273              		.loc 3 49 5 is_stmt 1 view .LVU69
 274              	.LBB208:
 275              	.LBI201:
  67:./dsp/fm_voice.h **** 
 276              		.loc 1 67 17 view .LVU70
 277              	.LBB203:
  67:./dsp/fm_voice.h **** 
 278              		.loc 1 67 48 view .LVU71
  67:./dsp/fm_voice.h **** 
 279              		.loc 1 67 48 is_stmt 0 view .LVU72
 280              	.LBE203:
 281              	.LBE208:
  50:dsp/fm_voice.cpp **** 
 282              		.loc 3 50 5 is_stmt 1 view .LVU73
 283              	.LBB209:
 284              	.LBI139:
  69:./dsp/fm_voice.h ****     {
 285              		.loc 1 69 17 view .LVU74
 286              	.LBB141:
  71:./dsp/fm_voice.h ****     }
 287              		.loc 1 71 9 view .LVU75
 288              	.LBE141:
 289              	.LBE209:
  52:dsp/fm_voice.cpp ****     previous_modulator_frequency_ = carrier_frequency_;
 290              		.loc 3 52 35 is_stmt 0 view .LVU76
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 13


 291 001c 8161     		str	r1, [r0, #24]	@ float
  53:dsp/fm_voice.cpp ****     previous_brightness_          = brightness_;
 292              		.loc 3 53 35 view .LVU77
 293 001e C161     		str	r1, [r0, #28]	@ float
 294              	.LBB210:
 295              	.LBB189:
 296              	.LBB149:
 297              	.LBB150:
 298              		.file 5 "../../stmlib/dsp/filter.h"
   1:../../stmlib/dsp/filter.h **** // Copyright 2014 Emilie Gillet.
   2:../../stmlib/dsp/filter.h **** //
   3:../../stmlib/dsp/filter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/filter.h **** //
   5:../../stmlib/dsp/filter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/filter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/filter.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/filter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/filter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/filter.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/filter.h **** // 
  12:../../stmlib/dsp/filter.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/filter.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/filter.h **** // 
  15:../../stmlib/dsp/filter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/filter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/filter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/filter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/filter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/filter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/filter.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/filter.h **** // 
  23:../../stmlib/dsp/filter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/filter.h **** //
  25:../../stmlib/dsp/filter.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/filter.h **** //
  27:../../stmlib/dsp/filter.h **** // Zero-delay-feedback filters (one pole and SVF).
  28:../../stmlib/dsp/filter.h **** // Naive SVF.
  29:../../stmlib/dsp/filter.h **** 
  30:../../stmlib/dsp/filter.h **** #ifndef STMLIB_DSP_FILTER_H_
  31:../../stmlib/dsp/filter.h **** #define STMLIB_DSP_FILTER_H_
  32:../../stmlib/dsp/filter.h **** 
  33:../../stmlib/dsp/filter.h **** #include "stmlib/stmlib.h"
  34:../../stmlib/dsp/filter.h **** 
  35:../../stmlib/dsp/filter.h **** #include <cmath>
  36:../../stmlib/dsp/filter.h **** #include <algorithm>
  37:../../stmlib/dsp/filter.h **** 
  38:../../stmlib/dsp/filter.h **** namespace stmlib {
  39:../../stmlib/dsp/filter.h **** 
  40:../../stmlib/dsp/filter.h **** enum FilterMode {
  41:../../stmlib/dsp/filter.h ****   FILTER_MODE_LOW_PASS,
  42:../../stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS,
  43:../../stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS_NORMALIZED,
  44:../../stmlib/dsp/filter.h ****   FILTER_MODE_HIGH_PASS
  45:../../stmlib/dsp/filter.h **** };
  46:../../stmlib/dsp/filter.h **** 
  47:../../stmlib/dsp/filter.h **** enum FrequencyApproximation {
  48:../../stmlib/dsp/filter.h ****   FREQUENCY_EXACT,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 14


  49:../../stmlib/dsp/filter.h ****   FREQUENCY_ACCURATE,
  50:../../stmlib/dsp/filter.h ****   FREQUENCY_FAST,
  51:../../stmlib/dsp/filter.h ****   FREQUENCY_DIRTY
  52:../../stmlib/dsp/filter.h **** };
  53:../../stmlib/dsp/filter.h **** 
  54:../../stmlib/dsp/filter.h **** #define M_PI_F float(M_PI)
  55:../../stmlib/dsp/filter.h **** #define M_PI_POW_2 M_PI * M_PI
  56:../../stmlib/dsp/filter.h **** #define M_PI_POW_3 M_PI_POW_2 * M_PI
  57:../../stmlib/dsp/filter.h **** #define M_PI_POW_5 M_PI_POW_3 * M_PI_POW_2
  58:../../stmlib/dsp/filter.h **** #define M_PI_POW_7 M_PI_POW_5 * M_PI_POW_2
  59:../../stmlib/dsp/filter.h **** #define M_PI_POW_9 M_PI_POW_7 * M_PI_POW_2
  60:../../stmlib/dsp/filter.h **** #define M_PI_POW_11 M_PI_POW_9 * M_PI_POW_2
  61:../../stmlib/dsp/filter.h **** 
  62:../../stmlib/dsp/filter.h **** class DCBlocker {
  63:../../stmlib/dsp/filter.h ****  public:
  64:../../stmlib/dsp/filter.h ****   DCBlocker() { }
  65:../../stmlib/dsp/filter.h ****   ~DCBlocker() { }
  66:../../stmlib/dsp/filter.h ****   
  67:../../stmlib/dsp/filter.h ****   void Init(float pole) {
  68:../../stmlib/dsp/filter.h ****     x_ = 0.0f;
  69:../../stmlib/dsp/filter.h ****     y_ = 0.0f;
  70:../../stmlib/dsp/filter.h ****     pole_ = pole;
  71:../../stmlib/dsp/filter.h ****   }
  72:../../stmlib/dsp/filter.h ****   
  73:../../stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
  74:../../stmlib/dsp/filter.h ****     float x = x_;
  75:../../stmlib/dsp/filter.h ****     float y = y_;
  76:../../stmlib/dsp/filter.h ****     const float pole = pole_;
  77:../../stmlib/dsp/filter.h ****     while (size--) {
  78:../../stmlib/dsp/filter.h ****       float old_x = x;
  79:../../stmlib/dsp/filter.h ****       x = *in_out;
  80:../../stmlib/dsp/filter.h ****       *in_out++ = y = y * pole + x - old_x;
  81:../../stmlib/dsp/filter.h ****     }
  82:../../stmlib/dsp/filter.h ****     x_ = x;
  83:../../stmlib/dsp/filter.h ****     y_ = y;
  84:../../stmlib/dsp/filter.h ****   }
  85:../../stmlib/dsp/filter.h ****   
  86:../../stmlib/dsp/filter.h ****  private:
  87:../../stmlib/dsp/filter.h ****   float pole_;
  88:../../stmlib/dsp/filter.h ****   float x_;
  89:../../stmlib/dsp/filter.h ****   float y_;
  90:../../stmlib/dsp/filter.h **** };
  91:../../stmlib/dsp/filter.h **** 
  92:../../stmlib/dsp/filter.h **** class OnePole {
  93:../../stmlib/dsp/filter.h ****  public:
  94:../../stmlib/dsp/filter.h ****   OnePole() { }
  95:../../stmlib/dsp/filter.h ****   ~OnePole() { }
  96:../../stmlib/dsp/filter.h ****   
  97:../../stmlib/dsp/filter.h ****   void Init() {
  98:../../stmlib/dsp/filter.h ****     set_f<FREQUENCY_DIRTY>(0.01f);
  99:../../stmlib/dsp/filter.h ****     Reset();
 100:../../stmlib/dsp/filter.h ****   }
 101:../../stmlib/dsp/filter.h ****   
 102:../../stmlib/dsp/filter.h ****   void Reset() {
 103:../../stmlib/dsp/filter.h ****     state_ = 0.0f;
 104:../../stmlib/dsp/filter.h ****   }
 105:../../stmlib/dsp/filter.h ****   
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 15


 106:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 107:../../stmlib/dsp/filter.h ****   static inline float tan(float f) {
 108:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 109:../../stmlib/dsp/filter.h ****       // Clip coefficient to about 100.
 110:../../stmlib/dsp/filter.h ****       f = f < 0.497f ? f : 0.497f;
 111:../../stmlib/dsp/filter.h ****       return tanf(M_PI * f);
 112:../../stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_DIRTY) {
 113:../../stmlib/dsp/filter.h ****       // Optimized for frequencies below 8kHz.
 114:../../stmlib/dsp/filter.h ****       const float a = 3.736e-01 * M_PI_POW_3;
 115:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + a * f * f);
 116:../../stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_FAST) {
 117:../../stmlib/dsp/filter.h ****       // The usual tangent approximation uses 3.1755e-01 and 2.033e-01, but
 118:../../stmlib/dsp/filter.h ****       // the coefficients used here are optimized to minimize error for the
 119:../../stmlib/dsp/filter.h ****       // 16Hz to 16kHz range, with a sample rate of 48kHz.
 120:../../stmlib/dsp/filter.h ****       const float a = 3.260e-01 * M_PI_POW_3;
 121:../../stmlib/dsp/filter.h ****       const float b = 1.823e-01 * M_PI_POW_5;
 122:../../stmlib/dsp/filter.h ****       float f2 = f * f;
 123:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + b * f2));
 124:../../stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 125:../../stmlib/dsp/filter.h ****       // These coefficients don't need to be tweaked for the audio range.
 126:../../stmlib/dsp/filter.h ****       const float a = 3.333314036e-01 * M_PI_POW_3;
 127:../../stmlib/dsp/filter.h ****       const float b = 1.333923995e-01 * M_PI_POW_5;
 128:../../stmlib/dsp/filter.h ****       const float c = 5.33740603e-02 * M_PI_POW_7;
 129:../../stmlib/dsp/filter.h ****       const float d = 2.900525e-03 * M_PI_POW_9;
 130:../../stmlib/dsp/filter.h ****       const float e = 9.5168091e-03 * M_PI_POW_11;
 131:../../stmlib/dsp/filter.h ****       float f2 = f * f;
 132:../../stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 133:../../stmlib/dsp/filter.h ****     }
 134:../../stmlib/dsp/filter.h ****   }
 135:../../stmlib/dsp/filter.h ****   
 136:../../stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 137:../../stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 138:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 139:../../stmlib/dsp/filter.h ****   inline void set_f(float f) {
 140:../../stmlib/dsp/filter.h ****     g_ = tan<approximation>(f);
 141:../../stmlib/dsp/filter.h ****     gi_ = 1.0f / (1.0f + g_);
 142:../../stmlib/dsp/filter.h ****   }
 143:../../stmlib/dsp/filter.h ****   
 144:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 145:../../stmlib/dsp/filter.h ****   inline float Process(float in) {
 146:../../stmlib/dsp/filter.h ****     float lp;
 147:../../stmlib/dsp/filter.h ****     lp = (g_ * in + state_) * gi_;
 148:../../stmlib/dsp/filter.h ****     state_ = g_ * (in - lp) + lp;
 149:../../stmlib/dsp/filter.h **** 
 150:../../stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 151:../../stmlib/dsp/filter.h ****       return lp;
 152:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 153:../../stmlib/dsp/filter.h ****       return in - lp;
 154:../../stmlib/dsp/filter.h ****     } else {
 155:../../stmlib/dsp/filter.h ****       return 0.0f;
 156:../../stmlib/dsp/filter.h ****     }
 157:../../stmlib/dsp/filter.h ****   }
 158:../../stmlib/dsp/filter.h ****   
 159:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 160:../../stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
 161:../../stmlib/dsp/filter.h ****     while (size--) {
 162:../../stmlib/dsp/filter.h ****       *in_out = Process<mode>(*in_out);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 16


 163:../../stmlib/dsp/filter.h ****       ++in_out;
 164:../../stmlib/dsp/filter.h ****     }
 165:../../stmlib/dsp/filter.h ****   }
 166:../../stmlib/dsp/filter.h ****   
 167:../../stmlib/dsp/filter.h ****  private:
 168:../../stmlib/dsp/filter.h ****   float g_;
 169:../../stmlib/dsp/filter.h ****   float gi_;
 170:../../stmlib/dsp/filter.h ****   float state_;
 171:../../stmlib/dsp/filter.h ****   
 172:../../stmlib/dsp/filter.h ****   DISALLOW_COPY_AND_ASSIGN(OnePole);
 173:../../stmlib/dsp/filter.h **** };
 174:../../stmlib/dsp/filter.h **** 
 175:../../stmlib/dsp/filter.h **** 
 176:../../stmlib/dsp/filter.h **** 
 177:../../stmlib/dsp/filter.h **** class Svf {
 178:../../stmlib/dsp/filter.h ****  public:
 179:../../stmlib/dsp/filter.h ****   Svf() { }
 180:../../stmlib/dsp/filter.h ****   ~Svf() { }
 181:../../stmlib/dsp/filter.h ****   
 182:../../stmlib/dsp/filter.h ****   void Init() {
 183:../../stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 184:../../stmlib/dsp/filter.h ****     Reset();
 185:../../stmlib/dsp/filter.h ****   }
 186:../../stmlib/dsp/filter.h ****   
 187:../../stmlib/dsp/filter.h ****   void Reset() {
 188:../../stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
 189:../../stmlib/dsp/filter.h ****   }
 190:../../stmlib/dsp/filter.h ****   
 191:../../stmlib/dsp/filter.h ****   // Copy settings from another filter.
 192:../../stmlib/dsp/filter.h ****   inline void set(const Svf& f) {
 193:../../stmlib/dsp/filter.h ****     g_ = f.g();
 194:../../stmlib/dsp/filter.h ****     r_ = f.r();
 195:../../stmlib/dsp/filter.h ****     h_ = f.h();
 196:../../stmlib/dsp/filter.h ****   }
 197:../../stmlib/dsp/filter.h **** 
 198:../../stmlib/dsp/filter.h ****   // Set all parameters from LUT.
 199:../../stmlib/dsp/filter.h ****   inline void set_g_r_h(float g, float r, float h) {
 200:../../stmlib/dsp/filter.h ****     g_ = g;
 201:../../stmlib/dsp/filter.h ****     r_ = r;
 202:../../stmlib/dsp/filter.h ****     h_ = h;
 203:../../stmlib/dsp/filter.h ****   }
 204:../../stmlib/dsp/filter.h ****   
 205:../../stmlib/dsp/filter.h ****   // Set frequency and resonance coefficients from LUT, adjust remaining
 206:../../stmlib/dsp/filter.h ****   // parameter.
 207:../../stmlib/dsp/filter.h ****   inline void set_g_r(float g, float r) {
 208:../../stmlib/dsp/filter.h ****     g_ = g;
 209:../../stmlib/dsp/filter.h ****     r_ = r;
 210:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 211:../../stmlib/dsp/filter.h ****   }
 212:../../stmlib/dsp/filter.h **** 
 213:../../stmlib/dsp/filter.h ****   // Set frequency from LUT, resonance in true units, adjust the rest.
 214:../../stmlib/dsp/filter.h ****   inline void set_g_q(float g, float resonance) {
 215:../../stmlib/dsp/filter.h ****     g_ = g;
 216:../../stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 217:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 218:../../stmlib/dsp/filter.h ****   }
 219:../../stmlib/dsp/filter.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 17


 220:../../stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 221:../../stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 222:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 223:../../stmlib/dsp/filter.h ****   inline void set_f_q(float f, float resonance) {
 224:../../stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 225:../../stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 226:../../stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 227:../../stmlib/dsp/filter.h ****   }
 228:../../stmlib/dsp/filter.h ****   
 229:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 230:../../stmlib/dsp/filter.h ****   inline float Process(float in) {
 231:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 232:../../stmlib/dsp/filter.h ****     hp = (in - r_ * state_1_ - g_ * state_1_ - state_2_) * h_;
 233:../../stmlib/dsp/filter.h ****     bp = g_ * hp + state_1_;
 234:../../stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 235:../../stmlib/dsp/filter.h ****     lp = g_ * bp + state_2_;
 236:../../stmlib/dsp/filter.h ****     state_2_ = g_ * bp + lp;
 237:../../stmlib/dsp/filter.h ****     
 238:../../stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 239:../../stmlib/dsp/filter.h ****       return lp;
 240:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS) {
 241:../../stmlib/dsp/filter.h ****       return bp;
 242:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 243:../../stmlib/dsp/filter.h ****       return bp * r_;
 244:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 245:../../stmlib/dsp/filter.h ****       return hp;
 246:../../stmlib/dsp/filter.h ****     }
 247:../../stmlib/dsp/filter.h ****   }
 248:../../stmlib/dsp/filter.h ****   
 249:../../stmlib/dsp/filter.h ****   template<FilterMode mode_1, FilterMode mode_2>
 250:../../stmlib/dsp/filter.h ****   inline void Process(float in, float* out_1, float* out_2) {
 251:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 252:../../stmlib/dsp/filter.h ****     hp = (in - r_ * state_1_ - g_ * state_1_ - state_2_) * h_;
 253:../../stmlib/dsp/filter.h ****     bp = g_ * hp + state_1_;
 254:../../stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 255:../../stmlib/dsp/filter.h ****     lp = g_ * bp + state_2_;
 256:../../stmlib/dsp/filter.h ****     state_2_ = g_ * bp + lp;
 257:../../stmlib/dsp/filter.h ****     
 258:../../stmlib/dsp/filter.h ****     if (mode_1 == FILTER_MODE_LOW_PASS) {
 259:../../stmlib/dsp/filter.h ****       *out_1 = lp;
 260:../../stmlib/dsp/filter.h ****     } else if (mode_1 == FILTER_MODE_BAND_PASS) {
 261:../../stmlib/dsp/filter.h ****       *out_1 = bp;
 262:../../stmlib/dsp/filter.h ****     } else if (mode_1 == FILTER_MODE_BAND_PASS_NORMALIZED) {
 263:../../stmlib/dsp/filter.h ****       *out_1 = bp * r_;
 264:../../stmlib/dsp/filter.h ****     } else if (mode_1 == FILTER_MODE_HIGH_PASS) {
 265:../../stmlib/dsp/filter.h ****       *out_1 = hp;
 266:../../stmlib/dsp/filter.h ****     }
 267:../../stmlib/dsp/filter.h **** 
 268:../../stmlib/dsp/filter.h ****     if (mode_2 == FILTER_MODE_LOW_PASS) {
 269:../../stmlib/dsp/filter.h ****       *out_2 = lp;
 270:../../stmlib/dsp/filter.h ****     } else if (mode_2 == FILTER_MODE_BAND_PASS) {
 271:../../stmlib/dsp/filter.h ****       *out_2 = bp;
 272:../../stmlib/dsp/filter.h ****     } else if (mode_2 == FILTER_MODE_BAND_PASS_NORMALIZED) {
 273:../../stmlib/dsp/filter.h ****       *out_2 = bp * r_;
 274:../../stmlib/dsp/filter.h ****     } else if (mode_2 == FILTER_MODE_HIGH_PASS) {
 275:../../stmlib/dsp/filter.h ****       *out_2 = hp;
 276:../../stmlib/dsp/filter.h ****     }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 18


 277:../../stmlib/dsp/filter.h ****   }
 278:../../stmlib/dsp/filter.h ****   
 279:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 280:../../stmlib/dsp/filter.h ****   inline void Process(const float* in, float* out, size_t size) {
 281:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 282:../../stmlib/dsp/filter.h ****     float state_1 = state_1_;
 283:../../stmlib/dsp/filter.h ****     float state_2 = state_2_;
 284:../../stmlib/dsp/filter.h ****     
 285:../../stmlib/dsp/filter.h ****     while (size--) {
 286:../../stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 287:../../stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 288:../../stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 289:../../stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 290:../../stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 291:../../stmlib/dsp/filter.h ****     
 292:../../stmlib/dsp/filter.h ****       float value;
 293:../../stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 294:../../stmlib/dsp/filter.h ****         value = lp;
 295:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 296:../../stmlib/dsp/filter.h ****         value = bp;
 297:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 298:../../stmlib/dsp/filter.h ****         value = bp * r_;
 299:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
 300:../../stmlib/dsp/filter.h ****         value = hp;
 301:../../stmlib/dsp/filter.h ****       }
 302:../../stmlib/dsp/filter.h ****       
 303:../../stmlib/dsp/filter.h ****       *out = value;
 304:../../stmlib/dsp/filter.h ****       ++out;
 305:../../stmlib/dsp/filter.h ****       ++in;
 306:../../stmlib/dsp/filter.h ****     }
 307:../../stmlib/dsp/filter.h ****     state_1_ = state_1;
 308:../../stmlib/dsp/filter.h ****     state_2_ = state_2;
 309:../../stmlib/dsp/filter.h ****   }
 310:../../stmlib/dsp/filter.h ****   
 311:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 312:../../stmlib/dsp/filter.h ****   inline void ProcessAdd(const float* in, float* out, size_t size, float gain) {
 313:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 314:../../stmlib/dsp/filter.h ****     float state_1 = state_1_;
 315:../../stmlib/dsp/filter.h ****     float state_2 = state_2_;
 316:../../stmlib/dsp/filter.h ****     
 317:../../stmlib/dsp/filter.h ****     while (size--) {
 318:../../stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 319:../../stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 320:../../stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 321:../../stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 322:../../stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 323:../../stmlib/dsp/filter.h ****     
 324:../../stmlib/dsp/filter.h ****       float value;
 325:../../stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 326:../../stmlib/dsp/filter.h ****         value = lp;
 327:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 328:../../stmlib/dsp/filter.h ****         value = bp;
 329:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 330:../../stmlib/dsp/filter.h ****         value = bp * r_;
 331:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
 332:../../stmlib/dsp/filter.h ****         value = hp;
 333:../../stmlib/dsp/filter.h ****       }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 19


 334:../../stmlib/dsp/filter.h ****       
 335:../../stmlib/dsp/filter.h ****       *out += gain * value;
 336:../../stmlib/dsp/filter.h ****       ++out;
 337:../../stmlib/dsp/filter.h ****       ++in;
 338:../../stmlib/dsp/filter.h ****     }
 339:../../stmlib/dsp/filter.h ****     state_1_ = state_1;
 340:../../stmlib/dsp/filter.h ****     state_2_ = state_2;
 341:../../stmlib/dsp/filter.h ****   }
 342:../../stmlib/dsp/filter.h ****   
 343:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 344:../../stmlib/dsp/filter.h ****   inline void Process(const float* in, float* out, size_t size, size_t stride) {
 345:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 346:../../stmlib/dsp/filter.h ****     float state_1 = state_1_;
 347:../../stmlib/dsp/filter.h ****     float state_2 = state_2_;
 348:../../stmlib/dsp/filter.h ****     
 349:../../stmlib/dsp/filter.h ****     while (size--) {
 350:../../stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 351:../../stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 352:../../stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 353:../../stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 354:../../stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 355:../../stmlib/dsp/filter.h ****     
 356:../../stmlib/dsp/filter.h ****       float value;
 357:../../stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 358:../../stmlib/dsp/filter.h ****         value = lp;
 359:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 360:../../stmlib/dsp/filter.h ****         value = bp;
 361:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 362:../../stmlib/dsp/filter.h ****         value = bp * r_;
 363:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
 364:../../stmlib/dsp/filter.h ****         value = hp;
 365:../../stmlib/dsp/filter.h ****       }
 366:../../stmlib/dsp/filter.h ****       
 367:../../stmlib/dsp/filter.h ****       *out = value;
 368:../../stmlib/dsp/filter.h ****       out += stride;
 369:../../stmlib/dsp/filter.h ****       in += stride;
 370:../../stmlib/dsp/filter.h ****     }
 371:../../stmlib/dsp/filter.h ****     state_1_ = state_1;
 372:../../stmlib/dsp/filter.h ****     state_2_ = state_2;
 373:../../stmlib/dsp/filter.h ****   }
 374:../../stmlib/dsp/filter.h ****   
 375:../../stmlib/dsp/filter.h ****   inline void ProcessMultimode(
 376:../../stmlib/dsp/filter.h ****       const float* in,
 377:../../stmlib/dsp/filter.h ****       float* out,
 378:../../stmlib/dsp/filter.h ****       size_t size,
 379:../../stmlib/dsp/filter.h ****       float mode) {
 380:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 381:../../stmlib/dsp/filter.h ****     float state_1 = state_1_;
 382:../../stmlib/dsp/filter.h ****     float state_2 = state_2_;
 383:../../stmlib/dsp/filter.h ****     float hp_gain = mode < 0.5f ? -mode * 2.0f : -2.0f + mode * 2.0f;
 384:../../stmlib/dsp/filter.h ****     float lp_gain = mode < 0.5f ? 1.0f - mode * 2.0f : 0.0f;
 385:../../stmlib/dsp/filter.h ****     float bp_gain = mode < 0.5f ? 0.0f : mode * 2.0f - 1.0f;
 386:../../stmlib/dsp/filter.h ****     while (size--) {
 387:../../stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 388:../../stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 389:../../stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 390:../../stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 20


 391:../../stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 392:../../stmlib/dsp/filter.h ****       *out = hp_gain * hp + bp_gain * bp + lp_gain * lp;
 393:../../stmlib/dsp/filter.h ****       ++in;
 394:../../stmlib/dsp/filter.h ****       ++out;
 395:../../stmlib/dsp/filter.h ****     }
 396:../../stmlib/dsp/filter.h ****     state_1_ = state_1;
 397:../../stmlib/dsp/filter.h ****     state_2_ = state_2;
 398:../../stmlib/dsp/filter.h ****   }
 399:../../stmlib/dsp/filter.h ****   
 400:../../stmlib/dsp/filter.h ****   inline void ProcessMultimodeLPtoHP(
 401:../../stmlib/dsp/filter.h ****       const float* in,
 402:../../stmlib/dsp/filter.h ****       float* out,
 403:../../stmlib/dsp/filter.h ****       size_t size,
 404:../../stmlib/dsp/filter.h ****       float mode) {
 405:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 406:../../stmlib/dsp/filter.h ****     float state_1 = state_1_;
 407:../../stmlib/dsp/filter.h ****     float state_2 = state_2_;
 408:../../stmlib/dsp/filter.h ****     float hp_gain = std::min(-mode * 2.0f + 1.0f, 0.0f);
 409:../../stmlib/dsp/filter.h ****     float bp_gain = 1.0f - 2.0f * fabsf(mode - 0.5f);
 410:../../stmlib/dsp/filter.h ****     float lp_gain = std::max(1.0f - mode * 2.0f, 0.0f);
 411:../../stmlib/dsp/filter.h ****     while (size--) {
 412:../../stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 413:../../stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 414:../../stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 415:../../stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 416:../../stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 417:../../stmlib/dsp/filter.h ****       *out = hp_gain * hp + bp_gain * bp + lp_gain * lp;
 418:../../stmlib/dsp/filter.h ****       ++in;
 419:../../stmlib/dsp/filter.h ****       ++out;
 420:../../stmlib/dsp/filter.h ****     }
 421:../../stmlib/dsp/filter.h ****     state_1_ = state_1;
 422:../../stmlib/dsp/filter.h ****     state_2_ = state_2;
 423:../../stmlib/dsp/filter.h ****   }
 424:../../stmlib/dsp/filter.h ****   
 425:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 426:../../stmlib/dsp/filter.h ****   inline void Process(
 427:../../stmlib/dsp/filter.h ****       const float* in, float* out_1, float* out_2, size_t size,
 428:../../stmlib/dsp/filter.h ****       float gain_1, float gain_2) {
 429:../../stmlib/dsp/filter.h ****     float hp, bp, lp;
 430:../../stmlib/dsp/filter.h ****     float state_1 = state_1_;
 431:../../stmlib/dsp/filter.h ****     float state_2 = state_2_;
 432:../../stmlib/dsp/filter.h ****     
 433:../../stmlib/dsp/filter.h ****     while (size--) {
 434:../../stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 435:../../stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 436:../../stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 437:../../stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 438:../../stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 439:../../stmlib/dsp/filter.h ****     
 440:../../stmlib/dsp/filter.h ****       float value;
 441:../../stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 442:../../stmlib/dsp/filter.h ****         value = lp;
 443:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 444:../../stmlib/dsp/filter.h ****         value = bp;
 445:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 446:../../stmlib/dsp/filter.h ****         value = bp * r_;
 447:../../stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 21


 448:../../stmlib/dsp/filter.h ****         value = hp;
 449:../../stmlib/dsp/filter.h ****       }
 450:../../stmlib/dsp/filter.h ****       
 451:../../stmlib/dsp/filter.h ****       *out_1 += value * gain_1;
 452:../../stmlib/dsp/filter.h ****       *out_2 += value * gain_2;
 453:../../stmlib/dsp/filter.h ****       ++out_1;
 454:../../stmlib/dsp/filter.h ****       ++out_2;
 455:../../stmlib/dsp/filter.h ****       ++in;
 456:../../stmlib/dsp/filter.h ****     }
 457:../../stmlib/dsp/filter.h ****     state_1_ = state_1;
 458:../../stmlib/dsp/filter.h ****     state_2_ = state_2;
 459:../../stmlib/dsp/filter.h ****   }
 460:../../stmlib/dsp/filter.h ****   
 461:../../stmlib/dsp/filter.h ****   inline float g() const { return g_; }
 462:../../stmlib/dsp/filter.h ****   inline float r() const { return r_; }
 463:../../stmlib/dsp/filter.h ****   inline float h() const { return h_; }
 464:../../stmlib/dsp/filter.h ****   
 465:../../stmlib/dsp/filter.h ****  private:
 466:../../stmlib/dsp/filter.h ****   float g_;
 467:../../stmlib/dsp/filter.h ****   float r_;
 468:../../stmlib/dsp/filter.h ****   float h_;
 469:../../stmlib/dsp/filter.h **** 
 470:../../stmlib/dsp/filter.h ****   float state_1_;
 471:../../stmlib/dsp/filter.h ****   float state_2_;
 472:../../stmlib/dsp/filter.h ****   
 473:../../stmlib/dsp/filter.h ****   DISALLOW_COPY_AND_ASSIGN(Svf);
 474:../../stmlib/dsp/filter.h **** };
 475:../../stmlib/dsp/filter.h **** 
 476:../../stmlib/dsp/filter.h **** 
 477:../../stmlib/dsp/filter.h **** 
 478:../../stmlib/dsp/filter.h **** // Naive Chamberlin SVF.
 479:../../stmlib/dsp/filter.h **** class NaiveSvf {
 480:../../stmlib/dsp/filter.h ****  public:
 481:../../stmlib/dsp/filter.h ****   NaiveSvf() { }
 482:../../stmlib/dsp/filter.h ****   ~NaiveSvf() { }
 483:../../stmlib/dsp/filter.h ****   
 484:../../stmlib/dsp/filter.h ****   void Init() {
 485:../../stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 486:../../stmlib/dsp/filter.h ****     Reset();
 487:../../stmlib/dsp/filter.h ****   }
 488:../../stmlib/dsp/filter.h ****   
 489:../../stmlib/dsp/filter.h ****   void Reset() {
 490:../../stmlib/dsp/filter.h ****     lp_ = bp_ = 0.0f;
 491:../../stmlib/dsp/filter.h ****   }
 492:../../stmlib/dsp/filter.h ****   
 493:../../stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 494:../../stmlib/dsp/filter.h ****   // are available to avoid the cost of sinf.
 495:../../stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 496:../../stmlib/dsp/filter.h ****   inline void set_f_q(float f, float resonance) {
 497:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 498:../../stmlib/dsp/filter.h ****       f = f < 0.497f ? f : 0.497f;
 499:../../stmlib/dsp/filter.h ****       f_ = 2.0f * sinf(M_PI_F * f);
 500:../../stmlib/dsp/filter.h ****     } else {
 501:../../stmlib/dsp/filter.h ****       f = f < 0.158f ? f : 0.158f;
 502:../../stmlib/dsp/filter.h ****       f_ = 2.0f * M_PI_F * f;
 299              		.loc 5 502 10 view .LVU78
 300 0020 1A49     		ldr	r1, .L8+8
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 22


 301              	.LBE150:
 302              	.LBE149:
 303              	.LBB153:
 304              	.LBB147:
 305              		.loc 4 154 5 view .LVU79
 306              		.syntax unified
 307              	@ 154 "../../stmlib/dsp/dsp.h" 1
 308 0022 F1EEE77A 		vsqrt.f32 s15, s15
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
 312              	.LBE147:
 313              	.LBE153:
 314              	.LBE189:
 315              	.LBE210:
  62:dsp/fm_voice.cpp ****     modulator_phase_ = 0;
 316              		.loc 3 62 22 view .LVU80
 317 0026 C0E90F22 		strd	r2, r2, [r0, #60]
 318              	.LBB211:
 319              	.LBB190:
 320              	.LBB154:
 321              	.LBB155:
 322              		.loc 5 502 10 view .LVU81
 323 002a 194A     		ldr	r2, .L8+12
 324              	.LBE155:
 325              	.LBE154:
 326              		.file 6 "./dsp/follower.h"
   1:./dsp/follower.h **** // Copyright 2015 Emilie Gillet.
   2:./dsp/follower.h **** //
   3:./dsp/follower.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./dsp/follower.h **** //
   5:./dsp/follower.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./dsp/follower.h **** // of this software and associated documentation files (the "Software"), to deal
   7:./dsp/follower.h **** // in the Software without restriction, including without limitation the rights
   8:./dsp/follower.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./dsp/follower.h **** // copies of the Software, and to permit persons to whom the Software is
  10:./dsp/follower.h **** // furnished to do so, subject to the following conditions:
  11:./dsp/follower.h **** //
  12:./dsp/follower.h **** // The above copyright notice and this permission notice shall be included in
  13:./dsp/follower.h **** // all copies or substantial portions of the Software.
  14:./dsp/follower.h **** //
  15:./dsp/follower.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./dsp/follower.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./dsp/follower.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./dsp/follower.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./dsp/follower.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./dsp/follower.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./dsp/follower.h **** // THE SOFTWARE.
  22:./dsp/follower.h **** //
  23:./dsp/follower.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./dsp/follower.h **** //
  25:./dsp/follower.h **** // -----------------------------------------------------------------------------
  26:./dsp/follower.h **** //
  27:./dsp/follower.h **** // Envelope / centroid follower for FM voice.
  28:./dsp/follower.h **** 
  29:./dsp/follower.h **** #ifndef TORUS_DSP_FOLLOWER_H_
  30:./dsp/follower.h **** #define TORUS_DSP_FOLLOWER_H_
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 23


  31:./dsp/follower.h **** 
  32:./dsp/follower.h **** #include "stmlib/stmlib.h"
  33:./dsp/follower.h **** 
  34:./dsp/follower.h **** #include <algorithm>
  35:./dsp/follower.h **** 
  36:./dsp/follower.h **** #include "stmlib/dsp/dsp.h"
  37:./dsp/follower.h **** #include "stmlib/dsp/filter.h"
  38:./dsp/follower.h **** 
  39:./dsp/follower.h **** namespace torus
  40:./dsp/follower.h **** {
  41:./dsp/follower.h **** using namespace stmlib;
  42:./dsp/follower.h **** 
  43:./dsp/follower.h **** class Follower
  44:./dsp/follower.h **** {
  45:./dsp/follower.h ****   public:
  46:./dsp/follower.h ****     Follower() {}
  47:./dsp/follower.h ****     ~Follower() {}
  48:./dsp/follower.h **** 
  49:./dsp/follower.h ****     void Init(float low, float low_mid, float mid_high)
  50:./dsp/follower.h ****     {
  51:./dsp/follower.h ****         low_mid_filter_.Init();
  52:./dsp/follower.h ****         mid_high_filter_.Init();
  53:./dsp/follower.h **** 
  54:./dsp/follower.h ****         low_mid_filter_.set_f_q<FREQUENCY_DIRTY>(low_mid, 0.5f);
  55:./dsp/follower.h ****         mid_high_filter_.set_f_q<FREQUENCY_DIRTY>(mid_high, 0.5f);
  56:./dsp/follower.h ****         attack_[0] = low_mid;
  57:./dsp/follower.h ****         decay_[0]  = Sqrt(low_mid * low);
 327              		.loc 6 57 20 view .LVU82
 328 002c C0ED1D7A 		vstr.32	s15, [r0, #116]
 329              	.LBB158:
 330              	.LBB156:
 331              		.loc 5 502 10 view .LVU83
 332 0030 8264     		str	r2, [r0, #72]	@ float
 503:../../stmlib/dsp/filter.h ****     }
 504:../../stmlib/dsp/filter.h ****     damp_ = 1.0f / resonance;
 333              		.loc 5 504 11 view .LVU84
 334 0032 4FF08042 		mov	r2, #1073741824
 335              	.LBE156:
 336              	.LBE158:
 337              	.LBB159:
 338              	.LBB160:
 339              		.loc 4 154 5 view .LVU85
 340 0036 DFED177A 		vldr.32	s15, .L8+16
 341              	.LBE160:
 342              	.LBE159:
 343              	.LBB163:
 344              	.LBB157:
 345              		.loc 5 504 11 view .LVU86
 346 003a C264     		str	r2, [r0, #76]	@ float
 347              	.LBE157:
 348              	.LBE163:
 349              	.LBB164:
 350              	.LBB151:
 351 003c C265     		str	r2, [r0, #92]	@ float
 352              	.LBE151:
 353              	.LBE164:
  56:./dsp/follower.h ****         decay_[0]  = Sqrt(low_mid * low);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 24


 354              		.loc 6 56 20 view .LVU87
 355 003e 164A     		ldr	r2, .L8+20
 356              	.LBB165:
 357              	.LBB161:
 358              		.loc 4 154 5 view .LVU88
 359              		.syntax unified
 360              	@ 154 "../../stmlib/dsp/dsp.h" 1
 361 0040 F1EEE77A 		vsqrt.f32 s15, s15
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365              	.LBE161:
 366              	.LBE165:
 367              	.LBB166:
 368              	.LBB167:
 369 0044 9FED157A 		vldr.32	s14, .L8+24
 370              	.LBE167:
 371              	.LBE166:
 372              	.LBE190:
 373              	.LBE211:
 374              	.LBB212:
 375              	.LBB142:
  71:./dsp/fm_voice.h ****     }
 376              		.loc 1 71 26 view .LVU89
 377 0048 4361     		str	r3, [r0, #20]	@ float
 378              	.LVL15:
  71:./dsp/fm_voice.h ****     }
 379              		.loc 1 71 26 view .LVU90
 380              	.LBE142:
 381              	.LBE212:
  52:dsp/fm_voice.cpp ****     previous_modulator_frequency_ = carrier_frequency_;
 382              		.loc 3 52 5 is_stmt 1 view .LVU91
  53:dsp/fm_voice.cpp ****     previous_brightness_          = brightness_;
 383              		.loc 3 53 5 view .LVU92
  54:dsp/fm_voice.cpp ****     previous_damping_             = damping_;
 384              		.loc 3 54 5 view .LVU93
  55:dsp/fm_voice.cpp ****     previous_feedback_amount_     = feedback_amount_;
 385              		.loc 3 55 5 view .LVU94
  56:dsp/fm_voice.cpp **** 
 386              		.loc 3 56 5 view .LVU95
  56:dsp/fm_voice.cpp **** 
 387              		.loc 3 56 35 is_stmt 0 view .LVU96
 388 004a 8362     		str	r3, [r0, #40]	@ float
  58:dsp/fm_voice.cpp ****     brightness_envelope_ = 0.0f;
 389              		.loc 3 58 5 is_stmt 1 view .LVU97
  58:dsp/fm_voice.cpp ****     brightness_envelope_ = 0.0f;
 390              		.loc 3 58 26 is_stmt 0 view .LVU98
 391 004c C362     		str	r3, [r0, #44]	@ float
  59:dsp/fm_voice.cpp **** 
 392              		.loc 3 59 5 is_stmt 1 view .LVU99
  59:dsp/fm_voice.cpp **** 
 393              		.loc 3 59 26 is_stmt 0 view .LVU100
 394 004e 0363     		str	r3, [r0, #48]	@ float
  61:dsp/fm_voice.cpp ****     modulator_phase_ = 0;
 395              		.loc 3 61 5 is_stmt 1 view .LVU101
  63:dsp/fm_voice.cpp ****     gain_            = 0.0f;
 396              		.loc 3 63 5 view .LVU102
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 25


 397              		.loc 3 63 22 is_stmt 0 view .LVU103
 398 0050 4363     		str	r3, [r0, #52]	@ float
  64:dsp/fm_voice.cpp ****     fm_amount_       = 0.0f;
 399              		.loc 3 64 5 is_stmt 1 view .LVU104
 400              		.loc 3 64 22 is_stmt 0 view .LVU105
 401 0052 8363     		str	r3, [r0, #56]	@ float
  65:dsp/fm_voice.cpp **** 
  66:dsp/fm_voice.cpp ****     follower_.Init(
 402              		.loc 3 66 5 is_stmt 1 view .LVU106
 403              	.LVL16:
 404              	.LBB213:
 405              	.LBI143:
  49:./dsp/follower.h ****     {
 406              		.loc 6 49 10 view .LVU107
 407              	.LBB191:
  51:./dsp/follower.h ****         mid_high_filter_.Init();
 408              		.loc 6 51 9 view .LVU108
 409              	.LBB169:
 410              	.LBI169:
 484:../../stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 411              		.loc 5 484 8 view .LVU109
 412              	.LBE169:
 413              	.LBE191:
 414              	.LBE213:
 485:../../stmlib/dsp/filter.h ****     Reset();
 415              		.loc 5 485 5 view .LVU110
 486:../../stmlib/dsp/filter.h ****   }
 416              		.loc 5 486 5 view .LVU111
 417              	.LBB214:
 418              	.LBB192:
 419              	.LBB172:
 420              	.LBB170:
 421              	.LBI170:
 489:../../stmlib/dsp/filter.h ****     lp_ = bp_ = 0.0f;
 422              		.loc 5 489 8 view .LVU112
 423              	.LBB171:
 490:../../stmlib/dsp/filter.h ****   }
 424              		.loc 5 490 5 view .LVU113
 490:../../stmlib/dsp/filter.h ****   }
 425              		.loc 5 490 15 is_stmt 0 view .LVU114
 426 0054 4365     		str	r3, [r0, #84]	@ float
 490:../../stmlib/dsp/filter.h ****   }
 427              		.loc 5 490 9 view .LVU115
 428 0056 0365     		str	r3, [r0, #80]	@ float
 429              	.LVL17:
 490:../../stmlib/dsp/filter.h ****   }
 430              		.loc 5 490 9 view .LVU116
 431              	.LBE171:
 432              	.LBE170:
 433              	.LBE172:
  52:./dsp/follower.h **** 
 434              		.loc 6 52 9 is_stmt 1 view .LVU117
 435              	.LBB173:
 436              	.LBI173:
 484:../../stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 437              		.loc 5 484 8 view .LVU118
 438              	.LBE173:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 26


 439              	.LBE192:
 440              	.LBE214:
 485:../../stmlib/dsp/filter.h ****     Reset();
 441              		.loc 5 485 5 view .LVU119
 486:../../stmlib/dsp/filter.h ****   }
 442              		.loc 5 486 5 view .LVU120
 443              	.LBB215:
 444              	.LBB193:
 445              	.LBB176:
 446              	.LBB174:
 447              	.LBI174:
 489:../../stmlib/dsp/filter.h ****     lp_ = bp_ = 0.0f;
 448              		.loc 5 489 8 view .LVU121
 449              	.LBB175:
 490:../../stmlib/dsp/filter.h ****   }
 450              		.loc 5 490 5 view .LVU122
 490:../../stmlib/dsp/filter.h ****   }
 451              		.loc 5 490 15 is_stmt 0 view .LVU123
 452 0058 4366     		str	r3, [r0, #100]	@ float
 490:../../stmlib/dsp/filter.h ****   }
 453              		.loc 5 490 9 view .LVU124
 454 005a 0366     		str	r3, [r0, #96]	@ float
 455              	.LVL18:
 490:../../stmlib/dsp/filter.h ****   }
 456              		.loc 5 490 9 view .LVU125
 457              	.LBE175:
 458              	.LBE174:
 459              	.LBE176:
  54:./dsp/follower.h ****         mid_high_filter_.set_f_q<FREQUENCY_DIRTY>(mid_high, 0.5f);
 460              		.loc 6 54 9 is_stmt 1 view .LVU126
 461              	.LBB177:
 462              	.LBI154:
 496:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 463              		.loc 5 496 15 view .LVU127
 496:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 464              		.loc 5 496 15 is_stmt 0 view .LVU128
 465              	.LBE177:
  55:./dsp/follower.h ****         attack_[0] = low_mid;
 466              		.loc 6 55 9 is_stmt 1 view .LVU129
 467              	.LBB178:
 468              	.LBI149:
 496:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 469              		.loc 5 496 15 view .LVU130
 496:../../stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 470              		.loc 5 496 15 is_stmt 0 view .LVU131
 471              	.LBE178:
  56:./dsp/follower.h ****         decay_[0]  = Sqrt(low_mid * low);
 472              		.loc 6 56 9 is_stmt 1 view .LVU132
 473              	.LBB179:
 474              	.LBB152:
 502:../../stmlib/dsp/filter.h ****     }
 475              		.loc 5 502 10 is_stmt 0 view .LVU133
 476 005c 8165     		str	r1, [r0, #88]	@ float
 477              	.LBE152:
 478              	.LBE179:
  56:./dsp/follower.h ****         decay_[0]  = Sqrt(low_mid * low);
 479              		.loc 6 56 20 view .LVU134
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 27


 480 005e 8266     		str	r2, [r0, #104]	@ float
 481              		.loc 6 57 9 is_stmt 1 view .LVU135
 482              	.LVL19:
 483              	.LBB180:
 484              	.LBI145:
 152:../../stmlib/dsp/dsp.h ****     float result;
 485              		.loc 4 152 16 view .LVU136
 486              	.LBB148:
 153:../../stmlib/dsp/dsp.h ****     __asm ("vsqrt.f32 %0, %1" : "=w" (result) : "w" (x) );
 487              		.loc 4 153 5 view .LVU137
 488              		.loc 4 154 5 view .LVU138
 155:../../stmlib/dsp/dsp.h ****     return result;
 489              		.loc 4 155 5 view .LVU139
 490              		.loc 4 155 5 is_stmt 0 view .LVU140
 491              	.LBE148:
 492              	.LBE180:
  58:./dsp/follower.h **** 
  59:./dsp/follower.h ****         attack_[1] = Sqrt(low_mid * mid_high);
 493              		.loc 6 59 9 is_stmt 1 view .LVU141
 494              	.LBB181:
 495              	.LBI159:
 152:../../stmlib/dsp/dsp.h ****     float result;
 496              		.loc 4 152 16 view .LVU142
 497              	.LBB162:
 153:../../stmlib/dsp/dsp.h ****     __asm ("vsqrt.f32 %0, %1" : "=w" (result) : "w" (x) );
 498              		.loc 4 153 5 view .LVU143
 154:../../stmlib/dsp/dsp.h ****     return result;
 499              		.loc 4 154 5 view .LVU144
 500              		.loc 4 155 5 view .LVU145
 501              		.loc 4 155 5 is_stmt 0 view .LVU146
 502              	.LBE162:
 503              	.LBE181:
 504              		.loc 6 59 20 view .LVU147
 505 0060 C0ED1B7A 		vstr.32	s15, [r0, #108]
  60:./dsp/follower.h ****         decay_[1]  = low_mid;
 506              		.loc 6 60 9 is_stmt 1 view .LVU148
 507              		.loc 6 60 20 is_stmt 0 view .LVU149
 508 0064 8267     		str	r2, [r0, #120]	@ float
  61:./dsp/follower.h **** 
  62:./dsp/follower.h ****         attack_[2] = Sqrt(mid_high * 0.5f);
 509              		.loc 6 62 9 is_stmt 1 view .LVU150
 510              	.LVL20:
 511              	.LBB182:
 512              	.LBI166:
 152:../../stmlib/dsp/dsp.h ****     float result;
 513              		.loc 4 152 16 view .LVU151
 514              	.LBB168:
 153:../../stmlib/dsp/dsp.h ****     __asm ("vsqrt.f32 %0, %1" : "=w" (result) : "w" (x) );
 515              		.loc 4 153 5 view .LVU152
 154:../../stmlib/dsp/dsp.h ****     return result;
 516              		.loc 4 154 5 view .LVU153
 517              		.syntax unified
 518              	@ 154 "../../stmlib/dsp/dsp.h" 1
 519 0066 B1EEC77A 		vsqrt.f32 s14, s14
 520              	@ 0 "" 2
 521              	.LVL21:
 522              		.loc 4 155 5 view .LVU154
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 28


 523              		.loc 4 155 5 is_stmt 0 view .LVU155
 524              		.thumb
 525              		.syntax unified
 526              	.LBE168:
 527              	.LBE182:
  63:./dsp/follower.h ****         decay_[2]  = Sqrt(mid_high * low_mid);
 528              		.loc 6 63 20 view .LVU156
 529 006a C0ED1F7A 		vstr.32	s15, [r0, #124]
  62:./dsp/follower.h ****         decay_[2]  = Sqrt(mid_high * low_mid);
 530              		.loc 6 62 20 view .LVU157
 531 006e 80ED1C7A 		vstr.32	s14, [r0, #112]
 532              		.loc 6 63 9 is_stmt 1 view .LVU158
 533              	.LVL22:
 534              	.LBB183:
 535              	.LBI183:
 152:../../stmlib/dsp/dsp.h ****     float result;
 536              		.loc 4 152 16 view .LVU159
 537              	.LBB184:
 153:../../stmlib/dsp/dsp.h ****     __asm ("vsqrt.f32 %0, %1" : "=w" (result) : "w" (x) );
 538              		.loc 4 153 5 view .LVU160
 154:../../stmlib/dsp/dsp.h ****     return result;
 539              		.loc 4 154 5 view .LVU161
 540              		.loc 4 155 5 view .LVU162
 541              		.loc 4 155 5 is_stmt 0 view .LVU163
 542              	.LBE184:
 543              	.LBE183:
  64:./dsp/follower.h **** 
  65:./dsp/follower.h ****         std::fill(&detector_[0], &detector_[3], 0.0f);
 544              		.loc 6 65 9 is_stmt 1 view .LVU164
 545              	.LBB185:
 546              	.LBI185:
 547              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 29


  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 30


  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 31


 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 32


 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 33


 254:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 260:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 261:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 262:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 263:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 264:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 265:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 272:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 275:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 278:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 280:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 283:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 284:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 285:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 286:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 287:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 294:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 297:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 300:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 302:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 306:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 307:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 308:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 34


 311:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 313:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __it; }
 316:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 317:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 321:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _From
 323:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 326:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 328:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 330:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __res; }
 332:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 333:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 338:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 339:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move
 341:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 342:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 343:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 345:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 347:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 349:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 350:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 351:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 352:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 353:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 354:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 355:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 357:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 358:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 360:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 362:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 364:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 365:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 366:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 367:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 35


 368:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 369:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 370:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 372:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 373:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 375:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 377:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 380:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 381:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 382:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 383:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 384:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 385:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 386:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 387:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 388:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 389:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 390:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 392:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 393:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 395:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 397:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 400:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 401:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 402:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 403:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 404:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 405:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 406:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 407:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 408:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 409:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 410:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 412:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 413:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 415:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 417:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 418:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 424:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 36


 425:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 426:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 428:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 429:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 430:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 431:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 434:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct char_traits;
 435:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 436:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 438:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 439:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 441:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 442:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 448:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 454:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 457:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 460:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 463:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 465:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 468:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 471:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 474:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 475:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 477:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct _Deque_iterator;
 479:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 480:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 37


 482:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 483:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 485:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _OI);
 488:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 489:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 490:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 496:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 502:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 505:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 508:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 511:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 513:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 514:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 516:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 517:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 518:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 519:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 520:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 522:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  _OI);
 525:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 526:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 527:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 530:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 532:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 533:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 38


 539:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 540:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 541:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 544:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 545:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 546:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 547:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 548:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 554:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 556:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 557:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 558:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 560:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 562:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 563:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 568:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 571:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 572:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 573:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 574:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 577:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 578:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 579:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 580:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 581:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 587:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 589:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 590:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 591:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 593:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 595:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 39


 596:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 601:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 604:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 605:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 607:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 609:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 610:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 612:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 613:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 616:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 618:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 619:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 620:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 621:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 622:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 623:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 624:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 625:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 626:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 628:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 631:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 633:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 634:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 636:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 637:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 638:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 639:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 640:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 641:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 643:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 646:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 648:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 650:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 652:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 40


 653:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 654:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 655:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 656:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 657:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 658:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 660:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 663:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 665:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 667:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 670:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 671:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 672:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 673:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 674:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 675:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 677:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 678:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 680:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 682:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 683:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 689:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 691:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 693:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 694:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 695:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 696:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 699:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 701:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 704:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 707:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 41


 710:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __last,
 711:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __result);
 712:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 713:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 714:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 717:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 720:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 721:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 723:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _OI);
 726:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 727:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 728:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(
 731:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 735:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 742:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 745:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 747:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 748:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 751:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 752:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 753:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 754:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 756:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 757:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_OI);
 760:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 761:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 762:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 42


 767:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 768:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 772:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 776:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 777:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 783:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 784:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 790:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 791:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 794:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 797:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 799:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 800:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 807:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 810:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 811:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 812:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 813:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 819:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 820:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 43


 824:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 826:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 827:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 830:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 833:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 835:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 836:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 843:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 845:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       __result);
 846:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 847:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 848:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 850:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 852:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 853:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 856:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 859:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 860:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 861:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __value;
 862:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 863:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 864:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 867:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 870:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 871:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 874:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 875:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 876:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 878:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 880:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 44


 881:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 883:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 884:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 886:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 887:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__first = __tmp;
 889:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return;
 890:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 891:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 892:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 895:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 896:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 899:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 902:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 904:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 906:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _VTp&);
 909:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 910:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 916:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 918:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const _Tp&);
 921:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 922:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 923:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 929:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 930:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 934:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 937:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 45


 548              		.loc 7 937 5 view .LVU165
 549              	.LBB186:
 550              	.LBI186:
 913:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 551              		.loc 7 913 5 view .LVU166
 552              	.LBB187:
 553              	.LBI187:
 868:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 554              		.loc 7 868 5 view .LVU167
 555              	.LBB188:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 556              		.loc 7 872 22 view .LVU168
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 557              		.loc 7 873 11 is_stmt 0 view .LVU169
 558 0072 C0F88030 		str	r3, [r0, #128]	@ float
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 559              		.loc 7 872 7 is_stmt 1 view .LVU170
 560              	.LVL23:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 561              		.loc 7 872 22 view .LVU171
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 562              		.loc 7 873 11 is_stmt 0 view .LVU172
 563 0076 C0F88430 		str	r3, [r0, #132]	@ float
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 564              		.loc 7 872 7 is_stmt 1 view .LVU173
 565              	.LVL24:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 566              		.loc 7 872 22 view .LVU174
 873:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 567              		.loc 7 873 11 is_stmt 0 view .LVU175
 568 007a C0F88830 		str	r3, [r0, #136]	@ float
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 569              		.loc 7 872 7 is_stmt 1 view .LVU176
 570              	.LVL25:
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 571              		.loc 7 872 22 view .LVU177
 872:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 572              		.loc 7 872 22 is_stmt 0 view .LVU178
 573              	.LBE188:
 574              	.LBE187:
 575              	.LBE186:
 576              	.LBE185:
  66:./dsp/follower.h **** 
  67:./dsp/follower.h ****         centroid_ = 0.0f;
 577              		.loc 6 67 9 is_stmt 1 view .LVU179
 578              		.loc 6 67 19 is_stmt 0 view .LVU180
 579 007e C0F88C30 		str	r3, [r0, #140]	@ float
 580              	.LVL26:
 581              		.loc 6 67 19 view .LVU181
 582              	.LBE193:
 583              	.LBE215:
  67:dsp/fm_voice.cpp ****         8.0f / kSampleRate, 160.0f / kSampleRate, 1600.0f / kSampleRate);
  68:dsp/fm_voice.cpp **** }
 584              		.loc 3 68 1 view .LVU182
 585 0082 7047     		bx	lr
 586              	.L9:
 587              		.align	2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 46


 588              	.L8:
 589 0084 C92F963B 		.word	999698377
 590 0088 7D211535 		.word	890577277
 591 008c 5177563E 		.word	1045854033
 592 0090 A792AB3C 		.word	1017877159
 593 0094 5404E938 		.word	954795092
 594 0098 0E745A3B 		.word	995783694
 595 009c 8988883C 		.word	1015580809
 596              		.cfi_endproc
 597              	.LFE1514:
 599              		.section	.text._ZN5torus7FMVoice7ProcessEPKfPfS3_j,"ax",%progbits
 600              		.align	1
 601              		.global	_ZN5torus7FMVoice7ProcessEPKfPfS3_j
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv5-d16
 607              	_ZN5torus7FMVoice7ProcessEPKfPfS3_j:
 608              	.LVL27:
 609              	.LFB1515:
  69:dsp/fm_voice.cpp **** 
  70:dsp/fm_voice.cpp **** void FMVoice::Process(const float* in, float* out, float* aux, size_t size)
  71:dsp/fm_voice.cpp **** {
 610              		.loc 3 71 1 is_stmt 1 view -0
 611              		.cfi_startproc
 612              		@ args = 4, pretend = 0, frame = 16
 613              		@ frame_needed = 0, uses_anonymous_args = 0
  72:dsp/fm_voice.cpp ****     // Interpolate between the "oscillator" behaviour and the "FMLPGed thing"
  73:dsp/fm_voice.cpp ****     // behaviour.
  74:dsp/fm_voice.cpp ****     float envelope_amount = damping_ < 0.9f ? 1.0f : (1.0f - damping_) * 10.0f;
 614              		.loc 3 74 5 view .LVU184
 615              		.loc 3 74 29 is_stmt 0 view .LVU185
 616 0000 D0ED037A 		vldr.32	s15, [r0, #12]
 617              		.loc 3 74 45 view .LVU186
 618 0004 9FEDF27A 		vldr.32	s14, .L46
  75:dsp/fm_voice.cpp ****     float amplitude_rt60
  76:dsp/fm_voice.cpp ****         = 0.1f * SemitonesToRatio(damping_ * 96.0f) * kSampleRate;
 619              		.loc 3 76 34 view .LVU187
 620 0008 9FEDF20A 		vldr.32	s0, .L46+4
  74:dsp/fm_voice.cpp ****     float amplitude_rt60
 621              		.loc 3 74 45 view .LVU188
 622 000c F4EEC77A 		vcmpe.f32	s15, s14
 623              		.loc 3 76 34 view .LVU189
 624 0010 27EE800A 		vmul.f32	s0, s15, s0
  71:dsp/fm_voice.cpp ****     // Interpolate between the "oscillator" behaviour and the "FMLPGed thing"
 625              		.loc 3 71 1 view .LVU190
 626 0014 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 627              		.cfi_def_cfa_offset 32
 628              		.cfi_offset 4, -32
 629              		.cfi_offset 5, -28
 630              		.cfi_offset 6, -24
 631              		.cfi_offset 7, -20
 632              		.cfi_offset 8, -16
 633              		.cfi_offset 9, -12
 634              		.cfi_offset 10, -8
 635              		.cfi_offset 14, -4
  74:dsp/fm_voice.cpp ****     float amplitude_rt60
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 47


 636              		.loc 3 74 45 view .LVU191
 637 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  71:dsp/fm_voice.cpp ****     // Interpolate between the "oscillator" behaviour and the "FMLPGed thing"
 638              		.loc 3 71 1 view .LVU192
 639 001c 0446     		mov	r4, r0
 640 001e 0F46     		mov	r7, r1
 641 0020 1646     		mov	r6, r2
 642 0022 1D46     		mov	r5, r3
  74:dsp/fm_voice.cpp ****     float amplitude_rt60
 643              		.loc 3 74 45 view .LVU193
 644 0024 58BF     		it	pl
 645 0026 B2EE047A 		vmovpl.f32	s14, #1.0e+1
  71:dsp/fm_voice.cpp ****     // Interpolate between the "oscillator" behaviour and the "FMLPGed thing"
 646              		.loc 3 71 1 view .LVU194
 647 002a 2DED088B 		vpush.64	{d8, d9, d10, d11}
 648              		.cfi_def_cfa_offset 64
 649              		.cfi_offset 80, -64
 650              		.cfi_offset 81, -60
 651              		.cfi_offset 82, -56
 652              		.cfi_offset 83, -52
 653              		.cfi_offset 84, -48
 654              		.cfi_offset 85, -44
 655              		.cfi_offset 86, -40
 656              		.cfi_offset 87, -36
 657 002e B7EE008A 		vmov.f32	s16, #1.0e+0
 658              		.loc 3 76 16 view .LVU195
 659 0032 DFEDE98A 		vldr.32	s17, .L46+8
  71:dsp/fm_voice.cpp ****     // Interpolate between the "oscillator" behaviour and the "FMLPGed thing"
 660              		.loc 3 71 1 view .LVU196
 661 0036 84B0     		sub	sp, sp, #16
 662              		.cfi_def_cfa_offset 80
 663              		.loc 3 76 55 view .LVU197
 664 0038 DFEDE89A 		vldr.32	s19, .L46+12
  74:dsp/fm_voice.cpp ****     float amplitude_rt60
 665              		.loc 3 74 60 view .LVU198
 666 003c 58BF     		it	pl
 667 003e 38EE67AA 		vsubpl.f32	s20, s16, s15
  71:dsp/fm_voice.cpp ****     // Interpolate between the "oscillator" behaviour and the "FMLPGed thing"
 668              		.loc 3 71 1 view .LVU199
 669 0042 DDF85080 		ldr	r8, [sp, #80]
  74:dsp/fm_voice.cpp ****     float amplitude_rt60
 670              		.loc 3 74 45 view .LVU200
 671 0046 4CBF     		ite	mi
 672 0048 B0EE48AA 		vmovmi.f32	s20, s16
 673 004c 2AEE07AA 		vmulpl.f32	s20, s20, s14
 674              	.LVL28:
  75:dsp/fm_voice.cpp ****     float amplitude_rt60
 675              		.loc 3 75 5 is_stmt 1 view .LVU201
 676              		.loc 3 76 34 is_stmt 0 view .LVU202
 677 0050 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 678              	.LVL29:
  77:dsp/fm_voice.cpp ****     float amplitude_decay = 1.0f - powf(0.001f, 1.0f / amplitude_rt60);
 679              		.loc 3 77 5 is_stmt 1 view .LVU203
  76:dsp/fm_voice.cpp ****     float amplitude_decay = 1.0f - powf(0.001f, 1.0f / amplitude_rt60);
 680              		.loc 3 76 16 is_stmt 0 view .LVU204
 681 0054 20EE280A 		vmul.f32	s0, s0, s17
 682              	.LVL30:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 48


  76:dsp/fm_voice.cpp ****     float amplitude_decay = 1.0f - powf(0.001f, 1.0f / amplitude_rt60);
 683              		.loc 3 76 55 view .LVU205
 684 0058 60EE290A 		vmul.f32	s1, s0, s19
 685              	.LVL31:
 686              		.loc 3 77 40 view .LVU206
 687 005c 9FEDE00A 		vldr.32	s0, .L46+16
 688 0060 C8EE200A 		vdiv.f32	s1, s16, s1
 689              	.LVL32:
 690              		.loc 3 77 40 view .LVU207
 691 0064 FFF7FEFF 		bl	powf
 692              	.LVL33:
  78:dsp/fm_voice.cpp **** 
  79:dsp/fm_voice.cpp ****     float brightness_rt60
  80:dsp/fm_voice.cpp ****         = 0.1f * SemitonesToRatio(damping_ * 84.0f) * kSampleRate;
 693              		.loc 3 80 34 view .LVU208
 694 0068 DFEDDE7A 		vldr.32	s15, .L46+20
  77:dsp/fm_voice.cpp **** 
 695              		.loc 3 77 70 view .LVU209
 696 006c 38EE409A 		vsub.f32	s18, s16, s0
 697              	.LVL34:
  79:dsp/fm_voice.cpp ****         = 0.1f * SemitonesToRatio(damping_ * 84.0f) * kSampleRate;
 698              		.loc 3 79 5 is_stmt 1 view .LVU210
 699              		.loc 3 80 34 is_stmt 0 view .LVU211
 700 0070 94ED030A 		vldr.32	s0, [r4, #12]
 701 0074 20EE270A 		vmul.f32	s0, s0, s15
 702 0078 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 703              	.LVL35:
  81:dsp/fm_voice.cpp ****     float brightness_decay = 1.0f - powf(0.001f, 1.0f / brightness_rt60);
 704              		.loc 3 81 5 is_stmt 1 view .LVU212
  80:dsp/fm_voice.cpp ****     float brightness_decay = 1.0f - powf(0.001f, 1.0f / brightness_rt60);
 705              		.loc 3 80 16 is_stmt 0 view .LVU213
 706 007c 20EE280A 		vmul.f32	s0, s0, s17
 707              	.LVL36:
  80:dsp/fm_voice.cpp ****     float brightness_decay = 1.0f - powf(0.001f, 1.0f / brightness_rt60);
 708              		.loc 3 80 55 view .LVU214
 709 0080 60EE290A 		vmul.f32	s1, s0, s19
 710              	.LVL37:
 711              		.loc 3 81 41 view .LVU215
 712 0084 9FEDD60A 		vldr.32	s0, .L46+16
 713 0088 C8EE200A 		vdiv.f32	s1, s16, s1
 714              	.LVL38:
 715              		.loc 3 81 41 view .LVU216
 716 008c FFF7FEFF 		bl	powf
 717              	.LVL39:
 718              	.LBB273:
 719              	.LBB274:
  44:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
 720              		.loc 4 44 9 view .LVU217
 721 0090 9FEDD57A 		vldr.32	s14, .L46+24
 722 0094 D4ED017A 		vldr.32	s15, [r4, #4]
  46:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
 723              		.loc 4 46 9 view .LVU218
 724 0098 D44B     		ldr	r3, .L46+28
 725              	.LBE274:
 726              	.LBE273:
  82:dsp/fm_voice.cpp **** 
  83:dsp/fm_voice.cpp ****     float ratio = Interpolate(lut_fm_frequency_quantizer, ratio_, 128.0f);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 49


  84:dsp/fm_voice.cpp ****     float modulator_frequency = carrier_frequency_ * SemitonesToRatio(ratio);
 727              		.loc 3 84 33 view .LVU219
 728 009a D4ED00AA 		vldr.32	s21, [r4]
 729              	.LBB277:
 730              	.LBB275:
  44:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
 731              		.loc 4 44 9 view .LVU220
 732 009e 67EE877A 		vmul.f32	s15, s15, s14
 733              	.LBE275:
 734              	.LBE277:
  81:dsp/fm_voice.cpp **** 
 735              		.loc 3 81 72 view .LVU221
 736 00a2 78EE409A 		vsub.f32	s19, s16, s0
 737              	.LVL40:
  83:dsp/fm_voice.cpp ****     float modulator_frequency = carrier_frequency_ * SemitonesToRatio(ratio);
 738              		.loc 3 83 5 is_stmt 1 view .LVU222
 739              	.LBB278:
 740              	.LBI273:
  43:../../stmlib/dsp/dsp.h ****   index *= size;
 741              		.loc 4 43 14 view .LVU223
 742              	.LBB276:
  44:../../stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
 743              		.loc 4 44 3 view .LVU224
  45:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
 744              		.loc 4 45 3 view .LVU225
 745 00a6 BDEEE77A 		vcvt.s32.f32	s14, s15
 746 00aa 17EE102A 		vmov	r2, s14	@ int
 747              	.LVL41:
  45:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
 748              		.loc 4 45 3 view .LVU226
  46:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
 749              		.loc 4 46 3 view .LVU227
  45:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
 750              		.loc 4 45 3 is_stmt 0 view .LVU228
 751 00ae B8EEC77A 		vcvt.f32.s32	s14, s14
  46:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
 752              		.loc 4 46 9 view .LVU229
 753 00b2 03EB8201 		add	r1, r3, r2, lsl #2
  45:../../stmlib/dsp/dsp.h ****   float a = table[index_integral];
 754              		.loc 4 45 3 view .LVU230
 755 00b6 77EEC77A 		vsub.f32	s15, s15, s14
 756              	.LVL42:
  46:../../stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
 757              		.loc 4 46 9 view .LVU231
 758 00ba 91ED000A 		vldr.32	s0, [r1]
 759              	.LVL43:
  47:../../stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
 760              		.loc 4 47 3 is_stmt 1 view .LVU232
  48:../../stmlib/dsp/dsp.h **** }
 761              		.loc 4 48 3 view .LVU233
  48:../../stmlib/dsp/dsp.h **** }
 762              		.loc 4 48 17 is_stmt 0 view .LVU234
 763 00be 91ED017A 		vldr.32	s14, [r1, #4]
 764 00c2 37EE407A 		vsub.f32	s14, s14, s0
 765              	.LVL44:
  48:../../stmlib/dsp/dsp.h **** }
 766              		.loc 4 48 17 view .LVU235
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 50


 767              	.LBE276:
 768              	.LBE278:
 769              		.loc 3 84 5 is_stmt 1 view .LVU236
 770              		.loc 3 84 70 is_stmt 0 view .LVU237
 771 00c6 A7EE870A 		vfma.f32	s0, s15, s14
 772              	.LVL45:
 773              		.loc 3 84 70 view .LVU238
 774 00ca FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 775              	.LVL46:
  85:dsp/fm_voice.cpp **** 
  86:dsp/fm_voice.cpp ****     if(modulator_frequency > 0.5f)
 776              		.loc 3 86 5 view .LVU239
 777 00ce F6EE006A 		vmov.f32	s13, #5.0e-1
  84:dsp/fm_voice.cpp **** 
 778              		.loc 3 84 76 view .LVU240
 779 00d2 2AEE800A 		vmul.f32	s0, s21, s0
 780              	.LVL47:
 781              		.loc 3 86 5 is_stmt 1 view .LVU241
  87:dsp/fm_voice.cpp ****     {
  88:dsp/fm_voice.cpp ****         modulator_frequency = 0.5f;
  89:dsp/fm_voice.cpp ****     }
  90:dsp/fm_voice.cpp **** 
  91:dsp/fm_voice.cpp ****     float feedback = (feedback_amount_ - 0.5f) * 2.0f;
 782              		.loc 3 91 40 is_stmt 0 view .LVU242
 783 00d6 94ED056A 		vldr.32	s12, [r4, #20]
 784              	.LBB279:
 785              	.LBB280:
 786              	.LBB281:
 787              		.file 8 "../../stmlib/dsp/parameter_interpolator.h"
   1:../../stmlib/dsp/parameter_interpolator.h **** // Copyright 2015 Emilie Gillet.
   2:../../stmlib/dsp/parameter_interpolator.h **** //
   3:../../stmlib/dsp/parameter_interpolator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../stmlib/dsp/parameter_interpolator.h **** //
   5:../../stmlib/dsp/parameter_interpolator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../stmlib/dsp/parameter_interpolator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../stmlib/dsp/parameter_interpolator.h **** // in the Software without restriction, including without limitation the rights
   8:../../stmlib/dsp/parameter_interpolator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../stmlib/dsp/parameter_interpolator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../stmlib/dsp/parameter_interpolator.h **** // furnished to do so, subject to the following conditions:
  11:../../stmlib/dsp/parameter_interpolator.h **** // 
  12:../../stmlib/dsp/parameter_interpolator.h **** // The above copyright notice and this permission notice shall be included in
  13:../../stmlib/dsp/parameter_interpolator.h **** // all copies or substantial portions of the Software.
  14:../../stmlib/dsp/parameter_interpolator.h **** // 
  15:../../stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../stmlib/dsp/parameter_interpolator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../stmlib/dsp/parameter_interpolator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../stmlib/dsp/parameter_interpolator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../stmlib/dsp/parameter_interpolator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../stmlib/dsp/parameter_interpolator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE.
  22:../../stmlib/dsp/parameter_interpolator.h **** // 
  23:../../stmlib/dsp/parameter_interpolator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../stmlib/dsp/parameter_interpolator.h **** //
  25:../../stmlib/dsp/parameter_interpolator.h **** // -----------------------------------------------------------------------------
  26:../../stmlib/dsp/parameter_interpolator.h **** //
  27:../../stmlib/dsp/parameter_interpolator.h **** // Linear interpolation of parameters in rendering loops.
  28:../../stmlib/dsp/parameter_interpolator.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 51


  29:../../stmlib/dsp/parameter_interpolator.h **** #ifndef STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  30:../../stmlib/dsp/parameter_interpolator.h **** #define STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  31:../../stmlib/dsp/parameter_interpolator.h **** 
  32:../../stmlib/dsp/parameter_interpolator.h **** #include "stmlib/stmlib.h"
  33:../../stmlib/dsp/parameter_interpolator.h **** 
  34:../../stmlib/dsp/parameter_interpolator.h **** namespace stmlib {
  35:../../stmlib/dsp/parameter_interpolator.h **** 
  36:../../stmlib/dsp/parameter_interpolator.h **** class ParameterInterpolator {
  37:../../stmlib/dsp/parameter_interpolator.h ****  public:
  38:../../stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator() { }
  39:../../stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, size_t size) {
  40:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
  41:../../stmlib/dsp/parameter_interpolator.h ****   }
  42:../../stmlib/dsp/parameter_interpolator.h **** 
  43:../../stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, float step) {
  44:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
  45:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
  46:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) * step;
  47:../../stmlib/dsp/parameter_interpolator.h ****   }
  48:../../stmlib/dsp/parameter_interpolator.h **** 
  49:../../stmlib/dsp/parameter_interpolator.h ****   ~ParameterInterpolator() {
  50:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
  51:../../stmlib/dsp/parameter_interpolator.h ****   }
  52:../../stmlib/dsp/parameter_interpolator.h ****   
  53:../../stmlib/dsp/parameter_interpolator.h ****   inline void Init(float* state, float new_value, size_t size) {
  54:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
  55:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
  56:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 788              		.loc 8 56 39 view .LVU243
 789 00da 07EE908A 		vmov	s15, r8	@ int
 790              	.LBE281:
 791              	.LBE280:
 792              	.LBE279:
 793              	.LBB288:
 794              	.LBB289:
 795              	.LBB290:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 796              		.loc 8 55 14 view .LVU244
 797 00de 94ED084A 		vldr.32	s8, [r4, #32]
 798              	.LBE290:
 799              	.LBE289:
 800              	.LBE288:
 801              		.loc 3 91 40 view .LVU245
 802 00e2 36EE666A 		vsub.f32	s12, s12, s13
 803              	.LBB299:
 804              	.LBB295:
 805              	.LBB291:
 806              		.loc 8 56 29 view .LVU246
 807 00e6 94ED027A 		vldr.32	s14, [r4, #8]
 808              	.LBE291:
 809              	.LBE295:
 810              	.LBE299:
  88:dsp/fm_voice.cpp ****     }
 811              		.loc 3 88 29 view .LVU247
 812 00ea B4EE660A 		vcmp.f32	s0, s13
 813              	.LBB300:
 814              	.LBB285:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 52


 815              	.LBB282:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 816              		.loc 8 55 14 view .LVU248
 817 00ee 94ED063A 		vldr.32	s6, [r4, #24]
 818              		.loc 8 56 39 view .LVU249
 819 00f2 F8EE677A 		vcvt.f32.u32	s15, s15
 820              	.LBE282:
 821              	.LBE285:
 822              	.LBE300:
 823              	.LBB301:
 824              	.LBB302:
 825              	.LBB303:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 826              		.loc 8 55 14 view .LVU250
 827 00f6 D4ED072A 		vldr.32	s5, [r4, #28]
 828              	.LBE303:
 829              	.LBE302:
 830              	.LBE301:
 831              	.LBB308:
 832              	.LBB296:
 833              	.LBB292:
 834              		.loc 8 56 29 view .LVU251
 835 00fa 37EE447A 		vsub.f32	s14, s14, s8
 836              	.LBE292:
 837              	.LBE296:
 838              	.LBE308:
 839              	.LBB309:
 840              	.LBB310:
 841              	.LBB311:
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 842              		.loc 8 55 14 view .LVU252
 843 00fe D4ED0A5A 		vldr.32	s11, [r4, #40]
 844              	.LBE311:
 845              	.LBE310:
 846              	.LBE309:
  88:dsp/fm_voice.cpp ****     }
 847              		.loc 3 88 29 view .LVU253
 848 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  92:dsp/fm_voice.cpp **** 
  93:dsp/fm_voice.cpp ****     ParameterInterpolator carrier_increment(
  94:dsp/fm_voice.cpp ****         &previous_carrier_frequency_, carrier_frequency_, size);
  95:dsp/fm_voice.cpp ****     ParameterInterpolator modulator_increment(
  96:dsp/fm_voice.cpp ****         &previous_modulator_frequency_, modulator_frequency, size);
  97:dsp/fm_voice.cpp ****     ParameterInterpolator brightness(&previous_brightness_, brightness_, size);
  98:dsp/fm_voice.cpp ****     ParameterInterpolator feedback_amount(
  99:dsp/fm_voice.cpp ****         &previous_feedback_amount_, feedback, size);
 100:dsp/fm_voice.cpp **** 
 101:dsp/fm_voice.cpp ****     uint32_t carrier_phase   = carrier_phase_;
 102:dsp/fm_voice.cpp ****     uint32_t modulator_phase = modulator_phase_;
 103:dsp/fm_voice.cpp ****     float    previous_sample = previous_sample_;
 849              		.loc 3 103 14 view .LVU254
 850 0106 D4ED113A 		vldr.32	s7, [r4, #68]
  91:dsp/fm_voice.cpp **** 
 851              		.loc 3 91 11 view .LVU255
 852 010a 36EE066A 		vadd.f32	s12, s12, s12
 853              	.LBB316:
 854              	.LBB297:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 53


 855              	.LBB293:
 856              		.loc 8 56 39 view .LVU256
 857 010e C7EE270A 		vdiv.f32	s1, s14, s15
 858              	.LBE293:
 859              	.LBE297:
 860              	.LBE316:
  88:dsp/fm_voice.cpp ****     }
 861              		.loc 3 88 29 view .LVU257
 862 0112 36FE800A 		vselgt.f32	s0, s13, s0
 863              	.LVL48:
  91:dsp/fm_voice.cpp **** 
 864              		.loc 3 91 5 is_stmt 1 view .LVU258
  93:dsp/fm_voice.cpp ****         &previous_carrier_frequency_, carrier_frequency_, size);
 865              		.loc 3 93 5 view .LVU259
 866              	.LBB317:
 867              	.LBI279:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 868              		.loc 8 39 3 view .LVU260
 869              	.LBE317:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 870              		.loc 8 40 5 view .LVU261
 871              	.LBB318:
 872              	.LBB286:
 873              	.LBI280:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 874              		.loc 8 53 15 view .LVU262
 875              	.LBB283:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 876              		.loc 8 54 5 view .LVU263
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 877              		.loc 8 55 5 view .LVU264
 878              		.loc 8 56 5 view .LVU265
 879              		.loc 8 56 29 is_stmt 0 view .LVU266
 880 0116 7AEEC3AA 		vsub.f32	s21, s21, s6
 881              	.LVL49:
 882              		.loc 8 56 29 view .LVU267
 883              	.LBE283:
 884              	.LBE286:
 885              	.LBE318:
 886              	.LBB319:
 887              	.LBB306:
 888              	.LBB304:
 889 011a 30EE620A 		vsub.f32	s0, s0, s5
 890              	.LVL50:
 891              		.loc 8 56 29 view .LVU268
 892              	.LBE304:
 893              	.LBE306:
 894              	.LBE319:
 895              	.LBB320:
 896              	.LBB314:
 897              	.LBB312:
 898 011e 36EE657A 		vsub.f32	s14, s12, s11
 899              	.LBE312:
 900              	.LBE314:
 901              	.LBE320:
 902              	.LBB321:
 903              	.LBB287:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 54


 904              	.LBB284:
 905              		.loc 8 56 39 view .LVU269
 906 0122 CAEEA71A 		vdiv.f32	s3, s21, s15
 907              	.LVL51:
 908              		.loc 8 56 39 view .LVU270
 909              	.LBE284:
 910              	.LBE287:
 911              	.LBE321:
  95:dsp/fm_voice.cpp ****         &previous_modulator_frequency_, modulator_frequency, size);
 912              		.loc 3 95 5 is_stmt 1 view .LVU271
 913              	.LBB322:
 914              	.LBI301:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 915              		.loc 8 39 3 view .LVU272
 916              	.LBE322:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 917              		.loc 8 40 5 view .LVU273
 918              	.LBB323:
 919              	.LBB307:
 920              	.LBI302:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 921              		.loc 8 53 15 view .LVU274
 922              	.LBB305:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 923              		.loc 8 54 5 view .LVU275
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 924              		.loc 8 55 5 view .LVU276
 925              		.loc 8 56 5 view .LVU277
 926              		.loc 8 56 39 is_stmt 0 view .LVU278
 927 0126 80EE271A 		vdiv.f32	s2, s0, s15
 928              	.LVL52:
 929              		.loc 8 56 39 view .LVU279
 930              	.LBE305:
 931              	.LBE307:
 932              	.LBE323:
  97:dsp/fm_voice.cpp ****     ParameterInterpolator feedback_amount(
 933              		.loc 3 97 5 is_stmt 1 view .LVU280
 934              	.LBB324:
 935              	.LBI288:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 936              		.loc 8 39 3 view .LVU281
 937              	.LBE324:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 938              		.loc 8 40 5 view .LVU282
 939              	.LBB325:
 940              	.LBB298:
 941              	.LBI289:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 942              		.loc 8 53 15 view .LVU283
 943              	.LBB294:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 944              		.loc 8 54 5 view .LVU284
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 945              		.loc 8 55 5 view .LVU285
 946              		.loc 8 56 5 view .LVU286
 947              		.loc 8 56 5 is_stmt 0 view .LVU287
 948              	.LBE294:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 55


 949              	.LBE298:
 950              	.LBE325:
  98:dsp/fm_voice.cpp ****         &previous_feedback_amount_, feedback, size);
 951              		.loc 3 98 5 is_stmt 1 view .LVU288
 952              	.LBB326:
 953              	.LBI309:
  39:../../stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 954              		.loc 8 39 3 view .LVU289
 955              	.LBE326:
  40:../../stmlib/dsp/parameter_interpolator.h ****   }
 956              		.loc 8 40 5 view .LVU290
 957              	.LBB327:
 958              	.LBB315:
 959              	.LBI310:
  53:../../stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 960              		.loc 8 53 15 view .LVU291
 961              	.LBB313:
  54:../../stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 962              		.loc 8 54 5 view .LVU292
  55:../../stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 963              		.loc 8 55 5 view .LVU293
 964              		.loc 8 56 5 view .LVU294
 965              		.loc 8 56 39 is_stmt 0 view .LVU295
 966 012a 87EE272A 		vdiv.f32	s4, s14, s15
 967              	.LVL53:
 968              		.loc 8 56 39 view .LVU296
 969              	.LBE313:
 970              	.LBE315:
 971              	.LBE327:
 101:dsp/fm_voice.cpp ****     uint32_t modulator_phase = modulator_phase_;
 972              		.loc 3 101 5 is_stmt 1 view .LVU297
 102:dsp/fm_voice.cpp ****     float    previous_sample = previous_sample_;
 973              		.loc 3 102 14 is_stmt 0 view .LVU298
 974 012e D4E90FA9 		ldrd	r10, r9, [r4, #60]
 975              	.LVL54:
 976              		.loc 3 103 5 is_stmt 1 view .LVU299
 977              	.L29:
 104:dsp/fm_voice.cpp **** 
 105:dsp/fm_voice.cpp ****     while(size--)
 978              		.loc 3 105 5 view .LVU300
 979              		.loc 3 105 15 view .LVU301
 980 0132 B8F10108 		subs	r8, r8, #1
 981              	.LVL55:
 982              		.loc 3 105 15 is_stmt 0 view .LVU302
 983 0136 C0F03981 		bcc	.L14
 984              	.LBB328:
 106:dsp/fm_voice.cpp ****     {
 107:dsp/fm_voice.cpp ****         // Envelope follower and internal envelope.
 108:dsp/fm_voice.cpp ****         float amplitude_envelope, brightness_envelope;
 985              		.loc 3 108 9 is_stmt 1 view .LVU303
 109:dsp/fm_voice.cpp ****         follower_.Process(*in++, &amplitude_envelope, &brightness_envelope);
 986              		.loc 3 109 9 view .LVU304
 987              	.LVL56:
 988              	.LBB329:
 989              	.LBI329:
  68:./dsp/follower.h ****     }
  69:./dsp/follower.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 56


  70:./dsp/follower.h ****     void Process(float sample, float* envelope, float* centroid)
 990              		.loc 6 70 10 view .LVU305
 991              	.LBB330:
  71:./dsp/follower.h ****     {
  72:./dsp/follower.h ****         float bands[3] = {0.0f, 0.0f, 0.0f};
 992              		.loc 6 72 9 view .LVU306
  73:./dsp/follower.h **** 
  74:./dsp/follower.h ****         bands[2] = mid_high_filter_.Process<FILTER_MODE_HIGH_PASS>(sample);
 993              		.loc 6 74 9 view .LVU307
 994              	.LBB331:
 995              	.LBI331:
 505:../../stmlib/dsp/filter.h ****   }
 506:../../stmlib/dsp/filter.h ****   
 507:../../stmlib/dsp/filter.h ****   template<FilterMode mode>
 508:../../stmlib/dsp/filter.h ****   inline float Process(float in) {
 996              		.loc 5 508 16 view .LVU308
 997              	.LBB332:
 509:../../stmlib/dsp/filter.h ****     float hp, notch, bp_normalized;
 510:../../stmlib/dsp/filter.h ****     bp_normalized = bp_ * damp_;
 511:../../stmlib/dsp/filter.h ****     notch = in - bp_normalized;
 998              		.loc 5 511 11 is_stmt 0 view .LVU309
 999 013a B7EC017A 		vldmia.32	r7!, {s14}
 1000              	.LVL57:
 1001              		.loc 5 511 11 view .LVU310
 1002 013e 01AB     		add	r3, sp, #4
 510:../../stmlib/dsp/filter.h ****     notch = in - bp_normalized;
 1003              		.loc 5 510 21 view .LVU311
 1004 0140 94ED195A 		vldr.32	s10, [r4, #100]
 1005              	.LVL58:
 510:../../stmlib/dsp/filter.h ****     notch = in - bp_normalized;
 1006              		.loc 5 510 21 view .LVU312
 1007 0144 04F16800 		add	r0, r4, #104
 1008              		.loc 5 511 11 view .LVU313
 1009 0148 D4ED177A 		vldr.32	s15, [r4, #92]
 1010 014c 04F17402 		add	r2, r4, #116
 512:../../stmlib/dsp/filter.h ****     lp_ += f_ * bp_;
 1011              		.loc 5 512 12 view .LVU314
 1012 0150 D4ED164A 		vldr.32	s9, [r4, #88]
 511:../../stmlib/dsp/filter.h ****     lp_ += f_ * bp_;
 1013              		.loc 5 511 11 view .LVU315
 1014 0154 A5EE677A 		vfms.f32	s14, s10, s15
 1015              	.LVL59:
 1016              		.loc 5 512 9 view .LVU316
 1017 0158 D4ED187A 		vldr.32	s15, [r4, #96]
 1018 015c E5EE247A 		vfma.f32	s15, s10, s9
 513:../../stmlib/dsp/filter.h ****     hp = notch - lp_;
 1019              		.loc 5 513 8 view .LVU317
 1020 0160 37EE677A 		vsub.f32	s14, s14, s15
 1021              	.LVL60:
 512:../../stmlib/dsp/filter.h ****     lp_ += f_ * bp_;
 1022              		.loc 5 512 9 view .LVU318
 1023 0164 C4ED187A 		vstr.32	s15, [r4, #96]
 1024              	.LVL61:
 514:../../stmlib/dsp/filter.h ****     bp_ += f_ * hp;
 1025              		.loc 5 514 9 view .LVU319
 1026 0168 A4EE875A 		vfma.f32	s10, s9, s14
 1027              	.LVL62:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 57


 1028              		.loc 5 514 9 view .LVU320
 1029              	.LBE332:
 1030              	.LBE331:
 1031              		.loc 6 74 18 view .LVU321
 1032 016c 8DED037A 		vstr.32	s14, [sp, #12]
 1033              	.LBB334:
 1034              	.LBB335:
 511:../../stmlib/dsp/filter.h ****     lp_ += f_ * bp_;
 1035              		.loc 5 511 11 view .LVU322
 1036 0170 94ED137A 		vldr.32	s14, [r4, #76]
 1037              	.LVL63:
 512:../../stmlib/dsp/filter.h ****     hp = notch - lp_;
 1038              		.loc 5 512 12 view .LVU323
 1039 0174 D4ED124A 		vldr.32	s9, [r4, #72]
 1040              	.LBE335:
 1041              	.LBE334:
 1042              	.LBB339:
 1043              	.LBB333:
 1044              		.loc 5 514 9 view .LVU324
 1045 0178 84ED195A 		vstr.32	s10, [r4, #100]
 1046              	.LVL64:
 1047              		.loc 5 514 9 view .LVU325
 1048              	.LBE333:
 1049              	.LBE339:
  75:./dsp/follower.h ****         bands[1] = low_mid_filter_.Process<FILTER_MODE_HIGH_PASS>(
 1050              		.loc 6 75 9 is_stmt 1 view .LVU326
 1051              		.loc 6 75 9 is_stmt 0 view .LVU327
 1052              	.LBE330:
 1053              	.LBE329:
 1054              	.LBE328:
 515:../../stmlib/dsp/filter.h ****     
 516:../../stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 517:../../stmlib/dsp/filter.h ****       return lp_;
 518:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS) {
 519:../../stmlib/dsp/filter.h ****       return bp_;
 520:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 521:../../stmlib/dsp/filter.h ****       return bp_normalized;
 522:../../stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 523:../../stmlib/dsp/filter.h ****       return hp;
 524:../../stmlib/dsp/filter.h ****     }
 525:../../stmlib/dsp/filter.h ****   }
 526:../../stmlib/dsp/filter.h ****   
 527:../../stmlib/dsp/filter.h ****   inline float lp() const { return lp_; }
 1055              		.loc 5 527 29 is_stmt 1 view .LVU328
 1056              	.LBB391:
 1057              	.LBB359:
 1058              	.LBB353:
 1059              	.LBB340:
 1060              	.LBI334:
 508:../../stmlib/dsp/filter.h ****     float hp, notch, bp_normalized;
 1061              		.loc 5 508 16 view .LVU329
 1062              	.LBB336:
 510:../../stmlib/dsp/filter.h ****     notch = in - bp_normalized;
 1063              		.loc 5 510 21 is_stmt 0 view .LVU330
 1064 017c 94ED155A 		vldr.32	s10, [r4, #84]
 1065              	.LVL65:
 511:../../stmlib/dsp/filter.h ****     lp_ += f_ * bp_;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 58


 1066              		.loc 5 511 11 view .LVU331
 1067 0180 E5EE477A 		vfms.f32	s15, s10, s14
 1068              	.LVL66:
 512:../../stmlib/dsp/filter.h ****     hp = notch - lp_;
 1069              		.loc 5 512 9 view .LVU332
 1070 0184 94ED147A 		vldr.32	s14, [r4, #80]
 1071              	.LVL67:
 512:../../stmlib/dsp/filter.h ****     hp = notch - lp_;
 1072              		.loc 5 512 9 view .LVU333
 1073 0188 A5EE247A 		vfma.f32	s14, s10, s9
 513:../../stmlib/dsp/filter.h ****     bp_ += f_ * hp;
 1074              		.loc 5 513 8 view .LVU334
 1075 018c 77EEC77A 		vsub.f32	s15, s15, s14
 1076              	.LVL68:
 512:../../stmlib/dsp/filter.h ****     hp = notch - lp_;
 1077              		.loc 5 512 9 view .LVU335
 1078 0190 84ED147A 		vstr.32	s14, [r4, #80]
 1079              	.LBE336:
 1080              	.LBE340:
  76:./dsp/follower.h ****             mid_high_filter_.lp());
  77:./dsp/follower.h ****         bands[0] = low_mid_filter_.lp();
 1081              		.loc 6 77 18 view .LVU336
 1082 0194 8DED017A 		vstr.32	s14, [sp, #4]
 1083              	.LBB341:
 1084              	.LBB337:
 514:../../stmlib/dsp/filter.h ****     
 1085              		.loc 5 514 9 view .LVU337
 1086 0198 A4EEA75A 		vfma.f32	s10, s9, s15
 1087              	.LVL69:
 514:../../stmlib/dsp/filter.h ****     
 1088              		.loc 5 514 9 view .LVU338
 1089              	.LBE337:
 1090              	.LBE341:
  75:./dsp/follower.h ****             mid_high_filter_.lp());
 1091              		.loc 6 75 18 view .LVU339
 1092 019c CDED027A 		vstr.32	s15, [sp, #8]
  78:./dsp/follower.h **** 
  79:./dsp/follower.h ****         float weighted  = 0.0f;
  80:./dsp/follower.h ****         float total     = 0.0f;
 1093              		.loc 6 80 15 view .LVU340
 1094 01a0 DFED937A 		vldr.32	s15, .L46+32
 1095              	.LVL70:
  79:./dsp/follower.h ****         float total     = 0.0f;
 1096              		.loc 6 79 15 view .LVU341
 1097 01a4 F0EE67AA 		vmov.f32	s21, s15
  81:./dsp/follower.h ****         float frequency = 0.0f;
 1098              		.loc 6 81 15 view .LVU342
 1099 01a8 F0EE674A 		vmov.f32	s9, s15
 1100              	.LBB342:
 1101              	.LBB338:
 514:../../stmlib/dsp/filter.h ****     
 1102              		.loc 5 514 9 view .LVU343
 1103 01ac 84ED155A 		vstr.32	s10, [r4, #84]
 1104              	.LVL71:
 514:../../stmlib/dsp/filter.h ****     
 1105              		.loc 5 514 9 view .LVU344
 1106              	.LBE338:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 59


 1107              	.LBE342:
  77:./dsp/follower.h **** 
 1108              		.loc 6 77 9 is_stmt 1 view .LVU345
  77:./dsp/follower.h **** 
 1109              		.loc 6 77 9 is_stmt 0 view .LVU346
 1110              	.LBE353:
 1111              	.LBE359:
 1112              	.LBE391:
 1113              		.loc 5 527 29 is_stmt 1 view .LVU347
 1114              	.LBB392:
 1115              	.LBB360:
 1116              	.LBB354:
  79:./dsp/follower.h ****         float total     = 0.0f;
 1117              		.loc 6 79 9 view .LVU348
  80:./dsp/follower.h ****         float frequency = 0.0f;
 1118              		.loc 6 80 9 view .LVU349
 1119              		.loc 6 81 9 view .LVU350
  82:./dsp/follower.h ****         for(int32_t i = 0; i < 3; ++i)
 1120              		.loc 6 82 9 view .LVU351
 1121              	.LBB343:
 1122              		.loc 6 82 30 view .LVU352
 1123              	.L18:
 1124              	.LBB344:
  83:./dsp/follower.h ****         {
  84:./dsp/follower.h ****             SLOPE(detector_[i], fabs(bands[i]), attack_[i], decay_[i]);
 1125              		.loc 6 84 13 view .LVU353
 1126              	.LBB345:
 1127              		.loc 6 84 13 view .LVU354
 1128 01b0 B3EC015A 		vldmia.32	r3!, {s10}
 1129              	.LVL72:
 1130              	.LBB346:
 1131              	.LBI346:
 1132              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 60


  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** /** @file include/cmath
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  *  as macros in C).
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****  */
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** //
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** //
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #pragma GCC system_header
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/c++config.h>
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <ext/type_traits.h>
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include_next <math.h>
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #include <bits/std_abs.h>
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef div
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef acos
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef asin
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef atan2
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ceil
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cos
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef cosh
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef exp
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fabs
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef floor
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef fmod
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef frexp
  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef ldexp
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef log10
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef modf
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef pow
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sin
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sinh
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef sqrt
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tan
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #undef tanh
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** extern "C++"
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** {
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 61


  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::acos;
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(float __x)
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosf(__x); }
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   acos(long double __x)
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_acosl(__x); }
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     acos(_Tp __x)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_acos(__x); }
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::asin;
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(float __x)
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinf(__x); }
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   asin(long double __x)
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_asinl(__x); }
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     asin(_Tp __x)
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_asin(__x); }
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(float __x)
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanf(__x); }
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan(long double __x)
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atanl(__x); }
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     atan(_Tp __x)
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_atan(__x); }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 62


 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::atan2;
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(float __y, float __x)
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   atan2(long double __y, long double __x)
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp, typename _Up>
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     {
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     }
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::ceil;
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(float __x)
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   ceil(long double __x)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_ceill(__x); }
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     ceil(_Tp __x)
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_ceil(__x); }
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cos;
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(float __x)
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosf(__x); }
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cos(long double __x)
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_cosl(__x); }
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 63


 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     cos(_Tp __x)
 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cos(__x); }
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::cosh;
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(float __x)
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshf(__x); }
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   cosh(long double __x)
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_coshl(__x); }
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     cosh(_Tp __x)
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_cosh(__x); }
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::exp;
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(float __x)
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expf(__x); }
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   exp(long double __x)
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_expl(__x); }
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #endif
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   template<typename _Tp>
 231:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****                                     double>::__type
 234:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     exp(_Tp __x)
 235:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****     { return __builtin_exp(__x); }
 236:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 237:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   using ::fabs;
 238:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** 
 239:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   fabs(float __x)
 1133              		.loc 9 241 3 view .LVU355
 1134              	.LBB347:
 242:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/cmath ****   { return __builtin_fabsf(__x); }
 1135              		.loc 9 242 5 view .LVU356
 1136              		.loc 9 242 5 is_stmt 0 view .LVU357
 1137              	.LBE347:
 1138              	.LBE346:
 1139              	.LBE345:
 1140              	.LBE344:
  82:./dsp/follower.h ****         {
 1141              		.loc 6 82 30 view .LVU358
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 64


 1142 01b4 0430     		adds	r0, r0, #4
 1143              	.LBB351:
 1144              	.LBB350:
 1145              		.loc 6 84 13 view .LVU359
 1146 01b6 90ED057A 		vldr.32	s14, [r0, #20]
 1147              	.LBB349:
 1148              	.LBB348:
 1149              		.loc 9 242 31 view .LVU360
 1150 01ba B0EEC55A 		vabs.f32	s10, s10
 1151              	.LBE348:
 1152              	.LBE349:
 1153              		.loc 6 84 13 view .LVU361
 1154 01be 35EE475A 		vsub.f32	s10, s10, s14
 1155              	.LVL73:
 1156              		.loc 6 84 13 is_stmt 1 view .LVU362
 1157 01c2 B5EEC05A 		vcmpe.f32	s10, #0
 1158 01c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1159 01ca CCBF     		ite	gt
 1160 01cc 10ED010A 		vldrgt.32	s0, [r0, #-4]
 1161 01d0 90ED020A 		vldrle.32	s0, [r0, #8]
 1162 01d4 A5EE007A 		vfma.f32	s14, s10, s0
 1163 01d8 80ED057A 		vstr.32	s14, [r0, #20]
 1164              	.LBE350:
 1165              		.loc 6 84 71 view .LVU363
  85:./dsp/follower.h ****             weighted += detector_[i] * frequency;
 1166              		.loc 6 85 13 view .LVU364
 1167              	.LBE351:
  82:./dsp/follower.h ****         {
 1168              		.loc 6 82 30 is_stmt 0 view .LVU365
 1169 01dc 8242     		cmp	r2, r0
 1170              	.LBB352:
 1171              		.loc 6 85 22 view .LVU366
 1172 01de E4EE87AA 		vfma.f32	s21, s9, s14
 1173              	.LVL74:
  86:./dsp/follower.h ****             total += detector_[i];
 1174              		.loc 6 86 13 is_stmt 1 view .LVU367
 1175              		.loc 6 86 19 is_stmt 0 view .LVU368
 1176 01e2 77EE877A 		vadd.f32	s15, s15, s14
 1177              	.LVL75:
  87:./dsp/follower.h ****             frequency += 0.5f;
 1178              		.loc 6 87 13 is_stmt 1 view .LVU369
 1179              		.loc 6 87 23 is_stmt 0 view .LVU370
 1180 01e6 74EEA64A 		vadd.f32	s9, s9, s13
 1181              	.LVL76:
 1182              		.loc 6 87 23 view .LVU371
 1183              	.LBE352:
  82:./dsp/follower.h ****         {
 1184              		.loc 6 82 9 is_stmt 1 view .LVU372
  82:./dsp/follower.h ****         {
 1185              		.loc 6 82 30 view .LVU373
 1186 01ea E1D1     		bne	.L18
 1187              	.LBE343:
  88:./dsp/follower.h ****         }
  89:./dsp/follower.h **** 
  90:./dsp/follower.h ****         float error       = weighted / (total + 0.001f) - centroid_;
 1188              		.loc 6 90 9 view .LVU374
 1189              		.loc 6 90 47 is_stmt 0 view .LVU375
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 65


 1190 01ec DFED7C4A 		vldr.32	s9, .L46+16
 1191              	.LVL77:
 1192              		.loc 6 90 47 view .LVU376
 1193              	.LBE354:
 1194              	.LBE360:
 110:dsp/fm_voice.cpp **** 
 111:dsp/fm_voice.cpp ****         brightness_envelope
 112:dsp/fm_voice.cpp ****             *= 2.0f * amplitude_envelope * (2.0f - amplitude_envelope);
 1195              		.loc 3 112 50 view .LVU377
 1196 01f0 B0EE00BA 		vmov.f32	s22, #2.0e+0
 1197              	.LBB361:
 1198              	.LBB355:
 1199              		.loc 6 90 59 view .LVU378
 1200 01f4 94ED237A 		vldr.32	s14, [r4, #140]
 1201              	.LBE355:
 1202              	.LBE361:
 1203              	.LBB362:
 1204              	.LBB363:
  57:../../stmlib/dsp/parameter_interpolator.h ****   }
  58:../../stmlib/dsp/parameter_interpolator.h **** 
  59:../../stmlib/dsp/parameter_interpolator.h ****   inline float Next() {
  60:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1205              		.loc 8 60 12 view .LVU379
 1206 01f8 34EE204A 		vadd.f32	s8, s8, s1
 1207              	.LVL78:
 1208              		.loc 8 60 12 view .LVU380
 1209              	.LBE363:
 1210              	.LBE362:
 1211              	.LBB365:
 1212              	.LBB356:
 1213              		.loc 6 90 47 view .LVU381
 1214 01fc 37EEA45A 		vadd.f32	s10, s15, s9
 1215              	.LVL79:
 1216              		.loc 6 90 38 view .LVU382
 1217 0200 8AEE850A 		vdiv.f32	s0, s21, s10
  91:./dsp/follower.h ****         float coefficient = error > 0.0f ? 0.05f : 0.001f;
 1218              		.loc 6 91 42 view .LVU383
 1219 0204 9FED7B5A 		vldr.32	s10, .L46+36
 1220              	.LBE356:
 1221              	.LBE365:
 1222              	.LBB366:
 113:dsp/fm_voice.cpp **** 
 114:dsp/fm_voice.cpp ****         SLOPE(amplitude_envelope_, amplitude_envelope, 0.05f, amplitude_decay);
 115:dsp/fm_voice.cpp ****         SLOPE(
 116:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 117:dsp/fm_voice.cpp **** 
 118:dsp/fm_voice.cpp ****         // Compute envelopes.
 119:dsp/fm_voice.cpp ****         float brightness_value = brightness.Next();
 120:dsp/fm_voice.cpp ****         brightness_value *= brightness_value;
 121:dsp/fm_voice.cpp ****         float fm_amount_min
 122:dsp/fm_voice.cpp ****             = brightness_value < 0.5f ? 0.0f : brightness_value * 2.0f - 1.0f;
 123:dsp/fm_voice.cpp ****         float fm_amount_max
 124:dsp/fm_voice.cpp ****             = brightness_value < 0.5f ? 2.0f * brightness_value : 1.0f;
 125:dsp/fm_voice.cpp ****         float fm_envelope
 126:dsp/fm_voice.cpp ****             = 0.5f + envelope_amount * (brightness_envelope_ - 0.5f);
 127:dsp/fm_voice.cpp ****         float fm_amount = (fm_amount_min + fm_amount_max * fm_envelope) * 2.0f;
 128:dsp/fm_voice.cpp ****         SLEW(fm_amount_, fm_amount, 0.005f + fm_amount_max * 0.015f);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 66


 1223              		.loc 3 128 9 view .LVU384
 1224 0208 D4ED0EAA 		vldr.32	s21, [r4, #56]
 1225              	.LVL80:
 1226              		.loc 3 128 9 view .LVU385
 1227              	.LBE366:
 1228              	.LBB367:
 1229              	.LBB357:
  90:./dsp/follower.h ****         float coefficient = error > 0.0f ? 0.05f : 0.001f;
 1230              		.loc 6 90 15 view .LVU386
 1231 020c 30EE470A 		vsub.f32	s0, s0, s14
 1232              	.LVL81:
 1233              		.loc 6 91 9 is_stmt 1 view .LVU387
 1234              		.loc 6 91 42 is_stmt 0 view .LVU388
 1235 0210 B5EEC00A 		vcmpe.f32	s0, #0
 1236 0214 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1237 0218 75FE244A 		vselgt.f32	s9, s10, s9
 1238              	.LVL82:
  92:./dsp/follower.h ****         centroid_ += error * coefficient;
 1239              		.loc 6 92 9 is_stmt 1 view .LVU389
 1240              		.loc 6 92 19 is_stmt 0 view .LVU390
 1241 021c A0EE247A 		vfma.f32	s14, s0, s9
 1242              	.LBE357:
 1243              	.LBE367:
 112:dsp/fm_voice.cpp **** 
 1244              		.loc 3 112 50 view .LVU391
 1245 0220 7BEE674A 		vsub.f32	s9, s22, s15
 1246              	.LVL83:
 112:dsp/fm_voice.cpp **** 
 1247              		.loc 3 112 21 view .LVU392
 1248 0224 37EEA70A 		vadd.f32	s0, s15, s15
 1249              	.LVL84:
 112:dsp/fm_voice.cpp **** 
 1250              		.loc 3 112 42 view .LVU393
 1251 0228 20EE240A 		vmul.f32	s0, s0, s9
 1252              	.LBB368:
 114:dsp/fm_voice.cpp ****         SLOPE(
 1253              		.loc 3 114 9 view .LVU394
 1254 022c D4ED0B4A 		vldr.32	s9, [r4, #44]
 1255              	.LBE368:
 1256              	.LBB369:
 1257              	.LBB358:
 1258              		.loc 6 92 19 view .LVU395
 1259 0230 84ED237A 		vstr.32	s14, [r4, #140]
  93:./dsp/follower.h **** 
  94:./dsp/follower.h ****         *envelope = total;
 1260              		.loc 6 94 9 is_stmt 1 view .LVU396
 1261              	.LVL85:
  95:./dsp/follower.h ****         *centroid = centroid_;
 1262              		.loc 6 95 9 view .LVU397
 1263              		.loc 6 95 9 is_stmt 0 view .LVU398
 1264              	.LBE358:
 1265              	.LBE369:
 111:dsp/fm_voice.cpp ****             *= 2.0f * amplitude_envelope * (2.0f - amplitude_envelope);
 1266              		.loc 3 111 9 is_stmt 1 view .LVU399
 114:dsp/fm_voice.cpp ****         SLOPE(
 1267              		.loc 3 114 9 view .LVU400
 1268              	.LBB370:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 67


 114:dsp/fm_voice.cpp ****         SLOPE(
 1269              		.loc 3 114 9 view .LVU401
 1270 0234 77EEE47A 		vsub.f32	s15, s15, s9
 1271              	.LVL86:
 114:dsp/fm_voice.cpp ****         SLOPE(
 1272              		.loc 3 114 9 view .LVU402
 1273 0238 F5EEC07A 		vcmpe.f32	s15, #0
 1274 023c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1275              	.LVL87:
 114:dsp/fm_voice.cpp ****         SLOPE(
 1276              		.loc 3 114 9 is_stmt 0 view .LVU403
 1277 0240 35FE095A 		vselgt.f32	s10, s10, s18
 1278 0244 E5EE274A 		vfma.f32	s9, s10, s15
 1279              	.LBE370:
 1280              	.LBB371:
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1281              		.loc 3 115 9 view .LVU404
 1282 0248 D4ED0C7A 		vldr.32	s15, [r4, #48]
 1283              	.LVL88:
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1284              		.loc 3 115 9 view .LVU405
 1285 024c B0EE675A 		vmov.f32	s10, s15
 1286 0250 10EE075A 		vnmls.f32	s10, s0, s14
 1287 0254 9FED687A 		vldr.32	s14, .L46+40
 1288              	.LVL89:
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1289              		.loc 3 115 9 view .LVU406
 1290              	.LBE371:
 125:dsp/fm_voice.cpp ****             = 0.5f + envelope_amount * (brightness_envelope_ - 0.5f);
 1291              		.loc 3 125 15 view .LVU407
 1292 0258 B0EE660A 		vmov.f32	s0, s13
 1293              	.LVL90:
 1294              	.LBB372:
 114:dsp/fm_voice.cpp ****         SLOPE(
 1295              		.loc 3 114 9 view .LVU408
 1296 025c C4ED0B4A 		vstr.32	s9, [r4, #44]
 1297              	.LBE372:
 114:dsp/fm_voice.cpp ****         SLOPE(
 1298              		.loc 3 114 79 is_stmt 1 view .LVU409
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1299              		.loc 3 115 9 view .LVU410
 1300              	.LBB373:
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1301              		.loc 3 115 9 view .LVU411
 1302              	.LVL91:
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1303              		.loc 3 115 9 view .LVU412
 1304 0260 B5EEC05A 		vcmpe.f32	s10, #0
 1305 0264 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1306 0268 37FE297A 		vselgt.f32	s14, s14, s19
 1307 026c E7EE057A 		vfma.f32	s15, s14, s10
 1308              	.LBE373:
 120:dsp/fm_voice.cpp ****         float fm_amount_min
 1309              		.loc 3 120 26 is_stmt 0 view .LVU413
 1310 0270 24EE045A 		vmul.f32	s10, s8, s8
 1311              	.LVL92:
 122:dsp/fm_voice.cpp ****         float fm_amount_max
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 68


 1312              		.loc 3 122 39 view .LVU414
 1313 0274 B4EEE65A 		vcmpe.f32	s10, s13
 122:dsp/fm_voice.cpp ****         float fm_amount_max
 1314              		.loc 3 122 65 view .LVU415
 1315 0278 35EE057A 		vadd.f32	s14, s10, s10
 1316              	.LBB374:
 115:dsp/fm_voice.cpp ****             brightness_envelope_, brightness_envelope, 0.01f, brightness_decay);
 1317              		.loc 3 115 9 view .LVU416
 1318 027c C4ED0C7A 		vstr.32	s15, [r4, #48]
 1319              	.LBE374:
 116:dsp/fm_voice.cpp **** 
 1320              		.loc 3 116 80 is_stmt 1 view .LVU417
 119:dsp/fm_voice.cpp ****         brightness_value *= brightness_value;
 1321              		.loc 3 119 9 view .LVU418
 1322              	.LVL93:
 1323              	.LBB375:
 1324              	.LBI362:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1325              		.loc 8 59 16 view .LVU419
 1326              	.LBB364:
 1327              		.loc 8 60 5 view .LVU420
  61:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1328              		.loc 8 61 5 view .LVU421
 1329              		.loc 8 61 5 is_stmt 0 view .LVU422
 1330              	.LBE364:
 1331              	.LBE375:
 120:dsp/fm_voice.cpp ****         float fm_amount_min
 1332              		.loc 3 120 9 is_stmt 1 view .LVU423
 121:dsp/fm_voice.cpp ****             = brightness_value < 0.5f ? 0.0f : brightness_value * 2.0f - 1.0f;
 1333              		.loc 3 121 9 view .LVU424
 126:dsp/fm_voice.cpp ****         float fm_amount = (fm_amount_min + fm_amount_max * fm_envelope) * 2.0f;
 1334              		.loc 3 126 62 is_stmt 0 view .LVU425
 1335 0280 77EEE67A 		vsub.f32	s15, s15, s13
 122:dsp/fm_voice.cpp ****         float fm_amount_max
 1336              		.loc 3 122 39 view .LVU426
 1337 0284 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 125:dsp/fm_voice.cpp ****             = 0.5f + envelope_amount * (brightness_envelope_ - 0.5f);
 1338              		.loc 3 125 15 view .LVU427
 1339 0288 A7EE8A0A 		vfma.f32	s0, s15, s20
 122:dsp/fm_voice.cpp ****         float fm_amount_max
 1340              		.loc 3 122 39 view .LVU428
 1341 028c 56BF     		itet	pl
 1342 028e 37EE485A 		vsubpl.f32	s10, s14, s16
 1343              	.LVL94:
 123:dsp/fm_voice.cpp ****             = brightness_value < 0.5f ? 2.0f * brightness_value : 1.0f;
 1344              		.loc 3 123 9 is_stmt 1 view .LVU429
 1345 0292 9FED575A 		vldrmi.32	s10, .L46+32
 1346              	.LVL95:
 124:dsp/fm_voice.cpp ****         float fm_envelope
 1347              		.loc 3 124 39 is_stmt 0 view .LVU430
 1348 0296 B7EE007A 		vmovpl.f32	s14, #1.0e+0
 1349              	.LVL96:
 125:dsp/fm_voice.cpp ****             = 0.5f + envelope_amount * (brightness_envelope_ - 0.5f);
 1350              		.loc 3 125 9 is_stmt 1 view .LVU431
 127:dsp/fm_voice.cpp ****         SLEW(fm_amount_, fm_amount, 0.005f + fm_amount_max * 0.015f);
 1351              		.loc 3 127 9 view .LVU432
 127:dsp/fm_voice.cpp ****         SLEW(fm_amount_, fm_amount, 0.005f + fm_amount_max * 0.015f);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 69


 1352              		.loc 3 127 42 is_stmt 0 view .LVU433
 1353 029a A7EE005A 		vfma.f32	s10, s14, s0
 1354              	.LVL97:
 1355              		.loc 3 128 9 is_stmt 1 view .LVU434
 1356              	.LBB376:
 1357              		.loc 3 128 9 view .LVU435
 1358 029e B0EE6A0A 		vmov.f32	s0, s21
 1359              	.LVL98:
 1360              		.loc 3 128 9 is_stmt 0 view .LVU436
 1361 02a2 95EE0B0A 		vfnms.f32	s0, s10, s22
 1362              	.LVL99:
 1363              		.loc 3 128 9 is_stmt 1 view .LVU437
 1364 02a6 9FED55BA 		vldr.32	s22, .L46+44
 1365 02aa 9FED555A 		vldr.32	s10, .L46+48
 1366              	.LVL100:
 1367              		.loc 3 128 9 is_stmt 0 view .LVU438
 1368 02ae F0EE4B7A 		vmov.f32	s15, s22
 1369              	.LVL101:
 1370              		.loc 3 128 9 view .LVU439
 1371 02b2 E7EE057A 		vfma.f32	s15, s14, s10
 1372              	.LVL102:
 1373              		.loc 3 128 9 is_stmt 1 view .LVU440
 1374 02b6 B4EEE70A 		vcmpe.f32	s0, s15
 1375 02ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376              	.LVL103:
 1377              		.loc 3 128 9 is_stmt 0 view .LVU441
 1378 02be 07DC     		bgt	.L23
 1379              		.loc 3 128 9 is_stmt 1 discriminator 2 view .LVU442
 1380 02c0 F1EE677A 		vneg.f32	s15, s15
 1381              	.LVL104:
 1382              		.loc 3 128 9 is_stmt 0 discriminator 2 view .LVU443
 1383 02c4 F4EEC07A 		vcmpe.f32	s15, s0
 1384 02c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1385 02cc 77FE807A 		vselgt.f32	s15, s15, s0
 1386              	.L23:
 1387              	.LVL105:
 1388              		.loc 3 128 9 is_stmt 1 discriminator 6 view .LVU444
 1389              	.LBE376:
 129:dsp/fm_voice.cpp **** 
 130:dsp/fm_voice.cpp ****         // FM synthesis in itself
 131:dsp/fm_voice.cpp ****         float phase_feedback
 132:dsp/fm_voice.cpp ****             = feedback < 0.0f ? 0.5f * feedback * feedback : 0.0f;
 1390              		.loc 3 132 31 is_stmt 0 discriminator 6 view .LVU445
 1391 02d0 B5EEC06A 		vcmpe.f32	s12, #0
 1392              	.LBB377:
 128:dsp/fm_voice.cpp **** 
 1393              		.loc 3 128 9 discriminator 6 view .LVU446
 1394 02d4 7AEEA7AA 		vadd.f32	s21, s21, s15
 1395              	.LBE377:
 133:dsp/fm_voice.cpp ****         modulator_phase += static_cast<uint32_t>(
 134:dsp/fm_voice.cpp ****             4294967296.0f * modulator_increment.Next()
 135:dsp/fm_voice.cpp ****             * (1.0f + previous_sample * phase_feedback));
 1396              		.loc 3 135 21 discriminator 6 view .LVU447
 1397 02d8 B0EE485A 		vmov.f32	s10, s16
 1398              	.LVL106:
 132:dsp/fm_voice.cpp ****         modulator_phase += static_cast<uint32_t>(
 1399              		.loc 3 132 31 discriminator 6 view .LVU448
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 70


 1400 02dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1401              	.LBB378:
 1402              	.LBB379:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1403              		.loc 8 60 12 discriminator 6 view .LVU449
 1404 02e0 75EE825A 		vadd.f32	s11, s11, s4
 1405              	.LVL107:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1406              		.loc 8 60 12 discriminator 6 view .LVU450
 1407              	.LBE379:
 1408              	.LBE378:
 1409              	.LBB381:
 128:dsp/fm_voice.cpp **** 
 1410              		.loc 3 128 9 discriminator 6 view .LVU451
 1411 02e4 C4ED0EAA 		vstr.32	s21, [r4, #56]
 1412              	.LBE381:
 128:dsp/fm_voice.cpp **** 
 1413              		.loc 3 128 69 is_stmt 1 discriminator 6 view .LVU452
 131:dsp/fm_voice.cpp ****             = feedback < 0.0f ? 0.5f * feedback * feedback : 0.0f;
 1414              		.loc 3 131 9 discriminator 6 view .LVU453
 1415              	.LBB382:
 1416              	.LBB383:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1417              		.loc 8 60 12 is_stmt 0 discriminator 6 view .LVU454
 1418 02e8 72EE812A 		vadd.f32	s5, s5, s2
 1419              	.LVL108:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1420              		.loc 8 60 12 discriminator 6 view .LVU455
 1421              	.LBE383:
 1422              	.LBE382:
 132:dsp/fm_voice.cpp ****         modulator_phase += static_cast<uint32_t>(
 1423              		.loc 3 132 38 discriminator 6 view .LVU456
 1424 02ec 4CBF     		ite	mi
 1425 02ee 66EE267A 		vmulmi.f32	s15, s12, s13
 1426              	.LVL109:
 132:dsp/fm_voice.cpp ****         modulator_phase += static_cast<uint32_t>(
 1427              		.loc 3 132 31 discriminator 6 view .LVU457
 1428 02f2 DFED3F7A 		vldrpl.32	s15, .L46+32
 136:dsp/fm_voice.cpp ****         carrier_phase
 137:dsp/fm_voice.cpp ****             += static_cast<uint32_t>(4294967296.0f * carrier_increment.Next());
 138:dsp/fm_voice.cpp **** 
 139:dsp/fm_voice.cpp ****         float feedback = feedback_amount.Next();
 140:dsp/fm_voice.cpp ****         float modulator_fb
 141:dsp/fm_voice.cpp ****             = feedback > 0.0f ? 0.25f * feedback * feedback : 0.0f;
 1429              		.loc 3 141 31 discriminator 6 view .LVU458
 1430 02f6 F5EEC05A 		vcmpe.f32	s11, #0
 1431              	.LBB385:
 1432              	.LBB386:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1433              		.loc 8 60 12 discriminator 6 view .LVU459
 1434 02fa 33EE213A 		vadd.f32	s6, s6, s3
 1435              	.LVL110:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1436              		.loc 8 60 12 discriminator 6 view .LVU460
 1437              	.LBE386:
 1438              	.LBE385:
 132:dsp/fm_voice.cpp ****         modulator_phase += static_cast<uint32_t>(
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 71


 1439              		.loc 3 132 31 discriminator 6 view .LVU461
 1440 02fe 48BF     		it	mi
 1441 0300 67EE867A 		vmulmi.f32	s15, s15, s12
 1442              	.LVL111:
 133:dsp/fm_voice.cpp ****             4294967296.0f * modulator_increment.Next()
 1443              		.loc 3 133 9 is_stmt 1 discriminator 6 view .LVU462
 1444              	.LBB388:
 1445              	.LBI382:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1446              		.loc 8 59 16 discriminator 6 view .LVU463
 1447              	.LBB384:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1448              		.loc 8 60 5 discriminator 6 view .LVU464
 1449              		.loc 8 61 5 discriminator 6 view .LVU465
 1450              		.loc 8 61 5 is_stmt 0 discriminator 6 view .LVU466
 1451              	.LBE384:
 1452              	.LBE388:
 1453              		.loc 3 141 31 discriminator 6 view .LVU467
 1454 0304 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 142:dsp/fm_voice.cpp ****         float modulator
 143:dsp/fm_voice.cpp ****             = SineFm(modulator_phase, modulator_fb * previous_sample);
 144:dsp/fm_voice.cpp ****         float carrier = SineFm(carrier_phase, fm_amount_ * modulator);
 145:dsp/fm_voice.cpp ****         ONE_POLE(previous_sample, carrier, 0.1f);
 146:dsp/fm_voice.cpp **** 
 147:dsp/fm_voice.cpp ****         // Compute amplitude envelope.
 148:dsp/fm_voice.cpp ****         float gain = 1.0f + envelope_amount * (amplitude_envelope_ - 1.0f);
 1455              		.loc 3 148 68 discriminator 6 view .LVU468
 1456 0308 74EEC84A 		vsub.f32	s9, s9, s16
 135:dsp/fm_voice.cpp ****         carrier_phase
 1457              		.loc 3 135 21 discriminator 6 view .LVU469
 1458 030c A3EEA75A 		vfma.f32	s10, s7, s15
 134:dsp/fm_voice.cpp ****             * (1.0f + previous_sample * phase_feedback));
 1459              		.loc 3 134 27 discriminator 6 view .LVU470
 1460 0310 DFED3C7A 		vldr.32	s15, .L46+52
 1461              	.LVL112:
 141:dsp/fm_voice.cpp ****         float modulator
 1462              		.loc 3 141 39 discriminator 6 view .LVU471
 1463 0314 CCBF     		ite	gt
 1464 0316 B5EE000A 		vmovgt.f32	s0, #2.5e-1
 141:dsp/fm_voice.cpp ****         float modulator
 1465              		.loc 3 141 31 discriminator 6 view .LVU472
 1466 031a 9FED350A 		vldrle.32	s0, .L46+32
 134:dsp/fm_voice.cpp ****             * (1.0f + previous_sample * phase_feedback));
 1467              		.loc 3 134 27 discriminator 6 view .LVU473
 1468 031e 22EEA77A 		vmul.f32	s14, s5, s15
 1469              	.LVL113:
 137:dsp/fm_voice.cpp **** 
 1470              		.loc 3 137 52 discriminator 6 view .LVU474
 1471 0322 63EE277A 		vmul.f32	s15, s6, s15
 141:dsp/fm_voice.cpp ****         float modulator
 1472              		.loc 3 141 39 discriminator 6 view .LVU475
 1473 0326 C8BF     		it	gt
 1474 0328 25EE800A 		vmulgt.f32	s0, s11, s0
 135:dsp/fm_voice.cpp ****         carrier_phase
 1475              		.loc 3 135 13 discriminator 6 view .LVU476
 1476 032c 27EE057A 		vmul.f32	s14, s14, s10
 137:dsp/fm_voice.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 72


 1477              		.loc 3 137 16 discriminator 6 view .LVU477
 1478 0330 FCEEE77A 		vcvt.u32.f32	s15, s15
 141:dsp/fm_voice.cpp ****         float modulator
 1479              		.loc 3 141 31 discriminator 6 view .LVU478
 1480 0334 C8BF     		it	gt
 1481 0336 20EE250A 		vmulgt.f32	s0, s0, s11
 133:dsp/fm_voice.cpp ****             4294967296.0f * modulator_increment.Next()
 1482              		.loc 3 133 28 discriminator 6 view .LVU479
 1483 033a BCEEC77A 		vcvt.u32.f32	s14, s14
 143:dsp/fm_voice.cpp ****         float carrier = SineFm(carrier_phase, fm_amount_ * modulator);
 1484              		.loc 3 143 21 discriminator 6 view .LVU480
 1485 033e 23EE800A 		vmul.f32	s0, s7, s0
 133:dsp/fm_voice.cpp ****             4294967296.0f * modulator_increment.Next()
 1486              		.loc 3 133 25 discriminator 6 view .LVU481
 1487 0342 17EE103A 		vmov	r3, s14	@ int
 1488 0346 9944     		add	r9, r9, r3
 1489              	.LVL114:
 136:dsp/fm_voice.cpp ****             += static_cast<uint32_t>(4294967296.0f * carrier_increment.Next());
 1490              		.loc 3 136 9 is_stmt 1 discriminator 6 view .LVU482
 1491              	.LBB389:
 1492              	.LBI385:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1493              		.loc 8 59 16 discriminator 6 view .LVU483
 1494              	.LBB387:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1495              		.loc 8 60 5 discriminator 6 view .LVU484
 1496              		.loc 8 61 5 discriminator 6 view .LVU485
 1497              		.loc 8 61 5 is_stmt 0 discriminator 6 view .LVU486
 1498              	.LBE387:
 1499              	.LBE389:
 137:dsp/fm_voice.cpp **** 
 1500              		.loc 3 137 13 discriminator 6 view .LVU487
 1501 0348 17EE903A 		vmov	r3, s15	@ int
 1502 034c 9A44     		add	r10, r10, r3
 1503              	.LVL115:
 139:dsp/fm_voice.cpp ****         float modulator_fb
 1504              		.loc 3 139 9 is_stmt 1 discriminator 6 view .LVU488
 1505              	.LBB390:
 1506              	.LBI378:
  59:../../stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1507              		.loc 8 59 16 discriminator 6 view .LVU489
 1508              	.LBB380:
  60:../../stmlib/dsp/parameter_interpolator.h ****     return value_;
 1509              		.loc 8 60 5 discriminator 6 view .LVU490
 1510              		.loc 8 61 5 discriminator 6 view .LVU491
 1511              		.loc 8 61 5 is_stmt 0 discriminator 6 view .LVU492
 1512              	.LBE380:
 1513              	.LBE390:
 140:dsp/fm_voice.cpp ****             = feedback > 0.0f ? 0.25f * feedback * feedback : 0.0f;
 1514              		.loc 3 140 9 is_stmt 1 discriminator 6 view .LVU493
 142:dsp/fm_voice.cpp ****             = SineFm(modulator_phase, modulator_fb * previous_sample);
 1515              		.loc 3 142 9 discriminator 6 view .LVU494
 143:dsp/fm_voice.cpp ****         float carrier = SineFm(carrier_phase, fm_amount_ * modulator);
 1516              		.loc 3 143 21 is_stmt 0 discriminator 6 view .LVU495
 1517 034e 4846     		mov	r0, r9
 1518 0350 FFF7FEFF 		bl	_ZNK5torus7FMVoice6SineFmEmf.isra.0
 1519              	.LVL116:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 73


 143:dsp/fm_voice.cpp ****         float carrier = SineFm(carrier_phase, fm_amount_ * modulator);
 1520              		.loc 3 143 21 discriminator 6 view .LVU496
 1521 0354 B0EE405A 		vmov.f32	s10, s0
 1522              	.LVL117:
 144:dsp/fm_voice.cpp ****         ONE_POLE(previous_sample, carrier, 0.1f);
 1523              		.loc 3 144 9 is_stmt 1 discriminator 6 view .LVU497
 144:dsp/fm_voice.cpp ****         ONE_POLE(previous_sample, carrier, 0.1f);
 1524              		.loc 3 144 31 is_stmt 0 discriminator 6 view .LVU498
 1525 0358 5046     		mov	r0, r10
 1526 035a 2AEE800A 		vmul.f32	s0, s21, s0
 1527              	.LVL118:
 144:dsp/fm_voice.cpp ****         ONE_POLE(previous_sample, carrier, 0.1f);
 1528              		.loc 3 144 31 discriminator 6 view .LVU499
 1529 035e FFF7FEFF 		bl	_ZNK5torus7FMVoice6SineFmEmf.isra.0
 1530              	.LVL119:
 145:dsp/fm_voice.cpp **** 
 1531              		.loc 3 145 9 discriminator 6 view .LVU500
 1532 0362 30EE637A 		vsub.f32	s14, s0, s7
 144:dsp/fm_voice.cpp ****         ONE_POLE(previous_sample, carrier, 0.1f);
 1533              		.loc 3 144 31 discriminator 6 view .LVU501
 1534 0366 F0EE407A 		vmov.f32	s15, s0
 1535              	.LVL120:
 145:dsp/fm_voice.cpp **** 
 1536              		.loc 3 145 9 is_stmt 1 discriminator 6 view .LVU502
 149:dsp/fm_voice.cpp ****         ONE_POLE(gain_, gain, 0.005f + 0.045f * fm_amount_);
 1537              		.loc 3 149 9 is_stmt 0 discriminator 6 view .LVU503
 1538 036a 94ED0D0A 		vldr.32	s0, [r4, #52]
 1539              	.LVL121:
 150:dsp/fm_voice.cpp **** 
 151:dsp/fm_voice.cpp ****         *out++ = (carrier + 0.5f * modulator) * gain_;
 1540              		.loc 3 151 34 discriminator 6 view .LVU504
 1541 036e 25EE265A 		vmul.f32	s10, s10, s13
 1542              	.LVL122:
 145:dsp/fm_voice.cpp **** 
 1543              		.loc 3 145 9 discriminator 6 view .LVU505
 1544 0372 E7EE283A 		vfma.f32	s7, s14, s17
 1545              	.LVL123:
 145:dsp/fm_voice.cpp **** 
 1546              		.loc 3 145 49 is_stmt 1 discriminator 6 view .LVU506
 148:dsp/fm_voice.cpp ****         ONE_POLE(gain_, gain, 0.005f + 0.045f * fm_amount_);
 1547              		.loc 3 148 9 discriminator 6 view .LVU507
 148:dsp/fm_voice.cpp ****         ONE_POLE(gain_, gain, 0.005f + 0.045f * fm_amount_);
 1548              		.loc 3 148 15 is_stmt 0 discriminator 6 view .LVU508
 1549 0376 B0EE487A 		vmov.f32	s14, s16
 1550              		.loc 3 151 27 discriminator 6 view .LVU509
 1551 037a 75EE277A 		vadd.f32	s15, s10, s15
 1552              	.LVL124:
 148:dsp/fm_voice.cpp ****         ONE_POLE(gain_, gain, 0.005f + 0.045f * fm_amount_);
 1553              		.loc 3 148 15 discriminator 6 view .LVU510
 1554 037e A4EE8A7A 		vfma.f32	s14, s9, s20
 1555              	.LVL125:
 149:dsp/fm_voice.cpp **** 
 1556              		.loc 3 149 9 is_stmt 1 discriminator 6 view .LVU511
 1557 0382 DFED214A 		vldr.32	s9, .L46+56
 1558 0386 AAEEA4BA 		vfma.f32	s22, s21, s9
 1559              	.LVL126:
 149:dsp/fm_voice.cpp **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 74


 1560              		.loc 3 149 9 is_stmt 0 discriminator 6 view .LVU512
 1561 038a 37EE407A 		vsub.f32	s14, s14, s0
 1562              	.LVL127:
 149:dsp/fm_voice.cpp **** 
 1563              		.loc 3 149 9 discriminator 6 view .LVU513
 1564 038e ABEE070A 		vfma.f32	s0, s22, s14
 1565              		.loc 3 151 47 discriminator 6 view .LVU514
 1566 0392 67EE807A 		vmul.f32	s15, s15, s0
 149:dsp/fm_voice.cpp **** 
 1567              		.loc 3 149 9 discriminator 6 view .LVU515
 1568 0396 84ED0D0A 		vstr.32	s0, [r4, #52]
 149:dsp/fm_voice.cpp **** 
 1569              		.loc 3 149 60 is_stmt 1 discriminator 6 view .LVU516
 1570              		.loc 3 151 9 discriminator 6 view .LVU517
 1571              	.LVL128:
 1572              		.loc 3 151 16 is_stmt 0 discriminator 6 view .LVU518
 1573 039a E6EC017A 		vstmia.32	r6!, {s15}
 1574              	.LVL129:
 152:dsp/fm_voice.cpp ****         *aux++ = 0.5f * modulator * gain_;
 1575              		.loc 3 152 9 is_stmt 1 discriminator 6 view .LVU519
 1576              		.loc 3 152 35 is_stmt 0 discriminator 6 view .LVU520
 1577 039e 94ED0D0A 		vldr.32	s0, [r4, #52]
 1578 03a2 20EE055A 		vmul.f32	s10, s0, s10
 1579              		.loc 3 152 16 discriminator 6 view .LVU521
 1580 03a6 A5EC015A 		vstmia.32	r5!, {s10}
 1581              	.LVL130:
 1582              		.loc 3 152 16 discriminator 6 view .LVU522
 1583              	.LBE392:
 105:dsp/fm_voice.cpp ****     {
 1584              		.loc 3 105 5 discriminator 6 view .LVU523
 1585 03aa C2E6     		b	.L29
 1586              	.LVL131:
 1587              	.L14:
 153:dsp/fm_voice.cpp ****     }
 154:dsp/fm_voice.cpp ****     carrier_phase_   = carrier_phase;
 1588              		.loc 3 154 5 is_stmt 1 view .LVU524
 155:dsp/fm_voice.cpp ****     modulator_phase_ = modulator_phase;
 1589              		.loc 3 155 22 is_stmt 0 view .LVU525
 1590 03ac C4E90FA9 		strd	r10, r9, [r4, #60]
 156:dsp/fm_voice.cpp ****     previous_sample_ = previous_sample;
 1591              		.loc 3 156 5 is_stmt 1 view .LVU526
 1592              		.loc 3 156 22 is_stmt 0 view .LVU527
 1593 03b0 C4ED113A 		vstr.32	s7, [r4, #68]
 1594              	.LVL132:
 1595              	.LBB393:
 1596              	.LBI393:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1597              		.loc 8 49 3 is_stmt 1 view .LVU528
 1598              	.LBB394:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1599              		.loc 8 50 5 view .LVU529
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1600              		.loc 8 50 13 is_stmt 0 view .LVU530
 1601 03b4 C4ED0A5A 		vstr.32	s11, [r4, #40]
 1602              	.LVL133:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1603              		.loc 8 50 13 view .LVU531
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 75


 1604              	.LBE394:
 1605              	.LBE393:
 1606              	.LBB395:
 1607              	.LBI395:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1608              		.loc 8 49 3 is_stmt 1 view .LVU532
 1609              	.LBB396:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1610              		.loc 8 50 5 view .LVU533
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1611              		.loc 8 50 13 is_stmt 0 view .LVU534
 1612 03b8 84ED084A 		vstr.32	s8, [r4, #32]
 1613              	.LVL134:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1614              		.loc 8 50 13 view .LVU535
 1615              	.LBE396:
 1616              	.LBE395:
 1617              	.LBB397:
 1618              	.LBI397:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1619              		.loc 8 49 3 is_stmt 1 view .LVU536
 1620              	.LBB398:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1621              		.loc 8 50 5 view .LVU537
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1622              		.loc 8 50 13 is_stmt 0 view .LVU538
 1623 03bc C4ED072A 		vstr.32	s5, [r4, #28]
 1624              	.LVL135:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1625              		.loc 8 50 13 view .LVU539
 1626              	.LBE398:
 1627              	.LBE397:
 1628              	.LBB399:
 1629              	.LBI399:
  49:../../stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1630              		.loc 8 49 3 is_stmt 1 view .LVU540
 1631              	.LBB400:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1632              		.loc 8 50 5 view .LVU541
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1633              		.loc 8 50 13 is_stmt 0 view .LVU542
 1634 03c0 84ED063A 		vstr.32	s6, [r4, #24]
 1635              	.LVL136:
  50:../../stmlib/dsp/parameter_interpolator.h ****   }
 1636              		.loc 8 50 13 view .LVU543
 1637              	.LBE400:
 1638              	.LBE399:
 157:dsp/fm_voice.cpp **** }
 1639              		.loc 3 157 1 view .LVU544
 1640 03c4 04B0     		add	sp, sp, #16
 1641              		.cfi_def_cfa_offset 64
 1642              		@ sp needed
 1643 03c6 BDEC088B 		vldm	sp!, {d8-d11}
 1644              		.cfi_restore 86
 1645              		.cfi_restore 87
 1646              		.cfi_restore 84
 1647              		.cfi_restore 85
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 76


 1648              		.cfi_restore 82
 1649              		.cfi_restore 83
 1650              		.cfi_restore 80
 1651              		.cfi_restore 81
 1652              		.cfi_def_cfa_offset 32
 1653              	.LVL137:
 1654              		.loc 3 157 1 view .LVU545
 1655 03ca BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1656              	.LVL138:
 1657              	.L47:
 1658              		.loc 3 157 1 view .LVU546
 1659 03ce 00BF     		.align	2
 1660              	.L46:
 1661 03d0 6666663F 		.word	1063675494
 1662 03d4 0000C042 		.word	1119879168
 1663 03d8 CDCCCC3D 		.word	1036831949
 1664 03dc 00803B47 		.word	1195081728
 1665 03e0 6F12833A 		.word	981668463
 1666 03e4 0000A842 		.word	1118306304
 1667 03e8 00000043 		.word	1124073472
 1668 03ec 00000000 		.word	_ZN5torus26lut_fm_frequency_quantizerE
 1669 03f0 00000000 		.word	0
 1670 03f4 CDCC4C3D 		.word	1028443341
 1671 03f8 0AD7233C 		.word	1008981770
 1672 03fc 0AD7A33B 		.word	1000593162
 1673 0400 8FC2753C 		.word	1014350479
 1674 0404 0000804F 		.word	1333788672
 1675 0408 EC51383D 		.word	1027101164
 1676              		.cfi_endproc
 1677              	.LFE1515:
 1679              		.text
 1680              	.Letext0:
 1681              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 1682              		.file 11 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 1683              		.file 12 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 1684              		.file 13 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1685              		.file 14 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1686              		.file 15 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1687              		.file 16 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1688              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1689              		.file 18 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1690              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1691              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1692              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1693              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 1694              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 1695              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1696              		.file 25 "../../stmlib/stmlib.h"
 1697              		.file 26 "./dsp/dsp.h"
 1698              		.file 27 "./resources.h"
 1699              		.file 28 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 fm_voice.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:17     .text._ZNK5torus7FMVoice6SineFmEmf.isra.0:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:24     .text._ZNK5torus7FMVoice6SineFmEmf.isra.0:0000000000000000 _ZNK5torus7FMVoice6SineFmEmf.isra.0
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:86     .text._ZNK5torus7FMVoice6SineFmEmf.isra.0:000000000000004c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:93     .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:100    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 _ZN6stmlib16SemitonesToRatioEf
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:148    .text._ZN6stmlib16SemitonesToRatioEf:000000000000003c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:155    .text._ZN5torus7FMVoice4InitEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:162    .text._ZN5torus7FMVoice4InitEv:0000000000000000 _ZN5torus7FMVoice4InitEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:589    .text._ZN5torus7FMVoice4InitEv:0000000000000084 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:600    .text._ZN5torus7FMVoice7ProcessEPKfPfS3_j:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:607    .text._ZN5torus7FMVoice7ProcessEPKfPfS3_j:0000000000000000 _ZN5torus7FMVoice7ProcessEPKfPfS3_j
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccIPm2En.s:1661   .text._ZN5torus7FMVoice7ProcessEPKfPfS3_j:00000000000003d0 $d

UNDEFINED SYMBOLS
_ZN5torus8lut_sineE
_ZN6stmlib19lut_pitch_ratio_lowE
_ZN6stmlib20lut_pitch_ratio_highE
powf
_ZN5torus26lut_fm_frequency_quantizerE
