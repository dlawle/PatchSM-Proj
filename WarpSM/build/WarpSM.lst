ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"WarpSM.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1606:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1606:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev,"axG",%progbits,_ZN5daisy8patch_sm12DaisyPatch
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev:
  52              	.LVL1:
  53              	.LFB4784:
  54              		.file 2 "../../libDaisy//src/daisy_patch_sm.h"
   1:../../libDaisy//src/daisy_patch_sm.h **** #pragma once
   2:../../libDaisy//src/daisy_patch_sm.h **** 
   3:../../libDaisy//src/daisy_patch_sm.h **** #include "daisy.h"
   4:../../libDaisy//src/daisy_patch_sm.h **** 
   5:../../libDaisy//src/daisy_patch_sm.h **** namespace daisy
   6:../../libDaisy//src/daisy_patch_sm.h **** {
   7:../../libDaisy//src/daisy_patch_sm.h **** namespace patch_sm
   8:../../libDaisy//src/daisy_patch_sm.h **** {
   9:../../libDaisy//src/daisy_patch_sm.h ****     /** Accessors for the Analog Controls. 
  10:../../libDaisy//src/daisy_patch_sm.h ****      *  These cover the 8x Bipolar CV inputs
  11:../../libDaisy//src/daisy_patch_sm.h ****      *  as well as the 4x 0-3V3 ADC inputs on
  12:../../libDaisy//src/daisy_patch_sm.h ****      *  the hardware 
  13:../../libDaisy//src/daisy_patch_sm.h ****      * 
  14:../../libDaisy//src/daisy_patch_sm.h ****      *  When reading a value with DaisyPatchSM::GetAdcValue()
  15:../../libDaisy//src/daisy_patch_sm.h ****      * 
  16:../../libDaisy//src/daisy_patch_sm.h ****      *  patch.GetAdcValue(patch_sm::CV_1);
  17:../../libDaisy//src/daisy_patch_sm.h ****      */
  18:../../libDaisy//src/daisy_patch_sm.h ****     enum
  19:../../libDaisy//src/daisy_patch_sm.h ****     {
  20:../../libDaisy//src/daisy_patch_sm.h ****         CV_1 = 0,
  21:../../libDaisy//src/daisy_patch_sm.h ****         CV_2,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 3


  22:../../libDaisy//src/daisy_patch_sm.h ****         CV_3,
  23:../../libDaisy//src/daisy_patch_sm.h ****         CV_4,
  24:../../libDaisy//src/daisy_patch_sm.h ****         CV_5,
  25:../../libDaisy//src/daisy_patch_sm.h ****         CV_6,
  26:../../libDaisy//src/daisy_patch_sm.h ****         CV_7,
  27:../../libDaisy//src/daisy_patch_sm.h ****         CV_8,
  28:../../libDaisy//src/daisy_patch_sm.h ****         ADC_9,
  29:../../libDaisy//src/daisy_patch_sm.h ****         ADC_10,
  30:../../libDaisy//src/daisy_patch_sm.h ****         ADC_11,
  31:../../libDaisy//src/daisy_patch_sm.h ****         ADC_12,
  32:../../libDaisy//src/daisy_patch_sm.h ****         ADC_LAST,
  33:../../libDaisy//src/daisy_patch_sm.h ****     };
  34:../../libDaisy//src/daisy_patch_sm.h **** 
  35:../../libDaisy//src/daisy_patch_sm.h ****     /** Enum for addressing the CV Outputs via the WriteCvOut function. */
  36:../../libDaisy//src/daisy_patch_sm.h ****     enum
  37:../../libDaisy//src/daisy_patch_sm.h ****     {
  38:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_BOTH = 0,
  39:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_1,
  40:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_2,
  41:../../libDaisy//src/daisy_patch_sm.h ****     };
  42:../../libDaisy//src/daisy_patch_sm.h **** 
  43:../../libDaisy//src/daisy_patch_sm.h **** 
  44:../../libDaisy//src/daisy_patch_sm.h ****     /** @brief Board support file for DaisyPatchSM hardware
  45:../../libDaisy//src/daisy_patch_sm.h ****      *  @author shensley
  46:../../libDaisy//src/daisy_patch_sm.h ****      *  @ingroup boards
  47:../../libDaisy//src/daisy_patch_sm.h ****      * 
  48:../../libDaisy//src/daisy_patch_sm.h ****      *  Daisy Patch SM is a complete Eurorack module DSP engine.
  49:../../libDaisy//src/daisy_patch_sm.h ****      *  Based on the Daisy Seed, with circuits added for 
  50:../../libDaisy//src/daisy_patch_sm.h ****      *  interfacing directly with eurorack modular synthesizers.
  51:../../libDaisy//src/daisy_patch_sm.h ****      */
  52:../../libDaisy//src/daisy_patch_sm.h ****     class DaisyPatchSM
  53:../../libDaisy//src/daisy_patch_sm.h ****     {
  54:../../libDaisy//src/daisy_patch_sm.h ****       public:
  55:../../libDaisy//src/daisy_patch_sm.h ****         /** Helper for mapping pins, and accessing them using the `GetPin` function */
  56:../../libDaisy//src/daisy_patch_sm.h ****         enum class PinBank
  57:../../libDaisy//src/daisy_patch_sm.h ****         {
  58:../../libDaisy//src/daisy_patch_sm.h ****             A,
  59:../../libDaisy//src/daisy_patch_sm.h ****             B,
  60:../../libDaisy//src/daisy_patch_sm.h ****             C,
  61:../../libDaisy//src/daisy_patch_sm.h ****             D
  62:../../libDaisy//src/daisy_patch_sm.h ****         };
  63:../../libDaisy//src/daisy_patch_sm.h **** 
  64:../../libDaisy//src/daisy_patch_sm.h ****         DaisyPatchSM() {}
  65:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
  55              		.loc 2 65 9 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB619:
  61              	.LBI619:
  62              		.file 3 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 4


   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn 
  18:../../libDaisy//src/hid/gatein.h ****     Constructor 
  19:../../libDaisy//src/hid/gatein.h ****     */
  20:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  21:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
  22:../../libDaisy//src/hid/gatein.h ****     Destructor 
  23:../../libDaisy//src/hid/gatein.h ****     */
  24:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
  63              		.loc 3 24 5 view .LVU3
  64              		.loc 3 24 5 is_stmt 0 view .LVU4
  65              	.LBE619:
  66              	.LBB620:
  67              	.LBI620:
  68              		.loc 3 24 5 is_stmt 1 view .LVU5
  69              		.loc 3 24 5 is_stmt 0 view .LVU6
  70              	.LBE620:
  71              	.LBB621:
  72              	.LBI621:
  73              		.file 4 "../../libDaisy//src/dev/codec_pcm3060.h"
   1:../../libDaisy//src/dev/codec_pcm3060.h **** #pragma once
   2:../../libDaisy//src/dev/codec_pcm3060.h **** #ifndef DSY_CODEC_PCM3060_H
   3:../../libDaisy//src/dev/codec_pcm3060.h **** #define DSY_CODEC_PCM3060_H
   4:../../libDaisy//src/dev/codec_pcm3060.h **** #include "per/i2c.h"
   5:../../libDaisy//src/dev/codec_pcm3060.h **** namespace daisy
   6:../../libDaisy//src/dev/codec_pcm3060.h **** {
   7:../../libDaisy//src/dev/codec_pcm3060.h **** /**
   8:../../libDaisy//src/dev/codec_pcm3060.h ****  * @brief Driver for the TI PCM3060 Audio Codec.
   9:../../libDaisy//src/dev/codec_pcm3060.h ****  * @addtogroup codec
  10:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  11:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now this is a limited interface that uses I2C to communicate with the PCM3060
  12:../../libDaisy//src/dev/codec_pcm3060.h ****  * The device can also be accessed with SPI, which is not yet supported.
  13:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  14:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now all registers are set to their defaults, and the Init function will 
  15:../../libDaisy//src/dev/codec_pcm3060.h ****  * perform a MRST and SRST before setting the format to 24bit LJ, and disabling 
  16:../../libDaisy//src/dev/codec_pcm3060.h ****  * power save for both the ADC and DAC.
  17:../../libDaisy//src/dev/codec_pcm3060.h ****  *
  18:../../libDaisy//src/dev/codec_pcm3060.h ****  */
  19:../../libDaisy//src/dev/codec_pcm3060.h **** class Pcm3060
  20:../../libDaisy//src/dev/codec_pcm3060.h **** {
  21:../../libDaisy//src/dev/codec_pcm3060.h ****   public:
  22:../../libDaisy//src/dev/codec_pcm3060.h ****     enum class Result
  23:../../libDaisy//src/dev/codec_pcm3060.h ****     {
  24:../../libDaisy//src/dev/codec_pcm3060.h ****         OK,
  25:../../libDaisy//src/dev/codec_pcm3060.h ****         ERR,
  26:../../libDaisy//src/dev/codec_pcm3060.h ****     };
  27:../../libDaisy//src/dev/codec_pcm3060.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 5


  28:../../libDaisy//src/dev/codec_pcm3060.h ****     Pcm3060() {}
  29:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
  74              		.loc 4 29 5 is_stmt 1 view .LVU7
  75              		.loc 4 29 5 is_stmt 0 view .LVU8
  76              	.LBE621:
  77              	.LBB622:
  78              	.LBI622:
  79              		.file 5 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  80              		.loc 5 42 5 is_stmt 1 view .LVU9
  81              		.loc 5 42 5 is_stmt 0 view .LVU10
  82              	.LBE622:
  83              	.LBB623:
  84              	.LBI623:
  85              		.file 6 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 6


   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 7


  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  86              		.loc 6 93 5 is_stmt 1 view .LVU11
  87              		.loc 6 93 5 is_stmt 0 view .LVU12
  88              	.LBE623:
  89              	.LBB624:
  90              	.LBI624:
  91              		.file 7 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 8


  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 9


  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  92              		.loc 7 96 5 is_stmt 1 view .LVU13
  93              		.loc 7 96 5 is_stmt 0 view .LVU14
  94              	.LBE624:
  95              	.LBB625:
  96              	.LBI625:
  97              		.file 8 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 10


  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
  98              		.loc 8 78 5 is_stmt 1 view .LVU15
  99              		.loc 8 78 5 is_stmt 0 view .LVU16
 100              	.LBE625:
 101              		.loc 2 65 26 view .LVU17
 102 0000 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE4784:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 11


 106              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 107              		.thumb_set _ZN5daisy8patch_sm12DaisyPatchSMD1Ev,_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
 108 0002 00BF     		.section	.text._ZN5warps9ModulatorD2Ev,"axG",%progbits,_ZN5warps9ModulatorD5Ev,comdat
 109              		.align	1
 110              		.p2align 2,,3
 111              		.weak	_ZN5warps9ModulatorD2Ev
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv5-d16
 117              	_ZN5warps9ModulatorD2Ev:
 118              	.LVL2:
 119              	.LFB5033:
 120              		.file 9 "../../../mutable-instruments/warps/dsp/modulator.h"
   1:../../../mutable-instruments/warps/dsp/modulator.h **** // Copyright 2014 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/modulator.h **** //
   3:../../../mutable-instruments/warps/dsp/modulator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/modulator.h **** //
   5:../../../mutable-instruments/warps/dsp/modulator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/modulator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/modulator.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/modulator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/warps/dsp/modulator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/warps/dsp/modulator.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/modulator.h **** // 
  12:../../../mutable-instruments/warps/dsp/modulator.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/modulator.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/modulator.h **** // 
  15:../../../mutable-instruments/warps/dsp/modulator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/warps/dsp/modulator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/modulator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/modulator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/modulator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/modulator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/modulator.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/modulator.h **** // 
  23:../../../mutable-instruments/warps/dsp/modulator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/modulator.h **** //
  25:../../../mutable-instruments/warps/dsp/modulator.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/modulator.h **** //
  27:../../../mutable-instruments/warps/dsp/modulator.h **** // Modulator.
  28:../../../mutable-instruments/warps/dsp/modulator.h **** 
  29:../../../mutable-instruments/warps/dsp/modulator.h **** #ifndef WARPS_DSP_MODULATOR_H_
  30:../../../mutable-instruments/warps/dsp/modulator.h **** #define WARPS_DSP_MODULATOR_H_
  31:../../../mutable-instruments/warps/dsp/modulator.h **** 
  32:../../../mutable-instruments/warps/dsp/modulator.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/modulator.h **** #include "stmlib/dsp/dsp.h"
  34:../../../mutable-instruments/warps/dsp/modulator.h **** #include "stmlib/dsp/parameter_interpolator.h"
  35:../../../mutable-instruments/warps/dsp/modulator.h **** 
  36:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/dsp/oscillator.h"
  37:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/dsp/parameters.h"
  38:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/dsp/quadrature_oscillator.h"
  39:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/dsp/quadrature_transform.h"
  40:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/dsp/sample_rate_converter.h"
  41:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/dsp/vocoder.h"
  42:../../../mutable-instruments/warps/dsp/modulator.h **** #include "warps/resources.h"
  43:../../../mutable-instruments/warps/dsp/modulator.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 12


  44:../../../mutable-instruments/warps/dsp/modulator.h **** namespace warps {
  45:../../../mutable-instruments/warps/dsp/modulator.h **** 
  46:../../../mutable-instruments/warps/dsp/modulator.h **** const size_t kMaxBlockSize = 96;
  47:../../../mutable-instruments/warps/dsp/modulator.h **** const size_t kOversampling = 6;
  48:../../../mutable-instruments/warps/dsp/modulator.h **** const size_t kNumOscillators = 1;
  49:../../../mutable-instruments/warps/dsp/modulator.h **** 
  50:../../../mutable-instruments/warps/dsp/modulator.h **** typedef struct { short l; short r; } ShortFrame;
  51:../../../mutable-instruments/warps/dsp/modulator.h **** typedef struct { float l; float r; } FloatFrame;
  52:../../../mutable-instruments/warps/dsp/modulator.h **** 
  53:../../../mutable-instruments/warps/dsp/modulator.h **** class SaturatingAmplifier {
  54:../../../mutable-instruments/warps/dsp/modulator.h ****  public:
  55:../../../mutable-instruments/warps/dsp/modulator.h ****   SaturatingAmplifier() { }
  56:../../../mutable-instruments/warps/dsp/modulator.h ****   ~SaturatingAmplifier() { }
  57:../../../mutable-instruments/warps/dsp/modulator.h ****   void Init() {
  58:../../../mutable-instruments/warps/dsp/modulator.h ****     drive_ = 0.0f;
  59:../../../mutable-instruments/warps/dsp/modulator.h ****   }
  60:../../../mutable-instruments/warps/dsp/modulator.h ****   
  61:../../../mutable-instruments/warps/dsp/modulator.h ****   void Process(
  62:../../../mutable-instruments/warps/dsp/modulator.h ****       float drive,
  63:../../../mutable-instruments/warps/dsp/modulator.h ****       float limit,
  64:../../../mutable-instruments/warps/dsp/modulator.h ****       short* in,
  65:../../../mutable-instruments/warps/dsp/modulator.h ****       float* out,
  66:../../../mutable-instruments/warps/dsp/modulator.h ****       float* out_raw,
  67:../../../mutable-instruments/warps/dsp/modulator.h ****       size_t in_stride,
  68:../../../mutable-instruments/warps/dsp/modulator.h ****       size_t size) {
  69:../../../mutable-instruments/warps/dsp/modulator.h ****     // Process noise gate and compute raw output
  70:../../../mutable-instruments/warps/dsp/modulator.h ****     stmlib::ParameterInterpolator drive_modulation(&drive_, drive, size);
  71:../../../mutable-instruments/warps/dsp/modulator.h ****     float level = level_;
  72:../../../mutable-instruments/warps/dsp/modulator.h ****     for (size_t i = 0; i < size; ++i) {
  73:../../../mutable-instruments/warps/dsp/modulator.h ****       float s = static_cast<float>(*in) / 32768.0f;
  74:../../../mutable-instruments/warps/dsp/modulator.h ****       float error = s * s - level;
  75:../../../mutable-instruments/warps/dsp/modulator.h ****       level += error * (error > 0.0f ? 0.1f: 0.0001f);
  76:../../../mutable-instruments/warps/dsp/modulator.h ****       s *= level <= 0.0001f ? (1.0f / 0.0001f) * level : 1.0f;
  77:../../../mutable-instruments/warps/dsp/modulator.h ****       out[i] = s;
  78:../../../mutable-instruments/warps/dsp/modulator.h ****       out_raw[i] += s * drive_modulation.Next();
  79:../../../mutable-instruments/warps/dsp/modulator.h ****       in += in_stride;
  80:../../../mutable-instruments/warps/dsp/modulator.h ****     }
  81:../../../mutable-instruments/warps/dsp/modulator.h ****     level_ = level;
  82:../../../mutable-instruments/warps/dsp/modulator.h ****     
  83:../../../mutable-instruments/warps/dsp/modulator.h ****     // Process overdrive / gain
  84:../../../mutable-instruments/warps/dsp/modulator.h ****     float drive_2 = drive * drive;
  85:../../../mutable-instruments/warps/dsp/modulator.h ****     float pre_gain_a = drive * 0.5f;
  86:../../../mutable-instruments/warps/dsp/modulator.h ****     float pre_gain_b = drive_2 * drive_2 * drive * 24.0f;
  87:../../../mutable-instruments/warps/dsp/modulator.h ****     float pre_gain = pre_gain_a + (pre_gain_b - pre_gain_a) * drive_2;
  88:../../../mutable-instruments/warps/dsp/modulator.h ****     float drive_squished = drive * (2.0f - drive);
  89:../../../mutable-instruments/warps/dsp/modulator.h ****     float post_gain = 1.0f / stmlib::SoftClip(
  90:../../../mutable-instruments/warps/dsp/modulator.h ****           0.33f + drive_squished * (pre_gain - 0.33f));
  91:../../../mutable-instruments/warps/dsp/modulator.h ****     stmlib::ParameterInterpolator pre_gain_modulation(
  92:../../../mutable-instruments/warps/dsp/modulator.h ****         &pre_gain_,
  93:../../../mutable-instruments/warps/dsp/modulator.h ****         pre_gain,
  94:../../../mutable-instruments/warps/dsp/modulator.h ****         size);
  95:../../../mutable-instruments/warps/dsp/modulator.h ****     stmlib::ParameterInterpolator post_gain_modulation(
  96:../../../mutable-instruments/warps/dsp/modulator.h ****         &post_gain_,
  97:../../../mutable-instruments/warps/dsp/modulator.h ****         post_gain,
  98:../../../mutable-instruments/warps/dsp/modulator.h ****         size);
  99:../../../mutable-instruments/warps/dsp/modulator.h ****     
 100:../../../mutable-instruments/warps/dsp/modulator.h ****     for (size_t i = 0; i < size; ++i) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 13


 101:../../../mutable-instruments/warps/dsp/modulator.h ****       float pre = pre_gain_modulation.Next() * out[i];
 102:../../../mutable-instruments/warps/dsp/modulator.h ****       float post = stmlib::SoftClip(pre) * post_gain_modulation.Next();
 103:../../../mutable-instruments/warps/dsp/modulator.h ****       out[i] = pre + (post - pre) * limit;
 104:../../../mutable-instruments/warps/dsp/modulator.h ****     }
 105:../../../mutable-instruments/warps/dsp/modulator.h ****   }
 106:../../../mutable-instruments/warps/dsp/modulator.h **** 
 107:../../../mutable-instruments/warps/dsp/modulator.h ****  private:
 108:../../../mutable-instruments/warps/dsp/modulator.h ****   float level_;
 109:../../../mutable-instruments/warps/dsp/modulator.h ****   float drive_;
 110:../../../mutable-instruments/warps/dsp/modulator.h ****   float post_gain_;
 111:../../../mutable-instruments/warps/dsp/modulator.h ****   float pre_gain_;
 112:../../../mutable-instruments/warps/dsp/modulator.h ****   float unclipped_gain_;
 113:../../../mutable-instruments/warps/dsp/modulator.h **** 
 114:../../../mutable-instruments/warps/dsp/modulator.h ****   DISALLOW_COPY_AND_ASSIGN(SaturatingAmplifier);
 115:../../../mutable-instruments/warps/dsp/modulator.h **** };
 116:../../../mutable-instruments/warps/dsp/modulator.h **** 
 117:../../../mutable-instruments/warps/dsp/modulator.h **** enum XmodAlgorithm {
 118:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_XFADE,
 119:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_FOLD,
 120:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_ANALOG_RING_MODULATION,
 121:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_DIGITAL_RING_MODULATION,
 122:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_XOR,
 123:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_COMPARATOR,
 124:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_NOP,
 125:../../../mutable-instruments/warps/dsp/modulator.h ****   ALGORITHM_LAST
 126:../../../mutable-instruments/warps/dsp/modulator.h **** };
 127:../../../mutable-instruments/warps/dsp/modulator.h **** 
 128:../../../mutable-instruments/warps/dsp/modulator.h **** class Modulator {
 129:../../../mutable-instruments/warps/dsp/modulator.h ****  public:
 130:../../../mutable-instruments/warps/dsp/modulator.h ****   typedef void (Modulator::*XmodFn)(
 131:../../../mutable-instruments/warps/dsp/modulator.h ****       float balance,
 132:../../../mutable-instruments/warps/dsp/modulator.h ****       float balance_end,
 133:../../../mutable-instruments/warps/dsp/modulator.h ****       float parameter,
 134:../../../mutable-instruments/warps/dsp/modulator.h ****       float parameter_end,
 135:../../../mutable-instruments/warps/dsp/modulator.h ****       const float* in_1,
 136:../../../mutable-instruments/warps/dsp/modulator.h ****       const float* in_2,
 137:../../../mutable-instruments/warps/dsp/modulator.h ****       float* out,
 138:../../../mutable-instruments/warps/dsp/modulator.h ****       size_t size);
 139:../../../mutable-instruments/warps/dsp/modulator.h **** 
 140:../../../mutable-instruments/warps/dsp/modulator.h ****   Modulator() { }
 141:../../../mutable-instruments/warps/dsp/modulator.h ****   ~Modulator() { }
 121              		.loc 9 141 3 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.LBB626:
 127              	.LBI626:
 128              		.file 10 "../../../mutable-instruments/warps/dsp/vocoder.h"
   1:../../../mutable-instruments/warps/dsp/vocoder.h **** // Copyright 2014 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/vocoder.h **** //
   3:../../../mutable-instruments/warps/dsp/vocoder.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/vocoder.h **** //
   5:../../../mutable-instruments/warps/dsp/vocoder.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/vocoder.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/vocoder.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/vocoder.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 14


   9:../../../mutable-instruments/warps/dsp/vocoder.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/warps/dsp/vocoder.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/vocoder.h **** // 
  12:../../../mutable-instruments/warps/dsp/vocoder.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/vocoder.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/vocoder.h **** // 
  15:../../../mutable-instruments/warps/dsp/vocoder.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/warps/dsp/vocoder.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/vocoder.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/vocoder.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/vocoder.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/vocoder.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/vocoder.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/vocoder.h **** // 
  23:../../../mutable-instruments/warps/dsp/vocoder.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/vocoder.h **** //
  25:../../../mutable-instruments/warps/dsp/vocoder.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/vocoder.h **** //
  27:../../../mutable-instruments/warps/dsp/vocoder.h **** // Vocoder.
  28:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  29:../../../mutable-instruments/warps/dsp/vocoder.h **** #ifndef WARPS_DSP_VOCODER_H_
  30:../../../mutable-instruments/warps/dsp/vocoder.h **** #define WARPS_DSP_VOCODER_H_
  31:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  32:../../../mutable-instruments/warps/dsp/vocoder.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  34:../../../mutable-instruments/warps/dsp/vocoder.h **** #include "warps/dsp/filter_bank.h"
  35:../../../mutable-instruments/warps/dsp/vocoder.h **** #include "warps/dsp/limiter.h"
  36:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  37:../../../mutable-instruments/warps/dsp/vocoder.h **** namespace warps {
  38:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  39:../../../mutable-instruments/warps/dsp/vocoder.h **** const float kFollowerGain = sqrtf(kNumBands);
  40:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  41:../../../mutable-instruments/warps/dsp/vocoder.h **** class EnvelopeFollower {
  42:../../../mutable-instruments/warps/dsp/vocoder.h ****  public:
  43:../../../mutable-instruments/warps/dsp/vocoder.h ****   EnvelopeFollower() { }
  44:../../../mutable-instruments/warps/dsp/vocoder.h ****   ~EnvelopeFollower() { }
  45:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  46:../../../mutable-instruments/warps/dsp/vocoder.h ****   void Init() {
  47:../../../mutable-instruments/warps/dsp/vocoder.h ****     envelope_ = 0.0f;
  48:../../../mutable-instruments/warps/dsp/vocoder.h ****     freeze_ = false;
  49:../../../mutable-instruments/warps/dsp/vocoder.h ****     attack_ = decay_ = 0.1f;
  50:../../../mutable-instruments/warps/dsp/vocoder.h ****     peak_ = 0.0f;
  51:../../../mutable-instruments/warps/dsp/vocoder.h ****   };
  52:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  53:../../../mutable-instruments/warps/dsp/vocoder.h ****   void set_attack(float attack) {
  54:../../../mutable-instruments/warps/dsp/vocoder.h ****     attack_ = attack;
  55:../../../mutable-instruments/warps/dsp/vocoder.h ****   }
  56:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  57:../../../mutable-instruments/warps/dsp/vocoder.h ****   void set_decay(float decay) {
  58:../../../mutable-instruments/warps/dsp/vocoder.h ****     decay_ = decay;
  59:../../../mutable-instruments/warps/dsp/vocoder.h ****   }
  60:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  61:../../../mutable-instruments/warps/dsp/vocoder.h ****   void set_freeze(bool freeze) {
  62:../../../mutable-instruments/warps/dsp/vocoder.h ****     freeze_ = freeze;
  63:../../../mutable-instruments/warps/dsp/vocoder.h ****   }
  64:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  65:../../../mutable-instruments/warps/dsp/vocoder.h ****   void Process(const float* in, float* out, size_t size) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 15


  66:../../../mutable-instruments/warps/dsp/vocoder.h ****     float envelope = envelope_;
  67:../../../mutable-instruments/warps/dsp/vocoder.h ****     float attack = freeze_ ? 0.0f : attack_;
  68:../../../mutable-instruments/warps/dsp/vocoder.h ****     float decay = freeze_ ? 0.0f : decay_;
  69:../../../mutable-instruments/warps/dsp/vocoder.h ****     float peak = 0.0f;
  70:../../../mutable-instruments/warps/dsp/vocoder.h ****     while (size--) {
  71:../../../mutable-instruments/warps/dsp/vocoder.h ****       float error = fabs(*in++ * kFollowerGain) - envelope;
  72:../../../mutable-instruments/warps/dsp/vocoder.h ****       envelope += (error > 0.0f ? attack : decay) * error;
  73:../../../mutable-instruments/warps/dsp/vocoder.h ****       if (envelope > peak) {
  74:../../../mutable-instruments/warps/dsp/vocoder.h ****         peak = envelope;
  75:../../../mutable-instruments/warps/dsp/vocoder.h ****       }
  76:../../../mutable-instruments/warps/dsp/vocoder.h ****       *out++ = envelope;
  77:../../../mutable-instruments/warps/dsp/vocoder.h ****     }
  78:../../../mutable-instruments/warps/dsp/vocoder.h ****     envelope_ = envelope;
  79:../../../mutable-instruments/warps/dsp/vocoder.h ****     float error = peak - peak_;
  80:../../../mutable-instruments/warps/dsp/vocoder.h ****     peak_ += (error > 0.0f ? 0.5f : 0.1f) * error;
  81:../../../mutable-instruments/warps/dsp/vocoder.h ****   }
  82:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  83:../../../mutable-instruments/warps/dsp/vocoder.h ****   inline float peak() const { return peak_; }
  84:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  85:../../../mutable-instruments/warps/dsp/vocoder.h ****  private:
  86:../../../mutable-instruments/warps/dsp/vocoder.h ****   float attack_;
  87:../../../mutable-instruments/warps/dsp/vocoder.h ****   float decay_;
  88:../../../mutable-instruments/warps/dsp/vocoder.h ****   float envelope_;
  89:../../../mutable-instruments/warps/dsp/vocoder.h ****   float peak_;
  90:../../../mutable-instruments/warps/dsp/vocoder.h ****   float freeze_;
  91:../../../mutable-instruments/warps/dsp/vocoder.h ****   
  92:../../../mutable-instruments/warps/dsp/vocoder.h ****   DISALLOW_COPY_AND_ASSIGN(EnvelopeFollower);
  93:../../../mutable-instruments/warps/dsp/vocoder.h **** };
  94:../../../mutable-instruments/warps/dsp/vocoder.h **** 
  95:../../../mutable-instruments/warps/dsp/vocoder.h **** struct BandGain {
  96:../../../mutable-instruments/warps/dsp/vocoder.h ****   float carrier;
  97:../../../mutable-instruments/warps/dsp/vocoder.h ****   float vocoder;
  98:../../../mutable-instruments/warps/dsp/vocoder.h **** };
  99:../../../mutable-instruments/warps/dsp/vocoder.h **** 
 100:../../../mutable-instruments/warps/dsp/vocoder.h **** class Vocoder {
 101:../../../mutable-instruments/warps/dsp/vocoder.h ****  public:
 102:../../../mutable-instruments/warps/dsp/vocoder.h ****   Vocoder() { }
 103:../../../mutable-instruments/warps/dsp/vocoder.h ****   ~Vocoder() { }
 129              		.loc 10 103 3 view .LVU19
 130              	.LBB627:
 131              	.LBI627:
 132              		.file 11 "../../../mutable-instruments/warps/dsp/limiter.h"
   1:../../../mutable-instruments/warps/dsp/limiter.h **** // Copyright 2015 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/limiter.h **** //
   3:../../../mutable-instruments/warps/dsp/limiter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/limiter.h **** //
   5:../../../mutable-instruments/warps/dsp/limiter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/limiter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/limiter.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/limiter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/warps/dsp/limiter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/warps/dsp/limiter.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/limiter.h **** // 
  12:../../../mutable-instruments/warps/dsp/limiter.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/limiter.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/limiter.h **** // 
  15:../../../mutable-instruments/warps/dsp/limiter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 16


  16:../../../mutable-instruments/warps/dsp/limiter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/limiter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/limiter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/limiter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/limiter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/limiter.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/limiter.h **** // 
  23:../../../mutable-instruments/warps/dsp/limiter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/limiter.h **** //
  25:../../../mutable-instruments/warps/dsp/limiter.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/limiter.h **** //
  27:../../../mutable-instruments/warps/dsp/limiter.h **** // Limiter.
  28:../../../mutable-instruments/warps/dsp/limiter.h **** 
  29:../../../mutable-instruments/warps/dsp/limiter.h **** #ifndef WARPS_DSP_LIMITER_H_
  30:../../../mutable-instruments/warps/dsp/limiter.h **** #define WARPS_DSP_LIMITER_H_
  31:../../../mutable-instruments/warps/dsp/limiter.h **** 
  32:../../../mutable-instruments/warps/dsp/limiter.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/limiter.h **** 
  34:../../../mutable-instruments/warps/dsp/limiter.h **** #include <algorithm>
  35:../../../mutable-instruments/warps/dsp/limiter.h **** 
  36:../../../mutable-instruments/warps/dsp/limiter.h **** #include "stmlib/dsp/dsp.h"
  37:../../../mutable-instruments/warps/dsp/limiter.h **** #include "stmlib/dsp/filter.h"
  38:../../../mutable-instruments/warps/dsp/limiter.h **** 
  39:../../../mutable-instruments/warps/dsp/limiter.h **** namespace warps {
  40:../../../mutable-instruments/warps/dsp/limiter.h **** 
  41:../../../mutable-instruments/warps/dsp/limiter.h **** class Limiter {
  42:../../../mutable-instruments/warps/dsp/limiter.h ****  public:
  43:../../../mutable-instruments/warps/dsp/limiter.h ****   Limiter() { }
  44:../../../mutable-instruments/warps/dsp/limiter.h ****   ~Limiter() { }
 133              		.loc 11 44 3 view .LVU20
 134              		.loc 11 44 3 is_stmt 0 view .LVU21
 135              	.LBE627:
 136              	.LBB628:
 137              	.LBI628:
 138              		.file 12 "../../../mutable-instruments/warps/dsp/filter_bank.h"
   1:../../../mutable-instruments/warps/dsp/filter_bank.h **** // Copyright 2014 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/filter_bank.h **** //
   3:../../../mutable-instruments/warps/dsp/filter_bank.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/filter_bank.h **** //
   5:../../../mutable-instruments/warps/dsp/filter_bank.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/filter_bank.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/filter_bank.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/filter_bank.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/warps/dsp/filter_bank.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/warps/dsp/filter_bank.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/filter_bank.h **** // 
  12:../../../mutable-instruments/warps/dsp/filter_bank.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/filter_bank.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/filter_bank.h **** // 
  15:../../../mutable-instruments/warps/dsp/filter_bank.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/warps/dsp/filter_bank.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/filter_bank.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/filter_bank.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/filter_bank.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/filter_bank.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/filter_bank.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/filter_bank.h **** // 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 17


  23:../../../mutable-instruments/warps/dsp/filter_bank.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/filter_bank.h **** //
  25:../../../mutable-instruments/warps/dsp/filter_bank.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/filter_bank.h **** //
  27:../../../mutable-instruments/warps/dsp/filter_bank.h **** // Filter bank.
  28:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  29:../../../mutable-instruments/warps/dsp/filter_bank.h **** #ifndef WARPS_DSP_FILTER_BANK_H_
  30:../../../mutable-instruments/warps/dsp/filter_bank.h **** #define WARPS_DSP_FILTER_BANK_H_
  31:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  32:../../../mutable-instruments/warps/dsp/filter_bank.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  34:../../../mutable-instruments/warps/dsp/filter_bank.h **** #include "stmlib/dsp/dsp.h"
  35:../../../mutable-instruments/warps/dsp/filter_bank.h **** #include "stmlib/dsp/filter.h"
  36:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  37:../../../mutable-instruments/warps/dsp/filter_bank.h **** #include "warps/dsp/sample_rate_converter.h"
  38:../../../mutable-instruments/warps/dsp/filter_bank.h **** #include "warps/resources.h"
  39:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  40:../../../mutable-instruments/warps/dsp/filter_bank.h **** namespace warps {
  41:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  42:../../../mutable-instruments/warps/dsp/filter_bank.h **** const int32_t kNumBands = 20;
  43:../../../mutable-instruments/warps/dsp/filter_bank.h **** const int32_t kLowFactor = 4;
  44:../../../mutable-instruments/warps/dsp/filter_bank.h **** const int32_t kMidFactor = 3;
  45:../../../mutable-instruments/warps/dsp/filter_bank.h **** const int32_t kDelayLineSize = 6144;
  46:../../../mutable-instruments/warps/dsp/filter_bank.h **** const int32_t kMaxFilterBankBlockSize = 96;
  47:../../../mutable-instruments/warps/dsp/filter_bank.h **** const int32_t kSampleMemorySize = kMaxFilterBankBlockSize * kNumBands / 2;
  48:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  49:../../../mutable-instruments/warps/dsp/filter_bank.h **** class PooledDelayLine {
  50:../../../mutable-instruments/warps/dsp/filter_bank.h ****  public:
  51:../../../mutable-instruments/warps/dsp/filter_bank.h ****   PooledDelayLine() { }
  52:../../../mutable-instruments/warps/dsp/filter_bank.h ****   ~PooledDelayLine() { }
  53:../../../mutable-instruments/warps/dsp/filter_bank.h ****   
  54:../../../mutable-instruments/warps/dsp/filter_bank.h ****   void Init(float* ptr, int32_t delay) {
  55:../../../mutable-instruments/warps/dsp/filter_bank.h ****     delay_line_ = ptr;
  56:../../../mutable-instruments/warps/dsp/filter_bank.h ****     size_ = delay + 1;
  57:../../../mutable-instruments/warps/dsp/filter_bank.h ****     head_ = 0;
  58:../../../mutable-instruments/warps/dsp/filter_bank.h ****     std::fill(&ptr[0], &ptr[size_], 0.0f);
  59:../../../mutable-instruments/warps/dsp/filter_bank.h ****   }
  60:../../../mutable-instruments/warps/dsp/filter_bank.h ****   
  61:../../../mutable-instruments/warps/dsp/filter_bank.h ****   inline int32_t size() const { return size_; }
  62:../../../mutable-instruments/warps/dsp/filter_bank.h ****   
  63:../../../mutable-instruments/warps/dsp/filter_bank.h ****   float ReadWrite(float value) {
  64:../../../mutable-instruments/warps/dsp/filter_bank.h ****     delay_line_[head_] = value;
  65:../../../mutable-instruments/warps/dsp/filter_bank.h ****     head_ = (head_ + 1) % size_;
  66:../../../mutable-instruments/warps/dsp/filter_bank.h ****     return delay_line_[head_];
  67:../../../mutable-instruments/warps/dsp/filter_bank.h ****   };
  68:../../../mutable-instruments/warps/dsp/filter_bank.h ****   
  69:../../../mutable-instruments/warps/dsp/filter_bank.h ****  private:
  70:../../../mutable-instruments/warps/dsp/filter_bank.h ****   float* delay_line_;
  71:../../../mutable-instruments/warps/dsp/filter_bank.h ****   int32_t size_;
  72:../../../mutable-instruments/warps/dsp/filter_bank.h ****   int32_t head_;
  73:../../../mutable-instruments/warps/dsp/filter_bank.h ****   
  74:../../../mutable-instruments/warps/dsp/filter_bank.h ****   DISALLOW_COPY_AND_ASSIGN(PooledDelayLine);
  75:../../../mutable-instruments/warps/dsp/filter_bank.h **** };
  76:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  77:../../../mutable-instruments/warps/dsp/filter_bank.h **** struct Band {
  78:../../../mutable-instruments/warps/dsp/filter_bank.h ****   int32_t group;
  79:../../../mutable-instruments/warps/dsp/filter_bank.h ****   float sample_rate;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 18


  80:../../../mutable-instruments/warps/dsp/filter_bank.h ****   float post_gain;
  81:../../../mutable-instruments/warps/dsp/filter_bank.h ****   stmlib::CrossoverSvf svf[2];
  82:../../../mutable-instruments/warps/dsp/filter_bank.h ****   int32_t decimation_factor;
  83:../../../mutable-instruments/warps/dsp/filter_bank.h ****   float* samples;
  84:../../../mutable-instruments/warps/dsp/filter_bank.h ****   PooledDelayLine delay_line;
  85:../../../mutable-instruments/warps/dsp/filter_bank.h ****   int32_t delay;
  86:../../../mutable-instruments/warps/dsp/filter_bank.h **** };
  87:../../../mutable-instruments/warps/dsp/filter_bank.h **** 
  88:../../../mutable-instruments/warps/dsp/filter_bank.h **** class FilterBank {
  89:../../../mutable-instruments/warps/dsp/filter_bank.h ****  public:
  90:../../../mutable-instruments/warps/dsp/filter_bank.h ****   FilterBank() { }
  91:../../../mutable-instruments/warps/dsp/filter_bank.h ****   ~FilterBank() { }
 139              		.loc 12 91 3 is_stmt 1 view .LVU22
 140              	.LBB629:
 141              	.LBI629:
 142              		.file 13 "../../../mutable-instruments/warps/dsp/sample_rate_converter.h"
   1:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // Copyright 2015 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** //
   3:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** //
   5:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // 
  12:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // 
  15:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // 
  23:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** //
  25:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** //
  27:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** // Sample rate converter.
  28:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  29:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** #ifndef WARPS_DSP_SAMPLE_RATE_CONVERTER_H_
  30:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** #define WARPS_DSP_SAMPLE_RATE_CONVERTER_H_
  31:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  32:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  34:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** #include <algorithm>
  35:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  36:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** namespace warps {
  37:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  38:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** enum SampleRateConversionDirection {
  39:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   SRC_UP,
  40:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   SRC_DOWN
  41:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 19


  42:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  43:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template <SampleRateConversionDirection direction, int32_t ratio, int32_t length>
  44:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** struct SRC_FIR { };
  45:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  46:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** }
  47:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  48:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** #include "warps/dsp/sample_rate_conversion_filters.h"
  49:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  50:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** namespace warps {
  51:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  52:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t N>
  53:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** struct FilterState {
  54:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  public:
  55:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   enum {
  56:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     n = N
  57:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   };
  58:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Push(float value) {
  59:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     tail.Push(head);
  60:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     head = value;
  61:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
  62:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  63:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<int32_t i> inline float Read() const {
  64:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     return i == 0 ? head : tail.template Read<i - 1>();
  65:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
  66:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  67:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Load(const float* x_state) {
  68:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     head = x_state[0];
  69:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     tail.Load(x_state + 1);
  70:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
  71:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  72:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Save(float* x_state) {
  73:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     x_state[0] = head;
  74:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     tail.Save(x_state + 1);
  75:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
  76:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  77:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  private:  
  78:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   float head;
  79:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   FilterState<N-1> tail;
  80:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
  81:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  82:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<>
  83:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** class FilterState<1> {
  84:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  public:
  85:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   enum {
  86:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     n = 1
  87:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   };
  88:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Push(float value) {
  89:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     head = value;
  90:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
  91:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  92:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<int32_t i> inline float Read() const {
  93:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     return head;
  94:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
  95:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
  96:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Load(const float* x_state) {
  97:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     head = x_state[0];
  98:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 20


  99:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 100:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Save(float* x_state) {
 101:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     x_state[0] = head;
 102:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 103:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  private:
 104:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   float head;
 105:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
 106:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 107:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t N, int32_t x_stride, int32_t h_stride, int32_t mirror = 0, int32_t i = 0, int32_t 
 108:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** struct Accumulator {
 109:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   enum {
 110:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     h_index = mirror != 0 && h_offset + i * h_stride >= mirror / 2 ?
 111:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****         mirror - 1 - i * h_stride - h_offset : h_offset + i * h_stride
 112:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   };
 113:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   
 114:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<typename IR>
 115:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline float operator()(const float* x, const IR& h) const {
 116:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     Accumulator<N - 1, x_stride, h_stride, mirror, i + 1, h_offset> a;
 117:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     return x[i * x_stride] * h.template Read<h_index>() + a(x, h);
 118:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 119:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   
 120:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<int32_t NN, typename IR>
 121:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline float operator()(const FilterState<NN>& x, const IR& h) const {
 122:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     Accumulator<N - 1, x_stride, h_stride, mirror, i + 1, h_offset> a;
 123:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     return x.template Read<i * x_stride>() * h.template Read<h_index>() + a(x, h);
 124:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 125:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
 126:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 127:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t x_stride, int32_t h_stride, int32_t mirror, int32_t i, int32_t h_offset>
 128:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** struct Accumulator<0, x_stride, h_stride, mirror, i, h_offset> {
 129:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<typename IR>
 130:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline float operator()(const float* x, const IR& h) const {
 131:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     return 0.0f;
 132:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 133:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 134:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<int32_t NN, typename IR>
 135:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline float operator()(const FilterState<NN>& x, const IR& h) const {
 136:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     return 0.0f;
 137:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 138:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
 139:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 140:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t K, int32_t mirror = 0, int32_t remaining = K>
 141:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** struct PolyphaseStage {
 142:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<typename T, typename IR>
 143:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void operator()(float* &y, const T& x, const IR& h) const {
 144:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     Accumulator<T::n, 1, K, mirror, 0, K - remaining> a;
 145:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     *y++ = a(x, h);
 146:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     PolyphaseStage<K, mirror, remaining - 1> p;
 147:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     p(y, x, h);
 148:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 149:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
 150:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 151:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t K, int32_t mirror>
 152:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** struct PolyphaseStage<K, mirror, 0> {
 153:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   template<typename T, typename IR>
 154:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void operator()(float* &y, const T& x, const IR& h) const { }
 155:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 21


 156:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 157:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<
 158:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     SampleRateConversionDirection direction,
 159:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     int32_t ratio,
 160:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     int32_t filter_size>
 161:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** class SampleRateConverter { };
 162:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 163:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t ratio, int32_t filter_size>
 164:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** class SampleRateConverter<SRC_UP, ratio, filter_size> {
 165:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  private:
 166:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   enum {
 167:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     N = filter_size / ratio,
 168:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     K = ratio
 169:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   };
 170:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  
 171:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  public:
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   SampleRateConverter() { }
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 143              		.loc 13 173 3 view .LVU23
 144              		.loc 13 173 3 is_stmt 0 view .LVU24
 145              	.LBE629:
 146              	.LBB630:
 147              	.LBI630:
 174:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 175:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Init() {
 176:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     std::fill(&x_[0], &x_[N], 0);
 177:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   };
 178:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 179:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline int32_t delay() const { return filter_size / ratio / 2; }
 180:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 181:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   inline void Process(const float* in, float* out, size_t input_size) {
 182:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     SRC_FIR<SRC_UP, ratio, filter_size> ir;
 183:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     FilterState<N> x;
 184:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     x.Load(x_);
 185:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     while (input_size--) {
 186:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****       x.Push(*in++);
 187:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****       PolyphaseStage<K, filter_size> polyphase_stage;
 188:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****       polyphase_stage(out, x, ir);
 189:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     }
 190:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     x.Save(x_);
 191:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   }
 192:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   
 193:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  private:
 194:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   float x_[N];
 195:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 196:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   DISALLOW_COPY_AND_ASSIGN(SampleRateConverter);
 197:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** };
 198:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 199:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** template<int32_t ratio, int32_t filter_size>
 200:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** class SampleRateConverter<SRC_DOWN, ratio, filter_size> {
 201:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  private:
 202:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   enum {
 203:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     N = filter_size,
 204:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****     K = ratio
 205:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   };
 206:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  
 207:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****  public:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 22


 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   SampleRateConverter() { }
 209:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 148              		.loc 13 209 3 is_stmt 1 view .LVU25
 149              		.loc 13 209 3 is_stmt 0 view .LVU26
 150              	.LBE630:
 151              	.LBB631:
 152              	.LBI631:
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 153              		.loc 13 173 3 is_stmt 1 view .LVU27
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 154              		.loc 13 173 3 is_stmt 0 view .LVU28
 155              	.LBE631:
 156              	.LBB632:
 157              	.LBI632:
 158              		.loc 13 209 3 is_stmt 1 view .LVU29
 159              		.loc 13 209 3 is_stmt 0 view .LVU30
 160              	.LBE632:
 161              	.LBE628:
 162              	.LBB633:
 163              	.LBI633:
 164              		.loc 12 91 3 is_stmt 1 view .LVU31
 165              	.LBB634:
 166              	.LBI634:
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 167              		.loc 13 173 3 view .LVU32
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 168              		.loc 13 173 3 is_stmt 0 view .LVU33
 169              	.LBE634:
 170              	.LBB635:
 171              	.LBI635:
 172              		.loc 13 209 3 is_stmt 1 view .LVU34
 173              		.loc 13 209 3 is_stmt 0 view .LVU35
 174              	.LBE635:
 175              	.LBB636:
 176              	.LBI636:
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 177              		.loc 13 173 3 is_stmt 1 view .LVU36
 173:../../../mutable-instruments/warps/dsp/sample_rate_converter.h **** 
 178              		.loc 13 173 3 is_stmt 0 view .LVU37
 179              	.LBE636:
 180              	.LBB637:
 181              	.LBI637:
 182              		.loc 13 209 3 is_stmt 1 view .LVU38
 183              		.loc 13 209 3 is_stmt 0 view .LVU39
 184              	.LBE637:
 185              	.LBE633:
 186              	.LBE626:
 187              	.LBB638:
 188              	.LBI638:
 189              		.loc 13 209 3 is_stmt 1 view .LVU40
 190              		.loc 13 209 3 is_stmt 0 view .LVU41
 191              	.LBE638:
 192              	.LBB639:
 193              	.LBI639:
 194              		.file 14 "../../../mutable-instruments/warps/dsp/quadrature_oscillator.h"
   1:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // Copyright 2014 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** //
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 23


   3:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** //
   5:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // 
  12:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // 
  15:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // 
  23:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** //
  25:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** //
  27:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** // Wavetable oscillator with through-zero FM and quadrature outputs.
  28:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** 
  29:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #ifndef WARPS_DSP_QUADRATURE_OSCILLATOR_H_
  30:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #define WARPS_DSP_QUADRATURE_OSCILLATOR_H_
  31:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** 
  32:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #include "stmlib/dsp/dsp.h"
  34:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #include "stmlib/dsp/parameter_interpolator.h"
  35:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** 
  36:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #include "warps/dsp/parameters.h"
  37:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** #include "warps/resources.h"
  38:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** 
  39:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** namespace warps {
  40:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** 
  41:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h **** class QuadratureOscillator {
  42:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h ****  public:
  43:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h ****   QuadratureOscillator() { }
  44:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h ****   ~QuadratureOscillator() { }
 195              		.loc 14 44 3 is_stmt 1 view .LVU42
 196              		.loc 14 44 3 is_stmt 0 view .LVU43
 197              	.LBE639:
 198              	.LBB640:
 199              	.LBI640:
 200              		.file 15 "../../../mutable-instruments/warps/dsp/oscillator.h"
   1:../../../mutable-instruments/warps/dsp/oscillator.h **** // Copyright 2014 Emilie Gillet.
   2:../../../mutable-instruments/warps/dsp/oscillator.h **** //
   3:../../../mutable-instruments/warps/dsp/oscillator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/warps/dsp/oscillator.h **** //
   5:../../../mutable-instruments/warps/dsp/oscillator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/warps/dsp/oscillator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/warps/dsp/oscillator.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/warps/dsp/oscillator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/warps/dsp/oscillator.h **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 24


  10:../../../mutable-instruments/warps/dsp/oscillator.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/warps/dsp/oscillator.h **** // 
  12:../../../mutable-instruments/warps/dsp/oscillator.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/warps/dsp/oscillator.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/warps/dsp/oscillator.h **** // 
  15:../../../mutable-instruments/warps/dsp/oscillator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/warps/dsp/oscillator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:../../../mutable-instruments/warps/dsp/oscillator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/warps/dsp/oscillator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/warps/dsp/oscillator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/warps/dsp/oscillator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/warps/dsp/oscillator.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/warps/dsp/oscillator.h **** // 
  23:../../../mutable-instruments/warps/dsp/oscillator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/warps/dsp/oscillator.h **** //
  25:../../../mutable-instruments/warps/dsp/oscillator.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/warps/dsp/oscillator.h **** //
  27:../../../mutable-instruments/warps/dsp/oscillator.h **** // Oscillator.
  28:../../../mutable-instruments/warps/dsp/oscillator.h **** 
  29:../../../mutable-instruments/warps/dsp/oscillator.h **** #ifndef WARPS_DSP_OSCILLATOR_H_
  30:../../../mutable-instruments/warps/dsp/oscillator.h **** #define WARPS_DSP_OSCILLATOR_H_
  31:../../../mutable-instruments/warps/dsp/oscillator.h **** 
  32:../../../mutable-instruments/warps/dsp/oscillator.h **** #include "stmlib/stmlib.h"
  33:../../../mutable-instruments/warps/dsp/oscillator.h **** #include "stmlib/dsp/dsp.h"
  34:../../../mutable-instruments/warps/dsp/oscillator.h **** #include "stmlib/dsp/filter.h"
  35:../../../mutable-instruments/warps/dsp/oscillator.h **** 
  36:../../../mutable-instruments/warps/dsp/oscillator.h **** #include "warps/dsp/parameters.h"
  37:../../../mutable-instruments/warps/dsp/oscillator.h **** #include "warps/resources.h"
  38:../../../mutable-instruments/warps/dsp/oscillator.h **** 
  39:../../../mutable-instruments/warps/dsp/oscillator.h **** namespace warps {
  40:../../../mutable-instruments/warps/dsp/oscillator.h **** 
  41:../../../mutable-instruments/warps/dsp/oscillator.h **** const float kInternalOscillatorSampleRate = 96000.0f;
  42:../../../mutable-instruments/warps/dsp/oscillator.h **** 
  43:../../../mutable-instruments/warps/dsp/oscillator.h **** class Oscillator {
  44:../../../mutable-instruments/warps/dsp/oscillator.h ****  public:
  45:../../../mutable-instruments/warps/dsp/oscillator.h ****   Oscillator() { }
  46:../../../mutable-instruments/warps/dsp/oscillator.h ****   ~Oscillator() { }
 201              		.loc 15 46 3 is_stmt 1 view .LVU44
 202              	.LBB641:
 203              	.LBI641:
 204              		.file 16 "../../../mutable-instruments/stmlib/dsp/filter.h"
   1:../../../mutable-instruments/stmlib/dsp/filter.h **** // Copyright 2014 Emilie Gillet.
   2:../../../mutable-instruments/stmlib/dsp/filter.h **** //
   3:../../../mutable-instruments/stmlib/dsp/filter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:../../../mutable-instruments/stmlib/dsp/filter.h **** //
   5:../../../mutable-instruments/stmlib/dsp/filter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:../../../mutable-instruments/stmlib/dsp/filter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:../../../mutable-instruments/stmlib/dsp/filter.h **** // in the Software without restriction, including without limitation the rights
   8:../../../mutable-instruments/stmlib/dsp/filter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:../../../mutable-instruments/stmlib/dsp/filter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:../../../mutable-instruments/stmlib/dsp/filter.h **** // furnished to do so, subject to the following conditions:
  11:../../../mutable-instruments/stmlib/dsp/filter.h **** // 
  12:../../../mutable-instruments/stmlib/dsp/filter.h **** // The above copyright notice and this permission notice shall be included in
  13:../../../mutable-instruments/stmlib/dsp/filter.h **** // all copies or substantial portions of the Software.
  14:../../../mutable-instruments/stmlib/dsp/filter.h **** // 
  15:../../../mutable-instruments/stmlib/dsp/filter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../mutable-instruments/stmlib/dsp/filter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 25


  17:../../../mutable-instruments/stmlib/dsp/filter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:../../../mutable-instruments/stmlib/dsp/filter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:../../../mutable-instruments/stmlib/dsp/filter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:../../../mutable-instruments/stmlib/dsp/filter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:../../../mutable-instruments/stmlib/dsp/filter.h **** // THE SOFTWARE.
  22:../../../mutable-instruments/stmlib/dsp/filter.h **** // 
  23:../../../mutable-instruments/stmlib/dsp/filter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:../../../mutable-instruments/stmlib/dsp/filter.h **** //
  25:../../../mutable-instruments/stmlib/dsp/filter.h **** // -----------------------------------------------------------------------------
  26:../../../mutable-instruments/stmlib/dsp/filter.h **** //
  27:../../../mutable-instruments/stmlib/dsp/filter.h **** // Zero-delay-feedback filters (one pole and SVF).
  28:../../../mutable-instruments/stmlib/dsp/filter.h **** // Naive SVF.
  29:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  30:../../../mutable-instruments/stmlib/dsp/filter.h **** #ifndef STMLIB_DSP_FILTER_H_
  31:../../../mutable-instruments/stmlib/dsp/filter.h **** #define STMLIB_DSP_FILTER_H_
  32:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  33:../../../mutable-instruments/stmlib/dsp/filter.h **** #include "stmlib/stmlib.h"
  34:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  35:../../../mutable-instruments/stmlib/dsp/filter.h **** #include <cmath>
  36:../../../mutable-instruments/stmlib/dsp/filter.h **** #include <algorithm>
  37:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  38:../../../mutable-instruments/stmlib/dsp/filter.h **** namespace stmlib {
  39:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  40:../../../mutable-instruments/stmlib/dsp/filter.h **** enum FilterMode {
  41:../../../mutable-instruments/stmlib/dsp/filter.h ****   FILTER_MODE_LOW_PASS,
  42:../../../mutable-instruments/stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS,
  43:../../../mutable-instruments/stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS_NORMALIZED,
  44:../../../mutable-instruments/stmlib/dsp/filter.h ****   FILTER_MODE_HIGH_PASS
  45:../../../mutable-instruments/stmlib/dsp/filter.h **** };
  46:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  47:../../../mutable-instruments/stmlib/dsp/filter.h **** enum FrequencyApproximation {
  48:../../../mutable-instruments/stmlib/dsp/filter.h ****   FREQUENCY_EXACT,
  49:../../../mutable-instruments/stmlib/dsp/filter.h ****   FREQUENCY_ACCURATE,
  50:../../../mutable-instruments/stmlib/dsp/filter.h ****   FREQUENCY_FAST,
  51:../../../mutable-instruments/stmlib/dsp/filter.h ****   FREQUENCY_DIRTY
  52:../../../mutable-instruments/stmlib/dsp/filter.h **** };
  53:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  54:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_F float(M_PI)
  55:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_POW_2 M_PI * M_PI
  56:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_POW_3 M_PI_POW_2 * M_PI
  57:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_POW_5 M_PI_POW_3 * M_PI_POW_2
  58:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_POW_7 M_PI_POW_5 * M_PI_POW_2
  59:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_POW_9 M_PI_POW_7 * M_PI_POW_2
  60:../../../mutable-instruments/stmlib/dsp/filter.h **** #define M_PI_POW_11 M_PI_POW_9 * M_PI_POW_2
  61:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  62:../../../mutable-instruments/stmlib/dsp/filter.h **** class DCBlocker {
  63:../../../mutable-instruments/stmlib/dsp/filter.h ****  public:
  64:../../../mutable-instruments/stmlib/dsp/filter.h ****   DCBlocker() { }
  65:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~DCBlocker() { }
  66:../../../mutable-instruments/stmlib/dsp/filter.h ****   
  67:../../../mutable-instruments/stmlib/dsp/filter.h ****   void Init(float pole) {
  68:../../../mutable-instruments/stmlib/dsp/filter.h ****     x_ = 0.0f;
  69:../../../mutable-instruments/stmlib/dsp/filter.h ****     y_ = 0.0f;
  70:../../../mutable-instruments/stmlib/dsp/filter.h ****     pole_ = pole;
  71:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
  72:../../../mutable-instruments/stmlib/dsp/filter.h ****   
  73:../../../mutable-instruments/stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 26


  74:../../../mutable-instruments/stmlib/dsp/filter.h ****     float x = x_;
  75:../../../mutable-instruments/stmlib/dsp/filter.h ****     float y = y_;
  76:../../../mutable-instruments/stmlib/dsp/filter.h ****     const float pole = pole_;
  77:../../../mutable-instruments/stmlib/dsp/filter.h ****     while (size--) {
  78:../../../mutable-instruments/stmlib/dsp/filter.h ****       float old_x = x;
  79:../../../mutable-instruments/stmlib/dsp/filter.h ****       x = *in_out;
  80:../../../mutable-instruments/stmlib/dsp/filter.h ****       *in_out++ = y = y * pole + x - old_x;
  81:../../../mutable-instruments/stmlib/dsp/filter.h ****     }
  82:../../../mutable-instruments/stmlib/dsp/filter.h ****     x_ = x;
  83:../../../mutable-instruments/stmlib/dsp/filter.h ****     y_ = y;
  84:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
  85:../../../mutable-instruments/stmlib/dsp/filter.h ****   
  86:../../../mutable-instruments/stmlib/dsp/filter.h ****  private:
  87:../../../mutable-instruments/stmlib/dsp/filter.h ****   float pole_;
  88:../../../mutable-instruments/stmlib/dsp/filter.h ****   float x_;
  89:../../../mutable-instruments/stmlib/dsp/filter.h ****   float y_;
  90:../../../mutable-instruments/stmlib/dsp/filter.h **** };
  91:../../../mutable-instruments/stmlib/dsp/filter.h **** 
  92:../../../mutable-instruments/stmlib/dsp/filter.h **** class OnePole {
  93:../../../mutable-instruments/stmlib/dsp/filter.h ****  public:
  94:../../../mutable-instruments/stmlib/dsp/filter.h ****   OnePole() { }
  95:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~OnePole() { }
  96:../../../mutable-instruments/stmlib/dsp/filter.h ****   
  97:../../../mutable-instruments/stmlib/dsp/filter.h ****   void Init() {
  98:../../../mutable-instruments/stmlib/dsp/filter.h ****     set_f<FREQUENCY_DIRTY>(0.01f);
  99:../../../mutable-instruments/stmlib/dsp/filter.h ****     Reset();
 100:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
 101:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 102:../../../mutable-instruments/stmlib/dsp/filter.h ****   void Reset() {
 103:../../../mutable-instruments/stmlib/dsp/filter.h ****     state_ = 0.0f;
 104:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
 105:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 106:../../../mutable-instruments/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 107:../../../mutable-instruments/stmlib/dsp/filter.h ****   static inline float tan(float f) {
 108:../../../mutable-instruments/stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 109:../../../mutable-instruments/stmlib/dsp/filter.h ****       // Clip coefficient to about 100.
 110:../../../mutable-instruments/stmlib/dsp/filter.h ****       f = f < 0.497f ? f : 0.497f;
 111:../../../mutable-instruments/stmlib/dsp/filter.h ****       return tanf(M_PI_F * f);
 112:../../../mutable-instruments/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_DIRTY) {
 113:../../../mutable-instruments/stmlib/dsp/filter.h ****       // Optimized for frequencies below 8kHz.
 114:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float a = 3.736e-01f * M_PI_POW_3;
 115:../../../mutable-instruments/stmlib/dsp/filter.h ****       return f * (M_PI_F + a * f * f);
 116:../../../mutable-instruments/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_FAST) {
 117:../../../mutable-instruments/stmlib/dsp/filter.h ****       // The usual tangent approximation uses 3.1755e-01 and 2.033e-01, but
 118:../../../mutable-instruments/stmlib/dsp/filter.h ****       // the coefficients used here are optimized to minimize error for the
 119:../../../mutable-instruments/stmlib/dsp/filter.h ****       // 16Hz to 16kHz range, with a sample rate of 48kHz.
 120:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float a = 3.260e-01f * M_PI_POW_3;
 121:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float b = 1.823e-01f * M_PI_POW_5;
 122:../../../mutable-instruments/stmlib/dsp/filter.h ****       float f2 = f * f;
 123:../../../mutable-instruments/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + b * f2));
 124:../../../mutable-instruments/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 125:../../../mutable-instruments/stmlib/dsp/filter.h ****       // These coefficients don't need to be tweaked for the audio range.
 126:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float a = 3.333314036e-01f * M_PI_POW_3;
 127:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float b = 1.333923995e-01f * M_PI_POW_5;
 128:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float c = 5.33740603e-02f * M_PI_POW_7;
 129:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float d = 2.900525e-03f * M_PI_POW_9;
 130:../../../mutable-instruments/stmlib/dsp/filter.h ****       const float e = 9.5168091e-03f * M_PI_POW_11;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 27


 131:../../../mutable-instruments/stmlib/dsp/filter.h ****       float f2 = f * f;
 132:../../../mutable-instruments/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 133:../../../mutable-instruments/stmlib/dsp/filter.h ****     }
 134:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
 135:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 136:../../../mutable-instruments/stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 137:../../../mutable-instruments/stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 138:../../../mutable-instruments/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 139:../../../mutable-instruments/stmlib/dsp/filter.h ****   inline void set_f(float f) {
 140:../../../mutable-instruments/stmlib/dsp/filter.h ****     g_ = tan<approximation>(f);
 141:../../../mutable-instruments/stmlib/dsp/filter.h ****     gi_ = 1.0f / (1.0f + g_);
 142:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
 143:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 144:../../../mutable-instruments/stmlib/dsp/filter.h ****   template<FilterMode mode>
 145:../../../mutable-instruments/stmlib/dsp/filter.h ****   inline float Process(float in) {
 146:../../../mutable-instruments/stmlib/dsp/filter.h ****     float lp;
 147:../../../mutable-instruments/stmlib/dsp/filter.h ****     lp = (g_ * in + state_) * gi_;
 148:../../../mutable-instruments/stmlib/dsp/filter.h ****     state_ = g_ * (in - lp) + lp;
 149:../../../mutable-instruments/stmlib/dsp/filter.h **** 
 150:../../../mutable-instruments/stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 151:../../../mutable-instruments/stmlib/dsp/filter.h ****       return lp;
 152:../../../mutable-instruments/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 153:../../../mutable-instruments/stmlib/dsp/filter.h ****       return in - lp;
 154:../../../mutable-instruments/stmlib/dsp/filter.h ****     } else {
 155:../../../mutable-instruments/stmlib/dsp/filter.h ****       return 0.0f;
 156:../../../mutable-instruments/stmlib/dsp/filter.h ****     }
 157:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
 158:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 159:../../../mutable-instruments/stmlib/dsp/filter.h ****   template<FilterMode mode>
 160:../../../mutable-instruments/stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
 161:../../../mutable-instruments/stmlib/dsp/filter.h ****     while (size--) {
 162:../../../mutable-instruments/stmlib/dsp/filter.h ****       *in_out = Process<mode>(*in_out);
 163:../../../mutable-instruments/stmlib/dsp/filter.h ****       ++in_out;
 164:../../../mutable-instruments/stmlib/dsp/filter.h ****     }
 165:../../../mutable-instruments/stmlib/dsp/filter.h ****   }
 166:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 167:../../../mutable-instruments/stmlib/dsp/filter.h ****  private:
 168:../../../mutable-instruments/stmlib/dsp/filter.h ****   float g_;
 169:../../../mutable-instruments/stmlib/dsp/filter.h ****   float gi_;
 170:../../../mutable-instruments/stmlib/dsp/filter.h ****   float state_;
 171:../../../mutable-instruments/stmlib/dsp/filter.h ****   
 172:../../../mutable-instruments/stmlib/dsp/filter.h ****   DISALLOW_COPY_AND_ASSIGN(OnePole);
 173:../../../mutable-instruments/stmlib/dsp/filter.h **** };
 174:../../../mutable-instruments/stmlib/dsp/filter.h **** 
 175:../../../mutable-instruments/stmlib/dsp/filter.h **** 
 176:../../../mutable-instruments/stmlib/dsp/filter.h **** 
 177:../../../mutable-instruments/stmlib/dsp/filter.h **** class Svf {
 178:../../../mutable-instruments/stmlib/dsp/filter.h ****  public:
 179:../../../mutable-instruments/stmlib/dsp/filter.h ****   Svf() { }
 180:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~Svf() { }
 205              		.loc 16 180 3 view .LVU45
 206              		.loc 16 180 3 is_stmt 0 view .LVU46
 207              	.LBE641:
 208              	.LBE640:
 209              	.LBB642:
 210              	.LBI642:
 211              		.loc 15 46 3 is_stmt 1 view .LVU47
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 28


 212              	.LBB643:
 213              	.LBI643:
 214              		.loc 16 180 3 view .LVU48
 215              		.loc 16 180 3 is_stmt 0 view .LVU49
 216              	.LBE643:
 217              	.LBE642:
 218              		.loc 9 141 18 view .LVU50
 219 0000 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE5033:
 223              		.weak	_ZN5warps9ModulatorD1Ev
 224              		.thumb_set _ZN5warps9ModulatorD1Ev,_ZN5warps9ModulatorD2Ev
 225 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 226              		.align	1
 227              		.p2align 2,,3
 228              		.global	_Z13AudioCallbackPKPKfPPfj
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv5-d16
 234              	_Z13AudioCallbackPKPKfPPfj:
 235              	.LVL3:
 236              	.LFB5052:
 237              		.file 17 "WarpSM.cpp"
   1:WarpSM.cpp    **** #include "daisy.h"
   2:WarpSM.cpp    **** #include "daisysp.h"
   3:WarpSM.cpp    **** #include "daisy_patch_sm.h"
   4:WarpSM.cpp    **** #include "daisy_bed.h"
   5:WarpSM.cpp    **** #include "warps/dsp/modulator.h"
   6:WarpSM.cpp    **** #include "warps/settings.h"
   7:WarpSM.cpp    **** 
   8:WarpSM.cpp    **** 
   9:WarpSM.cpp    **** using namespace daisy;
  10:WarpSM.cpp    **** using namespace daisysp;
  11:WarpSM.cpp    **** using namespace patch_sm;
  12:WarpSM.cpp    **** 
  13:WarpSM.cpp    **** 
  14:WarpSM.cpp    **** DaisyPatchSM hw;
  15:WarpSM.cpp    **** warps::Modulator warp;
  16:WarpSM.cpp    **** //void UpdateParameters() 
  17:WarpSM.cpp    **** //{
  18:WarpSM.cpp    **** //	p->modulation_algorithm = fmap(hw.GetAdcValue(CV_1), 0.f, 1.0f);
  19:WarpSM.cpp    **** //	p->modulation_parameter = fmap(hw.GetAdcValue(CV_2), 0.f, 1.0f);
  20:WarpSM.cpp    **** //	p->carrier_shape = fmap(hw.GetAdcValue(CV_3), 0.f, 1.0f);
  21:WarpSM.cpp    **** //	p->note = fmap(hw.GetAdcValue(CV_4), 0.f, 1.0f);
  22:WarpSM.cpp    **** //	p->channel_drive[0] = fmap(hw.GetAdcValue(ADC_9), 0.f, 1.0f);
  23:WarpSM.cpp    **** //	p->channel_drive[1] = fmap(hw.GetAdcValue(ADC_10), 0.f, 1.0f);
  24:WarpSM.cpp    **** //}
  25:WarpSM.cpp    **** 
  26:WarpSM.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  27:WarpSM.cpp    **** {
 238              		.loc 17 27 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
  28:WarpSM.cpp    **** 	hw.ProcessAllControls();
 242              		.loc 17 28 2 view .LVU52
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 29


 243              	.LBB644:
 244              	.LBI644:
  66:../../libDaisy//src/daisy_patch_sm.h **** 
  67:../../libDaisy//src/daisy_patch_sm.h ****         /** Initializes the memories, and core peripherals for the Daisy Patch SM */
  68:../../libDaisy//src/daisy_patch_sm.h ****         void Init();
  69:../../libDaisy//src/daisy_patch_sm.h **** 
  70:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts a non-interleaving audio callback */
  71:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::AudioCallback cb);
  72:../../libDaisy//src/daisy_patch_sm.h **** 
  73:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts an interleaving audio callback */
  74:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  75:../../libDaisy//src/daisy_patch_sm.h **** 
  76:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  77:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  78:../../libDaisy//src/daisy_patch_sm.h ****          */
  79:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  80:../../libDaisy//src/daisy_patch_sm.h **** 
  81:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  82:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  83:../../libDaisy//src/daisy_patch_sm.h ****          */
  84:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  85:../../libDaisy//src/daisy_patch_sm.h **** 
  86:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the transmission of audio. */
  87:../../libDaisy//src/daisy_patch_sm.h ****         void StopAudio();
  88:../../libDaisy//src/daisy_patch_sm.h **** 
  89:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the number of samples processed in an audio callback. 
  90:../../libDaisy//src/daisy_patch_sm.h ****          *  This will only take effect on the next invocation of `StartAudio`
  91:../../libDaisy//src/daisy_patch_sm.h ****          */
  92:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioBlockSize(size_t size);
  93:../../libDaisy//src/daisy_patch_sm.h **** 
  94:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the samplerate for the audio engine 
  95:../../libDaisy//src/daisy_patch_sm.h ****          *  This will set it to the closest valid samplerate. Options being:
  96:../../libDaisy//src/daisy_patch_sm.h ****          *  8kHz, 16kHz, 32kHz, 48kHz, and 96kHz
  97:../../libDaisy//src/daisy_patch_sm.h ****          */
  98:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(float sr);
  99:../../libDaisy//src/daisy_patch_sm.h **** 
 100:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(SaiHandle::Config::SampleRate sample_rate);
 101:../../libDaisy//src/daisy_patch_sm.h **** 
 102:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the number of samples processed in an audio callback */
 103:../../libDaisy//src/daisy_patch_sm.h ****         size_t AudioBlockSize();
 104:../../libDaisy//src/daisy_patch_sm.h **** 
 105:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the audio engine's samplerate in Hz */
 106:../../libDaisy//src/daisy_patch_sm.h ****         float AudioSampleRate();
 107:../../libDaisy//src/daisy_patch_sm.h **** 
 108:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the rate at which the audio callback will be called in Hz */
 109:../../libDaisy//src/daisy_patch_sm.h ****         float AudioCallbackRate();
 110:../../libDaisy//src/daisy_patch_sm.h **** 
 111:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts the Control ADCs 
 112:../../libDaisy//src/daisy_patch_sm.h ****          * 
 113:../../libDaisy//src/daisy_patch_sm.h ****          *  This is started automatically when Init() is called.
 114:../../libDaisy//src/daisy_patch_sm.h ****          */
 115:../../libDaisy//src/daisy_patch_sm.h ****         void StartAdc();
 116:../../libDaisy//src/daisy_patch_sm.h **** 
 117:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the Control ADCs */
 118:../../libDaisy//src/daisy_patch_sm.h ****         void StopAdc();
 119:../../libDaisy//src/daisy_patch_sm.h **** 
 120:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and filters all of the analog control inputs */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 30


 121:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAnalogControls();
 122:../../libDaisy//src/daisy_patch_sm.h **** 
 123:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and debounces any of the digital control inputs 
 124:../../libDaisy//src/daisy_patch_sm.h ****          *  This does nothing on this board at this time.
 125:../../libDaisy//src/daisy_patch_sm.h ****          */
 126:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessDigitalControls();
 127:../../libDaisy//src/daisy_patch_sm.h **** 
 128:../../libDaisy//src/daisy_patch_sm.h ****         /** Does both of the above */
 129:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAllControls()
 245              		.loc 2 129 14 view .LVU53
 246              	.LBB645:
 130:../../libDaisy//src/daisy_patch_sm.h ****         {
 131:../../libDaisy//src/daisy_patch_sm.h ****             ProcessAnalogControls();
 247              		.loc 2 131 13 view .LVU54
 248              	.LBE645:
 249              	.LBE644:
  27:WarpSM.cpp    **** 	hw.ProcessAllControls();
 250              		.loc 17 27 1 is_stmt 0 view .LVU55
 251 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 252              		.cfi_def_cfa_offset 24
 253              		.cfi_offset 3, -24
 254              		.cfi_offset 4, -20
 255              		.cfi_offset 5, -16
 256              		.cfi_offset 6, -12
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
  27:WarpSM.cpp    **** 	hw.ProcessAllControls();
 259              		.loc 17 27 1 view .LVU56
 260 0002 1746     		mov	r7, r2
 261 0004 0546     		mov	r5, r0
 262              	.LBB648:
 263              	.LBB646:
 264              		.loc 2 131 34 view .LVU57
 265 0006 1448     		ldr	r0, .L13
 266              	.LVL4:
 267              		.loc 2 131 34 view .LVU58
 268              	.LBE646:
 269              	.LBE648:
  27:WarpSM.cpp    **** 	hw.ProcessAllControls();
 270              		.loc 17 27 1 view .LVU59
 271 0008 0E46     		mov	r6, r1
 272              	.LBB649:
 273              	.LBB647:
 274              		.loc 2 131 34 view .LVU60
 275 000a FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 276              	.LVL5:
 132:../../libDaisy//src/daisy_patch_sm.h ****             ProcessDigitalControls();
 277              		.loc 2 132 13 is_stmt 1 view .LVU61
 278              		.loc 2 132 35 is_stmt 0 view .LVU62
 279 000e 1248     		ldr	r0, .L13
 280 0010 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 281              	.LVL6:
 282              		.loc 2 132 35 view .LVU63
 283              	.LBE647:
 284              	.LBE649:
  29:WarpSM.cpp    **** 	for (size_t i = 0; i < size; i++)
 285              		.loc 17 29 2 is_stmt 1 view .LVU64
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 31


 286              	.LBB650:
 287              		.loc 17 29 23 view .LVU65
 288 0014 FFB1     		cbz	r7, .L5
 289              		.loc 17 29 14 is_stmt 0 view .LVU66
 290 0016 0023     		movs	r3, #0
 291              	.LVL7:
 292              	.L7:
 293              	.LBB651:
  30:WarpSM.cpp    **** 	{
  31:WarpSM.cpp    **** 	    warps::ShortFrame input[size];
 294              		.loc 17 31 6 is_stmt 1 discriminator 2 view .LVU67
  32:WarpSM.cpp    **** 	    warps::ShortFrame output[size];
 295              		.loc 17 32 6 discriminator 2 view .LVU68
  33:WarpSM.cpp    **** 
  34:WarpSM.cpp    **** 		OUT_L[i] = IN_L[i] + IN_R[i];
 296              		.loc 17 34 3 discriminator 2 view .LVU69
 297              		.loc 17 34 20 is_stmt 0 discriminator 2 view .LVU70
 298 0018 2968     		ldr	r1, [r5]
 299 001a 01EB830E 		add	lr, r1, r3, lsl #2
 300              		.loc 17 34 30 discriminator 2 view .LVU71
 301 001e 6968     		ldr	r1, [r5, #4]
 302 0020 01EB830C 		add	ip, r1, r3, lsl #2
 303              		.loc 17 34 22 discriminator 2 view .LVU72
 304 0024 DEED007A 		vldr.32	s15, [lr]
 305 0028 9CED007A 		vldr.32	s14, [ip]
  35:WarpSM.cpp    **** 		OUT_R[i] = IN_L[i] + IN_R[i];
 306              		.loc 17 35 12 discriminator 2 view .LVU73
 307 002c D6E90024 		ldrd	r2, r4, [r6]
  34:WarpSM.cpp    **** 		OUT_R[i] = IN_L[i] + IN_R[i];
 308              		.loc 17 34 22 discriminator 2 view .LVU74
 309 0030 77EE877A 		vadd.f32	s15, s15, s14
  34:WarpSM.cpp    **** 		OUT_R[i] = IN_L[i] + IN_R[i];
 310              		.loc 17 34 12 discriminator 2 view .LVU75
 311 0034 02EB8302 		add	r2, r2, r3, lsl #2
 312              		.loc 17 35 12 discriminator 2 view .LVU76
 313 0038 04EB8304 		add	r4, r4, r3, lsl #2
 314              	.LBE651:
  29:WarpSM.cpp    **** 	{
 315              		.loc 17 29 2 discriminator 2 view .LVU77
 316 003c 0133     		adds	r3, r3, #1
 317              	.LVL8:
 318              	.LBB652:
  34:WarpSM.cpp    **** 		OUT_R[i] = IN_L[i] + IN_R[i];
 319              		.loc 17 34 12 discriminator 2 view .LVU78
 320 003e C2ED007A 		vstr.32	s15, [r2]
 321              		.loc 17 35 3 is_stmt 1 discriminator 2 view .LVU79
 322              		.loc 17 35 22 is_stmt 0 discriminator 2 view .LVU80
 323 0042 DEED007A 		vldr.32	s15, [lr]
 324              	.LBE652:
  29:WarpSM.cpp    **** 	{
 325              		.loc 17 29 23 discriminator 2 view .LVU81
 326 0046 9F42     		cmp	r7, r3
 327              	.LBB653:
 328              		.loc 17 35 22 discriminator 2 view .LVU82
 329 0048 9CED007A 		vldr.32	s14, [ip]
 330 004c 77EE877A 		vadd.f32	s15, s15, s14
 331              		.loc 17 35 12 discriminator 2 view .LVU83
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 32


 332 0050 C4ED007A 		vstr.32	s15, [r4]
 333              	.LBE653:
  29:WarpSM.cpp    **** 	{
 334              		.loc 17 29 2 is_stmt 1 discriminator 2 view .LVU84
 335              	.LVL9:
  29:WarpSM.cpp    **** 	{
 336              		.loc 17 29 23 discriminator 2 view .LVU85
 337 0054 E0D1     		bne	.L7
 338              	.LVL10:
 339              	.L5:
  29:WarpSM.cpp    **** 	{
 340              		.loc 17 29 23 is_stmt 0 discriminator 2 view .LVU86
 341              	.LBE650:
  36:WarpSM.cpp    **** 	}
  37:WarpSM.cpp    **** 
  38:WarpSM.cpp    **** 
  39:WarpSM.cpp    **** }
 342              		.loc 17 39 1 view .LVU87
 343 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 344              	.LVL11:
 345              	.L14:
 346              		.loc 17 39 1 view .LVU88
 347              		.align	2
 348              	.L13:
 349 0058 00000000 		.word	.LANCHOR0
 350              		.cfi_endproc
 351              	.LFE5052:
 353              		.section	.text._ZN5daisy8patch_sm7InitBedEv,"ax",%progbits
 354              		.align	1
 355              		.p2align 2,,3
 356              		.global	_ZN5daisy8patch_sm7InitBedEv
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv5-d16
 362              	_ZN5daisy8patch_sm7InitBedEv:
 363              	.LFB4793:
 364              		.file 18 "daisy_bed.h"
   1:daisy_bed.h   **** #pragma once
   2:daisy_bed.h   **** 
   3:daisy_bed.h   **** #include "daisy.h"
   4:daisy_bed.h   **** #include "per/gpio.h"
   5:daisy_bed.h   **** #include "daisy_patch_sm.h"
   6:daisy_bed.h   **** 
   7:daisy_bed.h   **** namespace daisy
   8:daisy_bed.h   **** {
   9:daisy_bed.h   **** namespace patch_sm
  10:daisy_bed.h   **** {
  11:daisy_bed.h   ****     // simple stupid led set up
  12:daisy_bed.h   ****     GPIO    gen_led1;
  13:daisy_bed.h   ****     GPIO    gen_led2;
  14:daisy_bed.h   ****     GPIO    cv_led1;
  15:daisy_bed.h   ****     GPIO    cv_led2;
  16:daisy_bed.h   ****     GPIO    gate_in_led1;
  17:daisy_bed.h   ****     GPIO    gate_in_led2;
  18:daisy_bed.h   ****     GPIO    gate_out_led1;
  19:daisy_bed.h   ****     GPIO    gate_out_led2;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 33


  20:daisy_bed.h   **** 
  21:daisy_bed.h   **** 
  22:daisy_bed.h   ****     // generic leds
  23:daisy_bed.h   ****     dsy_gpio_pin oldPinD7 = DaisyPatchSM::D7;
  24:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
  25:daisy_bed.h   ****     dsy_gpio_pin oldPinA9 = DaisyPatchSM::A9;
  26:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
  27:daisy_bed.h   **** 
  28:daisy_bed.h   ****     // cv leds
  29:daisy_bed.h   ****     dsy_gpio_pin oldPinD2 = DaisyPatchSM::D2;
  30:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
  31:daisy_bed.h   ****     dsy_gpio_pin oldPinD1 = DaisyPatchSM::D1;
  32:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
  33:daisy_bed.h   ****     // ^^^ {DSY_GPIOB, 4},  /**< D1  - SPI2 CS */
  34:daisy_bed.h   **** 
  35:daisy_bed.h   ****     // gate leds
  36:daisy_bed.h   ****     dsy_gpio_pin oldPinD3 = DaisyPatchSM::D3;
  37:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
  38:daisy_bed.h   ****     dsy_gpio_pin oldPinD6 = DaisyPatchSM::D6;
  39:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
  40:daisy_bed.h   ****     dsy_gpio_pin oldPinD4 = DaisyPatchSM::D4;
  41:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
  42:daisy_bed.h   ****     dsy_gpio_pin oldPinD5 = DaisyPatchSM::D5;
  43:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
  44:daisy_bed.h   **** 
  45:daisy_bed.h   ****     // remap
  46:daisy_bed.h   ****      
  47:daisy_bed.h   ****     // map buttons
  48:daisy_bed.h   ****     Switch      b1,b2;
  49:daisy_bed.h   **** 
  50:daisy_bed.h   ****     void InitBed(){
 365              		.loc 18 50 19 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 8
 368              		@ frame_needed = 0, uses_anonymous_args = 0
  51:daisy_bed.h   ****         // leds
  52:daisy_bed.h   ****         gen_led1.Init(newPinD7, GPIO::Mode::OUTPUT);
 369              		.loc 18 52 9 view .LVU90
  50:daisy_bed.h   ****         // leds
 370              		.loc 18 50 19 is_stmt 0 view .LVU91
 371 0000 10B5     		push	{r4, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 4, -8
 374              		.cfi_offset 14, -4
 375              		.loc 18 52 22 view .LVU92
 376 0002 2D49     		ldr	r1, .L17
  50:daisy_bed.h   ****         // leds
 377              		.loc 18 50 19 view .LVU93
 378 0004 84B0     		sub	sp, sp, #16
 379              		.cfi_def_cfa_offset 24
 380              		.loc 18 52 22 view .LVU94
 381 0006 0024     		movs	r4, #0
 382 0008 0122     		movs	r2, #1
 383 000a 0968     		ldr	r1, [r1]
 384 000c 2346     		mov	r3, r4
 385 000e 2B48     		ldr	r0, .L17+4
 386 0010 0094     		str	r4, [sp]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 34


 387 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 388              	.LVL12:
  53:daisy_bed.h   ****         gen_led2.Init(newPinA9, GPIO::Mode::OUTPUT);
 389              		.loc 18 53 9 is_stmt 1 view .LVU95
 390              		.loc 18 53 22 is_stmt 0 view .LVU96
 391 0016 2A49     		ldr	r1, .L17+8
 392 0018 2346     		mov	r3, r4
 393 001a 0122     		movs	r2, #1
 394 001c 0968     		ldr	r1, [r1]
 395 001e 2948     		ldr	r0, .L17+12
 396 0020 0094     		str	r4, [sp]
 397 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 398              	.LVL13:
  54:daisy_bed.h   ****         cv_led1.Init(newPinD2, GPIO::Mode::OUTPUT);
 399              		.loc 18 54 9 is_stmt 1 view .LVU97
 400              		.loc 18 54 21 is_stmt 0 view .LVU98
 401 0026 2849     		ldr	r1, .L17+16
 402 0028 2346     		mov	r3, r4
 403 002a 0122     		movs	r2, #1
 404 002c 0968     		ldr	r1, [r1]
 405 002e 2748     		ldr	r0, .L17+20
 406 0030 0094     		str	r4, [sp]
 407 0032 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 408              	.LVL14:
  55:daisy_bed.h   ****         cv_led2.Init(newPinD1, GPIO::Mode::OUTPUT);
 409              		.loc 18 55 9 is_stmt 1 view .LVU99
 410              		.loc 18 55 21 is_stmt 0 view .LVU100
 411 0036 2649     		ldr	r1, .L17+24
 412 0038 2346     		mov	r3, r4
 413 003a 0122     		movs	r2, #1
 414 003c 0968     		ldr	r1, [r1]
 415 003e 2548     		ldr	r0, .L17+28
 416 0040 0094     		str	r4, [sp]
 417 0042 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 418              	.LVL15:
  56:daisy_bed.h   ****         gate_in_led1.Init(newPinD3, GPIO::Mode::OUTPUT);
 419              		.loc 18 56 9 is_stmt 1 view .LVU101
 420              		.loc 18 56 26 is_stmt 0 view .LVU102
 421 0046 2449     		ldr	r1, .L17+32
 422 0048 2346     		mov	r3, r4
 423 004a 0122     		movs	r2, #1
 424 004c 0968     		ldr	r1, [r1]
 425 004e 2348     		ldr	r0, .L17+36
 426 0050 0094     		str	r4, [sp]
 427 0052 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 428              	.LVL16:
  57:daisy_bed.h   ****         gate_in_led2.Init(newPinD4, GPIO::Mode::OUTPUT);
 429              		.loc 18 57 9 is_stmt 1 view .LVU103
 430              		.loc 18 57 26 is_stmt 0 view .LVU104
 431 0056 2249     		ldr	r1, .L17+40
 432 0058 2346     		mov	r3, r4
 433 005a 0122     		movs	r2, #1
 434 005c 0968     		ldr	r1, [r1]
 435 005e 2148     		ldr	r0, .L17+44
 436 0060 0094     		str	r4, [sp]
 437 0062 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 438              	.LVL17:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 35


  58:daisy_bed.h   ****         gate_out_led1.Init(newPinD6, GPIO::Mode::OUTPUT);
 439              		.loc 18 58 9 is_stmt 1 view .LVU105
 440              		.loc 18 58 27 is_stmt 0 view .LVU106
 441 0066 2049     		ldr	r1, .L17+48
 442 0068 2346     		mov	r3, r4
 443 006a 0122     		movs	r2, #1
 444 006c 0968     		ldr	r1, [r1]
 445 006e 1F48     		ldr	r0, .L17+52
 446 0070 0094     		str	r4, [sp]
 447 0072 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 448              	.LVL18:
  59:daisy_bed.h   ****         gate_out_led2.Init(newPinD5, GPIO::Mode::OUTPUT);
 449              		.loc 18 59 9 is_stmt 1 view .LVU107
 450              		.loc 18 59 27 is_stmt 0 view .LVU108
 451 0076 1E49     		ldr	r1, .L17+56
 452 0078 2346     		mov	r3, r4
 453 007a 0122     		movs	r2, #1
 454 007c 0968     		ldr	r1, [r1]
 455 007e 1D48     		ldr	r0, .L17+60
 456 0080 0094     		str	r4, [sp]
 457 0082 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 458              	.LVL19:
  60:daisy_bed.h   **** 
  61:daisy_bed.h   ****         // buttons
  62:daisy_bed.h   ****         b1.Init(DaisyPatchSM::A8);
 459              		.loc 18 62 9 is_stmt 1 view .LVU109
 460              		.loc 18 62 16 is_stmt 0 view .LVU110
 461 0086 1C4B     		ldr	r3, .L17+64
 462 0088 9FED1C0A 		vldr.32	s0, .L17+68
 463 008c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 464 008e 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 465 0090 1B48     		ldr	r0, .L17+72
 466 0092 42EA0121 		orr	r1, r2, r1, lsl #8
 467 0096 8DED030A 		vstr.32	s0, [sp, #12]	@ int
 468 009a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 469              	.LVL20:
  63:daisy_bed.h   ****         b2.Init(DaisyPatchSM::D10);
 470              		.loc 18 63 9 is_stmt 1 view .LVU111
 471              		.loc 18 63 16 is_stmt 0 view .LVU112
 472 009e 194B     		ldr	r3, .L17+76
 473 00a0 9DED030A 		vldr.32	s0, [sp, #12]	@ int
 474 00a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 475 00a6 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 476 00a8 1748     		ldr	r0, .L17+80
 477 00aa 42EA0121 		orr	r1, r2, r1, lsl #8
  64:daisy_bed.h   ****     }
 478              		.loc 18 64 5 view .LVU113
 479 00ae 04B0     		add	sp, sp, #16
 480              		.cfi_def_cfa_offset 8
 481              		@ sp needed
 482 00b0 BDE81040 		pop	{r4, lr}
 483              		.cfi_restore 14
 484              		.cfi_restore 4
 485              		.cfi_def_cfa_offset 0
  63:daisy_bed.h   ****         b2.Init(DaisyPatchSM::D10);
 486              		.loc 18 63 16 view .LVU114
 487 00b4 FFF7FEBF 		b	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 36


 488              	.LVL21:
 489              	.L18:
 490              		.align	2
 491              	.L17:
 492 00b8 00000000 		.word	.LANCHOR1
 493 00bc 00000000 		.word	.LANCHOR2
 494 00c0 00000000 		.word	.LANCHOR3
 495 00c4 00000000 		.word	.LANCHOR4
 496 00c8 00000000 		.word	.LANCHOR5
 497 00cc 00000000 		.word	.LANCHOR6
 498 00d0 00000000 		.word	.LANCHOR7
 499 00d4 00000000 		.word	.LANCHOR8
 500 00d8 00000000 		.word	.LANCHOR9
 501 00dc 00000000 		.word	.LANCHOR10
 502 00e0 00000000 		.word	.LANCHOR11
 503 00e4 00000000 		.word	.LANCHOR12
 504 00e8 00000000 		.word	.LANCHOR13
 505 00ec 00000000 		.word	.LANCHOR14
 506 00f0 00000000 		.word	.LANCHOR15
 507 00f4 00000000 		.word	.LANCHOR16
 508 00f8 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2A8E
 509 00fc 00000000 		.word	0
 510 0100 00000000 		.word	.LANCHOR17
 511 0104 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM3D10E
 512 0108 00000000 		.word	.LANCHOR18
 513              		.cfi_endproc
 514              	.LFE4793:
 516              		.section	.text._ZN5daisy8patch_sm6ledOffEv,"ax",%progbits
 517              		.align	1
 518              		.p2align 2,,3
 519              		.global	_ZN5daisy8patch_sm6ledOffEv
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv5-d16
 525              	_ZN5daisy8patch_sm6ledOffEv:
 526              	.LFB4794:
  65:daisy_bed.h   **** 
  66:daisy_bed.h   ****     void ledOff(){
 527              		.loc 18 66 18 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
  67:daisy_bed.h   ****         gen_led1.Write(false);
 531              		.loc 18 67 9 view .LVU116
  66:daisy_bed.h   ****         gen_led1.Write(false);
 532              		.loc 18 66 18 is_stmt 0 view .LVU117
 533 0000 08B5     		push	{r3, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 3, -8
 536              		.cfi_offset 14, -4
 537              		.loc 18 67 23 view .LVU118
 538 0002 0021     		movs	r1, #0
 539 0004 0848     		ldr	r0, .L21
 540 0006 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 541              	.LVL22:
  68:daisy_bed.h   ****         gen_led2.Write(false);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 37


 542              		.loc 18 68 9 is_stmt 1 view .LVU119
 543              		.loc 18 68 23 is_stmt 0 view .LVU120
 544 000a 0021     		movs	r1, #0
 545 000c 0748     		ldr	r0, .L21+4
 546 000e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 547              	.LVL23:
  69:daisy_bed.h   ****         cv_led1.Write(false);
 548              		.loc 18 69 9 is_stmt 1 view .LVU121
 549              		.loc 18 69 22 is_stmt 0 view .LVU122
 550 0012 0021     		movs	r1, #0
 551 0014 0648     		ldr	r0, .L21+8
 552 0016 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 553              	.LVL24:
  70:daisy_bed.h   ****         cv_led2.Write(false);
 554              		.loc 18 70 9 is_stmt 1 view .LVU123
 555              		.loc 18 70 22 is_stmt 0 view .LVU124
 556 001a 0021     		movs	r1, #0
 557 001c 0548     		ldr	r0, .L21+12
  71:daisy_bed.h   ****     }
 558              		.loc 18 71 5 view .LVU125
 559 001e BDE80840 		pop	{r3, lr}
 560              		.cfi_restore 14
 561              		.cfi_restore 3
 562              		.cfi_def_cfa_offset 0
  70:daisy_bed.h   ****         cv_led2.Write(false);
 563              		.loc 18 70 22 view .LVU126
 564 0022 FFF7FEBF 		b	_ZN5daisy4GPIO5WriteEb
 565              	.LVL25:
 566              	.L22:
 567 0026 00BF     		.align	2
 568              	.L21:
 569 0028 00000000 		.word	.LANCHOR2
 570 002c 00000000 		.word	.LANCHOR4
 571 0030 00000000 		.word	.LANCHOR6
 572 0034 00000000 		.word	.LANCHOR8
 573              		.cfi_endproc
 574              	.LFE4794:
 576              		.section	.text._ZN5daisy8patch_sm13StartupCheeseEv,"ax",%progbits
 577              		.align	1
 578              		.p2align 2,,3
 579              		.global	_ZN5daisy8patch_sm13StartupCheeseEv
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu fpv5-d16
 585              	_ZN5daisy8patch_sm13StartupCheeseEv:
 586              	.LFB4795:
  72:daisy_bed.h   **** 
  73:daisy_bed.h   ****     void StartupCheese(){
 587              		.loc 18 73 25 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
  74:daisy_bed.h   **** 		gate_in_led1.Toggle();
 591              		.loc 18 74 3 view .LVU128
  73:daisy_bed.h   **** 		gate_in_led1.Toggle();
 592              		.loc 18 73 25 is_stmt 0 view .LVU129
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 38


 593 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 594              		.cfi_def_cfa_offset 24
 595              		.cfi_offset 3, -24
 596              		.cfi_offset 4, -20
 597              		.cfi_offset 5, -16
 598              		.cfi_offset 6, -12
 599              		.cfi_offset 7, -8
 600              		.cfi_offset 14, -4
 601              		.loc 18 74 22 view .LVU130
 602 0002 2348     		ldr	r0, .L25
 603 0004 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 604              	.LVL26:
  75:daisy_bed.h   **** 		System::Delay(100);
 605              		.loc 18 75 3 is_stmt 1 view .LVU131
 606              		.loc 18 75 16 is_stmt 0 view .LVU132
 607 0008 6420     		movs	r0, #100
 608 000a FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 609              	.LVL27:
  76:daisy_bed.h   **** 		gate_in_led2.Toggle();
 610              		.loc 18 76 3 is_stmt 1 view .LVU133
  77:daisy_bed.h   **** 		System::Delay(100);
  78:daisy_bed.h   **** 		gen_led1.Toggle();
 611              		.loc 18 78 18 is_stmt 0 view .LVU134
 612 000e 214F     		ldr	r7, .L25+4
  76:daisy_bed.h   **** 		gate_in_led2.Toggle();
 613              		.loc 18 76 22 view .LVU135
 614 0010 2148     		ldr	r0, .L25+8
 615 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 616              	.LVL28:
  77:daisy_bed.h   **** 		System::Delay(100);
 617              		.loc 18 77 3 is_stmt 1 view .LVU136
  77:daisy_bed.h   **** 		System::Delay(100);
 618              		.loc 18 77 16 is_stmt 0 view .LVU137
 619 0016 6420     		movs	r0, #100
 620 0018 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 621              	.LVL29:
 622              		.loc 18 78 3 is_stmt 1 view .LVU138
  79:daisy_bed.h   **** 		System::Delay(100);
  80:daisy_bed.h   **** 		gen_led2.Toggle();
 623              		.loc 18 80 18 is_stmt 0 view .LVU139
 624 001c 1F4E     		ldr	r6, .L25+12
  78:daisy_bed.h   **** 		System::Delay(100);
 625              		.loc 18 78 18 view .LVU140
 626 001e 3846     		mov	r0, r7
  81:daisy_bed.h   **** 		System::Delay(100);
  82:daisy_bed.h   **** 		cv_led1.Toggle();
 627              		.loc 18 82 17 view .LVU141
 628 0020 1F4D     		ldr	r5, .L25+16
  78:daisy_bed.h   **** 		System::Delay(100);
 629              		.loc 18 78 18 view .LVU142
 630 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 631              	.LVL30:
  79:daisy_bed.h   **** 		gen_led2.Toggle();
 632              		.loc 18 79 3 is_stmt 1 view .LVU143
  79:daisy_bed.h   **** 		gen_led2.Toggle();
 633              		.loc 18 79 16 is_stmt 0 view .LVU144
 634 0026 6420     		movs	r0, #100
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 39


 635 0028 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 636              	.LVL31:
  80:daisy_bed.h   **** 		System::Delay(100);
 637              		.loc 18 80 3 is_stmt 1 view .LVU145
  80:daisy_bed.h   **** 		System::Delay(100);
 638              		.loc 18 80 18 is_stmt 0 view .LVU146
 639 002c 3046     		mov	r0, r6
 640 002e FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 641              	.LVL32:
  81:daisy_bed.h   **** 		System::Delay(100);
 642              		.loc 18 81 3 is_stmt 1 view .LVU147
  81:daisy_bed.h   **** 		System::Delay(100);
 643              		.loc 18 81 16 is_stmt 0 view .LVU148
 644 0032 6420     		movs	r0, #100
 645 0034 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 646              	.LVL33:
 647              		.loc 18 82 3 is_stmt 1 view .LVU149
  83:daisy_bed.h   **** 		System::Delay(100);
  84:daisy_bed.h   **** 		cv_led2.Toggle();
 648              		.loc 18 84 17 is_stmt 0 view .LVU150
 649 0038 1A4C     		ldr	r4, .L25+20
  82:daisy_bed.h   **** 		System::Delay(100);
 650              		.loc 18 82 17 view .LVU151
 651 003a 2846     		mov	r0, r5
 652 003c FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 653              	.LVL34:
  83:daisy_bed.h   **** 		System::Delay(100);
 654              		.loc 18 83 3 is_stmt 1 view .LVU152
  83:daisy_bed.h   **** 		System::Delay(100);
 655              		.loc 18 83 16 is_stmt 0 view .LVU153
 656 0040 6420     		movs	r0, #100
 657 0042 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 658              	.LVL35:
 659              		.loc 18 84 3 is_stmt 1 view .LVU154
 660              		.loc 18 84 17 is_stmt 0 view .LVU155
 661 0046 2046     		mov	r0, r4
 662 0048 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 663              	.LVL36:
  85:daisy_bed.h   **** 		System::Delay(100);
 664              		.loc 18 85 3 is_stmt 1 view .LVU156
 665              		.loc 18 85 16 is_stmt 0 view .LVU157
 666 004c 6420     		movs	r0, #100
 667 004e FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 668              	.LVL37:
  86:daisy_bed.h   **** 		gate_out_led1.Toggle();
 669              		.loc 18 86 3 is_stmt 1 view .LVU158
 670              		.loc 18 86 23 is_stmt 0 view .LVU159
 671 0052 1548     		ldr	r0, .L25+24
 672 0054 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 673              	.LVL38:
  87:daisy_bed.h   **** 		System::Delay(100);
 674              		.loc 18 87 3 is_stmt 1 view .LVU160
 675              		.loc 18 87 16 is_stmt 0 view .LVU161
 676 0058 6420     		movs	r0, #100
 677 005a FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 678              	.LVL39:
  88:daisy_bed.h   **** 		gate_out_led2.Toggle();
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 40


 679              		.loc 18 88 3 is_stmt 1 view .LVU162
 680              		.loc 18 88 23 is_stmt 0 view .LVU163
 681 005e 1348     		ldr	r0, .L25+28
 682 0060 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 683              	.LVL40:
  89:daisy_bed.h   **** 		System::Delay(100);
 684              		.loc 18 89 3 is_stmt 1 view .LVU164
 685              		.loc 18 89 16 is_stmt 0 view .LVU165
 686 0064 6420     		movs	r0, #100
 687 0066 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 688              	.LVL41:
  90:daisy_bed.h   ****         ledOff();
 689              		.loc 18 90 9 is_stmt 1 view .LVU166
 690              	.LBB656:
 691              	.LBI656:
  66:daisy_bed.h   ****         gen_led1.Write(false);
 692              		.loc 18 66 10 view .LVU167
 693              	.LBB657:
  67:daisy_bed.h   ****         gen_led2.Write(false);
 694              		.loc 18 67 9 view .LVU168
  67:daisy_bed.h   ****         gen_led2.Write(false);
 695              		.loc 18 67 23 is_stmt 0 view .LVU169
 696 006a 3846     		mov	r0, r7
 697 006c 0021     		movs	r1, #0
 698 006e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 699              	.LVL42:
  68:daisy_bed.h   ****         cv_led1.Write(false);
 700              		.loc 18 68 9 is_stmt 1 view .LVU170
  68:daisy_bed.h   ****         cv_led1.Write(false);
 701              		.loc 18 68 23 is_stmt 0 view .LVU171
 702 0072 3046     		mov	r0, r6
 703 0074 0021     		movs	r1, #0
 704 0076 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 705              	.LVL43:
  69:daisy_bed.h   ****         cv_led2.Write(false);
 706              		.loc 18 69 9 is_stmt 1 view .LVU172
  69:daisy_bed.h   ****         cv_led2.Write(false);
 707              		.loc 18 69 22 is_stmt 0 view .LVU173
 708 007a 2846     		mov	r0, r5
 709 007c 0021     		movs	r1, #0
 710 007e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 711              	.LVL44:
  70:daisy_bed.h   ****     }
 712              		.loc 18 70 9 is_stmt 1 view .LVU174
  70:daisy_bed.h   ****     }
 713              		.loc 18 70 22 is_stmt 0 view .LVU175
 714 0082 2046     		mov	r0, r4
 715 0084 0021     		movs	r1, #0
 716              	.LBE657:
 717              	.LBE656:
  91:daisy_bed.h   ****     }
 718              		.loc 18 91 5 view .LVU176
 719 0086 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 720              		.cfi_restore 14
 721              		.cfi_restore 7
 722              		.cfi_restore 6
 723              		.cfi_restore 5
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 41


 724              		.cfi_restore 4
 725              		.cfi_restore 3
 726              		.cfi_def_cfa_offset 0
 727              	.LBB659:
 728              	.LBB658:
  70:daisy_bed.h   ****     }
 729              		.loc 18 70 22 view .LVU177
 730 008a FFF7FEBF 		b	_ZN5daisy4GPIO5WriteEb
 731              	.LVL45:
 732              	.L26:
 733 008e 00BF     		.align	2
 734              	.L25:
 735 0090 00000000 		.word	.LANCHOR10
 736 0094 00000000 		.word	.LANCHOR2
 737 0098 00000000 		.word	.LANCHOR12
 738 009c 00000000 		.word	.LANCHOR4
 739 00a0 00000000 		.word	.LANCHOR6
 740 00a4 00000000 		.word	.LANCHOR8
 741 00a8 00000000 		.word	.LANCHOR14
 742 00ac 00000000 		.word	.LANCHOR16
 743              	.LBE658:
 744              	.LBE659:
 745              		.cfi_endproc
 746              	.LFE4795:
 748              		.section	.text._ZN5daisy8patch_sm8gateTestEv,"ax",%progbits
 749              		.align	1
 750              		.p2align 2,,3
 751              		.global	_ZN5daisy8patch_sm8gateTestEv
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu fpv5-d16
 757              	_ZN5daisy8patch_sm8gateTestEv:
 758              	.LFB4796:
  92:daisy_bed.h   **** 
  93:daisy_bed.h   ****     void gateTest()
  94:daisy_bed.h   ****     {
 759              		.loc 18 94 5 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
  95:daisy_bed.h   ****         gate_in_led1.Toggle();
 763              		.loc 18 95 9 view .LVU179
  94:daisy_bed.h   ****         gate_in_led1.Toggle();
 764              		.loc 18 94 5 is_stmt 0 view .LVU180
 765 0000 08B5     		push	{r3, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 3, -8
 768              		.cfi_offset 14, -4
 769              		.loc 18 95 28 view .LVU181
 770 0002 0F48     		ldr	r0, .L29
 771 0004 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 772              	.LVL46:
  96:daisy_bed.h   ****         System::Delay(1000);
 773              		.loc 18 96 9 is_stmt 1 view .LVU182
 774              		.loc 18 96 22 is_stmt 0 view .LVU183
 775 0008 4FF47A70 		mov	r0, #1000
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 42


 776 000c FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 777              	.LVL47:
  97:daisy_bed.h   ****         gate_in_led2.Toggle();
 778              		.loc 18 97 9 is_stmt 1 view .LVU184
 779              		.loc 18 97 28 is_stmt 0 view .LVU185
 780 0010 0C48     		ldr	r0, .L29+4
 781 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 782              	.LVL48:
  98:daisy_bed.h   ****         System::Delay(1000);
 783              		.loc 18 98 9 is_stmt 1 view .LVU186
 784              		.loc 18 98 22 is_stmt 0 view .LVU187
 785 0016 4FF47A70 		mov	r0, #1000
 786 001a FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 787              	.LVL49:
  99:daisy_bed.h   ****         gate_out_led1.Toggle();
 788              		.loc 18 99 9 is_stmt 1 view .LVU188
 789              		.loc 18 99 29 is_stmt 0 view .LVU189
 790 001e 0A48     		ldr	r0, .L29+8
 791 0020 FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 792              	.LVL50:
 100:daisy_bed.h   ****         System::Delay(1000);
 793              		.loc 18 100 9 is_stmt 1 view .LVU190
 794              		.loc 18 100 22 is_stmt 0 view .LVU191
 795 0024 4FF47A70 		mov	r0, #1000
 796 0028 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 797              	.LVL51:
 101:daisy_bed.h   ****         gate_out_led2.Toggle();
 798              		.loc 18 101 9 is_stmt 1 view .LVU192
 799              		.loc 18 101 29 is_stmt 0 view .LVU193
 800 002c 0748     		ldr	r0, .L29+12
 801 002e FFF7FEFF 		bl	_ZN5daisy4GPIO6ToggleEv
 802              	.LVL52:
 102:daisy_bed.h   ****         System::Delay(1000);
 803              		.loc 18 102 9 is_stmt 1 view .LVU194
 804              		.loc 18 102 22 is_stmt 0 view .LVU195
 805 0032 4FF47A70 		mov	r0, #1000
 103:daisy_bed.h   ****     }
 806              		.loc 18 103 5 view .LVU196
 807 0036 BDE80840 		pop	{r3, lr}
 808              		.cfi_restore 14
 809              		.cfi_restore 3
 810              		.cfi_def_cfa_offset 0
 102:daisy_bed.h   ****         System::Delay(1000);
 811              		.loc 18 102 22 view .LVU197
 812 003a FFF7FEBF 		b	_ZN5daisy6System5DelayEm
 813              	.LVL53:
 814              	.L30:
 815 003e 00BF     		.align	2
 816              	.L29:
 817 0040 00000000 		.word	.LANCHOR10
 818 0044 00000000 		.word	.LANCHOR12
 819 0048 00000000 		.word	.LANCHOR14
 820 004c 00000000 		.word	.LANCHOR16
 821              		.cfi_endproc
 822              	.LFE4796:
 824              		.section	.text.startup.main,"ax",%progbits
 825              		.align	1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 43


 826              		.p2align 2,,3
 827              		.global	main
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv5-d16
 833              	main:
 834              	.LFB5053:
  40:WarpSM.cpp    **** 
  41:WarpSM.cpp    **** int main(void)
  42:WarpSM.cpp    **** {
 835              		.loc 17 42 1 is_stmt 1 view -0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 0, uses_anonymous_args = 0
  43:WarpSM.cpp    **** 	hw.Init();
 839              		.loc 17 43 2 view .LVU199
  42:WarpSM.cpp    **** 	hw.Init();
 840              		.loc 17 42 1 is_stmt 0 view .LVU200
 841 0000 08B5     		push	{r3, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 3, -8
 844              		.cfi_offset 14, -4
 845              		.loc 17 43 9 view .LVU201
 846 0002 0D48     		ldr	r0, .L34
 847 0004 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
 848              	.LVL54:
  44:WarpSM.cpp    **** 	hw.SetAudioBlockSize(32); // number of samples handled per callback
 849              		.loc 17 44 2 is_stmt 1 view .LVU202
 850              		.loc 17 44 22 is_stmt 0 view .LVU203
 851 0008 2021     		movs	r1, #32
 852 000a 0B48     		ldr	r0, .L34
 853 000c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
 854              	.LVL55:
  45:WarpSM.cpp    **** 	InitBed();
 855              		.loc 17 45 2 is_stmt 1 view .LVU204
 856              		.loc 17 45 9 is_stmt 0 view .LVU205
 857 0010 FFF7FEFF 		bl	_ZN5daisy8patch_sm7InitBedEv
 858              	.LVL56:
  46:WarpSM.cpp    **** 	float sample_rate = hw.AudioSampleRate();
 859              		.loc 17 46 2 is_stmt 1 view .LVU206
 860              		.loc 17 46 40 is_stmt 0 view .LVU207
 861 0014 0848     		ldr	r0, .L34
 862 0016 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 863              	.LVL57:
  47:WarpSM.cpp    **** 	warp.Init(48000.f);
 864              		.loc 17 47 2 is_stmt 1 view .LVU208
 865              		.loc 17 47 11 is_stmt 0 view .LVU209
 866 001a 9FED080A 		vldr.32	s0, .L34+4
 867 001e 0848     		ldr	r0, .L34+8
 868 0020 FFF7FEFF 		bl	_ZN5warps9Modulator4InitEf
 869              	.LVL58:
  48:WarpSM.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 870              		.loc 17 48 2 is_stmt 1 view .LVU210
 871              		.loc 17 48 23 is_stmt 0 view .LVU211
 872 0024 0321     		movs	r1, #3
 873 0026 0448     		ldr	r0, .L34
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 44


 874 0028 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 875              	.LVL59:
  49:WarpSM.cpp    **** 	hw.StartAudio(AudioCallback);
 876              		.loc 17 49 2 is_stmt 1 view .LVU212
 877              		.loc 17 49 15 is_stmt 0 view .LVU213
 878 002c 0549     		ldr	r1, .L34+12
 879 002e 0248     		ldr	r0, .L34
 880 0030 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
 881              	.LVL60:
 882              	.L32:
  50:WarpSM.cpp    **** 	while(1) {}
 883              		.loc 17 50 2 is_stmt 1 discriminator 1 view .LVU214
 884              		.loc 17 50 2 discriminator 1 view .LVU215
 885              		.loc 17 50 2 discriminator 1 view .LVU216
 886              		.loc 17 50 2 discriminator 1 view .LVU217
 887 0034 FEE7     		b	.L32
 888              	.L35:
 889 0036 00BF     		.align	2
 890              	.L34:
 891 0038 00000000 		.word	.LANCHOR0
 892 003c 00803B47 		.word	1195081728
 893 0040 00000000 		.word	warp
 894 0044 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 895              		.cfi_endproc
 896              	.LFE5053:
 898              		.section	.text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E,"ax",%progbits
 899              		.align	1
 900              		.p2align 2,,3
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv5-d16
 906              	_GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:
 907              	.LFB5656:
  51:WarpSM.cpp    **** }
 908              		.loc 17 51 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              	.LBB829:
 913              	.LBI829:
 914              		.loc 17 51 1 view .LVU219
 915              	.LVL61:
 916              	.LBB830:
 917              	.LBB831:
 918              	.LBI831:
 919              		.file 19 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 45


  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 46


  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 920              		.loc 19 74 5 view .LVU220
 921              	.LBB832:
 922              	.LBB833:
 923              	.LBI833:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 924              		.loc 19 68 9 view .LVU221
 925              	.LBB834:
 926              	.LBB835:
 927              	.LBB836:
 928              	.LBI836:
 929              		.file 20 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 47


  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 48


  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 49


 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 50


 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 51


 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 930              		.loc 20 272 15 view .LVU222
 931              		.loc 20 272 15 is_stmt 0 view .LVU223
 932              	.LBE836:
 933              	.LBE835:
 934              	.LBE834:
 935              	.LBE833:
 936              	.LBE832:
 937              	.LBE831:
 938              	.LBE830:
 939              	.LBE829:
 940              		.loc 17 51 1 view .LVU224
 941 0000 38B5     		push	{r3, r4, r5, lr}
 942              		.cfi_def_cfa_offset 16
 943              		.cfi_offset 3, -16
 944              		.cfi_offset 4, -12
 945              		.cfi_offset 5, -8
 946              		.cfi_offset 14, -4
 947              	.LBB1071:
 948              	.LBB1063:
 949              	.LBB849:
 950              	.LBB850:
 951              		.loc 19 74 12 view .LVU225
 952 0002 424A     		ldr	r2, .L38
 953              	.LBE850:
 954              	.LBE849:
 955              	.LBB860:
 956              	.LBB846:
 957              	.LBB843:
 958              	.LBB840:
 959              	.LBB837:
  69:../../libDaisy//src/per/gpio.h ****         {
 960              		.loc 19 69 73 view .LVU226
 961 0004 0024     		movs	r4, #0
 962              	.LBE837:
 963              	.LBE840:
 964              	.LBE843:
 965              		.loc 19 74 12 view .LVU227
 966 0006 4FF60B73 		movw	r3, #65291
 967 000a 4148     		ldr	r0, .L38+4
 968              	.LBE846:
 969              	.LBE860:
 970              	.LBB861:
 971              	.LBB862:
 972 000c 4149     		ldr	r1, .L38+8
 973              	.LBE862:
 974              	.LBE861:
 975              	.LBB872:
 976              	.LBB858:
 977              	.LBB851:
 978              	.LBB852:
 979              	.LBB853:
  69:../../libDaisy//src/per/gpio.h ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 52


 980              		.loc 19 69 73 view .LVU228
 981 000e C2E90034 		strd	r3, r4, [r2]
 982 0012 C2E90244 		strd	r4, r4, [r2, #8]
 983              	.LBE853:
 984              	.LBE852:
 985              	.LBE851:
 986              	.LBE858:
 987              	.LBE872:
 988              	.LBB873:
 989              	.LBB874:
 990              		.loc 19 74 12 view .LVU229
 991 0016 404A     		ldr	r2, .L38+12
 992              	.LBB875:
 993              	.LBB876:
 994              	.LBB877:
  69:../../libDaisy//src/per/gpio.h ****         {
 995              		.loc 19 69 73 view .LVU230
 996 0018 C2E90034 		strd	r3, r4, [r2]
 997 001c C2E90244 		strd	r4, r4, [r2, #8]
 998              	.LBE877:
 999              	.LBE876:
 1000              	.LBE875:
 1001              	.LBE874:
 1002              	.LBE873:
 1003              	.LBB883:
 1004              	.LBB884:
 1005              		.loc 19 74 12 view .LVU231
 1006 0020 3E4A     		ldr	r2, .L38+16
 1007              	.LBE884:
 1008              	.LBE883:
 1009              	.LBB898:
 1010              	.LBB847:
 1011              	.LBB844:
 1012              	.LBB841:
 1013              	.LBB838:
  69:../../libDaisy//src/per/gpio.h ****         {
 1014              		.loc 19 69 73 view .LVU232
 1015 0022 C0E90034 		strd	r3, r4, [r0]
 1016              	.LBE838:
 1017              	.LBE841:
 1018              	.LBE844:
 1019              	.LBE847:
 1020              	.LBE898:
 1021              	.LBB899:
 1022              	.LBB895:
 1023              	.LBB885:
 1024              	.LBB886:
 1025              	.LBB887:
 1026 0026 C2E90034 		strd	r3, r4, [r2]
 1027              	.LBE887:
 1028              	.LBE886:
 1029              	.LBE885:
 1030              	.LBE895:
 1031              	.LBE899:
 1032              	.LBB900:
 1033              	.LBB870:
 1034              	.LBB863:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 53


 1035              	.LBB864:
 1036              	.LBB865:
 1037 002a C1E90034 		strd	r3, r4, [r1]
 1038              	.LBE865:
 1039              	.LBE864:
 1040              	.LBE863:
 1041              	.LBE870:
 1042              	.LBE900:
 1043              	.LBB901:
 1044              	.LBB848:
 1045              	.LBB845:
 1046              	.LBB842:
 1047              	.LBB839:
 1048 002e C0E90244 		strd	r4, r4, [r0, #8]
 1049              	.LVL62:
  69:../../libDaisy//src/per/gpio.h ****         {
 1050              		.loc 19 69 73 view .LVU233
 1051              	.LBE839:
 1052              	.LBE842:
 1053              	.LBE845:
 1054              	.LBE848:
 1055              	.LBE901:
 1056              	.LBB902:
 1057              	.LBI849:
 1058              		.loc 19 74 5 is_stmt 1 view .LVU234
 1059              	.LBB859:
 1060              	.LBB857:
 1061              	.LBI851:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1062              		.loc 19 68 9 view .LVU235
 1063              	.LBB856:
 1064              	.LBB855:
 1065              	.LBB854:
 1066              	.LBI854:
 1067              		.loc 20 272 15 view .LVU236
 1068              		.loc 20 272 15 is_stmt 0 view .LVU237
 1069              	.LBE854:
 1070              	.LBE855:
 1071              	.LBE856:
 1072              	.LBE857:
 1073              	.LBE859:
 1074              	.LBE902:
 1075              	.LBB903:
 1076              	.LBI861:
 1077              		.loc 19 74 5 is_stmt 1 view .LVU238
 1078              	.LBB871:
 1079              	.LBB869:
 1080              	.LBI863:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1081              		.loc 19 68 9 view .LVU239
 1082              	.LBB868:
 1083              	.LBB867:
 1084              	.LBB866:
 1085              	.LBI866:
 1086              		.loc 20 272 15 view .LVU240
 1087              		.loc 20 272 15 is_stmt 0 view .LVU241
 1088              	.LBE866:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 54


  69:../../libDaisy//src/per/gpio.h ****         {
 1089              		.loc 19 69 73 view .LVU242
 1090 0032 C1E90244 		strd	r4, r4, [r1, #8]
 1091              	.LVL63:
  69:../../libDaisy//src/per/gpio.h ****         {
 1092              		.loc 19 69 73 view .LVU243
 1093              	.LBE867:
 1094              	.LBE868:
 1095              	.LBE869:
 1096              	.LBE871:
 1097              	.LBE903:
 1098              	.LBB904:
 1099              	.LBI873:
 1100              		.loc 19 74 5 is_stmt 1 view .LVU244
 1101              	.LBB882:
 1102              	.LBB881:
 1103              	.LBI875:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1104              		.loc 19 68 9 view .LVU245
 1105              	.LBB880:
 1106              	.LBB879:
 1107              	.LBB878:
 1108              	.LBI878:
 1109              		.loc 20 272 15 view .LVU246
 1110              		.loc 20 272 15 is_stmt 0 view .LVU247
 1111              	.LBE878:
 1112              	.LBE879:
 1113              	.LBE880:
 1114              	.LBE881:
 1115              	.LBE882:
 1116              	.LBE904:
 1117              	.LBB905:
 1118              	.LBI905:
 1119              		.loc 19 74 5 is_stmt 1 view .LVU248
 1120              	.LBB906:
 1121              	.LBB907:
 1122              	.LBI907:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1123              		.loc 19 68 9 view .LVU249
 1124              	.LBB908:
 1125              	.LBB909:
 1126              	.LBB910:
 1127              	.LBI910:
 1128              		.loc 20 272 15 view .LVU250
 1129              		.loc 20 272 15 is_stmt 0 view .LVU251
 1130              	.LBE910:
 1131              	.LBE909:
 1132              	.LBE908:
 1133              	.LBE907:
 1134              	.LBE906:
 1135              	.LBE905:
 1136              	.LBB920:
 1137              	.LBB896:
 1138              	.LBB893:
 1139              	.LBB891:
 1140              	.LBB889:
  69:../../libDaisy//src/per/gpio.h ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 55


 1141              		.loc 19 69 73 view .LVU252
 1142 0036 C2E90244 		strd	r4, r4, [r2, #8]
 1143              	.LBE889:
 1144              	.LBE891:
 1145              	.LBE893:
 1146              	.LBE896:
 1147              	.LBE920:
 1148              	.LBB921:
 1149              	.LBB917:
 1150              		.loc 19 74 12 view .LVU253
 1151 003a 3948     		ldr	r0, .L38+20
 1152              	.LBE917:
 1153              	.LBE921:
 1154              	.LBB922:
 1155              	.LBB923:
 1156 003c 394A     		ldr	r2, .L38+24
 1157              	.LBE923:
 1158              	.LBE922:
 1159              	.LBB934:
 1160              	.LBB935:
 1161 003e 3A49     		ldr	r1, .L38+28
 1162              	.LBE935:
 1163              	.LBE934:
 1164              	.LBB945:
 1165              	.LBB931:
 1166 0040 1360     		str	r3, [r2]
 1167              	.LBE931:
 1168              	.LBE945:
 1169              	.LBB946:
 1170              	.LBB918:
 1171              	.LBB915:
 1172              	.LBB913:
 1173              	.LBB911:
  69:../../libDaisy//src/per/gpio.h ****         {
 1174              		.loc 19 69 73 view .LVU254
 1175 0042 C0E90034 		strd	r3, r4, [r0]
 1176              	.LBE911:
 1177              	.LBE913:
 1178              	.LBE915:
 1179              	.LBE918:
 1180              	.LBE946:
 1181              	.LBB947:
 1182              	.LBB943:
 1183              	.LBB936:
 1184              	.LBB937:
 1185              	.LBB938:
 1186 0046 C1E90034 		strd	r3, r4, [r1]
 1187 004a C1E90244 		strd	r4, r4, [r1, #8]
 1188              	.LBE938:
 1189              	.LBE937:
 1190              	.LBE936:
 1191              	.LBE943:
 1192              	.LBE947:
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1193              		.loc 18 23 18 view .LVU255
 1194 004e 374B     		ldr	r3, .L38+32
  25:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 56


 1195              		.loc 18 25 18 view .LVU256
 1196 0050 3749     		ldr	r1, .L38+36
 1197              	.LBB948:
 1198              	.LBB919:
 1199              	.LBB916:
 1200              	.LBB914:
 1201              	.LBB912:
  69:../../libDaisy//src/per/gpio.h ****         {
 1202              		.loc 19 69 73 view .LVU257
 1203 0052 C0E90244 		strd	r4, r4, [r0, #8]
 1204              	.LVL64:
  69:../../libDaisy//src/per/gpio.h ****         {
 1205              		.loc 19 69 73 view .LVU258
 1206              	.LBE912:
 1207              	.LBE914:
 1208              	.LBE916:
 1209              	.LBE919:
 1210              	.LBE948:
 1211              	.LBB949:
 1212              	.LBI883:
 1213              		.loc 19 74 5 is_stmt 1 view .LVU259
 1214              	.LBB897:
 1215              	.LBB894:
 1216              	.LBI885:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1217              		.loc 19 68 9 view .LVU260
 1218              	.LBB892:
 1219              	.LBB890:
 1220              	.LBB888:
 1221              	.LBI888:
 1222              		.loc 20 272 15 view .LVU261
 1223              		.loc 20 272 15 is_stmt 0 view .LVU262
 1224              	.LBE888:
 1225              	.LBE890:
 1226              	.LBE892:
 1227              	.LBE894:
 1228              	.LBE897:
 1229              	.LBE949:
 1230              	.LBB950:
 1231              	.LBI934:
 1232              		.loc 19 74 5 is_stmt 1 view .LVU263
 1233              	.LBB944:
 1234              	.LBB942:
 1235              	.LBI936:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1236              		.loc 19 68 9 view .LVU264
 1237              	.LBB941:
 1238              	.LBB940:
 1239              	.LBB939:
 1240              	.LBI939:
 1241              		.loc 20 272 15 view .LVU265
 1242              		.loc 20 272 15 is_stmt 0 view .LVU266
 1243              	.LBE939:
 1244              	.LBE940:
 1245              	.LBE941:
 1246              	.LBE942:
 1247              	.LBE944:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 57


 1248              	.LBE950:
 1249              	.LBB951:
 1250              	.LBI922:
 1251              		.loc 19 74 5 is_stmt 1 view .LVU267
 1252              	.LBB932:
 1253              	.LBB924:
 1254              	.LBI924:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1255              		.loc 19 68 9 view .LVU268
 1256              	.LBB925:
 1257              	.LBB926:
 1258              	.LBB927:
 1259              	.LBI927:
 1260              		.loc 20 272 15 view .LVU269
 1261              		.loc 20 272 15 is_stmt 0 view .LVU270
 1262              	.LBE927:
  69:../../libDaisy//src/per/gpio.h ****         {
 1263              		.loc 19 69 73 view .LVU271
 1264 0056 C2E90144 		strd	r4, r4, [r2, #4]
 1265              	.LBE926:
 1266              	.LBE925:
 1267              	.LBE924:
 1268              	.LBE932:
 1269              	.LBE951:
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1270              		.loc 18 23 18 view .LVU272
 1271 005a 3648     		ldr	r0, .L38+40
 1272              	.LBB952:
 1273              	.LBB933:
 1274              	.LBB930:
 1275              	.LBB929:
 1276              	.LBB928:
  69:../../libDaisy//src/per/gpio.h ****         {
 1277              		.loc 19 69 73 view .LVU273
 1278 005c D460     		str	r4, [r2, #12]
 1279              	.LVL65:
  69:../../libDaisy//src/per/gpio.h ****         {
 1280              		.loc 19 69 73 view .LVU274
 1281              	.LBE928:
 1282              	.LBE929:
 1283              	.LBE930:
 1284              	.LBE933:
 1285              	.LBE952:
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1286              		.loc 18 23 18 view .LVU275
 1287 005e 1D88     		ldrh	r5, [r3]	@ unaligned
  25:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
 1288              		.loc 18 25 18 view .LVU276
 1289 0060 0988     		ldrh	r1, [r1]	@ unaligned
 1290 0062 354B     		ldr	r3, .L38+44
  23:daisy_bed.h   ****     Pin newPinD7 = Pin(static_cast<GPIOPort>(oldPinD7.port), oldPinD7.pin);
 1291              		.loc 18 23 18 view .LVU277
 1292 0064 0580     		strh	r5, [r0]	@ unaligned
  25:daisy_bed.h   ****     Pin newPinA9 = Pin(static_cast<GPIOPort>(oldPinA9.port), oldPinA9.pin);
 1293              		.loc 18 25 18 view .LVU278
 1294 0066 1980     		strh	r1, [r3]	@ unaligned
 1295              	.LBB953:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 58


 1296              	.LBB954:
 1297              	.LBB955:
 269:../../libDaisy//src/daisy_core.h **** 
 1298              		.loc 20 269 74 view .LVU279
 1299 0068 344A     		ldr	r2, .L38+48
 1300              	.LBE955:
 1301              	.LBE954:
 1302              	.LBE953:
  24:daisy_bed.h   ****     dsy_gpio_pin oldPinA9 = DaisyPatchSM::A9;
 1303              		.loc 18 24 55 view .LVU280
 1304 006a 0188     		ldrh	r1, [r0]
 1305              	.LVL66:
 1306              	.LBB958:
 1307              	.LBI953:
 269:../../libDaisy//src/daisy_core.h **** 
 1308              		.loc 20 269 15 is_stmt 1 view .LVU281
 1309              	.LBE958:
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 1310              		.loc 18 31 18 is_stmt 0 view .LVU282
 1311 006c 3448     		ldr	r0, .L38+52
 1312              	.LBB959:
 1313              	.LBB957:
 1314              	.LBB956:
 269:../../libDaisy//src/daisy_core.h **** 
 1315              		.loc 20 269 74 view .LVU283
 1316 006e 1180     		strh	r1, [r2]	@ movhi
 1317              	.LVL67:
 269:../../libDaisy//src/daisy_core.h **** 
 1318              		.loc 20 269 74 view .LVU284
 1319              	.LBE956:
 1320              	.LBE957:
 1321              	.LBE959:
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1322              		.loc 18 29 18 view .LVU285
 1323 0070 3449     		ldr	r1, .L38+56
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 1324              		.loc 18 31 18 view .LVU286
 1325 0072 0088     		ldrh	r0, [r0]	@ unaligned
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1326              		.loc 18 29 18 view .LVU287
 1327 0074 0D88     		ldrh	r5, [r1]	@ unaligned
  26:daisy_bed.h   **** 
 1328              		.loc 18 26 55 view .LVU288
 1329 0076 1988     		ldrh	r1, [r3]
 1330              	.LVL68:
 1331              	.LBB960:
 1332              	.LBI960:
 269:../../libDaisy//src/daisy_core.h **** 
 1333              		.loc 20 269 15 is_stmt 1 view .LVU289
 1334              	.LBB961:
 1335              	.LBB962:
 269:../../libDaisy//src/daisy_core.h **** 
 1336              		.loc 20 269 74 is_stmt 0 view .LVU290
 1337 0078 334B     		ldr	r3, .L38+60
 1338              	.LBE962:
 1339              	.LBE961:
 1340              	.LBE960:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 59


  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1341              		.loc 18 29 18 view .LVU291
 1342 007a 344A     		ldr	r2, .L38+64
 1343              	.LBB965:
 1344              	.LBB964:
 1345              	.LBB963:
 269:../../libDaisy//src/daisy_core.h **** 
 1346              		.loc 20 269 74 view .LVU292
 1347 007c 1980     		strh	r1, [r3]	@ movhi
 1348              	.LVL69:
 269:../../libDaisy//src/daisy_core.h **** 
 1349              		.loc 20 269 74 view .LVU293
 1350              	.LBE963:
 1351              	.LBE964:
 1352              	.LBE965:
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 1353              		.loc 18 31 18 view .LVU294
 1354 007e 344B     		ldr	r3, .L38+68
  29:daisy_bed.h   ****     Pin newPinD2 = Pin(static_cast<GPIOPort>(oldPinD2.port), oldPinD2.pin);
 1355              		.loc 18 29 18 view .LVU295
 1356 0080 1580     		strh	r5, [r2]	@ unaligned
  31:daisy_bed.h   ****     Pin newPinD1 = Pin(static_cast<GPIOPort>(oldPinD1.port), oldPinD1.pin);
 1357              		.loc 18 31 18 view .LVU296
 1358 0082 1880     		strh	r0, [r3]	@ unaligned
  30:daisy_bed.h   ****     dsy_gpio_pin oldPinD1 = DaisyPatchSM::D1;
 1359              		.loc 18 30 55 view .LVU297
 1360 0084 1288     		ldrh	r2, [r2]
 1361              	.LVL70:
 1362              	.LBB966:
 1363              	.LBI966:
 269:../../libDaisy//src/daisy_core.h **** 
 1364              		.loc 20 269 15 is_stmt 1 view .LVU298
 1365              	.LBE966:
  32:daisy_bed.h   ****     // ^^^ {DSY_GPIOB, 4},  /**< D1  - SPI2 CS */
 1366              		.loc 18 32 55 is_stmt 0 view .LVU299
 1367 0086 1D88     		ldrh	r5, [r3]
 1368              	.LBB971:
 1369              	.LBB967:
 1370              	.LBB968:
 269:../../libDaisy//src/daisy_core.h **** 
 1371              		.loc 20 269 74 view .LVU300
 1372 0088 324B     		ldr	r3, .L38+72
 1373              	.LBE968:
 1374              	.LBE967:
 1375              	.LBE971:
  36:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
 1376              		.loc 18 36 18 view .LVU301
 1377 008a 3349     		ldr	r1, .L38+76
 1378              	.LBB972:
 1379              	.LBB970:
 1380              	.LBB969:
 269:../../libDaisy//src/daisy_core.h **** 
 1381              		.loc 20 269 74 view .LVU302
 1382 008c 1A80     		strh	r2, [r3]	@ movhi
 1383              	.LVL71:
 269:../../libDaisy//src/daisy_core.h **** 
 1384              		.loc 20 269 74 view .LVU303
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 60


 1385              	.LBE969:
 1386              	.LBE970:
 1387              	.LBE972:
 1388              	.LBB973:
 1389              	.LBI973:
 269:../../libDaisy//src/daisy_core.h **** 
 1390              		.loc 20 269 15 is_stmt 1 view .LVU304
 1391              	.LBE973:
  38:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
 1392              		.loc 18 38 18 is_stmt 0 view .LVU305
 1393 008e 334B     		ldr	r3, .L38+80
  36:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
 1394              		.loc 18 36 18 view .LVU306
 1395 0090 B1F800E0 		ldrh	lr, [r1]	@ unaligned
  38:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
 1396              		.loc 18 38 18 view .LVU307
 1397 0094 B3F800C0 		ldrh	ip, [r3]	@ unaligned
  40:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
 1398              		.loc 18 40 18 view .LVU308
 1399 0098 314B     		ldr	r3, .L38+84
 1400              	.LBB978:
 1401              	.LBB979:
 1402              	.LBB980:
 269:../../libDaisy//src/daisy_core.h **** 
 1403              		.loc 20 269 74 view .LVU309
 1404 009a 3248     		ldr	r0, .L38+88
 1405              	.LBE980:
 1406              	.LBE979:
 1407              	.LBE978:
  40:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
 1408              		.loc 18 40 18 view .LVU310
 1409 009c 1988     		ldrh	r1, [r3]	@ unaligned
  42:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
 1410              		.loc 18 42 18 view .LVU311
 1411 009e 324B     		ldr	r3, .L38+92
 1412 00a0 1A88     		ldrh	r2, [r3]	@ unaligned
  36:daisy_bed.h   ****     Pin newPinD3 = Pin(static_cast<GPIOPort>(oldPinD3.port), oldPinD3.pin);
 1413              		.loc 18 36 18 view .LVU312
 1414 00a2 324B     		ldr	r3, .L38+96
 1415 00a4 A3F800E0 		strh	lr, [r3]	@ unaligned
  37:daisy_bed.h   ****     dsy_gpio_pin oldPinD6 = DaisyPatchSM::D6;
 1416              		.loc 18 37 55 view .LVU313
 1417 00a8 B3F800E0 		ldrh	lr, [r3]
  38:daisy_bed.h   ****     Pin newPinD6 = Pin(static_cast<GPIOPort>(oldPinD6.port), oldPinD6.pin);
 1418              		.loc 18 38 18 view .LVU314
 1419 00ac 304B     		ldr	r3, .L38+100
 1420 00ae A3F800C0 		strh	ip, [r3]	@ unaligned
  39:daisy_bed.h   ****     dsy_gpio_pin oldPinD4 = DaisyPatchSM::D4;
 1421              		.loc 18 39 55 view .LVU315
 1422 00b2 1B88     		ldrh	r3, [r3]
 1423              	.LBB983:
 1424              	.LBB982:
 1425              	.LBB981:
 269:../../libDaisy//src/daisy_core.h **** 
 1426              		.loc 20 269 74 view .LVU316
 1427 00b4 0380     		strh	r3, [r0]	@ movhi
 1428              	.LBE981:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 61


 1429              	.LBE982:
 1430              	.LBE983:
  40:daisy_bed.h   ****     Pin newPinD4 = Pin(static_cast<GPIOPort>(oldPinD4.port), oldPinD4.pin);
 1431              		.loc 18 40 18 view .LVU317
 1432 00b6 2F4B     		ldr	r3, .L38+104
 1433 00b8 1980     		strh	r1, [r3]	@ unaligned
  41:daisy_bed.h   ****     dsy_gpio_pin oldPinD5 = DaisyPatchSM::D5;
 1434              		.loc 18 41 55 view .LVU318
 1435 00ba B3F800C0 		ldrh	ip, [r3]
  42:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
 1436              		.loc 18 42 18 view .LVU319
 1437 00be 2E4B     		ldr	r3, .L38+108
  48:daisy_bed.h   **** 
 1438              		.loc 18 48 17 view .LVU320
 1439 00c0 2E49     		ldr	r1, .L38+112
  42:daisy_bed.h   ****     Pin newPinD5 = Pin(static_cast<GPIOPort>(oldPinD5.port), oldPinD5.pin);
 1440              		.loc 18 42 18 view .LVU321
 1441 00c2 1A80     		strh	r2, [r3]	@ unaligned
  43:daisy_bed.h   **** 
 1442              		.loc 18 43 55 view .LVU322
 1443 00c4 1888     		ldrh	r0, [r3]
 1444              	.LBB984:
 1445              	.LBB974:
 1446              	.LBB975:
 269:../../libDaisy//src/daisy_core.h **** 
 1447              		.loc 20 269 74 view .LVU323
 1448 00c6 2E4B     		ldr	r3, .L38+116
 1449              	.LBE975:
 1450              	.LBE974:
 1451              	.LBE984:
  48:daisy_bed.h   **** 
 1452              		.loc 18 48 17 view .LVU324
 1453 00c8 2E4A     		ldr	r2, .L38+120
 1454              	.LBB985:
 1455              	.LBB977:
 1456              	.LBB976:
 269:../../libDaisy//src/daisy_core.h **** 
 1457              		.loc 20 269 74 view .LVU325
 1458 00ca 1D80     		strh	r5, [r3]	@ movhi
 1459              	.LVL72:
 269:../../libDaisy//src/daisy_core.h **** 
 1460              		.loc 20 269 74 view .LVU326
 1461              	.LBE976:
 1462              	.LBE977:
 1463              	.LBE985:
 1464              	.LBB986:
 1465              	.LBI986:
 269:../../libDaisy//src/daisy_core.h **** 
 1466              		.loc 20 269 15 is_stmt 1 view .LVU327
 1467              	.LBB987:
 1468              	.LBB988:
 269:../../libDaisy//src/daisy_core.h **** 
 1469              		.loc 20 269 74 is_stmt 0 view .LVU328
 1470 00cc 2E4B     		ldr	r3, .L38+124
 1471 00ce A3F800E0 		strh	lr, [r3]	@ movhi
 1472              	.LVL73:
 269:../../libDaisy//src/daisy_core.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 62


 1473              		.loc 20 269 74 view .LVU329
 1474              	.LBE988:
 1475              	.LBE987:
 1476              	.LBE986:
 1477              	.LBB989:
 1478              	.LBI978:
 269:../../libDaisy//src/daisy_core.h **** 
 1479              		.loc 20 269 15 is_stmt 1 view .LVU330
 269:../../libDaisy//src/daisy_core.h **** 
 1480              		.loc 20 269 15 is_stmt 0 view .LVU331
 1481              	.LBE989:
 1482              	.LBB990:
 1483              	.LBI990:
 269:../../libDaisy//src/daisy_core.h **** 
 1484              		.loc 20 269 15 is_stmt 1 view .LVU332
 1485              	.LBB991:
 1486              	.LBB992:
 269:../../libDaisy//src/daisy_core.h **** 
 1487              		.loc 20 269 74 is_stmt 0 view .LVU333
 1488 00d2 2E4B     		ldr	r3, .L38+128
 1489 00d4 A3F800C0 		strh	ip, [r3]	@ movhi
 1490              	.LVL74:
 269:../../libDaisy//src/daisy_core.h **** 
 1491              		.loc 20 269 74 view .LVU334
 1492              	.LBE992:
 1493              	.LBE991:
 1494              	.LBE990:
 1495              	.LBB993:
 1496              	.LBI993:
 269:../../libDaisy//src/daisy_core.h **** 
 1497              		.loc 20 269 15 is_stmt 1 view .LVU335
 1498              	.LBB994:
 1499              	.LBB995:
 269:../../libDaisy//src/daisy_core.h **** 
 1500              		.loc 20 269 74 is_stmt 0 view .LVU336
 1501 00d8 2D4B     		ldr	r3, .L38+132
 1502 00da 1880     		strh	r0, [r3]	@ movhi
 1503              	.LVL75:
 269:../../libDaisy//src/daisy_core.h **** 
 1504              		.loc 20 269 74 view .LVU337
 1505              	.LBE995:
 1506              	.LBE994:
 1507              	.LBE993:
 1508              	.LBB996:
 1509              	.LBI996:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1510              		.loc 1 41 5 is_stmt 1 view .LVU338
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1511              		.loc 1 41 5 is_stmt 0 view .LVU339
 1512              	.LBE996:
  48:daisy_bed.h   **** 
 1513              		.loc 18 48 17 view .LVU340
 1514 00dc 2D48     		ldr	r0, .L38+136
 1515 00de FFF7FEFF 		bl	__aeabi_atexit
 1516              	.LVL76:
 1517              	.LBB997:
 1518              	.LBI997:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 63


  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1519              		.loc 1 41 5 is_stmt 1 view .LVU341
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1520              		.loc 1 41 5 is_stmt 0 view .LVU342
 1521              	.LBE997:
  48:daisy_bed.h   **** 
 1522              		.loc 18 48 20 view .LVU343
 1523 00e2 284A     		ldr	r2, .L38+120
 1524 00e4 2549     		ldr	r1, .L38+112
 1525 00e6 2C48     		ldr	r0, .L38+140
 1526 00e8 FFF7FEFF 		bl	__aeabi_atexit
 1527              	.LVL77:
 1528              	.LBB998:
 1529              	.LBI998:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 1530              		.loc 2 64 9 is_stmt 1 view .LVU344
 1531              	.LBB999:
 1532              	.LBB1000:
 1533              	.LBI1000:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1534              		.loc 8 77 5 view .LVU345
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1535              		.loc 8 77 5 is_stmt 0 view .LVU346
 1536              	.LBE1000:
 1537              	.LBB1001:
 1538              	.LBI1001:
 1539              		.file 21 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 64


  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 65


  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 66


 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1540              		.loc 21 166 5 is_stmt 1 view .LVU347
 1541              	.LBB1002:
 1542              	.LBB1003:
 1543              		.loc 21 166 34 is_stmt 0 view .LVU348
 1544 00ec 2B48     		ldr	r0, .L38+144
 1545              	.LBE1003:
 1546              	.LBE1002:
 1547              	.LBE1001:
 1548              	.LBE999:
 1549              	.LBE998:
  14:WarpSM.cpp    **** warps::Modulator warp;
 1550              		.loc 17 14 14 view .LVU349
 1551 00ee 2C49     		ldr	r1, .L38+148
 1552 00f0 244A     		ldr	r2, .L38+120
 1553              	.LBB1025:
 1554              	.LBB1023:
 1555              	.LBB1004:
 1556              	.LBB1005:
 1557              	.LBB1006:
 1558              	.LBB1007:
 1559              	.LBB1008:
 1560              		.file 22 "../../libDaisy//src/per/i2c.h"
   1:../../libDaisy//src/per/i2c.h **** #pragma once
   2:../../libDaisy//src/per/i2c.h **** #include "daisy_core.h"
   3:../../libDaisy//src/per/i2c.h **** 
   4:../../libDaisy//src/per/i2c.h **** namespace daisy
   5:../../libDaisy//src/per/i2c.h **** {
   6:../../libDaisy//src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libDaisy//src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libDaisy//src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libDaisy//src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libDaisy//src/per/i2c.h ****  *  
  11:../../libDaisy//src/per/i2c.h ****  *      // setup the configuration
  12:../../libDaisy//src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 67


  14:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libDaisy//src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libDaisy//src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libDaisy//src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libDaisy//src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libDaisy//src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libDaisy//src/per/i2c.h ****  */
  24:../../libDaisy//src/per/i2c.h **** class I2CHandle
  25:../../libDaisy//src/per/i2c.h **** {
  26:../../libDaisy//src/per/i2c.h ****   public:
  27:../../libDaisy//src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libDaisy//src/per/i2c.h ****     struct Config
  29:../../libDaisy//src/per/i2c.h ****     {
  30:../../libDaisy//src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libDaisy//src/per/i2c.h ****         enum class Mode
  32:../../libDaisy//src/per/i2c.h ****         {
  33:../../libDaisy//src/per/i2c.h ****             I2C_MASTER,
  34:../../libDaisy//src/per/i2c.h ****             I2C_SLAVE,
  35:../../libDaisy//src/per/i2c.h ****         };
  36:../../libDaisy//src/per/i2c.h **** 
  37:../../libDaisy//src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libDaisy//src/per/i2c.h ****         enum class Peripheral
  39:../../libDaisy//src/per/i2c.h ****         {
  40:../../libDaisy//src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libDaisy//src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libDaisy//src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libDaisy//src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libDaisy//src/per/i2c.h ****         };
  45:../../libDaisy//src/per/i2c.h **** 
  46:../../libDaisy//src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libDaisy//src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libDaisy//src/per/i2c.h ****          */
  49:../../libDaisy//src/per/i2c.h ****         enum class Speed
  50:../../libDaisy//src/per/i2c.h ****         {
  51:../../libDaisy//src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libDaisy//src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libDaisy//src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libDaisy//src/per/i2c.h ****         };
  55:../../libDaisy//src/per/i2c.h **** 
  56:../../libDaisy//src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libDaisy//src/per/i2c.h ****         struct
  58:../../libDaisy//src/per/i2c.h ****         {
  59:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libDaisy//src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libDaisy//src/per/i2c.h **** 
  63:../../libDaisy//src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libDaisy//src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libDaisy//src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libDaisy//src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libDaisy//src/per/i2c.h ****     };
  68:../../libDaisy//src/per/i2c.h **** 
  69:../../libDaisy//src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libDaisy//src/per/i2c.h ****     enum class Result
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 68


  71:../../libDaisy//src/per/i2c.h ****     {
  72:../../libDaisy//src/per/i2c.h ****         OK, /**< & */
  73:../../libDaisy//src/per/i2c.h ****         ERR /**< & */
  74:../../libDaisy//src/per/i2c.h ****     };
  75:../../libDaisy//src/per/i2c.h **** 
  76:../../libDaisy//src/per/i2c.h ****     enum class Direction
  77:../../libDaisy//src/per/i2c.h ****     {
  78:../../libDaisy//src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libDaisy//src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libDaisy//src/per/i2c.h ****     };
  81:../../libDaisy//src/per/i2c.h **** 
  82:../../libDaisy//src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 1561              		.loc 22 82 33 view .LVU350
 1562 00f2 0462     		str	r4, [r0, #32]
 1563              	.LBE1008:
 1564              	.LBE1007:
 1565              	.LBE1006:
 1566              	.LBE1005:
 1567              	.LBE1004:
 1568              	.LBB1011:
 1569              	.LBB1012:
 1570              	.LBB1013:
 1571              		.file 23 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 69


  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1572              		.loc 23 84 33 view .LVU351
 1573 00f4 8462     		str	r4, [r0, #40]
 1574              	.LBE1013:
 1575              	.LBE1012:
 1576              	.LBE1011:
 1577              	.LBB1014:
 1578              	.LBB1015:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 70


 1579              	.LBB1016:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1580              		.loc 7 95 35 view .LVU352
 1581 00f6 C0E90344 		strd	r4, r4, [r0, #12]
 1582              	.LVL78:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1583              		.loc 7 95 35 view .LVU353
 1584              	.LBE1016:
 1585              	.LBE1015:
 1586              	.LBE1014:
 1587              	.LBB1017:
 1588              	.LBI1017:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1589              		.loc 6 92 5 is_stmt 1 view .LVU354
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1590              		.loc 6 92 5 is_stmt 0 view .LVU355
 1591              	.LBE1017:
 1592              	.LBB1018:
 1593              	.LBI1018:
  40:../../libDaisy//src/hid/usb.h **** 
 1594              		.loc 5 40 5 is_stmt 1 view .LVU356
  40:../../libDaisy//src/hid/usb.h **** 
 1595              		.loc 5 40 5 is_stmt 0 view .LVU357
 1596              	.LBE1018:
 1597              	.LBB1019:
 1598              	.LBI1004:
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 1599              		.loc 4 28 5 is_stmt 1 view .LVU358
 1600              	.LBB1010:
 1601              	.LBB1009:
 1602              	.LBI1006:
 1603              		.loc 22 82 5 view .LVU359
 1604              		.loc 22 82 5 is_stmt 0 view .LVU360
 1605              	.LBE1009:
 1606              	.LBE1010:
 1607              	.LBE1019:
 1608              	.LBB1020:
 1609              	.LBI1011:
 1610              		.loc 23 84 5 is_stmt 1 view .LVU361
 1611              		.loc 23 84 5 is_stmt 0 view .LVU362
 1612              	.LBE1020:
 1613              	.LBE1023:
 1614              	.LBE1025:
 1615              	.LBE1063:
 1616              	.LBE1071:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 1617              		.loc 2 64 24 is_stmt 1 view .LVU363
 1618              	.LBB1072:
 1619              	.LBB1064:
 1620              	.LBB1026:
 1621              	.LBB1024:
 1622              	.LBB1021:
 1623              	.LBI1021:
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 1624              		.loc 3 20 5 view .LVU364
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 1625              		.loc 3 20 5 is_stmt 0 view .LVU365
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 71


 1626              	.LBE1021:
 1627              	.LBB1022:
 1628              	.LBI1022:
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 1629              		.loc 3 20 5 is_stmt 1 view .LVU366
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn~
 1630              		.loc 3 20 5 is_stmt 0 view .LVU367
 1631              	.LBE1022:
 1632              	.LBE1024:
 1633              	.LBE1026:
  14:WarpSM.cpp    **** warps::Modulator warp;
 1634              		.loc 17 14 14 view .LVU368
 1635 00fa FFF7FEFF 		bl	__aeabi_atexit
 1636              	.LVL79:
 1637              	.LBB1027:
 1638              	.LBI1027:
 140:../../../mutable-instruments/warps/dsp/modulator.h ****   ~Modulator() { }
 1639              		.loc 9 140 3 is_stmt 1 view .LVU369
 1640              	.LBE1027:
 1641              	.LBE1064:
 1642              	.LBE1072:
 140:../../../mutable-instruments/warps/dsp/modulator.h ****   ~Modulator() { }
 1643              		.loc 9 140 15 view .LVU370
 1644              	.LBB1073:
 1645              	.LBB1065:
 1646              	.LBB1059:
 1647              	.LBB1028:
 1648              	.LBB1029:
 1649              	.LBI1029:
  45:../../../mutable-instruments/warps/dsp/oscillator.h ****   ~Oscillator() { }
 1650              		.loc 15 45 3 view .LVU371
 1651              	.LBB1030:
 1652              	.LBB1031:
 1653              	.LBI1031:
 179:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~Svf() { }
 1654              		.loc 16 179 3 view .LVU372
 179:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~Svf() { }
 1655              		.loc 16 179 3 is_stmt 0 view .LVU373
 1656              	.LBE1031:
 1657              	.LBE1030:
 1658              	.LBE1029:
 1659              	.LBB1032:
 1660              	.LBI1032:
  45:../../../mutable-instruments/warps/dsp/oscillator.h ****   ~Oscillator() { }
 1661              		.loc 15 45 3 is_stmt 1 view .LVU374
 1662              	.LBB1033:
 1663              	.LBB1034:
 1664              	.LBI1034:
 179:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~Svf() { }
 1665              		.loc 16 179 3 view .LVU375
 179:../../../mutable-instruments/stmlib/dsp/filter.h ****   ~Svf() { }
 1666              		.loc 16 179 3 is_stmt 0 view .LVU376
 1667              	.LBE1034:
 1668              	.LBE1033:
 1669              	.LBE1032:
 1670              	.LBB1035:
 1671              	.LBI1035:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 72


  43:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h ****   ~QuadratureOscillator() { }
 1672              		.loc 14 43 3 is_stmt 1 view .LVU377
  43:../../../mutable-instruments/warps/dsp/quadrature_oscillator.h ****   ~QuadratureOscillator() { }
 1673              		.loc 14 43 3 is_stmt 0 view .LVU378
 1674              	.LBE1035:
 1675              	.LBE1028:
 1676              	.LBE1059:
 1677              	.LBE1065:
 1678              	.LBE1073:
 140:../../../mutable-instruments/warps/dsp/modulator.h ****   ~Modulator() { }
 1679              		.loc 9 140 15 is_stmt 1 view .LVU379
 1680              	.LBB1074:
 1681              	.LBB1066:
 1682              	.LBB1060:
 1683              	.LBB1056:
 1684              	.LBB1036:
 1685              	.LBI1036:
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1686              		.loc 13 208 3 view .LVU380
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1687              		.loc 13 208 3 is_stmt 0 view .LVU381
 1688              	.LBE1036:
 1689              	.LBB1037:
 1690              	.LBI1037:
 102:../../../mutable-instruments/warps/dsp/vocoder.h ****   ~Vocoder() { }
 1691              		.loc 10 102 3 is_stmt 1 view .LVU382
 1692              	.LBB1038:
 1693              	.LBB1039:
 1694              	.LBI1039:
  90:../../../mutable-instruments/warps/dsp/filter_bank.h ****   ~FilterBank() { }
 1695              		.loc 12 90 3 view .LVU383
 1696              	.LBB1040:
 1697              	.LBB1041:
 1698              	.LBI1041:
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1699              		.loc 13 208 3 view .LVU384
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1700              		.loc 13 208 3 is_stmt 0 view .LVU385
 1701              	.LBE1041:
 1702              	.LBB1042:
 1703              	.LBI1042:
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1704              		.loc 13 172 3 is_stmt 1 view .LVU386
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1705              		.loc 13 172 3 is_stmt 0 view .LVU387
 1706              	.LBE1042:
 1707              	.LBB1043:
 1708              	.LBI1043:
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1709              		.loc 13 208 3 is_stmt 1 view .LVU388
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1710              		.loc 13 208 3 is_stmt 0 view .LVU389
 1711              	.LBE1043:
 1712              	.LBB1044:
 1713              	.LBI1044:
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1714              		.loc 13 172 3 is_stmt 1 view .LVU390
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 73


 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1715              		.loc 13 172 3 is_stmt 0 view .LVU391
 1716              	.LBE1044:
 1717              	.LBE1040:
 1718              	.LBE1039:
 1719              	.LBE1038:
 1720              	.LBE1037:
 1721              	.LBE1056:
 1722              	.LBE1060:
 1723              	.LBE1066:
 1724              	.LBE1074:
  90:../../../mutable-instruments/warps/dsp/filter_bank.h ****   ~FilterBank() { }
 1725              		.loc 12 90 16 is_stmt 1 view .LVU392
 1726              	.LBB1075:
 1727              	.LBB1067:
 1728              	.LBB1061:
 1729              	.LBB1057:
 1730              	.LBB1054:
 1731              	.LBB1052:
 1732              	.LBB1045:
 1733              	.LBI1045:
  90:../../../mutable-instruments/warps/dsp/filter_bank.h ****   ~FilterBank() { }
 1734              		.loc 12 90 3 view .LVU393
 1735              	.LBB1046:
 1736              	.LBB1047:
 1737              	.LBI1047:
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1738              		.loc 13 208 3 view .LVU394
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1739              		.loc 13 208 3 is_stmt 0 view .LVU395
 1740              	.LBE1047:
 1741              	.LBB1048:
 1742              	.LBI1048:
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1743              		.loc 13 172 3 is_stmt 1 view .LVU396
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1744              		.loc 13 172 3 is_stmt 0 view .LVU397
 1745              	.LBE1048:
 1746              	.LBB1049:
 1747              	.LBI1049:
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1748              		.loc 13 208 3 is_stmt 1 view .LVU398
 208:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1749              		.loc 13 208 3 is_stmt 0 view .LVU399
 1750              	.LBE1049:
 1751              	.LBB1050:
 1752              	.LBI1050:
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1753              		.loc 13 172 3 is_stmt 1 view .LVU400
 172:../../../mutable-instruments/warps/dsp/sample_rate_converter.h ****   ~SampleRateConverter() { }
 1754              		.loc 13 172 3 is_stmt 0 view .LVU401
 1755              	.LBE1050:
 1756              	.LBE1046:
 1757              	.LBE1045:
 1758              	.LBE1052:
 1759              	.LBE1054:
 1760              	.LBE1057:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 74


 1761              	.LBE1061:
 1762              	.LBE1067:
 1763              	.LBE1075:
  90:../../../mutable-instruments/warps/dsp/filter_bank.h ****   ~FilterBank() { }
 1764              		.loc 12 90 16 is_stmt 1 view .LVU402
 1765              	.LBB1076:
 1766              	.LBB1068:
 1767              	.LBB1062:
 1768              	.LBB1058:
 1769              	.LBB1055:
 1770              	.LBB1053:
 1771              	.LBB1051:
 1772              	.LBI1051:
  43:../../../mutable-instruments/warps/dsp/limiter.h ****   ~Limiter() { }
 1773              		.loc 11 43 3 view .LVU403
  43:../../../mutable-instruments/warps/dsp/limiter.h ****   ~Limiter() { }
 1774              		.loc 11 43 3 is_stmt 0 view .LVU404
 1775              	.LBE1051:
 1776              	.LBE1053:
 1777              	.LBE1055:
 1778              	.LBE1058:
 1779              	.LBE1062:
 1780              	.LBE1068:
 1781              	.LBE1076:
 102:../../../mutable-instruments/warps/dsp/vocoder.h ****   ~Vocoder() { }
 1782              		.loc 10 102 13 is_stmt 1 view .LVU405
 140:../../../mutable-instruments/warps/dsp/modulator.h ****   ~Modulator() { }
 1783              		.loc 9 140 15 view .LVU406
 1784              	.LBB1077:
 1785              	.LBB1069:
  15:WarpSM.cpp    **** //void UpdateParameters() 
 1786              		.loc 17 15 18 is_stmt 0 view .LVU407
 1787 00fe 214A     		ldr	r2, .L38+120
 1788 0100 2849     		ldr	r1, .L38+152
 1789 0102 2948     		ldr	r0, .L38+156
 1790              	.LBE1069:
 1791              	.LBE1077:
 1792              		.loc 17 51 1 view .LVU408
 1793 0104 BDE83840 		pop	{r3, r4, r5, lr}
 1794              		.cfi_restore 14
 1795              		.cfi_restore 5
 1796              		.cfi_restore 4
 1797              		.cfi_restore 3
 1798              		.cfi_def_cfa_offset 0
 1799              	.LBB1078:
 1800              	.LBB1070:
  15:WarpSM.cpp    **** //void UpdateParameters() 
 1801              		.loc 17 15 18 view .LVU409
 1802 0108 FFF7FEBF 		b	__aeabi_atexit
 1803              	.LVL80:
 1804              	.L39:
 1805              		.align	2
 1806              	.L38:
 1807 010c 00000000 		.word	.LANCHOR4
 1808 0110 00000000 		.word	.LANCHOR2
 1809 0114 00000000 		.word	.LANCHOR6
 1810 0118 00000000 		.word	.LANCHOR8
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 75


 1811 011c 00000000 		.word	.LANCHOR12
 1812 0120 00000000 		.word	.LANCHOR10
 1813 0124 00000000 		.word	.LANCHOR16
 1814 0128 00000000 		.word	.LANCHOR14
 1815 012c 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D7E
 1816 0130 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2A9E
 1817 0134 00000000 		.word	.LANCHOR19
 1818 0138 00000000 		.word	.LANCHOR20
 1819 013c 00000000 		.word	.LANCHOR1
 1820 0140 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D1E
 1821 0144 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D2E
 1822 0148 00000000 		.word	.LANCHOR3
 1823 014c 00000000 		.word	.LANCHOR21
 1824 0150 00000000 		.word	.LANCHOR22
 1825 0154 00000000 		.word	.LANCHOR5
 1826 0158 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D3E
 1827 015c 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D6E
 1828 0160 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D4E
 1829 0164 00000000 		.word	.LANCHOR13
 1830 0168 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D5E
 1831 016c 00000000 		.word	.LANCHOR23
 1832 0170 00000000 		.word	.LANCHOR24
 1833 0174 00000000 		.word	.LANCHOR25
 1834 0178 00000000 		.word	.LANCHOR26
 1835 017c 00000000 		.word	_ZN5daisy6SwitchD1Ev
 1836 0180 00000000 		.word	.LANCHOR7
 1837 0184 00000000 		.word	__dso_handle
 1838 0188 00000000 		.word	.LANCHOR9
 1839 018c 00000000 		.word	.LANCHOR11
 1840 0190 00000000 		.word	.LANCHOR15
 1841 0194 00000000 		.word	.LANCHOR17
 1842 0198 00000000 		.word	.LANCHOR18
 1843 019c 00000000 		.word	.LANCHOR0
 1844 01a0 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 1845 01a4 00000000 		.word	_ZN5warps9ModulatorD1Ev
 1846 01a8 00000000 		.word	warp
 1847              	.LBE1070:
 1848              	.LBE1078:
 1849              		.cfi_endproc
 1850              	.LFE5656:
 1852              		.section	.init_array,"aw",%init_array
 1853              		.align	2
 1854 0000 00000000 		.word	_GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E(target1)
 1855              		.global	warp
 1856              		.global	hw
 1857              		.global	_ZN5daisy8patch_sm2b2E
 1858              		.global	_ZN5daisy8patch_sm2b1E
 1859              		.global	_ZN5daisy8patch_sm8newPinD5E
 1860              		.global	_ZN5daisy8patch_sm8oldPinD5E
 1861              		.global	_ZN5daisy8patch_sm8newPinD4E
 1862              		.global	_ZN5daisy8patch_sm8oldPinD4E
 1863              		.global	_ZN5daisy8patch_sm8newPinD6E
 1864              		.global	_ZN5daisy8patch_sm8oldPinD6E
 1865              		.global	_ZN5daisy8patch_sm8newPinD3E
 1866              		.global	_ZN5daisy8patch_sm8oldPinD3E
 1867              		.global	_ZN5daisy8patch_sm8newPinD1E
 1868              		.global	_ZN5daisy8patch_sm8oldPinD1E
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 76


 1869              		.global	_ZN5daisy8patch_sm8newPinD2E
 1870              		.global	_ZN5daisy8patch_sm8oldPinD2E
 1871              		.global	_ZN5daisy8patch_sm8newPinA9E
 1872              		.global	_ZN5daisy8patch_sm8oldPinA9E
 1873              		.global	_ZN5daisy8patch_sm8newPinD7E
 1874              		.global	_ZN5daisy8patch_sm8oldPinD7E
 1875              		.global	_ZN5daisy8patch_sm13gate_out_led2E
 1876              		.global	_ZN5daisy8patch_sm13gate_out_led1E
 1877              		.global	_ZN5daisy8patch_sm12gate_in_led2E
 1878              		.global	_ZN5daisy8patch_sm12gate_in_led1E
 1879              		.global	_ZN5daisy8patch_sm7cv_led2E
 1880              		.global	_ZN5daisy8patch_sm7cv_led1E
 1881              		.global	_ZN5daisy8patch_sm8gen_led2E
 1882              		.global	_ZN5daisy8patch_sm8gen_led1E
 1883              		.section	.bss._ZN5daisy8patch_sm12gate_in_led1E,"aw",%nobits
 1884              		.align	2
 1885              		.set	.LANCHOR10,. + 0
 1888              	_ZN5daisy8patch_sm12gate_in_led1E:
 1889 0000 00000000 		.space	20
 1889      00000000 
 1889      00000000 
 1889      00000000 
 1889      00000000 
 1890              		.section	.bss._ZN5daisy8patch_sm12gate_in_led2E,"aw",%nobits
 1891              		.align	2
 1892              		.set	.LANCHOR12,. + 0
 1895              	_ZN5daisy8patch_sm12gate_in_led2E:
 1896 0000 00000000 		.space	20
 1896      00000000 
 1896      00000000 
 1896      00000000 
 1896      00000000 
 1897              		.section	.bss._ZN5daisy8patch_sm13gate_out_led1E,"aw",%nobits
 1898              		.align	2
 1899              		.set	.LANCHOR14,. + 0
 1902              	_ZN5daisy8patch_sm13gate_out_led1E:
 1903 0000 00000000 		.space	20
 1903      00000000 
 1903      00000000 
 1903      00000000 
 1903      00000000 
 1904              		.section	.bss._ZN5daisy8patch_sm13gate_out_led2E,"aw",%nobits
 1905              		.align	2
 1906              		.set	.LANCHOR16,. + 0
 1909              	_ZN5daisy8patch_sm13gate_out_led2E:
 1910 0000 00000000 		.space	20
 1910      00000000 
 1910      00000000 
 1910      00000000 
 1910      00000000 
 1911              		.section	.bss._ZN5daisy8patch_sm2b1E,"aw",%nobits
 1912              		.align	2
 1913              		.set	.LANCHOR17,. + 0
 1916              	_ZN5daisy8patch_sm2b1E:
 1917 0000 00000000 		.space	16
 1917      00000000 
 1917      00000000 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 77


 1917      00000000 
 1918              		.section	.bss._ZN5daisy8patch_sm2b2E,"aw",%nobits
 1919              		.align	2
 1920              		.set	.LANCHOR18,. + 0
 1923              	_ZN5daisy8patch_sm2b2E:
 1924 0000 00000000 		.space	16
 1924      00000000 
 1924      00000000 
 1924      00000000 
 1925              		.section	.bss._ZN5daisy8patch_sm7cv_led1E,"aw",%nobits
 1926              		.align	2
 1927              		.set	.LANCHOR6,. + 0
 1930              	_ZN5daisy8patch_sm7cv_led1E:
 1931 0000 00000000 		.space	20
 1931      00000000 
 1931      00000000 
 1931      00000000 
 1931      00000000 
 1932              		.section	.bss._ZN5daisy8patch_sm7cv_led2E,"aw",%nobits
 1933              		.align	2
 1934              		.set	.LANCHOR8,. + 0
 1937              	_ZN5daisy8patch_sm7cv_led2E:
 1938 0000 00000000 		.space	20
 1938      00000000 
 1938      00000000 
 1938      00000000 
 1938      00000000 
 1939              		.section	.bss._ZN5daisy8patch_sm8gen_led1E,"aw",%nobits
 1940              		.align	2
 1941              		.set	.LANCHOR2,. + 0
 1944              	_ZN5daisy8patch_sm8gen_led1E:
 1945 0000 00000000 		.space	20
 1945      00000000 
 1945      00000000 
 1945      00000000 
 1945      00000000 
 1946              		.section	.bss._ZN5daisy8patch_sm8gen_led2E,"aw",%nobits
 1947              		.align	2
 1948              		.set	.LANCHOR4,. + 0
 1951              	_ZN5daisy8patch_sm8gen_led2E:
 1952 0000 00000000 		.space	20
 1952      00000000 
 1952      00000000 
 1952      00000000 
 1952      00000000 
 1953              		.section	.bss._ZN5daisy8patch_sm8newPinA9E,"aw",%nobits
 1954              		.align	2
 1955              		.set	.LANCHOR3,. + 0
 1958              	_ZN5daisy8patch_sm8newPinA9E:
 1959 0000 0000     		.space	2
 1960              		.section	.bss._ZN5daisy8patch_sm8newPinD1E,"aw",%nobits
 1961              		.align	2
 1962              		.set	.LANCHOR7,. + 0
 1965              	_ZN5daisy8patch_sm8newPinD1E:
 1966 0000 0000     		.space	2
 1967              		.section	.bss._ZN5daisy8patch_sm8newPinD2E,"aw",%nobits
 1968              		.align	2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 78


 1969              		.set	.LANCHOR5,. + 0
 1972              	_ZN5daisy8patch_sm8newPinD2E:
 1973 0000 0000     		.space	2
 1974              		.section	.bss._ZN5daisy8patch_sm8newPinD3E,"aw",%nobits
 1975              		.align	2
 1976              		.set	.LANCHOR9,. + 0
 1979              	_ZN5daisy8patch_sm8newPinD3E:
 1980 0000 0000     		.space	2
 1981              		.section	.bss._ZN5daisy8patch_sm8newPinD4E,"aw",%nobits
 1982              		.align	2
 1983              		.set	.LANCHOR11,. + 0
 1986              	_ZN5daisy8patch_sm8newPinD4E:
 1987 0000 0000     		.space	2
 1988              		.section	.bss._ZN5daisy8patch_sm8newPinD5E,"aw",%nobits
 1989              		.align	2
 1990              		.set	.LANCHOR15,. + 0
 1993              	_ZN5daisy8patch_sm8newPinD5E:
 1994 0000 0000     		.space	2
 1995              		.section	.bss._ZN5daisy8patch_sm8newPinD6E,"aw",%nobits
 1996              		.align	2
 1997              		.set	.LANCHOR13,. + 0
 2000              	_ZN5daisy8patch_sm8newPinD6E:
 2001 0000 0000     		.space	2
 2002              		.section	.bss._ZN5daisy8patch_sm8newPinD7E,"aw",%nobits
 2003              		.align	2
 2004              		.set	.LANCHOR1,. + 0
 2007              	_ZN5daisy8patch_sm8newPinD7E:
 2008 0000 0000     		.space	2
 2009              		.section	.bss._ZN5daisy8patch_sm8oldPinA9E,"aw",%nobits
 2010              		.align	2
 2011              		.set	.LANCHOR20,. + 0
 2014              	_ZN5daisy8patch_sm8oldPinA9E:
 2015 0000 0000     		.space	2
 2016              		.section	.bss._ZN5daisy8patch_sm8oldPinD1E,"aw",%nobits
 2017              		.align	2
 2018              		.set	.LANCHOR22,. + 0
 2021              	_ZN5daisy8patch_sm8oldPinD1E:
 2022 0000 0000     		.space	2
 2023              		.section	.bss._ZN5daisy8patch_sm8oldPinD2E,"aw",%nobits
 2024              		.align	2
 2025              		.set	.LANCHOR21,. + 0
 2028              	_ZN5daisy8patch_sm8oldPinD2E:
 2029 0000 0000     		.space	2
 2030              		.section	.bss._ZN5daisy8patch_sm8oldPinD3E,"aw",%nobits
 2031              		.align	2
 2032              		.set	.LANCHOR23,. + 0
 2035              	_ZN5daisy8patch_sm8oldPinD3E:
 2036 0000 0000     		.space	2
 2037              		.section	.bss._ZN5daisy8patch_sm8oldPinD4E,"aw",%nobits
 2038              		.align	2
 2039              		.set	.LANCHOR25,. + 0
 2042              	_ZN5daisy8patch_sm8oldPinD4E:
 2043 0000 0000     		.space	2
 2044              		.section	.bss._ZN5daisy8patch_sm8oldPinD5E,"aw",%nobits
 2045              		.align	2
 2046              		.set	.LANCHOR26,. + 0
 2049              	_ZN5daisy8patch_sm8oldPinD5E:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 79


 2050 0000 0000     		.space	2
 2051              		.section	.bss._ZN5daisy8patch_sm8oldPinD6E,"aw",%nobits
 2052              		.align	2
 2053              		.set	.LANCHOR24,. + 0
 2056              	_ZN5daisy8patch_sm8oldPinD6E:
 2057 0000 0000     		.space	2
 2058              		.section	.bss._ZN5daisy8patch_sm8oldPinD7E,"aw",%nobits
 2059              		.align	2
 2060              		.set	.LANCHOR19,. + 0
 2063              	_ZN5daisy8patch_sm8oldPinD7E:
 2064 0000 0000     		.space	2
 2065              		.section	.bss.hw,"aw",%nobits
 2066              		.align	2
 2067              		.set	.LANCHOR0,. + 0
 2070              	hw:
 2071 0000 00000000 		.space	464
 2071      00000000 
 2071      00000000 
 2071      00000000 
 2071      00000000 
 2072              		.section	.bss.warp,"aw",%nobits
 2073              		.align	2
 2076              	warp:
 2077 0000 00000000 		.space	72660
 2077      00000000 
 2077      00000000 
 2077      00000000 
 2077      00000000 
 2078              		.text
 2079              	.Letext0:
 2080              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 2081              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 2082              		.file 26 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdint.h"
 2083              		.file 27 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 2084              		.file 28 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2085              		.file 29 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2086              		.file 30 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2087              		.file 31 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2088              		.file 32 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2089              		.file 33 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2090              		.file 34 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2091              		.file 35 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2092              		.file 36 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2093              		.file 37 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2094              		.file 38 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2095              		.file 39 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2096              		.file 40 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2097              		.file 41 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2098              		.file 42 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2099              		.file 43 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2100              		.file 44 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2101              		.file 45 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2102              		.file 46 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 2103              		.file 47 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 2104              		.file 48 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 2105              		.file 49 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 2106              		.file 50 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 80


 2107              		.file 51 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2108              		.file 52 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 2109              		.file 53 "../../libDaisy//src/per/tim.h"
 2110              		.file 54 "../../libDaisy//src/per/sai.h"
 2111              		.file 55 "../../libDaisy//src/hid/ctrl.h"
 2112              		.file 56 "../../libDaisy//src/util/wav_format.h"
 2113              		.file 57 "../../libDaisy//src/dev/max11300.h"
 2114              		.file 58 "../../libDaisy//src/dev/sdram.h"
 2115              		.file 59 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 2116              		.file 60 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 2117              		.file 61 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
 2118              		.file 62 "../../DaisySP//Source/Control/adenv.h"
 2119              		.file 63 "../../DaisySP//Source/Utility/dsp.h"
 2120              		.file 64 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/wchar.h"
 2121              		.file 65 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/locale.h"
 2122              		.file 66 "../../../mutable-instruments/stmlib/stmlib.h"
 2123              		.file 67 "../../../mutable-instruments/warps/dsp/parameters.h"
 2124              		.file 68 "../../../mutable-instruments/warps/dsp/quadrature_transform.h"
 2125              		.file 69 "<built-in>"
 2126              		.file 70 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 81


DEFINED SYMBOLS
                            *ABS*:0000000000000000 WarpSM.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:43     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:51     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:51     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:109    .text._ZN5warps9ModulatorD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:117    .text._ZN5warps9ModulatorD2Ev:0000000000000000 _ZN5warps9ModulatorD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:117    .text._ZN5warps9ModulatorD2Ev:0000000000000000 _ZN5warps9ModulatorD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:226    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:234    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:349    .text._Z13AudioCallbackPKPKfPPfj:0000000000000058 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:354    .text._ZN5daisy8patch_sm7InitBedEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:362    .text._ZN5daisy8patch_sm7InitBedEv:0000000000000000 _ZN5daisy8patch_sm7InitBedEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:492    .text._ZN5daisy8patch_sm7InitBedEv:00000000000000b8 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:517    .text._ZN5daisy8patch_sm6ledOffEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:525    .text._ZN5daisy8patch_sm6ledOffEv:0000000000000000 _ZN5daisy8patch_sm6ledOffEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:569    .text._ZN5daisy8patch_sm6ledOffEv:0000000000000028 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:577    .text._ZN5daisy8patch_sm13StartupCheeseEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:585    .text._ZN5daisy8patch_sm13StartupCheeseEv:0000000000000000 _ZN5daisy8patch_sm13StartupCheeseEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:735    .text._ZN5daisy8patch_sm13StartupCheeseEv:0000000000000090 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:749    .text._ZN5daisy8patch_sm8gateTestEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:757    .text._ZN5daisy8patch_sm8gateTestEv:0000000000000000 _ZN5daisy8patch_sm8gateTestEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:817    .text._ZN5daisy8patch_sm8gateTestEv:0000000000000040 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:825    .text.startup.main:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:833    .text.startup.main:0000000000000000 main
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:891    .text.startup.main:0000000000000038 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2076   .bss.warp:0000000000000000 warp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:899    .text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:906    .text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:0000000000000000 _GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1807   .text.startup._GLOBAL__sub_I__ZN5daisy8patch_sm8gen_led1E:000000000000010c $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1853   .init_array:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2070   .bss.hw:0000000000000000 hw
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1923   .bss._ZN5daisy8patch_sm2b2E:0000000000000000 _ZN5daisy8patch_sm2b2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1916   .bss._ZN5daisy8patch_sm2b1E:0000000000000000 _ZN5daisy8patch_sm2b1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1993   .bss._ZN5daisy8patch_sm8newPinD5E:0000000000000000 _ZN5daisy8patch_sm8newPinD5E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2049   .bss._ZN5daisy8patch_sm8oldPinD5E:0000000000000000 _ZN5daisy8patch_sm8oldPinD5E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1986   .bss._ZN5daisy8patch_sm8newPinD4E:0000000000000000 _ZN5daisy8patch_sm8newPinD4E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2042   .bss._ZN5daisy8patch_sm8oldPinD4E:0000000000000000 _ZN5daisy8patch_sm8oldPinD4E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2000   .bss._ZN5daisy8patch_sm8newPinD6E:0000000000000000 _ZN5daisy8patch_sm8newPinD6E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2056   .bss._ZN5daisy8patch_sm8oldPinD6E:0000000000000000 _ZN5daisy8patch_sm8oldPinD6E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1979   .bss._ZN5daisy8patch_sm8newPinD3E:0000000000000000 _ZN5daisy8patch_sm8newPinD3E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2035   .bss._ZN5daisy8patch_sm8oldPinD3E:0000000000000000 _ZN5daisy8patch_sm8oldPinD3E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1965   .bss._ZN5daisy8patch_sm8newPinD1E:0000000000000000 _ZN5daisy8patch_sm8newPinD1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2021   .bss._ZN5daisy8patch_sm8oldPinD1E:0000000000000000 _ZN5daisy8patch_sm8oldPinD1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1972   .bss._ZN5daisy8patch_sm8newPinD2E:0000000000000000 _ZN5daisy8patch_sm8newPinD2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2028   .bss._ZN5daisy8patch_sm8oldPinD2E:0000000000000000 _ZN5daisy8patch_sm8oldPinD2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1958   .bss._ZN5daisy8patch_sm8newPinA9E:0000000000000000 _ZN5daisy8patch_sm8newPinA9E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2014   .bss._ZN5daisy8patch_sm8oldPinA9E:0000000000000000 _ZN5daisy8patch_sm8oldPinA9E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2007   .bss._ZN5daisy8patch_sm8newPinD7E:0000000000000000 _ZN5daisy8patch_sm8newPinD7E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2063   .bss._ZN5daisy8patch_sm8oldPinD7E:0000000000000000 _ZN5daisy8patch_sm8oldPinD7E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1909   .bss._ZN5daisy8patch_sm13gate_out_led2E:0000000000000000 _ZN5daisy8patch_sm13gate_out_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1902   .bss._ZN5daisy8patch_sm13gate_out_led1E:0000000000000000 _ZN5daisy8patch_sm13gate_out_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1895   .bss._ZN5daisy8patch_sm12gate_in_led2E:0000000000000000 _ZN5daisy8patch_sm12gate_in_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1888   .bss._ZN5daisy8patch_sm12gate_in_led1E:0000000000000000 _ZN5daisy8patch_sm12gate_in_led1E
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 82


/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1937   .bss._ZN5daisy8patch_sm7cv_led2E:0000000000000000 _ZN5daisy8patch_sm7cv_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1930   .bss._ZN5daisy8patch_sm7cv_led1E:0000000000000000 _ZN5daisy8patch_sm7cv_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1951   .bss._ZN5daisy8patch_sm8gen_led2E:0000000000000000 _ZN5daisy8patch_sm8gen_led2E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1944   .bss._ZN5daisy8patch_sm8gen_led1E:0000000000000000 _ZN5daisy8patch_sm8gen_led1E
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1884   .bss._ZN5daisy8patch_sm12gate_in_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1891   .bss._ZN5daisy8patch_sm12gate_in_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1898   .bss._ZN5daisy8patch_sm13gate_out_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1905   .bss._ZN5daisy8patch_sm13gate_out_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1912   .bss._ZN5daisy8patch_sm2b1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1919   .bss._ZN5daisy8patch_sm2b2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1926   .bss._ZN5daisy8patch_sm7cv_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1933   .bss._ZN5daisy8patch_sm7cv_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1940   .bss._ZN5daisy8patch_sm8gen_led1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1947   .bss._ZN5daisy8patch_sm8gen_led2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1954   .bss._ZN5daisy8patch_sm8newPinA9E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1961   .bss._ZN5daisy8patch_sm8newPinD1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1968   .bss._ZN5daisy8patch_sm8newPinD2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1975   .bss._ZN5daisy8patch_sm8newPinD3E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1982   .bss._ZN5daisy8patch_sm8newPinD4E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1989   .bss._ZN5daisy8patch_sm8newPinD5E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:1996   .bss._ZN5daisy8patch_sm8newPinD6E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2003   .bss._ZN5daisy8patch_sm8newPinD7E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2010   .bss._ZN5daisy8patch_sm8oldPinA9E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2017   .bss._ZN5daisy8patch_sm8oldPinD1E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2024   .bss._ZN5daisy8patch_sm8oldPinD2E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2031   .bss._ZN5daisy8patch_sm8oldPinD3E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2038   .bss._ZN5daisy8patch_sm8oldPinD4E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2045   .bss._ZN5daisy8patch_sm8oldPinD5E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2052   .bss._ZN5daisy8patch_sm8oldPinD6E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2059   .bss._ZN5daisy8patch_sm8oldPinD7E:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2066   .bss.hw:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s:2073   .bss.warp:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy8patch_sm12DaisyPatchSMD5Ev
                           .group:0000000000000000 _ZN5warps9ModulatorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy8patch_sm12DaisyPatchSM2A8E
_ZN5daisy8patch_sm12DaisyPatchSM3D10E
_ZN5daisy4GPIO5WriteEb
_ZN5daisy4GPIO6ToggleEv
_ZN5daisy6System5DelayEm
_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
_ZN5warps9Modulator4InitEf
_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
_ZN5daisy8patch_sm12DaisyPatchSM2D7E
_ZN5daisy8patch_sm12DaisyPatchSM2A9E
_ZN5daisy8patch_sm12DaisyPatchSM2D1E
_ZN5daisy8patch_sm12DaisyPatchSM2D2E
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccMf1Rvx.s 			page 83


_ZN5daisy8patch_sm12DaisyPatchSM2D3E
_ZN5daisy8patch_sm12DaisyPatchSM2D6E
_ZN5daisy8patch_sm12DaisyPatchSM2D4E
_ZN5daisy8patch_sm12DaisyPatchSM2D5E
__dso_handle
